{"mappings":"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C,OAAO,GAAG;IAGvD,OAAO;QACL,SAAS;YACP,GAAG,MAAM;QACX;QACA,mCAAmC;QACnC,eAAe,IAAM,EAAE;IACzB;AACF;;;;;AG/IO,MAAM,4CAA0C;IACrD,aAAa;QAAC;QAAkB;QAAkB;QAAc;KAAW;IAE3E,aAAa;QACX;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,eAAe;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,eAAe;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,aAAa;QACX;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,SAAS;QAAC;KAAiB;IAE3B,YAAY;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,cAAc;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,YAAY;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,YAAY;QAAC;QAAuB;QAAmB;KAAmB;IAE1E,mBAAmB;QACjB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,iBAAiB;QACf;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,cAAc;QACZ;QACA;QACA;QACA;QACA;QACA;KACD;IAED,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;KACD;IAED,YAAY;QACV;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,KAAK;QAAC;QAAQ;QAAU;KAAe;IAEvC,QAAQ;QAAC;QAAc;KAAkB;IAEzC,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,YAAY;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,cAAc;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,qBAAqB;QACnB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,uBAAuB;QACrB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;AACH;AAEO,MAAM,4CAAa,OAAO,IAAI,CAAC,2CAAe,MAAM,GAAG;AACvD,MAAM,4CAAY,OAAO,IAAI,CAAC,2CAAe,MAAM,GAAG;AAEtD,MAAM,4CAAuB;OAC/B,OAAO,MAAM,CAAC,2CAAe,OAAO,CAAC,CAAC,OAAS;CACnD;AAQM,SAAS,0CAAmB,WAAW;IAC5C,MAAM,UAAU,OAAO,OAAO,CAAC;IAC/B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IAAK;QACvC,MAAM,CAAC,OAAO,WAAW,GAAG,OAAO,CAAC,EAAE;QACtC,IAAI,WAAW,WAAW,OAAO,CAAC;QAClC,IAAI,aAAa,IACf,OAAO;mBACL;sBACA;YACA,YAAY;QACd;IAEJ;IACA,OAAO,MAAM,2CAA2C;AAC1D;;;;AClWO,MAAM,kDAAwC;IACnD,YAAY,AAAQ,OAA8C,CAAE;QAClE,KAAK;aADa,UAAA;IAEpB;IAEA,IAAI,GAAM,EAAK;QACb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","sources":["src/index.ts","src/plugin.ts","src/config.ts","src/printer.ts","src/sorting.ts","src/grouped-classes.ts","src/utils.ts","src/transform.ts"],"sourcesContent":["import { Plugin, Printer } from \"prettier\";\nimport { TypescriptPlugin } from \"./plugin.js\";\n\nconst plugin = new TypescriptPlugin(\"typescript\", \"estree\");\n\nconst printers: Record<string, Printer> = {\n  estree: plugin.printer,\n};\n\nconst parsers = {\n  typescript: plugin.parser,\n};\n\nexport default {\n  parsers,\n  printers,\n} as Plugin;\n","import { Parser, ParserOptions } from \"prettier\";\nimport { parsers as babelParsers } from \"prettier/plugins/babel\";\nimport { parsers as tsParsers } from \"prettier/plugins/typescript\";\nimport { getTailwindConfig } from \"./config.js\";\nimport { CustomPrinter } from \"./printer.js\";\nimport { transformJavaScript } from \"./transform.js\";\nimport { Node } from \"./types.js\";\n\nconst defaultParsers = {\n  ...tsParsers,\n  ...babelParsers,\n};\n\n//TODO: Add in options for newline threshold?\nexport class TypescriptPlugin {\n  parser: Parser<Node>;\n  printer: CustomPrinter;\n\n  constructor(parserFormat: string, printerFormat: string) {\n    this.createParser = this.createParser.bind(this);\n    this.parser = this.createParser(parserFormat);\n    this.printer = new CustomPrinter(printerFormat);\n  }\n\n  createParser(parserFormat): Parser {\n    let original = defaultParsers[parserFormat] as Parser;\n    const plugin = this;\n    return {\n      ...original,\n      preprocess(code, options) {\n        return original.preprocess ? original.preprocess(code, options) : code;\n      },\n\n      async parse(text: string, options: ParserOptions) {\n        await plugin.printer.initializeDefaultPrinter(options);\n        let ast = await original.parse(text, options);\n        const { context } = await getTailwindConfig(options);\n        let changes = [];\n        transformJavaScript(ast, {\n          env: { context, options },\n          changes,\n        });\n        return ast;\n      },\n    };\n  }\n}\n","import escalade from \"escalade/sync\";\nimport * as fs from \"fs/promises\";\nimport { createRequire } from \"module\";\nimport path from \"path\";\nimport postcss from \"postcss\";\nimport postcssImport from \"postcss-import\";\nimport prettier from \"prettier\";\nimport { __unstable__loadDesignSystem } from \"tailwindcss\";\nimport { pathToFileURL } from \"url\";\n\nexport const CLASS_NAME_ATTRS = [\"className\", \"class\"];\nexport const CALL_EXPRESSIONS = [\"cn\", \"clsx\", \"twMerge\"];\n\nlet localRequire = createRequire(import.meta.url);\n\nlet sourceToPathMap = new Map();\nlet sourceToEntryMap = new Map();\nlet pathToContextMap = new Map();\nconst cache = new Map();\n\nasync function getPrettierConfigPath(options) {\n  if (cache.has(options.configPath)) {\n    return cache.get(options.configPath);\n  }\n  cache.set(\n    options.configPath,\n    await prettier.resolveConfigFile(options.filepath)\n  );\n  return cache.get(options.configPath);\n}\n\nasync function getBaseDir(options) {\n  let prettierConfigPath = await getPrettierConfigPath(options);\n\n  return prettierConfigPath\n    ? path.dirname(prettierConfigPath)\n    : options.filepath\n      ? path.dirname(options.filepath)\n      : process.cwd();\n}\n\nexport async function getTailwindConfig(options) {\n  let key = `${options.filepath}`;\n  let prettierConfigPath = await getPrettierConfigPath(options);\n  let baseDir = await getBaseDir(options);\n\n  let configPath = sourceToPathMap.get(key);\n  if (configPath === undefined) {\n    configPath = await getConfigPath(options, baseDir);\n    sourceToPathMap.set(key, configPath);\n  }\n\n  let entryPoint = sourceToEntryMap.get(key);\n  if (entryPoint === undefined) {\n    entryPoint = getConfigFile(options, baseDir, \"tailwindEntryPoint\");\n    sourceToEntryMap.set(key, entryPoint);\n  }\n\n  let contextKey = `${configPath}:${entryPoint}`;\n  let existing = pathToContextMap.get(contextKey);\n  if (existing) {\n    return existing;\n  }\n\n  // By this point we know we need to load the Tailwind config file\n  let result = await loadTailwindConfig(baseDir, configPath, entryPoint);\n\n  pathToContextMap.set(contextKey, result);\n  return result;\n}\n\nfunction getConfigFile(options, dir, optionsKey) {\n  if (options[optionsKey]) {\n    return path.resolve(dir, options[optionsKey]);\n  }\n  return null;\n}\n\nasync function getConfigPath(options, baseDir) {\n  let configPath = getConfigFile(options, baseDir, \"tailwindConfig\");\n  if (configPath) return configPath;\n  try {\n    const extensions = [\"js\", \"cjs\", \"mjs\", \"ts\"];\n    configPath =\n      // @ts-ignore\n      (await escalade(baseDir, (_dir, names) => {\n        for (let ext of extensions) {\n          const fileName = `tailwind.config.${ext}`;\n          if (names.includes(fileName)) {\n            return fileName; // Return the matching file name to escalade\n          }\n        }\n      })) || null;\n  } catch {}\n  if (configPath) {\n    return configPath;\n  }\n\n  return null;\n}\n\nasync function loadTailwindConfig(baseDir, tailwindConfigPath, entryPoint) {\n  let pkgFile = localRequire.resolve(\"tailwindcss/package.json\", {\n    paths: [baseDir],\n  });\n\n  let pkgDir = path.dirname(pkgFile);\n\n  return await loadTWV4(baseDir, pkgDir, entryPoint);\n}\n\nasync function loadTWV4(baseDir, pkgDir, entryPoint) {\n  // Import Tailwind — if this is v4 it'll have APIs we can use directly\n  let pkgPath = localRequire.resolve(\"tailwindcss\", {\n    paths: [baseDir],\n  });\n  let tw = await import(pathToFileURL(pkgPath).toString());\n\n  // This is not Tailwind v4\n  if (!tw.__unstable__loadDesignSystem) {\n    return null;\n  }\n\n  // If the user doesn't define an entrypoint then we use the default theme\n  entryPoint = entryPoint ?? `${pkgDir}/theme.css`;\n\n  // Resolve imports in the entrypoint to a flat CSS tree\n  let css = await fs.readFile(entryPoint, \"utf-8\");\n  let resolveImports = postcss([postcssImport()]);\n  let result = await resolveImports.process(css, { from: entryPoint });\n\n  // Load the design system and set up a compatible context object that is\n  // usable by the rest of the plugin\n  let design = tw.__unstable__loadDesignSystem(result.css) as ReturnType<\n    typeof __unstable__loadDesignSystem\n  >;\n  return {\n    context: {\n      ...design,\n    },\n    // Stubs that are not needed for v4\n    generateRules: () => [],\n  };\n}\n","import { TSESTree } from \"@typescript-eslint/types\";\nimport { AstPath, ParserOptions, Plugin, Printer } from \"prettier\";\nimport { getTailwindConfig } from \"./config.js\";\nimport { sortClasses } from \"./sorting.js\";\nimport { Node, TransformerEnv } from \"./types.js\";\nimport {\n  isClassNameAttributeChild,\n  isClassNameAttributeLiteral,\n  isClassUtilityParameter,\n} from \"./utils.js\";\n\nexport class CustomPrinter implements Printer<Node> {\n  printerFormat: string;\n  _defaultPrinter: Printer;\n  _defaultPrinterPromise: Promise<Printer> | null = null;\n  _context: TransformerEnv[\"context\"];\n\n  constructor(printerFormat: string) {\n    this.printerFormat = printerFormat;\n    this.preprocess = this.preprocess.bind(this);\n    this.getContext = this.getContext.bind(this);\n    this.getDefaultPrinter = this.getDefaultPrinter.bind(this);\n    this.initializeDefaultPrinter = this.initializeDefaultPrinter.bind(this);\n    this.print = this.print.bind(this);\n  }\n\n  async initializeDefaultPrinter(options: ParserOptions): Promise<Printer> {\n    if (this._defaultPrinter) {\n      return this._defaultPrinter;\n    }\n    if (!this._defaultPrinterPromise) {\n      this._defaultPrinterPromise = (async () => {\n        const plugin = options?.plugins?.[0] as Plugin | undefined;\n        const printerCandidate = plugin?.printers?.[this.printerFormat] as\n          | Printer\n          | (() => Promise<Printer>);\n        const defaultPrinter =\n          typeof printerCandidate === \"function\"\n            ? await printerCandidate()\n            : printerCandidate;\n        if (!defaultPrinter) {\n          throw new Error(\n            `Default printer for ${this.printerFormat} not found.`\n          );\n        }\n\n        this._defaultPrinter = defaultPrinter;\n        for (const key in this._defaultPrinter) {\n          if (\n            typeof this._defaultPrinter[key] === \"function\" &&\n            !(key in this)\n          ) {\n            Object.defineProperty(this, key, {\n              value: this._defaultPrinter[key].bind(this),\n              writable: true,\n              configurable: true,\n            });\n          }\n        }\n        return this._defaultPrinter;\n      })();\n    }\n    return await this._defaultPrinterPromise;\n  }\n\n  getDefaultPrinter(options?: ParserOptions) {\n    if (this._defaultPrinter) {\n      return this._defaultPrinter;\n    } else if (!options) {\n      throw new Error(\"Printer not intialized\");\n    }\n    const plugin = options?.plugins?.[0] as Plugin | undefined;\n    const defaultPrinter = plugin?.printers?.[this.printerFormat] as\n      | Printer\n      | undefined;\n    if (!defaultPrinter) {\n      throw new Error(\n        `Default printer for ${this.printerFormat} not found, available printers: ${plugin?.printers}`\n      );\n    }\n    this._defaultPrinter = defaultPrinter;\n    return this._defaultPrinter;\n  }\n\n  async getContext(options: ParserOptions<any>) {\n    if (this._context) {\n      return this._context;\n    }\n    const { context } = await getTailwindConfig(options);\n    this._context = context;\n    return this._context;\n  }\n\n  async preprocess(ast: Node, options: ParserOptions) {\n    await this.getContext(options);\n    await this.initializeDefaultPrinter(options);\n    return ast;\n  }\n\n  print(path: AstPath, options: ParserOptions, _print) {\n    const ast = path.getNode();\n    if (isClassNameAttributeLiteral(path)) {\n      return [\n        ast.name.name,\n        `=`,\n        sortClasses(ast.value, {\n          env: { context: this._context, options },\n        }),\n      ];\n    } else if (ast.type === \"Literal\" && isClassNameAttributeChild(path)) {\n      const delimiter = isClassUtilityParameter(path) ? \",\" : \" +\";\n      return [\n        sortClasses(ast, {\n          env: { context: this._context, options },\n          delimiter,\n        }),\n      ];\n    } else if (\n      ast.type === \"TemplateLiteral\" &&\n      isClassNameAttributeChild(path)\n    ) {\n      return sortClasses(\n        ast.quasis?.[0],\n        { env: { context: this._context, options }, quoteChar: \"`\" },\n        (node: TSESTree.TemplateElement) => node.value.raw\n      );\n    }\n    return this.getDefaultPrinter(options).print(path, options, _print);\n  }\n}\n","import { Doc, doc } from \"prettier\";\nimport {\n  ETC_INDEX,\n  PropRanking,\n  RULE_INDEX,\n  getPropertyDetails,\n} from \"./grouped-classes.js\";\nimport { Node, StringLiteral, TransformerEnv } from \"./types.js\";\nimport { DefaultMap } from \"./utils.js\";\n\nconst { line, hardline, join, group, indent, lineSuffix, fill, ifBreak, trim } =\n  doc.builders;\n\ntype SortOptions = {\n  env: TransformerEnv;\n  quoteChar?: string;\n  delimiter?: string;\n};\n\nexport function sortClasses(\n  node: Node,\n  { env, delimiter = \" + \", quoteChar }: SortOptions,\n  mapFunc?: (node: Node) => string\n) {\n  const classStr = mapFunc ? mapFunc(node) : (node as StringLiteral).value;\n\n  quoteChar = (quoteChar ?? env.options.singleQuote ? `'` : `\"`) as string;\n  if (typeof classStr !== \"string\" || classStr === \"\") {\n    return classStr;\n  }\n  // Ignore class attributes containing `{{`, to match Prettier behaviour:\n  // https://github.com/prettier/prettier/blob/main/src/language-html/embed.js#L83-L88\n  if (classStr.includes(\"{{\")) {\n    return classStr;\n  }\n\n  let result: Doc = ``;\n  let parts = classStr.split(/([\\t\\r\\f\\n ]+)/);\n  let classes = parts.filter((_, i) => i % 2 === 0).filter(Boolean);\n\n  if (classes[classes.length - 1] === \"\") {\n    classes.pop();\n  }\n  const needsLineBreak =\n    Math.max(\n      (node.range?.[1] ?? 0) - (node.range?.[0] ?? 0),\n      node.loc?.end.column || 0\n    ) > env.options.printWidth;\n  if (needsLineBreak) {\n    result = createMultilineClassString(classes, { env, delimiter, quoteChar });\n  } else {\n    result = group(\n      [\n        `${quoteChar}`,\n        join(\n          \" \",\n          [...Object.values(sortClassList(classes, { env }))].flatMap((c) => c)\n        ),\n        `${quoteChar}`,\n      ],\n      { shouldBreak: true }\n    );\n  }\n  return result;\n}\n\nconst createMultilineClassString = (\n  classes: string[],\n  { env, delimiter = \" + \", quoteChar }: SortOptions\n): Doc => {\n  const sortedClasses = [...Object.entries(sortClassList(classes, { env }))];\n  let result: Doc[] = [];\n  const currClassNames: string[] = [...sortedClasses[0][1]];\n  const currGroups: string[] = [sortedClasses[0][0]].filter(Boolean);\n  const commentStr = (currGroups: string[]) =>\n    lineSuffix(` // ${currGroups.filter(Boolean).join(\", \")}`);\n\n  for (let i = 1; i < sortedClasses.length; i++) {\n    const groupClassNames = sortedClasses[i][1];\n    while (\n      indent(\n        [\n          ...currClassNames,\n          ...groupClassNames,\n          commentStr(currGroups).contents.toString(),\n          sortedClasses[i][0],\n        ].join(\" \")\n      ).contents.toString().length > env.options.printWidth ||\n      result.length === 0\n    ) {\n      currGroups.length && result.push(commentStr(currGroups));\n      result.push(\n        quoteChar,\n        fill(\n          join(\n            ifBreak(\n              [trim, `${quoteChar}${delimiter}`, hardline, `${quoteChar}`],\n              \" \"\n            ),\n            currClassNames.flatMap((str) => str)\n          )\n        ),\n        trim,\n        quoteChar\n      );\n      result.push(delimiter);\n      result.push(line);\n      currGroups.splice(0, currGroups.length);\n      currClassNames.splice(0, currClassNames.length);\n    }\n    // write the current group to the result\n    currClassNames.push(...groupClassNames);\n    sortedClasses[i][0].length && currGroups.push(sortedClasses[i][0]);\n\n    // Check if it's the last iteration to append the remaining classes and groups\n  }\n  if (currClassNames.length) {\n    result.push(`${quoteChar}`, join(\" \", currClassNames), `${quoteChar}`);\n    currGroups.length && result.push(commentStr(currGroups));\n  }\n  return group(result);\n};\n\ntype ClassNameWithOrder = {\n  className: string;\n  props: PropRanking;\n};\n\nexport function sortClassList(classList, { env }): Record<string, string[]> {\n  let classNamesWithOrder = env.context.getClassOrder(classList);\n  const groups = new DefaultMap<number, ClassNameWithOrder[]>(() => []);\n  classNamesWithOrder.forEach(([className]) => {\n    try {\n      const candidate = env.context.parseCandidate(className);\n      const func = env.context.utilities.get(candidate?.root);\n      const compileRes = func?.compileFn(candidate);\n      if (!compileRes) {\n        const currGroup = groups.get(-1);\n        groups.set(\n          -1,\n          currGroup.concat({\n            props: { globalRank: -1, label: \"\", subIndex: currGroup.length },\n            className,\n          })\n        );\n      } else {\n        const res = compileRes[0];\n        const props = getPropertyDetails(res.property);\n        if (props) {\n          const currGroup = groups.get(props.globalRank);\n          groups.set(props.globalRank, currGroup.concat({ props, className }));\n        } else if (res.kind === \"rule\") {\n          const currGroup = groups.get(RULE_INDEX);\n          groups.set(\n            RULE_INDEX,\n            currGroup.concat({\n              props: {\n                globalRank: RULE_INDEX,\n                label: \"rules\",\n                subIndex: currGroup.length,\n              },\n              className,\n            })\n          );\n        } else {\n          const currGroup = groups.get(ETC_INDEX);\n          groups.set(\n            ETC_INDEX,\n            currGroup.concat({\n              props: {\n                globalRank: ETC_INDEX,\n                label: \"unknowns\",\n                subIndex: currGroup.length,\n              },\n              className,\n            })\n          );\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      console.error(className);\n      console.error(env.context.parseCandidate(className));\n    }\n  });\n\n  return [...groups.entries()]\n    .sort((a, b) => a[0] - b[0])\n    .reduce((acc, [_, classGroup]) => {\n      const sortedClasses = classGroup\n        .sort((a, b) => a.props.subIndex - b.props.subIndex)\n        .map((item) => item.className);\n\n      const label = classGroup[0].props.label;\n      acc[label] = sortedClasses;\n\n      return acc;\n    }, {});\n}\n","export const GROUPED_PROPS: Record<string, string[]> = {\n  basicStyles: [\"container-type\", \"pointer-events\", \"visibility\", \"position\"],\n\n  positioning: [\n    \"inset\",\n    \"inset-inline\",\n    \"inset-block\",\n    \"inset-inline-start\",\n    \"inset-inline-end\",\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\",\n  ],\n\n  layoutControl: [\n    \"isolation\",\n    \"z-index\",\n    \"order\",\n    \"grid-column\",\n    \"grid-column-start\",\n    \"grid-column-end\",\n    \"grid-row\",\n    \"grid-row-start\",\n    \"grid-row-end\",\n    \"float\",\n    \"clear\",\n  ],\n\n  marginPadding: [\n    \"margin\",\n    \"margin-inline\",\n    \"margin-block\",\n    \"margin-inline-start\",\n    \"margin-inline-end\",\n    \"margin-top\",\n    \"margin-right\",\n    \"margin-bottom\",\n    \"margin-left\",\n  ],\n\n  sizing: [\n    \"box-sizing\",\n    \"display\",\n    \"aspect-ratio\",\n    \"height\",\n    \"max-height\",\n    \"min-height\",\n    \"width\",\n    \"max-width\",\n    \"min-width\",\n  ],\n\n  flexboxGrid: [\n    \"flex\",\n    \"flex-shrink\",\n    \"flex-grow\",\n    \"flex-basis\",\n    \"table-layout\",\n    \"caption-side\",\n    \"border-collapse\",\n  ],\n\n  spacing: [\"border-spacing\"],\n\n  transforms: [\n    \"transform-origin\",\n    \"translate\",\n    \"--tw-translate-x\",\n    \"--tw-translate-y\",\n    \"scale\",\n    \"--tw-scale-x\",\n    \"--tw-scale-y\",\n    \"--tw-scale-z\",\n    \"rotate\",\n    \"--tw-rotate-x\",\n    \"--tw-rotate-y\",\n    \"--tw-rotate-z\",\n    \"--tw-skew-x\",\n    \"--tw-skew-y\",\n    \"transform\",\n  ],\n\n  interactions: [\n    \"animation\",\n    \"cursor\",\n    \"touch-action\",\n    \"--tw-pan-x\",\n    \"--tw-pan-y\",\n    \"--tw-pinch-zoom\",\n    \"resize\",\n  ],\n\n  scrollSnap: [\n    \"scroll-snap-type\",\n    \"--tw-scroll-snap-strictness\",\n    \"scroll-snap-align\",\n    \"scroll-snap-stop\",\n    \"scroll-margin\",\n    \"scroll-margin-inline-start\",\n    \"scroll-margin-inline-end\",\n    \"scroll-margin-top\",\n    \"scroll-margin-right\",\n    \"scroll-margin-bottom\",\n    \"scroll-margin-left\",\n    \"scroll-padding\",\n    \"scroll-padding-inline-start\",\n    \"scroll-padding-inline-end\",\n    \"scroll-padding-top\",\n    \"scroll-padding-right\",\n    \"scroll-padding-bottom\",\n    \"scroll-padding-left\",\n  ],\n\n  listStyles: [\"list-style-position\", \"list-style-type\", \"list-style-image\"],\n\n  appearanceControl: [\n    \"appearance\",\n    \"columns\",\n    \"break-before\",\n    \"break-inside\",\n    \"break-after\",\n    \"grid-auto-columns\",\n    \"grid-auto-flow\",\n    \"grid-auto-rows\",\n    \"grid-template-columns\",\n    \"grid-template-rows\",\n    \"flex-direction\",\n    \"flex-wrap\",\n    \"place-content\",\n    \"place-items\",\n    \"align-content\",\n    \"align-items\",\n    \"justify-content\",\n    \"justify-items\",\n    \"gap\",\n    \"column-gap\",\n    \"row-gap\",\n    \"--tw-space-x-reverse\",\n    \"--tw-space-y-reverse\",\n    \"divide-x-width\",\n    \"divide-y-width\",\n    \"--tw-divide-y-reverse\",\n    \"divide-style\",\n    \"divide-color\",\n    \"--tw-divide-opacity\",\n    \"place-self\",\n    \"align-self\",\n    \"justify-self\",\n  ],\n\n  overflowControl: [\n    \"overflow\",\n    \"overflow-x\",\n    \"overflow-y\",\n    \"overscroll-behavior\",\n    \"overscroll-behavior-x\",\n    \"overscroll-behavior-y\",\n    \"scroll-behavior\",\n  ],\n\n  textWrapping: [\n    \"text-overflow\",\n    \"hyphens\",\n    \"white-space\",\n    \"text-wrap\",\n    \"overflow-wrap\",\n    \"work-break\",\n  ],\n\n  border: [\n    \"border-radius\",\n    \"border-start-radius\", // Not real\n    \"border-end-radius\", // Not real\n    \"border-top-radius\", // Not real\n    \"border-right-radius\", // Not real\n    \"border-bottom-radius\", // Not real\n    \"border-left-radius\", // Not real\n    \"border-start-start-radius\",\n    \"border-start-end-radius\",\n    \"border-end-end-radius\",\n    \"border-end-start-radius\",\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-left-radius\",\n\n    \"border-width\",\n    \"border-inline-width\", // Not real\n    \"border-inline-start-width\",\n    \"border-inline-end-width\",\n    \"border-top-width\",\n    \"border-right-width\",\n    \"border-bottom-width\",\n    \"border-left-width\",\n\n    \"border-style\",\n    \"border-color\",\n    \"border-x-color\", // Not real\n    \"border-y-color\", // Not real\n    \"border-inline-start-color\",\n    \"border-inline-end-color\",\n    \"border-top-color\",\n    \"border-right-color\",\n    \"border-bottom-color\",\n    \"border-left-color\",\n\n    \"--tw-border-opacity\",\n  ],\n\n  background: [\n    \"background-color\",\n    \"--tw-bg-opacity\",\n\n    \"background-image\",\n    \"--tw-gradient-stops\",\n    \"--tw-gradient-via-stops\",\n    \"--tw-gradient-from\",\n    \"--tw-gradient-from-position\",\n    \"--tw-gradient-via\",\n    \"--tw-gradient-via-position\",\n    \"--tw-gradient-to\",\n    \"--tw-gradient-to-position\",\n    \"box-decoration-break\",\n    \"background-size\",\n    \"background-attachment\",\n    \"background-clip\",\n    \"background-position\",\n    \"background-repeat\",\n    \"background-origin\",\n  ],\n\n  svg: [\"fill\", \"stroke\", \"stroke-width\"],\n\n  object: [\"object-fit\", \"object-position\"],\n\n  padding: [\n    \"padding\",\n    \"padding-inline\",\n    \"padding-block\",\n    \"padding-inline-start\",\n    \"padding-inline-end\",\n    \"padding-top\",\n    \"padding-right\",\n    \"padding-bottom\",\n    \"padding-left\",\n  ],\n  textStyles: [\n    \"text-align\",\n    \"text-indent\",\n    \"vertical-align\",\n    \"font-family\",\n    \"font-size\",\n    \"font-weight\",\n    \"text-transform\",\n    \"font-style\",\n    \"font-stretch\",\n    \"font-variant-numeric\",\n    \"line-height\",\n    \"letter-spacing\",\n    \"color\",\n    \"--tw-text-opacity\",\n    \"text-decoration-line\",\n    \"text-decoration-color\",\n    \"text-decoration-style\",\n    \"text-decoration-thickness\",\n    \"text-underline-offset\",\n    \"-webkit-font-smoothing\",\n  ],\n\n  colorControl: [\n    \"placeholder-color\",\n    \"--tw-placeholder-opacity\",\n    \"caret-color\",\n    \"accent-color\",\n    \"opacity\",\n    \"background-blend-mode\",\n    \"mix-blend-mode\",\n  ],\n\n  shadowFilterEffects: [\n    \"box-shadow\",\n    \"--tw-shadow\",\n    \"--tw-shadow-color\",\n    \"--tw-ring-shadow\",\n    \"--tw-ring-color\",\n    \"--tw-inset-shadow\",\n    \"--tw-inset-shadow-color\",\n    \"--tw-inset-ring-shadow\",\n    \"--tw-inset-ring-color\",\n    \"--tw-ring-opacity\",\n    \"--tw-ring-offset-width\",\n    \"--tw-ring-offset-color\",\n    \"outline\",\n    \"outline-width\",\n    \"outline-offset\",\n    \"outline-color\",\n    \"--tw-blur\",\n    \"--tw-brightness\",\n    \"--tw-contrast\",\n    \"--tw-drop-shadow\",\n    \"--tw-grayscale\",\n    \"--tw-hue-rotate\",\n    \"--tw-invert\",\n    \"--tw-saturate\",\n    \"--tw-sepia\",\n    \"filter\",\n    \"--tw-backdrop-blur\",\n    \"--tw-backdrop-brightness\",\n    \"--tw-backdrop-contrast\",\n    \"--tw-backdrop-grayscale\",\n    \"--tw-backdrop-hue-rotate\",\n    \"--tw-backdrop-invert\",\n    \"--tw-backdrop-opacity\",\n    \"--tw-backdrop-saturate\",\n    \"--tw-backdrop-sepia\",\n    \"backdrop-filter\",\n  ],\n\n  transitionsAnimations: [\n    \"transition-property\",\n    \"transition-delay\",\n    \"transition-duration\",\n    \"transition-timing-function\",\n    \"will-change\",\n    \"contain\",\n    \"content\",\n    \"forced-color-adjust\",\n  ],\n};\n\nexport const RULE_INDEX = Object.keys(GROUPED_PROPS).length + 1;\nexport const ETC_INDEX = Object.keys(GROUPED_PROPS).length + 2;\n\nexport const FLAT_PROPS: string[] = [\n  ...Object.values(GROUPED_PROPS).flatMap((prop) => prop),\n];\n\nexport type PropRanking = {\n  label: string;\n  subIndex: number;\n  globalRank: number;\n};\n\nexport function getPropertyDetails(cssProperty): PropRanking | null {\n  const entries = Object.entries(GROUPED_PROPS);\n  for (let i = 0; i < entries.length; i++) {\n    const [label, properties] = entries[i];\n    let subIndex = properties.indexOf(cssProperty);\n    if (subIndex !== -1) {\n      return {\n        label,\n        subIndex,\n        globalRank: i,\n      };\n    }\n  }\n  return null; // Return null if the property is not found\n}\n","import { TSESTree } from \"@typescript-eslint/types\";\nimport { AstPath } from \"prettier\";\nimport { CALL_EXPRESSIONS, CLASS_NAME_ATTRS } from \"./config.js\";\nimport { Node } from \"./types.js\";\nexport class DefaultMap<T = string, V = any> extends Map<T, V> {\n  constructor(private factory: (key: T, self: DefaultMap<T, V>) => V) {\n    super();\n  }\n\n  get(key: T): V {\n    let value = super.get(key);\n\n    if (value === undefined) {\n      value = this.factory(key, this);\n      this.set(key, value);\n    }\n\n    return value;\n  }\n}\n\nexport const isStringLiteral = (node: Node) =>\n  (node?.type as string) === \"StringLiteral\" ||\n  (node?.type === \"Literal\" && typeof node?.value === \"string\");\n\nexport function isClassNameAttributeChild(path: AstPath) {\n  return CLASS_NAME_ATTRS.includes(\n    path.stack.find((p) => p.type?.includes(\"JSXAttribute\"))?.name?.name\n  );\n}\n\nexport function isClassNameAttributeLiteral(path: AstPath) {\n  return (\n    path.getNode().type === \"JSXAttribute\" &&\n    CLASS_NAME_ATTRS.includes(path.getNode().name.name) &&\n    path.getNode().value.type === \"Literal\"\n  );\n}\n\nexport function isClassUtilityParameter(path: AstPath) {\n  const parent = path.parent as TSESTree.CallExpression;\n  return (\n    parent.type === \"CallExpression\" &&\n    \"name\" in parent.callee &&\n    CALL_EXPRESSIONS.includes((parent.callee as any).name)\n  );\n}\n","import { JSXAttribute, JSXExpressionContainer } from \"@babel/types\";\nimport { CLASS_NAME_ATTRS } from \"./config.js\";\nimport { Node, StringLiteral, TransformerContext } from \"./types.js\";\n\nexport function visit(\n  ast: Node,\n  callbackMap: Function | Record<string, Function>\n) {\n  function _visit(\n    node: Node,\n    parent?: Node,\n    key?: string,\n    index?: number,\n    meta = {}\n  ) {\n    if (typeof callbackMap === \"function\") {\n      if (callbackMap(node, parent, key, index, meta) === false) {\n        return;\n      }\n    } else if (node.type in callbackMap) {\n      if (callbackMap[node.type](node, parent, key, index, meta) === false) {\n        return;\n      }\n    }\n\n    const keys = Object.keys(node);\n    for (let i = 0; i < keys.length; i++) {\n      const child = node[keys[i]];\n      if (Array.isArray(child)) {\n        for (let j = 0; j < child.length; j++) {\n          if (child[j] !== null) {\n            _visit(child[j], node, keys[i], j, { ...meta });\n          }\n        }\n      } else if (typeof child?.type === \"string\") {\n        _visit(child, node, keys[i], i, { ...meta });\n      }\n    }\n  }\n  _visit(ast);\n}\n\nexport function transformJavaScript(ast: Node, { env }: TransformerContext) {\n  visit(ast, {\n    JSXAttribute(node: JSXAttribute) {\n      if (\n        !(\n          typeof node.name.name === \"string\" &&\n          CLASS_NAME_ATTRS.includes(node.name.name) &&\n          (node.value.type as string) === \"Literal\" &&\n          node.loc.end.column >= env.options.printWidth\n        )\n      ) {\n        return node;\n      }\n      const literalValue = node.value as StringLiteral;\n      const jsxExpressionContainer = {\n        type: \"JSXExpressionContainer\",\n        expression: {\n          type: \"Literal\",\n          value: literalValue.value,\n          loc: literalValue.loc, // Preserve original location info\n          range: literalValue.range, // Preserve original range info\n        } as StringLiteral,\n        loc: literalValue.loc, // Optionally adjust if needed\n        range: literalValue.range, // Optionally adjust if needed\n      } as JSXExpressionContainer;\n      node.value = jsxExpressionContainer;\n      return jsxExpressionContainer;\n    },\n  });\n}\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}