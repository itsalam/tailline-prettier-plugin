// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"farZc":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "890e741a975ef6c8";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && ![
        "localhost",
        "127.0.0.1",
        "0.0.0.0"
    ].includes(hostname) ? "wss" : "ws";
    var ws;
    if (HMR_USE_SSE) ws = new EventSource("/__parcel_hmr");
    else try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    if (ws instanceof WebSocket) {
        ws.onerror = function(e) {
            if (e.message) console.error(e.message);
        };
        ws.onclose = function() {
            console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
        };
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"8lqZg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _prettier = require("prettier");
var _babel = require("prettier/plugins/babel");
var _typescript = require("prettier/plugins/typescript");
var _parser = require("toml/lib/parser");
var _parserDefault = parcelHelpers.interopDefault(_parser);
const { concat, hardline } = (0, _prettier.builders);
const languages = [];
function preprocess(text, opts) {
    console.log({
        text,
        opts
    });
}
const parsers = {
    "toml-parse": {
        parse: (text)=>(0, _parserDefault.default).parse(text),
        astFormat: "toml-ast"
    },
    typescript: {
        ...(0, _typescript.parsers).typescript,
        preprocess
    },
    babel: {
        ...(0, _babel.parsers).babel,
        preprocess
    }
};
function printToml(path, options, print) {
    const node = path.getValue();
    console.log({
        node
    });
    if (Array.isArray(node)) return concat(path.map(print));
    switch(node.type){
        case "Assign":
            return concat([
                node.key,
                " = ",
                path.call(print, "value"),
                hardline
            ]);
        case "String":
            return `"${node.value}"`;
        default:
            return "";
    }
}
const printers = {
    "toml-ast": {
        print: printToml
    },
    "typescript": {
        print: printToml
    }
};
module.exports = {
    languages,
    parsers,
    printers
};

},{"prettier":"7nQkb","prettier/plugins/babel":"3KUk3","prettier/plugins/typescript":"eRcOu","toml/lib/parser":"5hlfz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7nQkb":[function(require,module,exports) {
(function(t) {
    function e() {
        var o = t();
        return o.default || o;
    }
    var f;
    module.exports = e();
})(function() {
    "use strict";
    var fu = Object.create;
    var $e = Object.defineProperty;
    var Fu = Object.getOwnPropertyDescriptor;
    var pu = Object.getOwnPropertyNames;
    var du = Object.getPrototypeOf, mu = Object.prototype.hasOwnProperty;
    var Eu = (e, t)=>()=>(e && (t = e(e = 0)), t);
    var Me = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), We = (e, t)=>{
        for(var r in t)$e(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, nr = (e, t, r, n)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let o of pu(t))!mu.call(e, o) && o !== r && $e(e, o, {
            get: ()=>t[o],
            enumerable: !(n = Fu(t, o)) || n.enumerable
        });
        return e;
    };
    var he = (e, t, r)=>(r = e != null ? fu(du(e)) : {}, nr(t || !e || !e.__esModule ? $e(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e)), ur = (e)=>nr($e({}, "__esModule", {
            value: !0
        }), e);
    var Cu = (e, t, r)=>{
        if (!t.has(e)) throw TypeError("Cannot " + r);
    };
    var ht = (e, t, r)=>{
        if (t.has(e)) throw TypeError("Cannot add the same private member more than once");
        t instanceof WeakSet ? t.add(e) : t.set(e, r);
    };
    var ce = (e, t, r)=>(Cu(e, t, "access private method"), r);
    var ir = Me((gt)=>{
        "use strict";
        Object.defineProperty(gt, "__esModule", {
            value: !0
        });
        gt.default = or;
        function or() {}
        or.prototype = {
            diff: function(t, r) {
                var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, o = n.callback;
                typeof n == "function" && (o = n, n = {}), this.options = n;
                var u = this;
                function i(F) {
                    return o ? (setTimeout(function() {
                        o(void 0, F);
                    }, 0), !0) : F;
                }
                t = this.castInput(t), r = this.castInput(r), t = this.removeEmpty(this.tokenize(t)), r = this.removeEmpty(this.tokenize(r));
                var s = r.length, D = t.length, a = 1, c = s + D;
                n.maxEditLength && (c = Math.min(c, n.maxEditLength));
                var d = [
                    {
                        newPos: -1,
                        components: []
                    }
                ], f = this.extractCommon(d[0], r, t, 0);
                if (d[0].newPos + 1 >= s && f + 1 >= D) return i([
                    {
                        value: this.join(r),
                        count: r.length
                    }
                ]);
                function p() {
                    for(var F = -1 * a; F <= a; F += 2){
                        var m = void 0, E = d[F - 1], C = d[F + 1], g = (C ? C.newPos : 0) - F;
                        E && (d[F - 1] = void 0);
                        var h = E && E.newPos + 1 < s, B = C && 0 <= g && g < D;
                        if (!h && !B) {
                            d[F] = void 0;
                            continue;
                        }
                        if (!h || B && E.newPos < C.newPos ? (m = yu(C), u.pushComponent(m.components, void 0, !0)) : (m = E, m.newPos++, u.pushComponent(m.components, !0, void 0)), g = u.extractCommon(m, r, t, F), m.newPos + 1 >= s && g + 1 >= D) return i(gu(u, m.components, r, t, u.useLongestToken));
                        d[F] = m;
                    }
                    a++;
                }
                if (o) (function F() {
                    setTimeout(function() {
                        if (a > c) return o();
                        p() || F();
                    }, 0);
                })();
                else for(; a <= c;){
                    var l = p();
                    if (l) return l;
                }
            },
            pushComponent: function(t, r, n) {
                var o = t[t.length - 1];
                o && o.added === r && o.removed === n ? t[t.length - 1] = {
                    count: o.count + 1,
                    added: r,
                    removed: n
                } : t.push({
                    count: 1,
                    added: r,
                    removed: n
                });
            },
            extractCommon: function(t, r, n, o) {
                for(var u = r.length, i = n.length, s = t.newPos, D = s - o, a = 0; s + 1 < u && D + 1 < i && this.equals(r[s + 1], n[D + 1]);)s++, D++, a++;
                return a && t.components.push({
                    count: a
                }), t.newPos = s, D;
            },
            equals: function(t, r) {
                return this.options.comparator ? this.options.comparator(t, r) : t === r || this.options.ignoreCase && t.toLowerCase() === r.toLowerCase();
            },
            removeEmpty: function(t) {
                for(var r = [], n = 0; n < t.length; n++)t[n] && r.push(t[n]);
                return r;
            },
            castInput: function(t) {
                return t;
            },
            tokenize: function(t) {
                return t.split("");
            },
            join: function(t) {
                return t.join("");
            }
        };
        function gu(e, t, r, n, o) {
            for(var u = 0, i = t.length, s = 0, D = 0; u < i; u++){
                var a = t[u];
                if (a.removed) {
                    if (a.value = e.join(n.slice(D, D + a.count)), D += a.count, u && t[u - 1].added) {
                        var d = t[u - 1];
                        t[u - 1] = t[u], t[u] = d;
                    }
                } else {
                    if (!a.added && o) {
                        var c = r.slice(s, s + a.count);
                        c = c.map(function(p, l) {
                            var F = n[D + l];
                            return F.length > p.length ? F : p;
                        }), a.value = e.join(c);
                    } else a.value = e.join(r.slice(s, s + a.count));
                    s += a.count, a.added || (D += a.count);
                }
            }
            var f = t[i - 1];
            return i > 1 && typeof f.value == "string" && (f.added || f.removed) && e.equals("", f.value) && (t[i - 2].value += f.value, t.pop()), t;
        }
        function yu(e) {
            return {
                newPos: e.newPos,
                components: e.components.slice(0)
            };
        }
    });
    var sr = Me((ye)=>{
        "use strict";
        Object.defineProperty(ye, "__esModule", {
            value: !0
        });
        ye.diffArrays = _u;
        ye.arrayDiff = void 0;
        var Au = Bu(ir());
        function Bu(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var ge = new Au.default;
        ye.arrayDiff = ge;
        ge.tokenize = function(e) {
            return e.slice();
        };
        ge.join = ge.removeEmpty = function(e) {
            return e;
        };
        function _u(e, t, r) {
            return ge.diff(e, t, r);
        }
    });
    var Re = Me((Xs, en)=>{
        "use strict";
        var Qr = new Proxy(String, {
            get: ()=>Qr
        });
        en.exports = Qr;
    });
    var bn = {};
    We(bn, {
        default: ()=>Eo,
        shouldHighlight: ()=>mo
    });
    var mo, Eo, xn = Eu(()=>{
        mo = ()=>!1, Eo = String;
    });
    var Pn = Me((Et)=>{
        "use strict";
        Object.defineProperty(Et, "__esModule", {
            value: !0
        });
        Et.codeFrameColumns = vn;
        Et.default = Ao;
        var wn = (xn(), ur(bn)), On = Co(Re(), !0);
        function Tn(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return (Tn = function(n) {
                return n ? r : t;
            })(e);
        }
        function Co(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = Tn(t);
            if (r && r.has(e)) return r.get(e);
            var n = {
                __proto__: null
            }, o = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var u in e)if (u !== "default" && Object.prototype.hasOwnProperty.call(e, u)) {
                var i = o ? Object.getOwnPropertyDescriptor(e, u) : null;
                i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
            }
            return n.default = e, r && r.set(e, n), n;
        }
        var Ht;
        function ho(e) {
            if (e) {
                var t;
                return (t = Ht) != null || (Ht = new On.default.constructor({
                    enabled: !0,
                    level: 1
                })), Ht;
            }
            return On.default;
        }
        var Nn = !1;
        function go(e) {
            return {
                gutter: e.grey,
                marker: e.red.bold,
                message: e.red.bold
            };
        }
        var Sn = /\r\n|[\n\r\u2028\u2029]/;
        function yo(e, t, r) {
            let n = Object.assign({
                column: 0,
                line: -1
            }, e.start), o = Object.assign({}, n, e.end), { linesAbove: u = 2, linesBelow: i = 3 } = r || {}, s = n.line, D = n.column, a = o.line, c = o.column, d = Math.max(s - (u + 1), 0), f = Math.min(t.length, a + i);
            s === -1 && (d = 0), a === -1 && (f = t.length);
            let p = a - s, l = {};
            if (p) for(let F = 0; F <= p; F++){
                let m = F + s;
                if (!D) l[m] = !0;
                else if (F === 0) {
                    let E = t[m - 1].length;
                    l[m] = [
                        D,
                        E - D + 1
                    ];
                } else if (F === p) l[m] = [
                    0,
                    c
                ];
                else {
                    let E = t[m - F].length;
                    l[m] = [
                        0,
                        E
                    ];
                }
            }
            else D === c ? D ? l[s] = [
                D,
                0
            ] : l[s] = !0 : l[s] = [
                D,
                c - D
            ];
            return {
                start: d,
                end: f,
                markerLines: l
            };
        }
        function vn(e, t, r = {}) {
            let n = (r.highlightCode || r.forceColor) && (0, wn.shouldHighlight)(r), o = ho(r.forceColor), u = go(o), i = (F, m)=>n ? F(m) : m, s = e.split(Sn), { start: D, end: a, markerLines: c } = yo(t, s, r), d = t.start && typeof t.start.column == "number", f = String(a).length, l = (n ? (0, wn.default)(e, r) : e).split(Sn, a).slice(D, a).map((F, m)=>{
                let E = D + 1 + m, g = ` ${` ${E}`.slice(-f)} |`, h = c[E], B = !c[E + 1];
                if (h) {
                    let Z = "";
                    if (Array.isArray(h)) {
                        let $ = F.slice(0, Math.max(h[0] - 1, 0)).replace(/[^\t]/g, " "), Q = h[1] || 1;
                        Z = [
                            `
 `,
                            i(u.gutter, g.replace(/\d/g, " ")),
                            " ",
                            $,
                            i(u.marker, "^").repeat(Q)
                        ].join(""), B && r.message && (Z += " " + i(u.message, r.message));
                    }
                    return [
                        i(u.marker, ">"),
                        i(u.gutter, g),
                        F.length > 0 ? ` ${F}` : "",
                        Z
                    ].join("");
                } else return ` ${i(u.gutter, g)}${F.length > 0 ? ` ${F}` : ""}`;
            }).join(`
`);
            return r.message && !d && (l = `${" ".repeat(f + 1)}${r.message}
${l}`), n ? o.reset(l) : l;
        }
        function Ao(e, t, r, n = {}) {
            if (!Nn) {
                Nn = !0;
                let u = "Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";
                {
                    let i = new Error(u);
                    i.name = "DeprecationWarning", console.warn(new Error(u));
                }
            }
            return r = Math.max(r, 0), vn(e, {
                start: {
                    column: r,
                    line: t
                }
            }, n);
        }
    });
    var ui = {};
    We(ui, {
        __debug: ()=>ni,
        check: ()=>ti,
        doc: ()=>Qt,
        format: ()=>lu,
        formatWithCursor: ()=>cu,
        getSupportInfo: ()=>ri,
        util: ()=>tr,
        version: ()=>nu
    });
    var hu = (e, t, r, n)=>{
        if (!(e && t == null)) return t.replaceAll ? t.replaceAll(r, n) : r.global ? t.replace(r, n) : t.split(r).join(n);
    }, ee = hu;
    var Hn = he(sr(), 1);
    function Dr(e) {
        let t = e.indexOf("\r");
        return t >= 0 ? e.charAt(t + 1) === `
` ? "crlf" : "cr" : "lf";
    }
    function Ae(e) {
        switch(e){
            case "cr":
                return "\r";
            case "crlf":
                return `\r
`;
            default:
                return `
`;
        }
    }
    function yt(e, t) {
        let r;
        switch(t){
            case `
`:
                r = /\n/g;
                break;
            case "\r":
                r = /\r/g;
                break;
            case `\r
`:
                r = /\r\n/g;
                break;
            default:
                throw new Error(`Unexpected "eol" ${JSON.stringify(t)}.`);
        }
        let n = e.match(r);
        return n ? n.length : 0;
    }
    function ar(e) {
        return ee(!1, e, /\r\n?/g, `
`);
    }
    var M = "string", j = "array", W = "cursor", S = "indent", T = "align", v = "trim", _ = "group", b = "fill", k = "if-break", P = "indent-if-break", L = "line-suffix", I = "line-suffix-boundary", A = "line", O = "label", x = "break-parent", Ue = new Set([
        W,
        S,
        T,
        v,
        _,
        b,
        k,
        P,
        L,
        I,
        A,
        O,
        x
    ]);
    function ku(e) {
        if (typeof e == "string") return M;
        if (Array.isArray(e)) return j;
        if (!e) return;
        let { type: t } = e;
        if (Ue.has(t)) return t;
    }
    var U = ku;
    var bu = (e)=>new Intl.ListFormat("en-US", {
            type: "disjunction"
        }).format(e);
    function xu(e) {
        let t = e === null ? "null" : typeof e;
        if (t !== "string" && t !== "object") return `Unexpected doc '${t}', 
Expected it to be 'string' or 'object'.`;
        if (U(e)) throw new Error("doc is valid.");
        let r = Object.prototype.toString.call(e);
        if (r !== "[object Object]") return `Unexpected doc '${r}'.`;
        let n = bu([
            ...Ue
        ].map((o)=>`'${o}'`));
        return `Unexpected doc.type '${e.type}'.
Expected it to be ${n}.`;
    }
    var At = class extends Error {
        name = "InvalidDocError";
        constructor(t){
            super(xu(t)), this.doc = t;
        }
    }, q = At;
    var cr = {};
    function wu(e, t, r, n) {
        let o = [
            e
        ];
        for(; o.length > 0;){
            let u = o.pop();
            if (u === cr) {
                r(o.pop());
                continue;
            }
            r && o.push(u, cr);
            let i = U(u);
            if (!i) throw new q(u);
            if ((t == null ? void 0 : t(u)) !== !1) switch(i){
                case j:
                case b:
                    {
                        let s = i === j ? u : u.parts;
                        for(let D = s.length, a = D - 1; a >= 0; --a)o.push(s[a]);
                        break;
                    }
                case k:
                    o.push(u.flatContents, u.breakContents);
                    break;
                case _:
                    if (n && u.expandedStates) for(let s = u.expandedStates.length, D = s - 1; D >= 0; --D)o.push(u.expandedStates[D]);
                    else o.push(u.contents);
                    break;
                case T:
                case S:
                case P:
                case O:
                case L:
                    o.push(u.contents);
                    break;
                case M:
                case W:
                case v:
                case I:
                case A:
                case x:
                    break;
                default:
                    throw new q(u);
            }
        }
    }
    var Be = wu;
    var lr = ()=>{}, z = lr, ze = lr;
    function ie(e) {
        return z(e), {
            type: S,
            contents: e
        };
    }
    function oe(e, t) {
        return z(t), {
            type: T,
            contents: t,
            n: e
        };
    }
    function Bt(e, t = {}) {
        return z(e), ze(t.expandedStates, !0), {
            type: _,
            id: t.id,
            contents: e,
            break: !!t.shouldBreak,
            expandedStates: t.expandedStates
        };
    }
    function fr(e) {
        return oe(Number.NEGATIVE_INFINITY, e);
    }
    function Fr(e) {
        return oe({
            type: "root"
        }, e);
    }
    function pr(e) {
        return oe(-1, e);
    }
    function dr(e, t) {
        return Bt(e[0], {
            ...t,
            expandedStates: e
        });
    }
    function Ge(e) {
        return ze(e), {
            type: b,
            parts: e
        };
    }
    function mr(e, t = "", r = {}) {
        return z(e), t !== "" && z(t), {
            type: k,
            breakContents: e,
            flatContents: t,
            groupId: r.groupId
        };
    }
    function Er(e, t) {
        return z(e), {
            type: P,
            contents: e,
            groupId: t.groupId,
            negate: t.negate
        };
    }
    function _e(e) {
        return z(e), {
            type: L,
            contents: e
        };
    }
    var Cr = {
        type: I
    }, le = {
        type: x
    }, hr = {
        type: v
    }, ke = {
        type: A,
        hard: !0
    }, _t = {
        type: A,
        hard: !0,
        literal: !0
    }, Ke = {
        type: A
    }, gr = {
        type: A,
        soft: !0
    }, G = [
        ke,
        le
    ], He = [
        _t,
        le
    ], be = {
        type: W
    };
    function xe(e, t) {
        z(e), ze(t);
        let r = [];
        for(let n = 0; n < t.length; n++)n !== 0 && r.push(e), r.push(t[n]);
        return r;
    }
    function qe(e, t, r) {
        z(e);
        let n = e;
        if (t > 0) {
            for(let o = 0; o < Math.floor(t / r); ++o)n = ie(n);
            n = oe(t % r, n), n = oe(Number.NEGATIVE_INFINITY, n);
        }
        return n;
    }
    function yr(e, t) {
        return z(t), e ? {
            type: O,
            label: e,
            contents: t
        } : t;
    }
    function J(e) {
        var t;
        if (!e) return "";
        if (Array.isArray(e)) {
            let r = [];
            for (let n of e)if (Array.isArray(n)) r.push(...J(n));
            else {
                let o = J(n);
                o !== "" && r.push(o);
            }
            return r;
        }
        return e.type === k ? {
            ...e,
            breakContents: J(e.breakContents),
            flatContents: J(e.flatContents)
        } : e.type === _ ? {
            ...e,
            contents: J(e.contents),
            expandedStates: (t = e.expandedStates) == null ? void 0 : t.map(J)
        } : e.type === b ? {
            type: "fill",
            parts: e.parts.map(J)
        } : e.contents ? {
            ...e,
            contents: J(e.contents)
        } : e;
    }
    function Ar(e) {
        let t = Object.create(null), r = new Set;
        return n(J(e));
        function n(u, i, s) {
            var D, a;
            if (typeof u == "string") return JSON.stringify(u);
            if (Array.isArray(u)) {
                let c = u.map(n).filter(Boolean);
                return c.length === 1 ? c[0] : `[${c.join(", ")}]`;
            }
            if (u.type === A) {
                let c = ((D = s == null ? void 0 : s[i + 1]) == null ? void 0 : D.type) === x;
                return u.literal ? c ? "literalline" : "literallineWithoutBreakParent" : u.hard ? c ? "hardline" : "hardlineWithoutBreakParent" : u.soft ? "softline" : "line";
            }
            if (u.type === x) return ((a = s == null ? void 0 : s[i - 1]) == null ? void 0 : a.type) === A && s[i - 1].hard ? void 0 : "breakParent";
            if (u.type === v) return "trim";
            if (u.type === S) return "indent(" + n(u.contents) + ")";
            if (u.type === T) return u.n === Number.NEGATIVE_INFINITY ? "dedentToRoot(" + n(u.contents) + ")" : u.n < 0 ? "dedent(" + n(u.contents) + ")" : u.n.type === "root" ? "markAsRoot(" + n(u.contents) + ")" : "align(" + JSON.stringify(u.n) + ", " + n(u.contents) + ")";
            if (u.type === k) return "ifBreak(" + n(u.breakContents) + (u.flatContents ? ", " + n(u.flatContents) : "") + (u.groupId ? (u.flatContents ? "" : ', ""') + `, { groupId: ${o(u.groupId)} }` : "") + ")";
            if (u.type === P) {
                let c = [];
                u.negate && c.push("negate: true"), u.groupId && c.push(`groupId: ${o(u.groupId)}`);
                let d = c.length > 0 ? `, { ${c.join(", ")} }` : "";
                return `indentIfBreak(${n(u.contents)}${d})`;
            }
            if (u.type === _) {
                let c = [];
                u.break && u.break !== "propagated" && c.push("shouldBreak: true"), u.id && c.push(`id: ${o(u.id)}`);
                let d = c.length > 0 ? `, { ${c.join(", ")} }` : "";
                return u.expandedStates ? `conditionalGroup([${u.expandedStates.map((f)=>n(f)).join(",")}]${d})` : `group(${n(u.contents)}${d})`;
            }
            if (u.type === b) return `fill([${u.parts.map((c)=>n(c)).join(", ")}])`;
            if (u.type === L) return "lineSuffix(" + n(u.contents) + ")";
            if (u.type === I) return "lineSuffixBoundary";
            if (u.type === O) return `label(${JSON.stringify(u.label)}, ${n(u.contents)})`;
            throw new Error("Unknown doc type " + u.type);
        }
        function o(u) {
            if (typeof u != "symbol") return JSON.stringify(String(u));
            if (u in t) return t[u];
            let i = u.description || "symbol";
            for(let s = 0;; s++){
                let D = i + (s > 0 ? ` #${s}` : "");
                if (!r.has(D)) return r.add(D), t[u] = `Symbol.for(${JSON.stringify(D)})`;
            }
        }
    }
    var Ou = (e, t, r)=>{
        if (!(e && t == null)) return Array.isArray(t) || typeof t == "string" ? t[r < 0 ? t.length + r : r] : t.at(r);
    }, y = Ou;
    var Br = ()=>/[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26D3\uFE0F?(?:\u200D\uD83D\uDCA5)?|\u26F9(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF43\uDF45-\uDF4A\uDF4C-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDF44(?:\u200D\uD83D\uDFEB)?|\uDF4B(?:\u200D\uD83D\uDFE9)?|\uDFC3(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4\uDEB5](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC25\uDC27-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE41\uDE43\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDC-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC08(?:\u200D\u2B1B)?|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC26(?:\u200D(?:\u2B1B|\uD83D\uDD25))?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?|\uDE42(?:\u200D[\u2194\u2195]\uFE0F?)?|\uDEB6(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF8](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC2\uDECE-\uDEDB\uDEE0-\uDEE8]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDCE(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1|\uDDD1\u200D\uD83E\uDDD2(?:\u200D\uD83E\uDDD2)?|\uDDD2(?:\u200D\uD83E\uDDD2)?))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?)/g;
    function _r(e) {
        return e === 12288 || e >= 65281 && e <= 65376 || e >= 65504 && e <= 65510;
    }
    function kr(e) {
        return e >= 4352 && e <= 4447 || e === 8986 || e === 8987 || e === 9001 || e === 9002 || e >= 9193 && e <= 9196 || e === 9200 || e === 9203 || e === 9725 || e === 9726 || e === 9748 || e === 9749 || e >= 9800 && e <= 9811 || e === 9855 || e === 9875 || e === 9889 || e === 9898 || e === 9899 || e === 9917 || e === 9918 || e === 9924 || e === 9925 || e === 9934 || e === 9940 || e === 9962 || e === 9970 || e === 9971 || e === 9973 || e === 9978 || e === 9981 || e === 9989 || e === 9994 || e === 9995 || e === 10024 || e === 10060 || e === 10062 || e >= 10067 && e <= 10069 || e === 10071 || e >= 10133 && e <= 10135 || e === 10160 || e === 10175 || e === 11035 || e === 11036 || e === 11088 || e === 11093 || e >= 11904 && e <= 11929 || e >= 11931 && e <= 12019 || e >= 12032 && e <= 12245 || e >= 12272 && e <= 12287 || e >= 12289 && e <= 12350 || e >= 12353 && e <= 12438 || e >= 12441 && e <= 12543 || e >= 12549 && e <= 12591 || e >= 12593 && e <= 12686 || e >= 12688 && e <= 12771 || e >= 12783 && e <= 12830 || e >= 12832 && e <= 12871 || e >= 12880 && e <= 19903 || e >= 19968 && e <= 42124 || e >= 42128 && e <= 42182 || e >= 43360 && e <= 43388 || e >= 44032 && e <= 55203 || e >= 63744 && e <= 64255 || e >= 65040 && e <= 65049 || e >= 65072 && e <= 65106 || e >= 65108 && e <= 65126 || e >= 65128 && e <= 65131 || e >= 94176 && e <= 94180 || e === 94192 || e === 94193 || e >= 94208 && e <= 100343 || e >= 100352 && e <= 101589 || e >= 101632 && e <= 101640 || e >= 110576 && e <= 110579 || e >= 110581 && e <= 110587 || e === 110589 || e === 110590 || e >= 110592 && e <= 110882 || e === 110898 || e >= 110928 && e <= 110930 || e === 110933 || e >= 110948 && e <= 110951 || e >= 110960 && e <= 111355 || e === 126980 || e === 127183 || e === 127374 || e >= 127377 && e <= 127386 || e >= 127488 && e <= 127490 || e >= 127504 && e <= 127547 || e >= 127552 && e <= 127560 || e === 127568 || e === 127569 || e >= 127584 && e <= 127589 || e >= 127744 && e <= 127776 || e >= 127789 && e <= 127797 || e >= 127799 && e <= 127868 || e >= 127870 && e <= 127891 || e >= 127904 && e <= 127946 || e >= 127951 && e <= 127955 || e >= 127968 && e <= 127984 || e === 127988 || e >= 127992 && e <= 128062 || e === 128064 || e >= 128066 && e <= 128252 || e >= 128255 && e <= 128317 || e >= 128331 && e <= 128334 || e >= 128336 && e <= 128359 || e === 128378 || e === 128405 || e === 128406 || e === 128420 || e >= 128507 && e <= 128591 || e >= 128640 && e <= 128709 || e === 128716 || e >= 128720 && e <= 128722 || e >= 128725 && e <= 128727 || e >= 128732 && e <= 128735 || e === 128747 || e === 128748 || e >= 128756 && e <= 128764 || e >= 128992 && e <= 129003 || e === 129008 || e >= 129292 && e <= 129338 || e >= 129340 && e <= 129349 || e >= 129351 && e <= 129535 || e >= 129648 && e <= 129660 || e >= 129664 && e <= 129672 || e >= 129680 && e <= 129725 || e >= 129727 && e <= 129733 || e >= 129742 && e <= 129755 || e >= 129760 && e <= 129768 || e >= 129776 && e <= 129784 || e >= 131072 && e <= 196605 || e >= 196608 && e <= 262141;
    }
    var br = (e)=>!(_r(e) || kr(e));
    var Nu = /[^\x20-\x7F]/;
    function Su(e) {
        if (!e) return 0;
        if (!Nu.test(e)) return e.length;
        e = e.replace(Br(), "  ");
        let t = 0;
        for (let r of e){
            let n = r.codePointAt(0);
            n <= 31 || n >= 127 && n <= 159 || n >= 768 && n <= 879 || (t += br(n) ? 1 : 2);
        }
        return t;
    }
    var we = Su;
    var Or = (e)=>{
        if (Array.isArray(e)) return e;
        if (e.type !== b) throw new Error(`Expect doc to be 'array' or '${b}'.`);
        return e.parts;
    };
    function Ne(e, t) {
        if (typeof e == "string") return t(e);
        let r = new Map;
        return n(e);
        function n(u) {
            if (r.has(u)) return r.get(u);
            let i = o(u);
            return r.set(u, i), i;
        }
        function o(u) {
            switch(U(u)){
                case j:
                    return t(u.map(n));
                case b:
                    return t({
                        ...u,
                        parts: u.parts.map(n)
                    });
                case k:
                    return t({
                        ...u,
                        breakContents: n(u.breakContents),
                        flatContents: n(u.flatContents)
                    });
                case _:
                    {
                        let { expandedStates: i, contents: s } = u;
                        return i ? (i = i.map(n), s = i[0]) : s = n(s), t({
                            ...u,
                            contents: s,
                            expandedStates: i
                        });
                    }
                case T:
                case S:
                case P:
                case O:
                case L:
                    return t({
                        ...u,
                        contents: n(u.contents)
                    });
                case M:
                case W:
                case v:
                case I:
                case A:
                case x:
                    return t(u);
                default:
                    throw new q(u);
            }
        }
    }
    function Je(e, t, r) {
        let n = r, o = !1;
        function u(i) {
            if (o) return !1;
            let s = t(i);
            s !== void 0 && (o = !0, n = s);
        }
        return Be(e, u), n;
    }
    function Tu(e) {
        if (e.type === _ && e.break || e.type === A && e.hard || e.type === x) return !0;
    }
    function Nr(e) {
        return Je(e, Tu, !1);
    }
    function xr(e) {
        if (e.length > 0) {
            let t = y(!1, e, -1);
            !t.expandedStates && !t.break && (t.break = "propagated");
        }
        return null;
    }
    function Sr(e) {
        let t = new Set, r = [];
        function n(u) {
            if (u.type === x && xr(r), u.type === _) {
                if (r.push(u), t.has(u)) return !1;
                t.add(u);
            }
        }
        function o(u) {
            u.type === _ && r.pop().break && xr(r);
        }
        Be(e, n, o, !0);
    }
    function vu(e) {
        return e.type === A && !e.hard ? e.soft ? "" : " " : e.type === k ? e.flatContents : e;
    }
    function Tr(e) {
        return Ne(e, vu);
    }
    function wr(e) {
        for(e = [
            ...e
        ]; e.length >= 2 && y(!1, e, -2).type === A && y(!1, e, -1).type === x;)e.length -= 2;
        if (e.length > 0) {
            let t = Oe(y(!1, e, -1));
            e[e.length - 1] = t;
        }
        return e;
    }
    function Oe(e) {
        switch(U(e)){
            case T:
            case S:
            case P:
            case _:
            case L:
            case O:
                {
                    let t = Oe(e.contents);
                    return {
                        ...e,
                        contents: t
                    };
                }
            case k:
                return {
                    ...e,
                    breakContents: Oe(e.breakContents),
                    flatContents: Oe(e.flatContents)
                };
            case b:
                return {
                    ...e,
                    parts: wr(e.parts)
                };
            case j:
                return wr(e);
            case M:
                return e.replace(/[\n\r]*$/, "");
            case W:
            case v:
            case I:
            case A:
            case x:
                break;
            default:
                throw new q(e);
        }
        return e;
    }
    function Xe(e) {
        return Oe(Lu(e));
    }
    function Pu(e) {
        switch(U(e)){
            case b:
                if (e.parts.every((t)=>t === "")) return "";
                break;
            case _:
                if (!e.contents && !e.id && !e.break && !e.expandedStates) return "";
                if (e.contents.type === _ && e.contents.id === e.id && e.contents.break === e.break && e.contents.expandedStates === e.expandedStates) return e.contents;
                break;
            case T:
            case S:
            case P:
            case L:
                if (!e.contents) return "";
                break;
            case k:
                if (!e.flatContents && !e.breakContents) return "";
                break;
            case j:
                {
                    let t = [];
                    for (let r of e){
                        if (!r) continue;
                        let [n, ...o] = Array.isArray(r) ? r : [
                            r
                        ];
                        typeof n == "string" && typeof y(!1, t, -1) == "string" ? t[t.length - 1] += n : t.push(n), t.push(...o);
                    }
                    return t.length === 0 ? "" : t.length === 1 ? t[0] : t;
                }
            case M:
            case W:
            case v:
            case I:
            case A:
            case O:
            case x:
                break;
            default:
                throw new q(e);
        }
        return e;
    }
    function Lu(e) {
        return Ne(e, (t)=>Pu(t));
    }
    function vr(e, t = He) {
        return Ne(e, (r)=>typeof r == "string" ? xe(t, r.split(`
`)) : r);
    }
    function Iu(e) {
        if (e.type === A) return !0;
    }
    function Pr(e) {
        return Je(e, Iu, !1);
    }
    function Ze(e, t) {
        return e.type === O ? {
            ...e,
            contents: t(e.contents)
        } : t(e);
    }
    var R = Symbol("MODE_BREAK"), K = Symbol("MODE_FLAT"), Se = Symbol("cursor");
    function Lr() {
        return {
            value: "",
            length: 0,
            queue: []
        };
    }
    function Ru(e, t) {
        return kt(e, {
            type: "indent"
        }, t);
    }
    function Yu(e, t, r) {
        return t === Number.NEGATIVE_INFINITY ? e.root || Lr() : t < 0 ? kt(e, {
            type: "dedent"
        }, r) : t ? t.type === "root" ? {
            ...e,
            root: e
        } : kt(e, {
            type: typeof t == "string" ? "stringAlign" : "numberAlign",
            n: t
        }, r) : e;
    }
    function kt(e, t, r) {
        let n = t.type === "dedent" ? e.queue.slice(0, -1) : [
            ...e.queue,
            t
        ], o = "", u = 0, i = 0, s = 0;
        for (let l of n)switch(l.type){
            case "indent":
                c(), r.useTabs ? D(1) : a(r.tabWidth);
                break;
            case "stringAlign":
                c(), o += l.n, u += l.n.length;
                break;
            case "numberAlign":
                i += 1, s += l.n;
                break;
            default:
                throw new Error(`Unexpected type '${l.type}'`);
        }
        return f(), {
            ...e,
            value: o,
            length: u,
            queue: n
        };
        function D(l) {
            o += "	".repeat(l), u += r.tabWidth * l;
        }
        function a(l) {
            o += " ".repeat(l), u += l;
        }
        function c() {
            r.useTabs ? d() : f();
        }
        function d() {
            i > 0 && D(i), p();
        }
        function f() {
            s > 0 && a(s), p();
        }
        function p() {
            i = 0, s = 0;
        }
    }
    function bt(e) {
        let t = 0, r = 0, n = e.length;
        e: for(; n--;){
            let o = e[n];
            if (o === Se) {
                r++;
                continue;
            }
            for(let u = o.length - 1; u >= 0; u--){
                let i = o[u];
                if (i === " " || i === "	") t++;
                else {
                    e[n] = o.slice(0, u + 1);
                    break e;
                }
            }
        }
        if (t > 0 || r > 0) for(e.length = n + 1; r-- > 0;)e.push(Se);
        return t;
    }
    function Qe(e, t, r, n, o, u) {
        if (r === Number.POSITIVE_INFINITY) return !0;
        let i = t.length, s = [
            e
        ], D = [];
        for(; r >= 0;){
            if (s.length === 0) {
                if (i === 0) return !0;
                s.push(t[--i]);
                continue;
            }
            let { mode: a, doc: c } = s.pop();
            switch(U(c)){
                case M:
                    D.push(c), r -= we(c);
                    break;
                case j:
                case b:
                    {
                        let d = Or(c);
                        for(let f = d.length - 1; f >= 0; f--)s.push({
                            mode: a,
                            doc: d[f]
                        });
                        break;
                    }
                case S:
                case T:
                case P:
                case O:
                    s.push({
                        mode: a,
                        doc: c.contents
                    });
                    break;
                case v:
                    r += bt(D);
                    break;
                case _:
                    {
                        if (u && c.break) return !1;
                        let d = c.break ? R : a, f = c.expandedStates && d === R ? y(!1, c.expandedStates, -1) : c.contents;
                        s.push({
                            mode: d,
                            doc: f
                        });
                        break;
                    }
                case k:
                    {
                        let f = (c.groupId ? o[c.groupId] || K : a) === R ? c.breakContents : c.flatContents;
                        f && s.push({
                            mode: a,
                            doc: f
                        });
                        break;
                    }
                case A:
                    if (a === R || c.hard) return !0;
                    c.soft || (D.push(" "), r--);
                    break;
                case L:
                    n = !0;
                    break;
                case I:
                    if (n) return !1;
                    break;
            }
        }
        return !1;
    }
    function fe(e, t) {
        let r = {}, n = t.printWidth, o = Ae(t.endOfLine), u = 0, i = [
            {
                ind: Lr(),
                mode: R,
                doc: e
            }
        ], s = [], D = !1, a = [], c = 0;
        for(Sr(e); i.length > 0;){
            let { ind: f, mode: p, doc: l } = i.pop();
            switch(U(l)){
                case M:
                    {
                        let F = o !== `
` ? ee(!1, l, `
`, o) : l;
                        s.push(F), i.length > 0 && (u += we(F));
                        break;
                    }
                case j:
                    for(let F = l.length - 1; F >= 0; F--)i.push({
                        ind: f,
                        mode: p,
                        doc: l[F]
                    });
                    break;
                case W:
                    if (c >= 2) throw new Error("There are too many 'cursor' in doc.");
                    s.push(Se), c++;
                    break;
                case S:
                    i.push({
                        ind: Ru(f, t),
                        mode: p,
                        doc: l.contents
                    });
                    break;
                case T:
                    i.push({
                        ind: Yu(f, l.n, t),
                        mode: p,
                        doc: l.contents
                    });
                    break;
                case v:
                    u -= bt(s);
                    break;
                case _:
                    switch(p){
                        case K:
                            if (!D) {
                                i.push({
                                    ind: f,
                                    mode: l.break ? R : K,
                                    doc: l.contents
                                });
                                break;
                            }
                        case R:
                            {
                                D = !1;
                                let F = {
                                    ind: f,
                                    mode: K,
                                    doc: l.contents
                                }, m = n - u, E = a.length > 0;
                                if (!l.break && Qe(F, i, m, E, r)) i.push(F);
                                else if (l.expandedStates) {
                                    let C = y(!1, l.expandedStates, -1);
                                    if (l.break) {
                                        i.push({
                                            ind: f,
                                            mode: R,
                                            doc: C
                                        });
                                        break;
                                    } else for(let g = 1; g < l.expandedStates.length + 1; g++)if (g >= l.expandedStates.length) {
                                        i.push({
                                            ind: f,
                                            mode: R,
                                            doc: C
                                        });
                                        break;
                                    } else {
                                        let h = l.expandedStates[g], B = {
                                            ind: f,
                                            mode: K,
                                            doc: h
                                        };
                                        if (Qe(B, i, m, E, r)) {
                                            i.push(B);
                                            break;
                                        }
                                    }
                                } else i.push({
                                    ind: f,
                                    mode: R,
                                    doc: l.contents
                                });
                                break;
                            }
                    }
                    l.id && (r[l.id] = y(!1, i, -1).mode);
                    break;
                case b:
                    {
                        let F = n - u, { parts: m } = l;
                        if (m.length === 0) break;
                        let [E, C] = m, g = {
                            ind: f,
                            mode: K,
                            doc: E
                        }, h = {
                            ind: f,
                            mode: R,
                            doc: E
                        }, B = Qe(g, [], F, a.length > 0, r, !0);
                        if (m.length === 1) {
                            B ? i.push(g) : i.push(h);
                            break;
                        }
                        let Z = {
                            ind: f,
                            mode: K,
                            doc: C
                        }, $ = {
                            ind: f,
                            mode: R,
                            doc: C
                        };
                        if (m.length === 2) {
                            B ? i.push(Z, g) : i.push($, h);
                            break;
                        }
                        m.splice(0, 2);
                        let Q = {
                            ind: f,
                            mode: p,
                            doc: Ge(m)
                        }, rr = m[0];
                        Qe({
                            ind: f,
                            mode: K,
                            doc: [
                                E,
                                C,
                                rr
                            ]
                        }, [], F, a.length > 0, r, !0) ? i.push(Q, Z, g) : B ? i.push(Q, $, g) : i.push(Q, $, h);
                        break;
                    }
                case k:
                case P:
                    {
                        let F = l.groupId ? r[l.groupId] : p;
                        if (F === R) {
                            let m = l.type === k ? l.breakContents : l.negate ? l.contents : ie(l.contents);
                            m && i.push({
                                ind: f,
                                mode: p,
                                doc: m
                            });
                        }
                        if (F === K) {
                            let m = l.type === k ? l.flatContents : l.negate ? ie(l.contents) : l.contents;
                            m && i.push({
                                ind: f,
                                mode: p,
                                doc: m
                            });
                        }
                        break;
                    }
                case L:
                    a.push({
                        ind: f,
                        mode: p,
                        doc: l.contents
                    });
                    break;
                case I:
                    a.length > 0 && i.push({
                        ind: f,
                        mode: p,
                        doc: ke
                    });
                    break;
                case A:
                    switch(p){
                        case K:
                            if (l.hard) D = !0;
                            else {
                                l.soft || (s.push(" "), u += 1);
                                break;
                            }
                        case R:
                            if (a.length > 0) {
                                i.push({
                                    ind: f,
                                    mode: p,
                                    doc: l
                                }, ...a.reverse()), a.length = 0;
                                break;
                            }
                            l.literal ? f.root ? (s.push(o, f.root.value), u = f.root.length) : (s.push(o), u = 0) : (u -= bt(s), s.push(o + f.value), u = f.length);
                            break;
                    }
                    break;
                case O:
                    i.push({
                        ind: f,
                        mode: p,
                        doc: l.contents
                    });
                    break;
                case x:
                    break;
                default:
                    throw new q(l);
            }
            i.length === 0 && a.length > 0 && (i.push(...a.reverse()), a.length = 0);
        }
        let d = s.indexOf(Se);
        if (d !== -1) {
            let f = s.indexOf(Se, d + 1), p = s.slice(0, d).join(""), l = s.slice(d + 1, f).join(""), F = s.slice(f + 1).join("");
            return {
                formatted: p + l + F,
                cursorNodeStart: p.length,
                cursorNodeText: l
            };
        }
        return {
            formatted: s.join("")
        };
    }
    function ju(e, t, r = 0) {
        let n = 0;
        for(let o = r; o < e.length; ++o)e[o] === "	" ? n = n + t - n % t : n++;
        return n;
    }
    var Fe = ju;
    var Te, wt, pe, et, xt = class {
        constructor(t){
            ht(this, Te);
            ht(this, pe);
            this.stack = [
                t
            ];
        }
        get key() {
            let { stack: t, siblings: r } = this;
            return y(!1, t, r === null ? -2 : -4) ?? null;
        }
        get index() {
            return this.siblings === null ? null : y(!1, this.stack, -2);
        }
        get node() {
            return y(!1, this.stack, -1);
        }
        get parent() {
            return this.getNode(1);
        }
        get grandparent() {
            return this.getNode(2);
        }
        get isInArray() {
            return this.siblings !== null;
        }
        get siblings() {
            let { stack: t } = this, r = y(!1, t, -3);
            return Array.isArray(r) ? r : null;
        }
        get next() {
            let { siblings: t } = this;
            return t === null ? null : t[this.index + 1];
        }
        get previous() {
            let { siblings: t } = this;
            return t === null ? null : t[this.index - 1];
        }
        get isFirst() {
            return this.index === 0;
        }
        get isLast() {
            let { siblings: t, index: r } = this;
            return t !== null && r === t.length - 1;
        }
        get isRoot() {
            return this.stack.length === 1;
        }
        get root() {
            return this.stack[0];
        }
        get ancestors() {
            return [
                ...ce(this, pe, et).call(this)
            ];
        }
        getName() {
            let { stack: t } = this, { length: r } = t;
            return r > 1 ? y(!1, t, -2) : null;
        }
        getValue() {
            return y(!1, this.stack, -1);
        }
        getNode(t = 0) {
            let r = ce(this, Te, wt).call(this, t);
            return r === -1 ? null : this.stack[r];
        }
        getParentNode(t = 0) {
            return this.getNode(t + 1);
        }
        call(t, ...r) {
            let { stack: n } = this, { length: o } = n, u = y(!1, n, -1);
            for (let i of r)u = u[i], n.push(i, u);
            try {
                return t(this);
            } finally{
                n.length = o;
            }
        }
        callParent(t, r = 0) {
            let n = ce(this, Te, wt).call(this, r + 1), o = this.stack.splice(n + 1);
            try {
                return t(this);
            } finally{
                this.stack.push(...o);
            }
        }
        each(t, ...r) {
            let { stack: n } = this, { length: o } = n, u = y(!1, n, -1);
            for (let i of r)u = u[i], n.push(i, u);
            try {
                for(let i = 0; i < u.length; ++i)n.push(i, u[i]), t(this, i, u), n.length -= 2;
            } finally{
                n.length = o;
            }
        }
        map(t, ...r) {
            let n = [];
            return this.each((o, u, i)=>{
                n[u] = t(o, u, i);
            }, ...r), n;
        }
        match(...t) {
            let r = this.stack.length - 1, n = null, o = this.stack[r--];
            for (let u of t){
                if (o === void 0) return !1;
                let i = null;
                if (typeof n == "number" && (i = n, n = this.stack[r--], o = this.stack[r--]), u && !u(o, n, i)) return !1;
                n = this.stack[r--], o = this.stack[r--];
            }
            return !0;
        }
        findAncestor(t) {
            for (let r of ce(this, pe, et).call(this))if (t(r)) return r;
        }
        hasAncestor(t) {
            for (let r of ce(this, pe, et).call(this))if (t(r)) return !0;
            return !1;
        }
    };
    Te = new WeakSet, wt = function(t) {
        let { stack: r } = this;
        for(let n = r.length - 1; n >= 0; n -= 2)if (!Array.isArray(r[n]) && --t < 0) return n;
        return -1;
    }, pe = new WeakSet, et = function*() {
        let { stack: t } = this;
        for(let r = t.length - 3; r >= 0; r -= 2){
            let n = t[r];
            Array.isArray(n) || (yield n);
        }
    };
    var Ir = xt;
    var Rr = new Proxy(()=>{}, {
        get: ()=>Rr
    }), ve = Rr;
    function Vu(e) {
        return e !== null && typeof e == "object";
    }
    var Yr = Vu;
    function* Ot(e, t) {
        let { getVisitorKeys: r, filter: n = ()=>!0 } = t, o = (u)=>Yr(u) && n(u);
        for (let u of r(e)){
            let i = e[u];
            if (Array.isArray(i)) for (let s of i)o(s) && (yield s);
            else o(i) && (yield i);
        }
    }
    function* jr(e, t) {
        let r = [
            e
        ];
        for(let n = 0; n < r.length; n++){
            let o = r[n];
            for (let u of Ot(o, t))yield u, r.push(u);
        }
    }
    function de(e) {
        return (t, r, n)=>{
            let o = !!(n != null && n.backwards);
            if (r === !1) return !1;
            let { length: u } = t, i = r;
            for(; i >= 0 && i < u;){
                let s = t.charAt(i);
                if (e instanceof RegExp) {
                    if (!e.test(s)) return i;
                } else if (!e.includes(s)) return i;
                o ? i-- : i++;
            }
            return i === -1 || i === u ? i : !1;
        };
    }
    var Vr = de(/\s/), N = de(" 	"), tt = de(",; 	"), rt = de(/[^\n\r]/);
    function $u(e, t, r) {
        let n = !!(r != null && r.backwards);
        if (t === !1) return !1;
        let o = e.charAt(t);
        if (n) {
            if (e.charAt(t - 1) === "\r" && o === `
`) return t - 2;
            if (o === `
` || o === "\r" || o === "\u2028" || o === "\u2029") return t - 1;
        } else {
            if (o === "\r" && e.charAt(t + 1) === `
`) return t + 2;
            if (o === `
` || o === "\r" || o === "\u2028" || o === "\u2029") return t + 1;
        }
        return t;
    }
    var Y = $u;
    function Mu(e, t, r = {}) {
        let n = N(e, r.backwards ? t - 1 : t, r), o = Y(e, n, r);
        return n !== o;
    }
    var V = Mu;
    function Wu(e) {
        return Array.isArray(e) && e.length > 0;
    }
    var Nt = Wu;
    var $r = new Set([
        "tokens",
        "comments",
        "parent",
        "enclosingNode",
        "precedingNode",
        "followingNode"
    ]), Uu = (e)=>Object.keys(e).filter((t)=>!$r.has(t));
    function zu(e) {
        return e ? (t)=>e(t, $r) : Uu;
    }
    var H = zu;
    function Gu(e) {
        let t = e.type || e.kind || "(unknown type)", r = String(e.name || e.id && (typeof e.id == "object" ? e.id.name : e.id) || e.key && (typeof e.key == "object" ? e.key.name : e.key) || e.value && (typeof e.value == "object" ? "" : String(e.value)) || e.operator || "");
        return r.length > 20 && (r = r.slice(0, 19) + "\u2026"), t + (r ? " " + r : "");
    }
    function St(e, t) {
        (e.comments ?? (e.comments = [])).push(t), t.printed = !1, t.nodeDescription = Gu(e);
    }
    function te(e, t) {
        t.leading = !0, t.trailing = !1, St(e, t);
    }
    function X(e, t, r) {
        t.leading = !1, t.trailing = !1, r && (t.marker = r), St(e, t);
    }
    function re(e, t) {
        t.leading = !1, t.trailing = !0, St(e, t);
    }
    var Tt = new WeakMap;
    function nt(e, t) {
        if (Tt.has(e)) return Tt.get(e);
        let { printer: { getCommentChildNodes: r, canAttachComment: n, getVisitorKeys: o }, locStart: u, locEnd: i } = t;
        if (!n) return [];
        let s = ((r == null ? void 0 : r(e, t)) ?? [
            ...Ot(e, {
                getVisitorKeys: H(o)
            })
        ]).flatMap((D)=>n(D) ? [
                D
            ] : nt(D, t));
        return s.sort((D, a)=>u(D) - u(a) || i(D) - i(a)), Tt.set(e, s), s;
    }
    function Wr(e, t, r, n) {
        let { locStart: o, locEnd: u } = r, i = o(t), s = u(t), D = nt(e, r), a, c, d = 0, f = D.length;
        for(; d < f;){
            let p = d + f >> 1, l = D[p], F = o(l), m = u(l);
            if (F <= i && s <= m) return Wr(l, t, r, l);
            if (m <= i) {
                a = l, d = p + 1;
                continue;
            }
            if (s <= F) {
                c = l, f = p;
                continue;
            }
            throw new Error("Comment location overlaps with node location");
        }
        if ((n == null ? void 0 : n.type) === "TemplateLiteral") {
            let { quasis: p } = n, l = Pt(p, t, r);
            a && Pt(p, a, r) !== l && (a = null), c && Pt(p, c, r) !== l && (c = null);
        }
        return {
            enclosingNode: n,
            precedingNode: a,
            followingNode: c
        };
    }
    var vt = ()=>!1;
    function Ur(e, t) {
        let { comments: r } = e;
        if (delete e.comments, !Nt(r) || !t.printer.canAttachComment) return;
        let n = [], { locStart: o, locEnd: u, printer: { experimentalFeatures: { avoidAstMutation: i = !1 } = {}, handleComments: s = {} }, originalText: D } = t, { ownLine: a = vt, endOfLine: c = vt, remaining: d = vt } = s, f = r.map((p, l)=>({
                ...Wr(e, p, t),
                comment: p,
                text: D,
                options: t,
                ast: e,
                isLastComment: r.length - 1 === l
            }));
        for (let [p, l] of f.entries()){
            let { comment: F, precedingNode: m, enclosingNode: E, followingNode: C, text: g, options: h, ast: B, isLastComment: Z } = l;
            if (h.parser === "json" || h.parser === "json5" || h.parser === "jsonc" || h.parser === "__js_expression" || h.parser === "__ts_expression" || h.parser === "__vue_expression" || h.parser === "__vue_ts_expression") {
                if (o(F) - o(B) <= 0) {
                    te(B, F);
                    continue;
                }
                if (u(F) - u(B) >= 0) {
                    re(B, F);
                    continue;
                }
            }
            let $;
            if (i ? $ = [
                l
            ] : (F.enclosingNode = E, F.precedingNode = m, F.followingNode = C, $ = [
                F,
                g,
                h,
                B,
                Z
            ]), Ku(g, h, f, p)) F.placement = "ownLine", a(...$) || (C ? te(C, F) : m ? re(m, F) : E ? X(E, F) : X(B, F));
            else if (Hu(g, h, f, p)) F.placement = "endOfLine", c(...$) || (m ? re(m, F) : C ? te(C, F) : E ? X(E, F) : X(B, F));
            else if (F.placement = "remaining", !d(...$)) {
                if (m && C) {
                    let Q = n.length;
                    Q > 0 && n[Q - 1].followingNode !== C && Mr(n, h), n.push(l);
                } else m ? re(m, F) : C ? te(C, F) : E ? X(E, F) : X(B, F);
            }
        }
        if (Mr(n, t), !i) for (let p of r)delete p.precedingNode, delete p.enclosingNode, delete p.followingNode;
    }
    var zr = (e)=>!/[\S\n\u2028\u2029]/.test(e);
    function Ku(e, t, r, n) {
        let { comment: o, precedingNode: u } = r[n], { locStart: i, locEnd: s } = t, D = i(o);
        if (u) for(let a = n - 1; a >= 0; a--){
            let { comment: c, precedingNode: d } = r[a];
            if (d !== u || !zr(e.slice(s(c), D))) break;
            D = i(c);
        }
        return V(e, D, {
            backwards: !0
        });
    }
    function Hu(e, t, r, n) {
        let { comment: o, followingNode: u } = r[n], { locStart: i, locEnd: s } = t, D = s(o);
        if (u) for(let a = n + 1; a < r.length; a++){
            let { comment: c, followingNode: d } = r[a];
            if (d !== u || !zr(e.slice(D, i(c)))) break;
            D = s(c);
        }
        return V(e, D);
    }
    function Mr(e, t) {
        var s, D;
        let r = e.length;
        if (r === 0) return;
        let { precedingNode: n, followingNode: o } = e[0], u = t.locStart(o), i;
        for(i = r; i > 0; --i){
            let { comment: a, precedingNode: c, followingNode: d } = e[i - 1];
            ve.strictEqual(c, n), ve.strictEqual(d, o);
            let f = t.originalText.slice(t.locEnd(a), u);
            if (((D = (s = t.printer).isGap) == null ? void 0 : D.call(s, f, t)) ?? /^[\s(]*$/.test(f)) u = t.locStart(a);
            else break;
        }
        for (let [a, { comment: c }] of e.entries())a < i ? re(n, c) : te(o, c);
        for (let a of [
            n,
            o
        ])a.comments && a.comments.length > 1 && a.comments.sort((c, d)=>t.locStart(c) - t.locStart(d));
        e.length = 0;
    }
    function Pt(e, t, r) {
        let n = r.locStart(t) - 1;
        for(let o = 1; o < e.length; ++o)if (n < r.locStart(e[o])) return o - 1;
        return 0;
    }
    function qu(e, t) {
        let r = t - 1;
        r = N(e, r, {
            backwards: !0
        }), r = Y(e, r, {
            backwards: !0
        }), r = N(e, r, {
            backwards: !0
        });
        let n = Y(e, r, {
            backwards: !0
        });
        return r !== n;
    }
    var Pe = qu;
    function Gr(e, t) {
        let r = e.node;
        return r.printed = !0, t.printer.printComment(e, t);
    }
    function Ju(e, t) {
        var c;
        let r = e.node, n = [
            Gr(e, t)
        ], { printer: o, originalText: u, locStart: i, locEnd: s } = t;
        if ((c = o.isBlockComment) == null ? void 0 : c.call(o, r)) {
            let d = V(u, s(r)) ? V(u, i(r), {
                backwards: !0
            }) ? G : Ke : " ";
            n.push(d);
        } else n.push(G);
        let a = Y(u, N(u, s(r)));
        return a !== !1 && V(u, a) && n.push(G), n;
    }
    function Xu(e, t, r) {
        var a;
        let n = e.node, o = Gr(e, t), { printer: u, originalText: i, locStart: s } = t, D = (a = u.isBlockComment) == null ? void 0 : a.call(u, n);
        if (r != null && r.hasLineSuffix && !(r != null && r.isBlock) || V(i, s(n), {
            backwards: !0
        })) {
            let c = Pe(i, s(n));
            return {
                doc: _e([
                    G,
                    c ? G : "",
                    o
                ]),
                isBlock: D,
                hasLineSuffix: !0
            };
        }
        return !D || r != null && r.hasLineSuffix ? {
            doc: [
                _e([
                    " ",
                    o
                ]),
                le
            ],
            isBlock: D,
            hasLineSuffix: !0
        } : {
            doc: [
                " ",
                o
            ],
            isBlock: D,
            hasLineSuffix: !1
        };
    }
    function Zu(e, t) {
        let r = e.node;
        if (!r) return {};
        let n = t[Symbol.for("printedComments")];
        if ((r.comments || []).filter((D)=>!n.has(D)).length === 0) return {
            leading: "",
            trailing: ""
        };
        let u = [], i = [], s;
        return e.each(()=>{
            let D = e.node;
            if (n != null && n.has(D)) return;
            let { leading: a, trailing: c } = D;
            a ? u.push(Ju(e, t)) : c && (s = Xu(e, t, s), i.push(s.doc));
        }, "comments"), {
            leading: u,
            trailing: i
        };
    }
    function Kr(e, t, r) {
        let { leading: n, trailing: o } = Zu(e, r);
        return !n && !o ? t : Ze(t, (u)=>[
                n,
                u,
                o
            ]);
    }
    function Hr(e) {
        let { [Symbol.for("comments")]: t, [Symbol.for("printedComments")]: r } = e;
        for (let n of t){
            if (!n.printed && !r.has(n)) throw new Error('Comment "' + n.value.trim() + '" was not printed. Please report this error!');
            delete n.printed;
        }
    }
    function Qu(e) {
        return ()=>{};
    }
    var qr = Qu;
    var Le = class extends Error {
        name = "ConfigError";
    }, Ie = class extends Error {
        name = "UndefinedParserError";
    };
    var Jr = {
        cursorOffset: {
            category: "Special",
            type: "int",
            default: -1,
            range: {
                start: -1,
                end: 1 / 0,
                step: 1
            },
            description: "Print (to stderr) where a cursor at the given position would move to after formatting.",
            cliCategory: "Editor"
        },
        endOfLine: {
            category: "Global",
            type: "choice",
            default: "lf",
            description: "Which end of line characters to apply.",
            choices: [
                {
                    value: "lf",
                    description: "Line Feed only (\\n), common on Linux and macOS as well as inside git repos"
                },
                {
                    value: "crlf",
                    description: "Carriage Return + Line Feed characters (\\r\\n), common on Windows"
                },
                {
                    value: "cr",
                    description: "Carriage Return character only (\\r), used very rarely"
                },
                {
                    value: "auto",
                    description: `Maintain existing
(mixed values within one file are normalised by looking at what's used after the first line)`
                }
            ]
        },
        filepath: {
            category: "Special",
            type: "path",
            description: "Specify the input filepath. This will be used to do parser inference.",
            cliName: "stdin-filepath",
            cliCategory: "Other",
            cliDescription: "Path to the file to pretend that stdin comes from."
        },
        insertPragma: {
            category: "Special",
            type: "boolean",
            default: !1,
            description: "Insert @format pragma into file's first docblock comment.",
            cliCategory: "Other"
        },
        parser: {
            category: "Global",
            type: "choice",
            default: void 0,
            description: "Which parser to use.",
            exception: (e)=>typeof e == "string" || typeof e == "function",
            choices: [
                {
                    value: "flow",
                    description: "Flow"
                },
                {
                    value: "babel",
                    description: "JavaScript"
                },
                {
                    value: "babel-flow",
                    description: "Flow"
                },
                {
                    value: "babel-ts",
                    description: "TypeScript"
                },
                {
                    value: "typescript",
                    description: "TypeScript"
                },
                {
                    value: "acorn",
                    description: "JavaScript"
                },
                {
                    value: "espree",
                    description: "JavaScript"
                },
                {
                    value: "meriyah",
                    description: "JavaScript"
                },
                {
                    value: "css",
                    description: "CSS"
                },
                {
                    value: "less",
                    description: "Less"
                },
                {
                    value: "scss",
                    description: "SCSS"
                },
                {
                    value: "json",
                    description: "JSON"
                },
                {
                    value: "json5",
                    description: "JSON5"
                },
                {
                    value: "jsonc",
                    description: "JSON with Comments"
                },
                {
                    value: "json-stringify",
                    description: "JSON.stringify"
                },
                {
                    value: "graphql",
                    description: "GraphQL"
                },
                {
                    value: "markdown",
                    description: "Markdown"
                },
                {
                    value: "mdx",
                    description: "MDX"
                },
                {
                    value: "vue",
                    description: "Vue"
                },
                {
                    value: "yaml",
                    description: "YAML"
                },
                {
                    value: "glimmer",
                    description: "Ember / Handlebars"
                },
                {
                    value: "html",
                    description: "HTML"
                },
                {
                    value: "angular",
                    description: "Angular"
                },
                {
                    value: "lwc",
                    description: "Lightning Web Components"
                }
            ]
        },
        plugins: {
            type: "path",
            array: !0,
            default: [
                {
                    value: []
                }
            ],
            category: "Global",
            description: "Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",
            exception: (e)=>typeof e == "string" || typeof e == "object",
            cliName: "plugin",
            cliCategory: "Config"
        },
        printWidth: {
            category: "Global",
            type: "int",
            default: 80,
            description: "The line length where Prettier will try wrap.",
            range: {
                start: 0,
                end: 1 / 0,
                step: 1
            }
        },
        rangeEnd: {
            category: "Special",
            type: "int",
            default: 1 / 0,
            range: {
                start: 0,
                end: 1 / 0,
                step: 1
            },
            description: `Format code ending at a given character offset (exclusive).
The range will extend forwards to the end of the selected statement.`,
            cliCategory: "Editor"
        },
        rangeStart: {
            category: "Special",
            type: "int",
            default: 0,
            range: {
                start: 0,
                end: 1 / 0,
                step: 1
            },
            description: `Format code starting at a given character offset.
The range will extend backwards to the start of the first line containing the selected statement.`,
            cliCategory: "Editor"
        },
        requirePragma: {
            category: "Special",
            type: "boolean",
            default: !1,
            description: `Require either '@prettier' or '@format' to be present in the file's first docblock comment
in order for it to be formatted.`,
            cliCategory: "Other"
        },
        tabWidth: {
            type: "int",
            category: "Global",
            default: 2,
            description: "Number of spaces per indentation level.",
            range: {
                start: 0,
                end: 1 / 0,
                step: 1
            }
        },
        useTabs: {
            category: "Global",
            type: "boolean",
            default: !1,
            description: "Indent with tabs instead of spaces."
        },
        embeddedLanguageFormatting: {
            category: "Global",
            type: "choice",
            default: "auto",
            description: "Control how Prettier formats quoted code embedded in the file.",
            choices: [
                {
                    value: "auto",
                    description: "Format embedded code if Prettier can automatically identify it."
                },
                {
                    value: "off",
                    description: "Never automatically format embedded code."
                }
            ]
        }
    };
    function ut({ plugins: e = [], showDeprecated: t = !1 } = {}) {
        let r = e.flatMap((o)=>o.languages ?? []), n = [];
        for (let o of to(Object.assign({}, ...e.map(({ options: u })=>u), Jr)))!t && o.deprecated || (Array.isArray(o.choices) && (t || (o.choices = o.choices.filter((u)=>!u.deprecated)), o.name === "parser" && (o.choices = [
            ...o.choices,
            ...eo(o.choices, r, e)
        ])), o.pluginDefaults = Object.fromEntries(e.filter((u)=>{
            var i;
            return ((i = u.defaultOptions) == null ? void 0 : i[o.name]) !== void 0;
        }).map((u)=>[
                u.name,
                u.defaultOptions[o.name]
            ])), n.push(o));
        return {
            languages: r,
            options: n
        };
    }
    function* eo(e, t, r) {
        let n = new Set(e.map((o)=>o.value));
        for (let o of t)if (o.parsers) {
            for (let u of o.parsers)if (!n.has(u)) {
                n.add(u);
                let i = r.find((D)=>D.parsers && Object.prototype.hasOwnProperty.call(D.parsers, u)), s = o.name;
                i != null && i.name && (s += ` (plugin: ${i.name})`), yield {
                    value: u,
                    description: s
                };
            }
        }
    }
    function to(e) {
        let t = [];
        for (let [r, n] of Object.entries(e)){
            let o = {
                name: r,
                ...n
            };
            Array.isArray(o.default) && (o.default = y(!1, o.default, -1).value), t.push(o);
        }
        return t;
    }
    var ro = (e)=>String(e).split(/[/\\]/).pop();
    function Xr(e, t) {
        if (!t) return;
        let r = ro(t).toLowerCase();
        return e.find(({ filenames: n })=>n == null ? void 0 : n.some((o)=>o.toLowerCase() === r)) ?? e.find(({ extensions: n })=>n == null ? void 0 : n.some((o)=>r.endsWith(o)));
    }
    function no(e, t) {
        if (t) return e.find(({ name: r })=>r.toLowerCase() === t) ?? e.find(({ aliases: r })=>r == null ? void 0 : r.includes(t)) ?? e.find(({ extensions: r })=>r == null ? void 0 : r.includes(`.${t}`));
    }
    function uo(e, t) {
        let r = e.plugins.flatMap((o)=>o.languages ?? []), n = no(r, t.language) ?? Xr(r, t.physicalFile) ?? Xr(r, t.file) ?? (t.physicalFile, void 0);
        return n == null ? void 0 : n.parsers[0];
    }
    var Zr = uo;
    var ne = {
        key: (e)=>/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e) ? e : JSON.stringify(e),
        value (e) {
            if (e === null || typeof e != "object") return JSON.stringify(e);
            if (Array.isArray(e)) return `[${e.map((r)=>ne.value(r)).join(", ")}]`;
            let t = Object.keys(e);
            return t.length === 0 ? "{}" : `{ ${t.map((r)=>`${ne.key(r)}: ${ne.value(e[r])}`).join(", ")} }`;
        },
        pair: ({ key: e, value: t })=>ne.value({
                [e]: t
            })
    };
    var Lt = he(Re(), 1), tn = (e, t, { descriptor: r })=>{
        let n = [
            `${Lt.default.yellow(typeof e == "string" ? r.key(e) : r.pair(e))} is deprecated`
        ];
        return t && n.push(`we now treat it as ${Lt.default.blue(typeof t == "string" ? r.key(t) : r.pair(t))}`), n.join("; ") + ".";
    };
    var se = he(Re(), 1);
    var ot = Symbol.for("vnopts.VALUE_NOT_EXIST"), me = Symbol.for("vnopts.VALUE_UNCHANGED");
    var rn = " ".repeat(2), un = (e, t, r)=>{
        let { text: n, list: o } = r.normalizeExpectedResult(r.schemas[e].expected(r)), u = [];
        return n && u.push(nn(e, t, n, r.descriptor)), o && u.push([
            nn(e, t, o.title, r.descriptor)
        ].concat(o.values.map((i)=>on(i, r.loggerPrintWidth))).join(`
`)), sn(u, r.loggerPrintWidth);
    };
    function nn(e, t, r, n) {
        return [
            `Invalid ${se.default.red(n.key(e))} value.`,
            `Expected ${se.default.blue(r)},`,
            `but received ${t === ot ? se.default.gray("nothing") : se.default.red(n.value(t))}.`
        ].join(" ");
    }
    function on({ text: e, list: t }, r) {
        let n = [];
        return e && n.push(`- ${se.default.blue(e)}`), t && n.push([
            `- ${se.default.blue(t.title)}:`
        ].concat(t.values.map((o)=>on(o, r - rn.length).replace(/^|\n/g, `$&${rn}`))).join(`
`)), sn(n, r);
    }
    function sn(e, t) {
        if (e.length === 1) return e[0];
        let [r, n] = e, [o, u] = e.map((i)=>i.split(`
`, 1)[0].length);
        return o > t && o > u ? n : r;
    }
    var Yt = he(Re(), 1);
    var It = [], Dn = [];
    function Rt(e, t) {
        if (e === t) return 0;
        let r = e;
        e.length > t.length && (e = t, t = r);
        let n = e.length, o = t.length;
        for(; n > 0 && e.charCodeAt(~-n) === t.charCodeAt(~-o);)n--, o--;
        let u = 0;
        for(; u < n && e.charCodeAt(u) === t.charCodeAt(u);)u++;
        if (n -= u, o -= u, n === 0) return o;
        let i, s, D, a, c = 0, d = 0;
        for(; c < n;)Dn[c] = e.charCodeAt(u + c), It[c] = ++c;
        for(; d < o;)for(i = t.charCodeAt(u + d), D = d++, s = d, c = 0; c < n; c++)a = i === Dn[c] ? D : D + 1, D = It[c], s = It[c] = D > s ? a > s ? s + 1 : a : a > D ? D + 1 : a;
        return s;
    }
    var it = (e, t, { descriptor: r, logger: n, schemas: o })=>{
        let u = [
            `Ignored unknown option ${Yt.default.yellow(r.pair({
                key: e,
                value: t
            }))}.`
        ], i = Object.keys(o).sort().find((s)=>Rt(e, s) < 3);
        i && u.push(`Did you mean ${Yt.default.blue(r.key(i))}?`), n.warn(u.join(" "));
    };
    var oo = [
        "default",
        "expected",
        "validate",
        "deprecated",
        "forward",
        "redirect",
        "overlap",
        "preprocess",
        "postprocess"
    ];
    function io(e, t) {
        let r = new e(t), n = Object.create(r);
        for (let o of oo)o in t && (n[o] = so(t[o], r, w.prototype[o].length));
        return n;
    }
    var w = class {
        static create(t) {
            return io(this, t);
        }
        constructor(t){
            this.name = t.name;
        }
        default(t) {}
        expected(t) {
            return "nothing";
        }
        validate(t, r) {
            return !1;
        }
        deprecated(t, r) {
            return !1;
        }
        forward(t, r) {}
        redirect(t, r) {}
        overlap(t, r, n) {
            return t;
        }
        preprocess(t, r) {
            return t;
        }
        postprocess(t, r) {
            return me;
        }
    };
    function so(e, t, r) {
        return typeof e == "function" ? (...n)=>e(...n.slice(0, r - 1), t, ...n.slice(r - 1)) : ()=>e;
    }
    var st = class extends w {
        constructor(t){
            super(t), this._sourceName = t.sourceName;
        }
        expected(t) {
            return t.schemas[this._sourceName].expected(t);
        }
        validate(t, r) {
            return r.schemas[this._sourceName].validate(t, r);
        }
        redirect(t, r) {
            return this._sourceName;
        }
    };
    var Dt = class extends w {
        expected() {
            return "anything";
        }
        validate() {
            return !0;
        }
    };
    var at = class extends w {
        constructor({ valueSchema: t, name: r = t.name, ...n }){
            super({
                ...n,
                name: r
            }), this._valueSchema = t;
        }
        expected(t) {
            let { text: r, list: n } = t.normalizeExpectedResult(this._valueSchema.expected(t));
            return {
                text: r && `an array of ${r}`,
                list: n && {
                    title: "an array of the following values",
                    values: [
                        {
                            list: n
                        }
                    ]
                }
            };
        }
        validate(t, r) {
            if (!Array.isArray(t)) return !1;
            let n = [];
            for (let o of t){
                let u = r.normalizeValidateResult(this._valueSchema.validate(o, r), o);
                u !== !0 && n.push(u.value);
            }
            return n.length === 0 ? !0 : {
                value: n
            };
        }
        deprecated(t, r) {
            let n = [];
            for (let o of t){
                let u = r.normalizeDeprecatedResult(this._valueSchema.deprecated(o, r), o);
                u !== !1 && n.push(...u.map(({ value: i })=>({
                        value: [
                            i
                        ]
                    })));
            }
            return n;
        }
        forward(t, r) {
            let n = [];
            for (let o of t){
                let u = r.normalizeForwardResult(this._valueSchema.forward(o, r), o);
                n.push(...u.map(an));
            }
            return n;
        }
        redirect(t, r) {
            let n = [], o = [];
            for (let u of t){
                let i = r.normalizeRedirectResult(this._valueSchema.redirect(u, r), u);
                "remain" in i && n.push(i.remain), o.push(...i.redirect.map(an));
            }
            return n.length === 0 ? {
                redirect: o
            } : {
                redirect: o,
                remain: n
            };
        }
        overlap(t, r) {
            return t.concat(r);
        }
    };
    function an({ from: e, to: t }) {
        return {
            from: [
                e
            ],
            to: t
        };
    }
    var ct = class extends w {
        expected() {
            return "true or false";
        }
        validate(t) {
            return typeof t == "boolean";
        }
    };
    function ln(e, t) {
        let r = Object.create(null);
        for (let n of e){
            let o = n[t];
            if (r[o]) throw new Error(`Duplicate ${t} ${JSON.stringify(o)}`);
            r[o] = n;
        }
        return r;
    }
    function fn(e, t) {
        let r = new Map;
        for (let n of e){
            let o = n[t];
            if (r.has(o)) throw new Error(`Duplicate ${t} ${JSON.stringify(o)}`);
            r.set(o, n);
        }
        return r;
    }
    function Fn() {
        let e = Object.create(null);
        return (t)=>{
            let r = JSON.stringify(t);
            return e[r] ? !0 : (e[r] = !0, !1);
        };
    }
    function pn(e, t) {
        let r = [], n = [];
        for (let o of e)t(o) ? r.push(o) : n.push(o);
        return [
            r,
            n
        ];
    }
    function dn(e) {
        return e === Math.floor(e);
    }
    function mn(e, t) {
        if (e === t) return 0;
        let r = typeof e, n = typeof t, o = [
            "undefined",
            "object",
            "boolean",
            "number",
            "string"
        ];
        return r !== n ? o.indexOf(r) - o.indexOf(n) : r !== "string" ? Number(e) - Number(t) : e.localeCompare(t);
    }
    function En(e) {
        return (...t)=>{
            let r = e(...t);
            return typeof r == "string" ? new Error(r) : r;
        };
    }
    function jt(e) {
        return e === void 0 ? {} : e;
    }
    function Vt(e) {
        if (typeof e == "string") return {
            text: e
        };
        let { text: t, list: r } = e;
        return Do((t || r) !== void 0, "Unexpected `expected` result, there should be at least one field."), r ? {
            text: t,
            list: {
                title: r.title,
                values: r.values.map(Vt)
            }
        } : {
            text: t
        };
    }
    function $t(e, t) {
        return e === !0 ? !0 : e === !1 ? {
            value: t
        } : e;
    }
    function Mt(e, t, r = !1) {
        return e === !1 ? !1 : e === !0 ? r ? !0 : [
            {
                value: t
            }
        ] : "value" in e ? [
            e
        ] : e.length === 0 ? !1 : e;
    }
    function cn(e, t) {
        return typeof e == "string" || "key" in e ? {
            from: t,
            to: e
        } : "from" in e ? {
            from: e.from,
            to: e.to
        } : {
            from: t,
            to: e.to
        };
    }
    function lt(e, t) {
        return e === void 0 ? [] : Array.isArray(e) ? e.map((r)=>cn(r, t)) : [
            cn(e, t)
        ];
    }
    function Wt(e, t) {
        let r = lt(typeof e == "object" && "redirect" in e ? e.redirect : e, t);
        return r.length === 0 ? {
            remain: t,
            redirect: r
        } : typeof e == "object" && "remain" in e ? {
            remain: e.remain,
            redirect: r
        } : {
            redirect: r
        };
    }
    function Do(e, t) {
        if (!e) throw new Error(t);
    }
    var ft = class extends w {
        constructor(t){
            super(t), this._choices = fn(t.choices.map((r)=>r && typeof r == "object" ? r : {
                    value: r
                }), "value");
        }
        expected({ descriptor: t }) {
            let r = Array.from(this._choices.keys()).map((i)=>this._choices.get(i)).filter(({ hidden: i })=>!i).map((i)=>i.value).sort(mn).map(t.value), n = r.slice(0, -2), o = r.slice(-2);
            return {
                text: n.concat(o.join(" or ")).join(", "),
                list: {
                    title: "one of the following values",
                    values: r
                }
            };
        }
        validate(t) {
            return this._choices.has(t);
        }
        deprecated(t) {
            let r = this._choices.get(t);
            return r && r.deprecated ? {
                value: t
            } : !1;
        }
        forward(t) {
            let r = this._choices.get(t);
            return r ? r.forward : void 0;
        }
        redirect(t) {
            let r = this._choices.get(t);
            return r ? r.redirect : void 0;
        }
    };
    var Ft = class extends w {
        expected() {
            return "a number";
        }
        validate(t, r) {
            return typeof t == "number";
        }
    };
    var pt = class extends Ft {
        expected() {
            return "an integer";
        }
        validate(t, r) {
            return r.normalizeValidateResult(super.validate(t, r), t) === !0 && dn(t);
        }
    };
    var Ye = class extends w {
        expected() {
            return "a string";
        }
        validate(t) {
            return typeof t == "string";
        }
    };
    var Cn = ne, hn = it, gn = un, yn = tn;
    var dt = class {
        constructor(t, r){
            let { logger: n = console, loggerPrintWidth: o = 80, descriptor: u = Cn, unknown: i = hn, invalid: s = gn, deprecated: D = yn, missing: a = ()=>!1, required: c = ()=>!1, preprocess: d = (p)=>p, postprocess: f = ()=>me } = r || {};
            this._utils = {
                descriptor: u,
                logger: n || {
                    warn: ()=>{}
                },
                loggerPrintWidth: o,
                schemas: ln(t, "name"),
                normalizeDefaultResult: jt,
                normalizeExpectedResult: Vt,
                normalizeDeprecatedResult: Mt,
                normalizeForwardResult: lt,
                normalizeRedirectResult: Wt,
                normalizeValidateResult: $t
            }, this._unknownHandler = i, this._invalidHandler = En(s), this._deprecatedHandler = D, this._identifyMissing = (p, l)=>!(p in l) || a(p, l), this._identifyRequired = c, this._preprocess = d, this._postprocess = f, this.cleanHistory();
        }
        cleanHistory() {
            this._hasDeprecationWarned = Fn();
        }
        normalize(t) {
            let r = {}, o = [
                this._preprocess(t, this._utils)
            ], u = ()=>{
                for(; o.length !== 0;){
                    let i = o.shift(), s = this._applyNormalization(i, r);
                    o.push(...s);
                }
            };
            u();
            for (let i of Object.keys(this._utils.schemas)){
                let s = this._utils.schemas[i];
                if (!(i in r)) {
                    let D = jt(s.default(this._utils));
                    "value" in D && o.push({
                        [i]: D.value
                    });
                }
            }
            u();
            for (let i of Object.keys(this._utils.schemas)){
                if (!(i in r)) continue;
                let s = this._utils.schemas[i], D = r[i], a = s.postprocess(D, this._utils);
                a !== me && (this._applyValidation(a, i, s), r[i] = a);
            }
            return this._applyPostprocess(r), this._applyRequiredCheck(r), r;
        }
        _applyNormalization(t, r) {
            let n = [], { knownKeys: o, unknownKeys: u } = this._partitionOptionKeys(t);
            for (let i of o){
                let s = this._utils.schemas[i], D = s.preprocess(t[i], this._utils);
                this._applyValidation(D, i, s);
                let a = ({ from: p, to: l })=>{
                    n.push(typeof l == "string" ? {
                        [l]: p
                    } : {
                        [l.key]: l.value
                    });
                }, c = ({ value: p, redirectTo: l })=>{
                    let F = Mt(s.deprecated(p, this._utils), D, !0);
                    if (F !== !1) {
                        if (F === !0) this._hasDeprecationWarned(i) || this._utils.logger.warn(this._deprecatedHandler(i, l, this._utils));
                        else for (let { value: m } of F){
                            let E = {
                                key: i,
                                value: m
                            };
                            if (!this._hasDeprecationWarned(E)) {
                                let C = typeof l == "string" ? {
                                    key: l,
                                    value: m
                                } : l;
                                this._utils.logger.warn(this._deprecatedHandler(E, C, this._utils));
                            }
                        }
                    }
                };
                lt(s.forward(D, this._utils), D).forEach(a);
                let f = Wt(s.redirect(D, this._utils), D);
                if (f.redirect.forEach(a), "remain" in f) {
                    let p = f.remain;
                    r[i] = i in r ? s.overlap(r[i], p, this._utils) : p, c({
                        value: p
                    });
                }
                for (let { from: p, to: l } of f.redirect)c({
                    value: p,
                    redirectTo: l
                });
            }
            for (let i of u){
                let s = t[i];
                this._applyUnknownHandler(i, s, r, (D, a)=>{
                    n.push({
                        [D]: a
                    });
                });
            }
            return n;
        }
        _applyRequiredCheck(t) {
            for (let r of Object.keys(this._utils.schemas))if (this._identifyMissing(r, t) && this._identifyRequired(r)) throw this._invalidHandler(r, ot, this._utils);
        }
        _partitionOptionKeys(t) {
            let [r, n] = pn(Object.keys(t).filter((o)=>!this._identifyMissing(o, t)), (o)=>o in this._utils.schemas);
            return {
                knownKeys: r,
                unknownKeys: n
            };
        }
        _applyValidation(t, r, n) {
            let o = $t(n.validate(t, this._utils), t);
            if (o !== !0) throw this._invalidHandler(r, o.value, this._utils);
        }
        _applyUnknownHandler(t, r, n, o) {
            let u = this._unknownHandler(t, r, this._utils);
            if (u) for (let i of Object.keys(u)){
                if (this._identifyMissing(i, u)) continue;
                let s = u[i];
                i in this._utils.schemas ? o(i, s) : n[i] = s;
            }
        }
        _applyPostprocess(t) {
            let r = this._postprocess(t, this._utils);
            if (r !== me) {
                if (r.delete) for (let n of r.delete)delete t[n];
                if (r.override) {
                    let { knownKeys: n, unknownKeys: o } = this._partitionOptionKeys(r.override);
                    for (let u of n){
                        let i = r.override[u];
                        this._applyValidation(i, u, this._utils.schemas[u]), t[u] = i;
                    }
                    for (let u of o){
                        let i = r.override[u];
                        this._applyUnknownHandler(u, i, t, (s, D)=>{
                            let a = this._utils.schemas[s];
                            this._applyValidation(D, s, a), t[s] = D;
                        });
                    }
                }
            }
        }
    };
    var Ut;
    function co(e, t, { logger: r = !1, isCLI: n = !1, passThrough: o = !1, FlagSchema: u, descriptor: i } = {}) {
        if (n) {
            if (!u) throw new Error("'FlagSchema' option is required.");
            if (!i) throw new Error("'descriptor' option is required.");
        } else i = ne;
        let s = o ? Array.isArray(o) ? (f, p)=>o.includes(f) ? {
                [f]: p
            } : void 0 : (f, p)=>({
                [f]: p
            }) : (f, p, l)=>{
            let { _: F, ...m } = l.schemas;
            return it(f, p, {
                ...l,
                schemas: m
            });
        }, D = lo(t, {
            isCLI: n,
            FlagSchema: u
        }), a = new dt(D, {
            logger: r,
            unknown: s,
            descriptor: i
        }), c = r !== !1;
        c && Ut && (a._hasDeprecationWarned = Ut);
        let d = a.normalize(e);
        return c && (Ut = a._hasDeprecationWarned), d;
    }
    function lo(e, { isCLI: t, FlagSchema: r }) {
        let n = [];
        t && n.push(Dt.create({
            name: "_"
        }));
        for (let o of e)n.push(fo(o, {
            isCLI: t,
            optionInfos: e,
            FlagSchema: r
        })), o.alias && t && n.push(st.create({
            name: o.alias,
            sourceName: o.name
        }));
        return n;
    }
    function fo(e, { isCLI: t, optionInfos: r, FlagSchema: n }) {
        let { name: o } = e, u = {
            name: o
        }, i, s = {};
        switch(e.type){
            case "int":
                i = pt, t && (u.preprocess = Number);
                break;
            case "string":
                i = Ye;
                break;
            case "choice":
                i = ft, u.choices = e.choices.map((D)=>D != null && D.redirect ? {
                        ...D,
                        redirect: {
                            to: {
                                key: e.name,
                                value: D.redirect
                            }
                        }
                    } : D);
                break;
            case "boolean":
                i = ct;
                break;
            case "flag":
                i = n, u.flags = r.flatMap((D)=>[
                        D.alias,
                        D.description && D.name,
                        D.oppositeDescription && `no-${D.name}`
                    ].filter(Boolean));
                break;
            case "path":
                i = Ye;
                break;
            default:
                throw new Error(`Unexpected type ${e.type}`);
        }
        if (e.exception ? u.validate = (D, a, c)=>e.exception(D) || a.validate(D, c) : u.validate = (D, a, c)=>D === void 0 || a.validate(D, c), e.redirect && (s.redirect = (D)=>D ? {
                to: {
                    key: e.redirect.option,
                    value: e.redirect.value
                }
            } : void 0), e.deprecated && (s.deprecated = !0), t && !e.array) {
            let D = u.preprocess || ((a)=>a);
            u.preprocess = (a, c, d)=>c.preprocess(D(Array.isArray(a) ? y(!1, a, -1) : a), d);
        }
        return e.array ? at.create({
            ...t ? {
                preprocess: (D)=>Array.isArray(D) ? D : [
                        D
                    ]
            } : {},
            ...s,
            valueSchema: i.create(u)
        }) : i.create({
            ...u,
            ...s
        });
    }
    var An = co;
    var Fo = (e, t, r)=>{
        if (!(e && t == null)) {
            if (t.findLast) return t.findLast(r);
            for(let n = t.length - 1; n >= 0; n--){
                let o = t[n];
                if (r(o, n, t)) return o;
            }
        }
    }, zt = Fo;
    function Gt(e, t) {
        if (!t) throw new Error("parserName is required.");
        let r = zt(!1, e, (o)=>o.parsers && Object.prototype.hasOwnProperty.call(o.parsers, t));
        if (r) return r;
        let n = `Couldn't resolve parser "${t}".`;
        throw n += " Plugins must be explicitly added to the standalone bundle.", new Le(n);
    }
    function Bn(e, t) {
        if (!t) throw new Error("astFormat is required.");
        let r = zt(!1, e, (o)=>o.printers && Object.prototype.hasOwnProperty.call(o.printers, t));
        if (r) return r;
        let n = `Couldn't find plugin for AST format "${t}".`;
        throw n += " Plugins must be explicitly added to the standalone bundle.", new Le(n);
    }
    function mt({ plugins: e, parser: t }) {
        let r = Gt(e, t);
        return Kt(r, t);
    }
    function Kt(e, t) {
        let r = e.parsers[t];
        return typeof r == "function" ? r() : r;
    }
    function _n(e, t) {
        let r = e.printers[t];
        return typeof r == "function" ? r() : r;
    }
    var kn = {
        astFormat: "estree",
        printer: {},
        originalText: void 0,
        locStart: null,
        locEnd: null
    };
    async function po(e, t = {}) {
        var d;
        let r = {
            ...e
        };
        if (!r.parser) {
            if (r.filepath) {
                if (r.parser = Zr(r, {
                    physicalFile: r.filepath
                }), !r.parser) throw new Ie(`No parser could be inferred for file "${r.filepath}".`);
            } else throw new Ie("No parser and no file path given, couldn't infer a parser.");
        }
        let n = ut({
            plugins: e.plugins,
            showDeprecated: !0
        }).options, o = {
            ...kn,
            ...Object.fromEntries(n.filter((f)=>f.default !== void 0).map((f)=>[
                    f.name,
                    f.default
                ]))
        }, u = Gt(r.plugins, r.parser), i = await Kt(u, r.parser);
        r.astFormat = i.astFormat, r.locEnd = i.locEnd, r.locStart = i.locStart;
        let s = (d = u.printers) != null && d[i.astFormat] ? u : Bn(r.plugins, i.astFormat), D = await _n(s, i.astFormat);
        r.printer = D;
        let a = s.defaultOptions ? Object.fromEntries(Object.entries(s.defaultOptions).filter(([, f])=>f !== void 0)) : {}, c = {
            ...o,
            ...a
        };
        for (let [f, p] of Object.entries(c))(r[f] === null || r[f] === void 0) && (r[f] = p);
        return r.parser === "json" && (r.trailingComma = "none"), An(r, n, {
            passThrough: Object.keys(kn),
            ...t
        });
    }
    var ue = po;
    var Ln = he(Pn(), 1);
    async function Bo(e, t) {
        let r = await mt(t), n = r.preprocess ? r.preprocess(e, t) : e;
        t.originalText = n;
        let o;
        try {
            o = await r.parse(n, t, t);
        } catch (u) {
            _o(u, e);
        }
        return {
            text: n,
            ast: o
        };
    }
    function _o(e, t) {
        let { loc: r } = e;
        if (r) {
            let n = (0, Ln.codeFrameColumns)(t, r, {
                highlightCode: !0
            });
            throw e.message += `
` + n, e.codeFrame = n, e;
        }
        throw e;
    }
    var De = Bo;
    async function In(e, t, r, n, o) {
        let { embeddedLanguageFormatting: u, printer: { embed: i, hasPrettierIgnore: s = ()=>!1, getVisitorKeys: D } } = r;
        if (!i || u !== "auto") return;
        if (i.length > 2) throw new Error("printer.embed has too many parameters. The API changed in Prettier v3. Please update your plugin. See https://prettier.io/docs/en/plugins.html#optional-embed");
        let a = H(i.getVisitorKeys ?? D), c = [];
        p();
        let d = e.stack;
        for (let { print: l, node: F, pathStack: m } of c)try {
            e.stack = m;
            let E = await l(f, t, e, r);
            E && o.set(F, E);
        } catch (E) {
            if (globalThis.PRETTIER_DEBUG) throw E;
        }
        e.stack = d;
        function f(l, F) {
            return ko(l, F, r, n);
        }
        function p() {
            let { node: l } = e;
            if (l === null || typeof l != "object" || s(e)) return;
            for (let m of a(l))Array.isArray(l[m]) ? e.each(p, m) : e.call(p, m);
            let F = i(e, r);
            if (F) {
                if (typeof F == "function") {
                    c.push({
                        print: F,
                        node: l,
                        pathStack: [
                            ...e.stack
                        ]
                    });
                    return;
                }
                o.set(l, F);
            }
        }
    }
    async function ko(e, t, r, n) {
        let o = await ue({
            ...r,
            ...t,
            parentParser: r.parser,
            originalText: e
        }, {
            passThrough: !0
        }), { ast: u } = await De(e, o), i = await n(u, o);
        return Xe(i);
    }
    function bo(e, t) {
        let { originalText: r, [Symbol.for("comments")]: n, locStart: o, locEnd: u, [Symbol.for("printedComments")]: i } = t, { node: s } = e, D = o(s), a = u(s);
        for (let c of n)o(c) >= D && u(c) <= a && i.add(c);
        return r.slice(D, a);
    }
    var Rn = bo;
    async function je(e, t) {
        ({ ast: e } = await qt(e, t));
        let r = new Map, n = new Ir(e), o = qr(t), u = new Map;
        await In(n, s, t, je, u);
        let i = await Yn(n, t, s, void 0, u);
        return Hr(t), i;
        function s(a, c) {
            return a === void 0 || a === n ? D(c) : Array.isArray(a) ? n.call(()=>D(c), ...a) : n.call(()=>D(c), a);
        }
        function D(a) {
            o(n);
            let c = n.node;
            if (c == null) return "";
            let d = c && typeof c == "object" && a === void 0;
            if (d && r.has(c)) return r.get(c);
            let f = Yn(n, t, s, a, u);
            return d && r.set(c, f), f;
        }
    }
    function Yn(e, t, r, n, o) {
        var D;
        let { node: u } = e, { printer: i } = t, s;
        return (D = i.hasPrettierIgnore) != null && D.call(i, e) ? s = Rn(e, t) : o.has(u) ? s = o.get(u) : s = i.print(e, t, r, n), u === t.cursorNode && (s = Ze(s, (a)=>[
                be,
                a,
                be
            ])), i.printComment && (!i.willPrintOwnComments || !i.willPrintOwnComments(e, t)) && (s = Kr(e, s, t)), s;
    }
    async function qt(e, t) {
        let r = e.comments ?? [];
        t[Symbol.for("comments")] = r, t[Symbol.for("tokens")] = e.tokens ?? [], t[Symbol.for("printedComments")] = new Set, Ur(e, t);
        let { printer: { preprocess: n } } = t;
        return e = n ? await n(e, t) : e, {
            ast: e,
            comments: r
        };
    }
    function xo(e, t) {
        let { cursorOffset: r, locStart: n, locEnd: o } = t, u = H(t.printer.getVisitorKeys), i = (D)=>n(D) <= r && o(D) >= r, s = e;
        for (let D of jr(e, {
            getVisitorKeys: u,
            filter: i
        }))s = D;
        return s;
    }
    var jn = xo;
    function wo(e, t) {
        let { printer: { massageAstNode: r, getVisitorKeys: n } } = t;
        if (!r) return e;
        let o = H(n), u = r.ignoredProperties ?? new Set;
        return i(e);
        function i(s, D) {
            if (!(s !== null && typeof s == "object")) return s;
            if (Array.isArray(s)) return s.map((f)=>i(f, D)).filter(Boolean);
            let a = {}, c = new Set(o(s));
            for(let f in s)!Object.prototype.hasOwnProperty.call(s, f) || u.has(f) || (c.has(f) ? a[f] = i(s[f], s) : a[f] = s[f]);
            let d = r(s, a, D);
            if (d !== null) return d ?? a;
        }
    }
    var Vn = wo;
    var Oo = ({ parser: e })=>e === "json" || e === "json5" || e === "jsonc" || e === "json-stringify";
    function No(e, t) {
        let r = [
            e.node,
            ...e.parentNodes
        ], n = new Set([
            t.node,
            ...t.parentNodes
        ]);
        return r.find((o)=>Wn.has(o.type) && n.has(o));
    }
    function $n(e) {
        let t = e.length - 1;
        for(;;){
            let r = e[t];
            if ((r == null ? void 0 : r.type) === "Program" || (r == null ? void 0 : r.type) === "File") t--;
            else break;
        }
        return e.slice(0, t + 1);
    }
    function So(e, t, { locStart: r, locEnd: n }) {
        let o = e.node, u = t.node;
        if (o === u) return {
            startNode: o,
            endNode: u
        };
        let i = r(e.node);
        for (let D of $n(t.parentNodes))if (r(D) >= i) u = D;
        else break;
        let s = n(t.node);
        for (let D of $n(e.parentNodes)){
            if (n(D) <= s) o = D;
            else break;
            if (o === u) break;
        }
        return {
            startNode: o,
            endNode: u
        };
    }
    function Jt(e, t, r, n, o = [], u) {
        let { locStart: i, locEnd: s } = r, D = i(e), a = s(e);
        if (!(t > a || t < D || u === "rangeEnd" && t === D || u === "rangeStart" && t === a)) {
            for (let c of nt(e, r)){
                let d = Jt(c, t, r, n, [
                    e,
                    ...o
                ], u);
                if (d) return d;
            }
            if (!n || n(e, o[0])) return {
                node: e,
                parentNodes: o
            };
        }
    }
    function To(e, t) {
        return t !== "DeclareExportDeclaration" && e !== "TypeParameterDeclaration" && (e === "Directive" || e === "TypeAlias" || e === "TSExportAssignment" || e.startsWith("Declare") || e.startsWith("TSDeclare") || e.endsWith("Statement") || e.endsWith("Declaration"));
    }
    var Wn = new Set([
        "JsonRoot",
        "ObjectExpression",
        "ArrayExpression",
        "StringLiteral",
        "NumericLiteral",
        "BooleanLiteral",
        "NullLiteral",
        "UnaryExpression",
        "TemplateLiteral"
    ]), vo = new Set([
        "OperationDefinition",
        "FragmentDefinition",
        "VariableDefinition",
        "TypeExtensionDefinition",
        "ObjectTypeDefinition",
        "FieldDefinition",
        "DirectiveDefinition",
        "EnumTypeDefinition",
        "EnumValueDefinition",
        "InputValueDefinition",
        "InputObjectTypeDefinition",
        "SchemaDefinition",
        "OperationTypeDefinition",
        "InterfaceTypeDefinition",
        "UnionTypeDefinition",
        "ScalarTypeDefinition"
    ]);
    function Mn(e, t, r) {
        if (!t) return !1;
        switch(e.parser){
            case "flow":
            case "babel":
            case "babel-flow":
            case "babel-ts":
            case "typescript":
            case "acorn":
            case "espree":
            case "meriyah":
            case "__babel_estree":
                return To(t.type, r == null ? void 0 : r.type);
            case "json":
            case "json5":
            case "jsonc":
            case "json-stringify":
                return Wn.has(t.type);
            case "graphql":
                return vo.has(t.kind);
            case "vue":
                return t.tag !== "root";
        }
        return !1;
    }
    function Un(e, t, r) {
        let { rangeStart: n, rangeEnd: o, locStart: u, locEnd: i } = t;
        ve.ok(o > n);
        let s = e.slice(n, o).search(/\S/), D = s === -1;
        if (!D) for(n += s; o > n && !/\S/.test(e[o - 1]); --o);
        let a = Jt(r, n, t, (p, l)=>Mn(t, p, l), [], "rangeStart"), c = D ? a : Jt(r, o, t, (p)=>Mn(t, p), [], "rangeEnd");
        if (!a || !c) return {
            rangeStart: 0,
            rangeEnd: 0
        };
        let d, f;
        if (Oo(t)) {
            let p = No(a, c);
            d = p, f = p;
        } else ({ startNode: d, endNode: f } = So(a, c, t));
        return {
            rangeStart: Math.min(u(d), u(f)),
            rangeEnd: Math.max(i(d), i(f))
        };
    }
    var qn = "\uFEFF", zn = Symbol("cursor");
    async function Jn(e, t, r = 0) {
        if (!e || e.trim().length === 0) return {
            formatted: "",
            cursorOffset: -1,
            comments: []
        };
        let { ast: n, text: o } = await De(e, t);
        t.cursorOffset >= 0 && (t.cursorNode = jn(n, t));
        let u = await je(n, t, r);
        r > 0 && (u = qe([
            G,
            u
        ], r, t.tabWidth));
        let i = fe(u, t);
        if (r > 0) {
            let D = i.formatted.trim();
            i.cursorNodeStart !== void 0 && (i.cursorNodeStart -= i.formatted.indexOf(D)), i.formatted = D + Ae(t.endOfLine);
        }
        let s = t[Symbol.for("comments")];
        if (t.cursorOffset >= 0) {
            let D, a, c, d, f;
            if (t.cursorNode && i.cursorNodeText ? (D = t.locStart(t.cursorNode), a = o.slice(D, t.locEnd(t.cursorNode)), c = t.cursorOffset - D, d = i.cursorNodeStart, f = i.cursorNodeText) : (D = 0, a = o, c = t.cursorOffset, d = 0, f = i.formatted), a === f) return {
                formatted: i.formatted,
                cursorOffset: d + c,
                comments: s
            };
            let p = a.split("");
            p.splice(c, 0, zn);
            let l = f.split(""), F = (0, Hn.diffArrays)(p, l), m = d;
            for (let E of F)if (E.removed) {
                if (E.value.includes(zn)) break;
            } else m += E.count;
            return {
                formatted: i.formatted,
                cursorOffset: m,
                comments: s
            };
        }
        return {
            formatted: i.formatted,
            cursorOffset: -1,
            comments: s
        };
    }
    async function Po(e, t) {
        let { ast: r, text: n } = await De(e, t), { rangeStart: o, rangeEnd: u } = Un(n, t, r), i = n.slice(o, u), s = Math.min(o, n.lastIndexOf(`
`, o) + 1), D = n.slice(s, o).match(/^\s*/)[0], a = Fe(D, t.tabWidth), c = await Jn(i, {
            ...t,
            rangeStart: 0,
            rangeEnd: Number.POSITIVE_INFINITY,
            cursorOffset: t.cursorOffset > o && t.cursorOffset <= u ? t.cursorOffset - o : -1,
            endOfLine: "lf"
        }, a), d = c.formatted.trimEnd(), { cursorOffset: f } = t;
        f > u ? f += d.length - i.length : c.cursorOffset >= 0 && (f = c.cursorOffset + o);
        let p = n.slice(0, o) + d + n.slice(u);
        if (t.endOfLine !== "lf") {
            let l = Ae(t.endOfLine);
            f >= 0 && l === `\r
` && (f += yt(p.slice(0, f), `
`)), p = ee(!1, p, `
`, l);
        }
        return {
            formatted: p,
            cursorOffset: f,
            comments: c.comments
        };
    }
    function Xt(e, t, r) {
        return typeof t != "number" || Number.isNaN(t) || t < 0 || t > e.length ? r : t;
    }
    function Gn(e, t) {
        let { cursorOffset: r, rangeStart: n, rangeEnd: o } = t;
        return r = Xt(e, r, -1), n = Xt(e, n, 0), o = Xt(e, o, e.length), {
            ...t,
            cursorOffset: r,
            rangeStart: n,
            rangeEnd: o
        };
    }
    function Xn(e, t) {
        let { cursorOffset: r, rangeStart: n, rangeEnd: o, endOfLine: u } = Gn(e, t), i = e.charAt(0) === qn;
        if (i && (e = e.slice(1), r--, n--, o--), u === "auto" && (u = Dr(e)), e.includes("\r")) {
            let s = (D)=>yt(e.slice(0, Math.max(D, 0)), `\r
`);
            r -= s(r), n -= s(n), o -= s(o), e = ar(e);
        }
        return {
            hasBOM: i,
            text: e,
            options: Gn(e, {
                ...t,
                cursorOffset: r,
                rangeStart: n,
                rangeEnd: o,
                endOfLine: u
            })
        };
    }
    async function Kn(e, t) {
        let r = await mt(t);
        return !r.hasPragma || r.hasPragma(e);
    }
    async function Zt(e, t) {
        let { hasBOM: r, text: n, options: o } = Xn(e, await ue(t));
        if (o.rangeStart >= o.rangeEnd && n !== "" || o.requirePragma && !await Kn(n, o)) return {
            formatted: e,
            cursorOffset: t.cursorOffset,
            comments: []
        };
        let u;
        return o.rangeStart > 0 || o.rangeEnd < n.length ? u = await Po(n, o) : (!o.requirePragma && o.insertPragma && o.printer.insertPragma && !await Kn(n, o) && (n = o.printer.insertPragma(n)), u = await Jn(n, o)), r && (u.formatted = qn + u.formatted, u.cursorOffset >= 0 && u.cursorOffset++), u;
    }
    async function Zn(e, t, r) {
        let { text: n, options: o } = Xn(e, await ue(t)), u = await De(n, o);
        return r && (r.preprocessForPrint && (u.ast = await qt(u.ast, o)), r.massage && (u.ast = Vn(u.ast, o))), u;
    }
    async function Qn(e, t) {
        t = await ue(t);
        let r = await je(e, t);
        return fe(r, t);
    }
    async function eu(e, t) {
        let r = Ar(e), { formatted: n } = await Zt(r, {
            ...t,
            parser: "__js_expression"
        });
        return n;
    }
    async function tu(e, t) {
        t = await ue(t);
        let { ast: r } = await De(e, t);
        return je(r, t);
    }
    async function ru(e, t) {
        return fe(e, await ue(t));
    }
    var Qt = {};
    We(Qt, {
        builders: ()=>Io,
        printer: ()=>Ro,
        utils: ()=>Yo
    });
    var Io = {
        join: xe,
        line: Ke,
        softline: gr,
        hardline: G,
        literalline: He,
        group: Bt,
        conditionalGroup: dr,
        fill: Ge,
        lineSuffix: _e,
        lineSuffixBoundary: Cr,
        cursor: be,
        breakParent: le,
        ifBreak: mr,
        trim: hr,
        indent: ie,
        indentIfBreak: Er,
        align: oe,
        addAlignmentToDoc: qe,
        markAsRoot: Fr,
        dedentToRoot: fr,
        dedent: pr,
        hardlineWithoutBreakParent: ke,
        literallineWithoutBreakParent: _t,
        label: yr,
        concat: (e)=>e
    }, Ro = {
        printDocToString: fe
    }, Yo = {
        willBreak: Nr,
        traverseDoc: Be,
        findInDoc: Je,
        mapDoc: Ne,
        removeLines: Tr,
        stripTrailingHardline: Xe,
        replaceEndOfLine: vr,
        canBreak: Pr
    };
    var nu = "3.2.5";
    var tr = {};
    We(tr, {
        addDanglingComment: ()=>X,
        addLeadingComment: ()=>te,
        addTrailingComment: ()=>re,
        getAlignmentSize: ()=>Fe,
        getIndentSize: ()=>uu,
        getMaxContinuousCount: ()=>ou,
        getNextNonSpaceNonCommentCharacter: ()=>iu,
        getNextNonSpaceNonCommentCharacterIndex: ()=>Jo,
        getStringWidth: ()=>we,
        hasNewline: ()=>V,
        hasNewlineInRange: ()=>su,
        hasSpaces: ()=>Du,
        isNextLineEmpty: ()=>ei,
        isNextLineEmptyAfterIndex: ()=>Ct,
        isPreviousLineEmpty: ()=>Zo,
        makeString: ()=>au,
        skip: ()=>de,
        skipEverythingButNewLine: ()=>rt,
        skipInlineComment: ()=>Ee,
        skipNewline: ()=>Y,
        skipSpaces: ()=>N,
        skipToLineEnd: ()=>tt,
        skipTrailingComment: ()=>Ce,
        skipWhitespace: ()=>Vr
    });
    function jo(e, t) {
        if (t === !1) return !1;
        if (e.charAt(t) === "/" && e.charAt(t + 1) === "*") {
            for(let r = t + 2; r < e.length; ++r)if (e.charAt(r) === "*" && e.charAt(r + 1) === "/") return r + 2;
        }
        return t;
    }
    var Ee = jo;
    function Vo(e, t) {
        return t === !1 ? !1 : e.charAt(t) === "/" && e.charAt(t + 1) === "/" ? rt(e, t) : t;
    }
    var Ce = Vo;
    function $o(e, t) {
        let r = null, n = t;
        for(; n !== r;)r = n, n = N(e, n), n = Ee(e, n), n = Ce(e, n), n = Y(e, n);
        return n;
    }
    var Ve = $o;
    function Mo(e, t) {
        let r = null, n = t;
        for(; n !== r;)r = n, n = tt(e, n), n = Ee(e, n), n = N(e, n);
        return n = Ce(e, n), n = Y(e, n), n !== !1 && V(e, n);
    }
    var Ct = Mo;
    function Wo(e, t) {
        let r = e.lastIndexOf(`
`);
        return r === -1 ? 0 : Fe(e.slice(r + 1).match(/^[\t ]*/)[0], t);
    }
    var uu = Wo;
    function er(e) {
        if (typeof e != "string") throw new TypeError("Expected a string");
        return e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
    }
    function Uo(e, t) {
        let r = e.match(new RegExp(`(${er(t)})+`, "g"));
        return r === null ? 0 : r.reduce((n, o)=>Math.max(n, o.length / t.length), 0);
    }
    var ou = Uo;
    function zo(e, t) {
        let r = Ve(e, t);
        return r === !1 ? "" : e.charAt(r);
    }
    var iu = zo;
    function Go(e, t, r) {
        for(let n = t; n < r; ++n)if (e.charAt(n) === `
`) return !0;
        return !1;
    }
    var su = Go;
    function Ko(e, t, r = {}) {
        return N(e, r.backwards ? t - 1 : t, r) !== t;
    }
    var Du = Ko;
    function Ho(e, t, r) {
        let n = t === '"' ? "'" : '"', u = ee(!1, e, /\\(.)|(["'])/gs, (i, s, D)=>s === n ? s : D === t ? "\\" + D : D || (r && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(s) ? s : "\\" + s));
        return t + u + t;
    }
    var au = Ho;
    function qo(e, t, r) {
        return Ve(e, r(t));
    }
    function Jo(e, t) {
        return arguments.length === 2 || typeof t == "number" ? Ve(e, t) : qo(...arguments);
    }
    function Xo(e, t, r) {
        return Pe(e, r(t));
    }
    function Zo(e, t) {
        return arguments.length === 2 || typeof t == "number" ? Pe(e, t) : Xo(...arguments);
    }
    function Qo(e, t, r) {
        return Ct(e, r(t));
    }
    function ei(e, t) {
        return arguments.length === 2 || typeof t == "number" ? Ct(e, t) : Qo(...arguments);
    }
    function ae(e, t = 1) {
        return async (...r)=>{
            let n = r[t] ?? {}, o = n.plugins ?? [];
            return r[t] = {
                ...n,
                plugins: Array.isArray(o) ? o : Object.values(o)
            }, e(...r);
        };
    }
    var cu = ae(Zt);
    async function lu(e, t) {
        let { formatted: r } = await cu(e, {
            ...t,
            cursorOffset: -1
        });
        return r;
    }
    async function ti(e, t) {
        return await lu(e, t) === e;
    }
    var ri = ae(ut, 0), ni = {
        parse: ae(Zn),
        formatAST: ae(Qn),
        formatDoc: ae(eu),
        printToDoc: ae(tu),
        printDocToString: ae(ru)
    };
    return ur(ui);
});

},{}],"3KUk3":[function(require,module,exports) {
(function(f) {
    function e() {
        var i = f();
        return i.default || i;
    }
    var t;
    module.exports = e();
})(function() {
    "use strict";
    var Ws = Object.create;
    var we = Object.defineProperty;
    var Js = Object.getOwnPropertyDescriptor;
    var Xs = Object.getOwnPropertyNames;
    var Gs = Object.getPrototypeOf, Ys = Object.prototype.hasOwnProperty;
    var Lt = (a, t)=>()=>(t || a((t = {
                exports: {}
            }).exports, t), t.exports), Qs = (a, t)=>{
        for(var e in t)we(a, e, {
            get: t[e],
            enumerable: !0
        });
    }, Dt = (a, t, e, s)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let i of Xs(t))!Ys.call(a, i) && i !== e && we(a, i, {
            get: ()=>t[i],
            enumerable: !(s = Js(t, i)) || s.enumerable
        });
        return a;
    };
    var Ve = (a, t, e)=>(e = a != null ? Ws(Gs(a)) : {}, Dt(t || !a || !a.__esModule ? we(e, "default", {
            value: a,
            enumerable: !0
        }) : e, a)), Zs = (a)=>Dt(we({}, "__esModule", {
            value: !0
        }), a);
    var wt = Lt((Pe)=>{
        "use strict";
        Object.defineProperty(Pe, "__esModule", {
            value: !0
        });
        function Xt(a, t) {
            if (a == null) return {};
            var e = {}, s = Object.keys(a), i, r;
            for(r = 0; r < s.length; r++)i = s[r], !(t.indexOf(i) >= 0) && (e[i] = a[i]);
            return e;
        }
        var F = class {
            constructor(t, e, s){
                this.line = void 0, this.column = void 0, this.index = void 0, this.line = t, this.column = e, this.index = s;
            }
        }, te = class {
            constructor(t, e){
                this.start = void 0, this.end = void 0, this.filename = void 0, this.identifierName = void 0, this.start = t, this.end = e;
            }
        };
        function L(a, t) {
            let { line: e, column: s, index: i } = a;
            return new F(e, s + t, i + t);
        }
        var Mt = "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED", ei = {
            ImportMetaOutsideModule: {
                message: `import.meta may appear only with 'sourceType: "module"'`,
                code: Mt
            },
            ImportOutsideModule: {
                message: `'import' and 'export' may appear only with 'sourceType: "module"'`,
                code: Mt
            }
        }, Ot = {
            ArrayPattern: "array destructuring pattern",
            AssignmentExpression: "assignment expression",
            AssignmentPattern: "assignment expression",
            ArrowFunctionExpression: "arrow function expression",
            ConditionalExpression: "conditional expression",
            CatchClause: "catch clause",
            ForOfStatement: "for-of statement",
            ForInStatement: "for-in statement",
            ForStatement: "for-loop",
            FormalParameters: "function parameter list",
            Identifier: "identifier",
            ImportSpecifier: "import specifier",
            ImportDefaultSpecifier: "import default specifier",
            ImportNamespaceSpecifier: "import namespace specifier",
            ObjectPattern: "object destructuring pattern",
            ParenthesizedExpression: "parenthesized expression",
            RestElement: "rest element",
            UpdateExpression: {
                true: "prefix operation",
                false: "postfix operation"
            },
            VariableDeclarator: "variable declaration",
            YieldExpression: "yield expression"
        }, Ie = ({ type: a, prefix: t })=>a === "UpdateExpression" ? Ot.UpdateExpression[String(t)] : Ot[a], ti = {
            AccessorIsGenerator: ({ kind: a })=>`A ${a}ter cannot be a generator.`,
            ArgumentsInClass: "'arguments' is only allowed in functions and class methods.",
            AsyncFunctionInSingleStatementContext: "Async functions can only be declared at the top level or inside a block.",
            AwaitBindingIdentifier: "Can not use 'await' as identifier inside an async function.",
            AwaitBindingIdentifierInStaticBlock: "Can not use 'await' as identifier inside a static block.",
            AwaitExpressionFormalParameter: "'await' is not allowed in async function parameters.",
            AwaitUsingNotInAsyncContext: "'await using' is only allowed within async functions and at the top levels of modules.",
            AwaitNotInAsyncContext: "'await' is only allowed within async functions and at the top levels of modules.",
            AwaitNotInAsyncFunction: "'await' is only allowed within async functions.",
            BadGetterArity: "A 'get' accessor must not have any formal parameters.",
            BadSetterArity: "A 'set' accessor must have exactly one formal parameter.",
            BadSetterRestParameter: "A 'set' accessor function argument must not be a rest parameter.",
            ConstructorClassField: "Classes may not have a field named 'constructor'.",
            ConstructorClassPrivateField: "Classes may not have a private field named '#constructor'.",
            ConstructorIsAccessor: "Class constructor may not be an accessor.",
            ConstructorIsAsync: "Constructor can't be an async function.",
            ConstructorIsGenerator: "Constructor can't be a generator.",
            DeclarationMissingInitializer: ({ kind: a })=>`Missing initializer in ${a} declaration.`,
            DecoratorArgumentsOutsideParentheses: "Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.",
            DecoratorBeforeExport: "Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.",
            DecoratorsBeforeAfterExport: "Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.",
            DecoratorConstructor: "Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?",
            DecoratorExportClass: "Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.",
            DecoratorSemicolon: "Decorators must not be followed by a semicolon.",
            DecoratorStaticBlock: "Decorators can't be used with a static block.",
            DeferImportRequiresNamespace: 'Only `import defer * as x from "./module"` is valid.',
            DeletePrivateField: "Deleting a private field is not allowed.",
            DestructureNamedImport: "ES2015 named imports do not destructure. Use another statement for destructuring after the import.",
            DuplicateConstructor: "Duplicate constructor in the same class.",
            DuplicateDefaultExport: "Only one default export allowed per module.",
            DuplicateExport: ({ exportName: a })=>`\`${a}\` has already been exported. Exported identifiers must be unique.`,
            DuplicateProto: "Redefinition of __proto__ property.",
            DuplicateRegExpFlags: "Duplicate regular expression flag.",
            DynamicImportPhaseRequiresImportExpressions: ({ phase: a })=>`'import.${a}(...)' can only be parsed when using the 'createImportExpressions' option.`,
            ElementAfterRest: "Rest element must be last element.",
            EscapedCharNotAnIdentifier: "Invalid Unicode escape.",
            ExportBindingIsString: ({ localName: a, exportName: t })=>`A string literal cannot be used as an exported binding without \`from\`.
- Did you mean \`export { '${a}' as '${t}' } from 'some-module'\`?`,
            ExportDefaultFromAsIdentifier: "'from' is not allowed as an identifier after 'export default'.",
            ForInOfLoopInitializer: ({ type: a })=>`'${a === "ForInStatement" ? "for-in" : "for-of"}' loop variable declaration may not have an initializer.`,
            ForInUsing: "For-in loop may not start with 'using' declaration.",
            ForOfAsync: "The left-hand side of a for-of loop may not be 'async'.",
            ForOfLet: "The left-hand side of a for-of loop may not start with 'let'.",
            GeneratorInSingleStatementContext: "Generators can only be declared at the top level or inside a block.",
            IllegalBreakContinue: ({ type: a })=>`Unsyntactic ${a === "BreakStatement" ? "break" : "continue"}.`,
            IllegalLanguageModeDirective: "Illegal 'use strict' directive in function with non-simple parameter list.",
            IllegalReturn: "'return' outside of function.",
            ImportAttributesUseAssert: "The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedAssertSyntax: true` option in the import attributes plugin to suppress this error.",
            ImportBindingIsString: ({ importName: a })=>`A string literal cannot be used as an imported binding.
- Did you mean \`import { "${a}" as foo }\`?`,
            ImportCallArgumentTrailingComma: "Trailing comma is disallowed inside import(...) arguments.",
            ImportCallArity: ({ maxArgumentCount: a })=>`\`import()\` requires exactly ${a === 1 ? "one argument" : "one or two arguments"}.`,
            ImportCallNotNewExpression: "Cannot use new with import(...).",
            ImportCallSpreadArgument: "`...` is not allowed in `import()`.",
            ImportJSONBindingNotDefault: "A JSON module can only be imported with `default`.",
            ImportReflectionHasAssertion: "`import module x` cannot have assertions.",
            ImportReflectionNotBinding: 'Only `import module x from "./module"` is valid.',
            IncompatibleRegExpUVFlags: "The 'u' and 'v' regular expression flags cannot be enabled at the same time.",
            InvalidBigIntLiteral: "Invalid BigIntLiteral.",
            InvalidCodePoint: "Code point out of bounds.",
            InvalidCoverInitializedName: "Invalid shorthand property initializer.",
            InvalidDecimal: "Invalid decimal.",
            InvalidDigit: ({ radix: a })=>`Expected number in radix ${a}.`,
            InvalidEscapeSequence: "Bad character escape sequence.",
            InvalidEscapeSequenceTemplate: "Invalid escape sequence in template.",
            InvalidEscapedReservedWord: ({ reservedWord: a })=>`Escape sequence in keyword ${a}.`,
            InvalidIdentifier: ({ identifierName: a })=>`Invalid identifier ${a}.`,
            InvalidLhs: ({ ancestor: a })=>`Invalid left-hand side in ${Ie(a)}.`,
            InvalidLhsBinding: ({ ancestor: a })=>`Binding invalid left-hand side in ${Ie(a)}.`,
            InvalidLhsOptionalChaining: ({ ancestor: a })=>`Invalid optional chaining in the left-hand side of ${Ie(a)}.`,
            InvalidNumber: "Invalid number.",
            InvalidOrMissingExponent: "Floating-point numbers require a valid exponent after the 'e'.",
            InvalidOrUnexpectedToken: ({ unexpected: a })=>`Unexpected character '${a}'.`,
            InvalidParenthesizedAssignment: "Invalid parenthesized assignment pattern.",
            InvalidPrivateFieldResolution: ({ identifierName: a })=>`Private name #${a} is not defined.`,
            InvalidPropertyBindingPattern: "Binding member expression.",
            InvalidRecordProperty: "Only properties and spread elements are allowed in record definitions.",
            InvalidRestAssignmentPattern: "Invalid rest operator's argument.",
            LabelRedeclaration: ({ labelName: a })=>`Label '${a}' is already declared.`,
            LetInLexicalBinding: "'let' is disallowed as a lexically bound name.",
            LineTerminatorBeforeArrow: "No line break is allowed before '=>'.",
            MalformedRegExpFlags: "Invalid regular expression flag.",
            MissingClassName: "A class name is required.",
            MissingEqInAssignment: "Only '=' operator can be used for specifying default value.",
            MissingSemicolon: "Missing semicolon.",
            MissingPlugin: ({ missingPlugin: a })=>`This experimental syntax requires enabling the parser plugin: ${a.map((t)=>JSON.stringify(t)).join(", ")}.`,
            MissingOneOfPlugins: ({ missingPlugin: a })=>`This experimental syntax requires enabling one of the following parser plugin(s): ${a.map((t)=>JSON.stringify(t)).join(", ")}.`,
            MissingUnicodeEscape: "Expecting Unicode escape sequence \\uXXXX.",
            MixingCoalesceWithLogical: "Nullish coalescing operator(??) requires parens when mixing with logical operators.",
            ModuleAttributeDifferentFromType: "The only accepted module attribute is `type`.",
            ModuleAttributeInvalidValue: "Only string literals are allowed as module attribute values.",
            ModuleAttributesWithDuplicateKeys: ({ key: a })=>`Duplicate key "${a}" is not allowed in module attributes.`,
            ModuleExportNameHasLoneSurrogate: ({ surrogateCharCode: a })=>`An export name cannot include a lone surrogate, found '\\u${a.toString(16)}'.`,
            ModuleExportUndefined: ({ localName: a })=>`Export '${a}' is not defined.`,
            MultipleDefaultsInSwitch: "Multiple default clauses.",
            NewlineAfterThrow: "Illegal newline after throw.",
            NoCatchOrFinally: "Missing catch or finally clause.",
            NumberIdentifier: "Identifier directly after number.",
            NumericSeparatorInEscapeSequence: "Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.",
            ObsoleteAwaitStar: "'await*' has been removed from the async functions proposal. Use Promise.all() instead.",
            OptionalChainingNoNew: "Constructors in/after an Optional Chain are not allowed.",
            OptionalChainingNoTemplate: "Tagged Template Literals are not allowed in optionalChain.",
            OverrideOnConstructor: "'override' modifier cannot appear on a constructor declaration.",
            ParamDupe: "Argument name clash.",
            PatternHasAccessor: "Object pattern can't contain getter or setter.",
            PatternHasMethod: "Object pattern can't contain methods.",
            PrivateInExpectedIn: ({ identifierName: a })=>`Private names are only allowed in property accesses (\`obj.#${a}\`) or in \`in\` expressions (\`#${a} in obj\`).`,
            PrivateNameRedeclaration: ({ identifierName: a })=>`Duplicate private name #${a}.`,
            RecordExpressionBarIncorrectEndSyntaxType: "Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
            RecordExpressionBarIncorrectStartSyntaxType: "Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
            RecordExpressionHashIncorrectStartSyntaxType: "Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",
            RecordNoProto: "'__proto__' is not allowed in Record expressions.",
            RestTrailingComma: "Unexpected trailing comma after rest element.",
            SloppyFunction: "In non-strict mode code, functions can only be declared at top level or inside a block.",
            SloppyFunctionAnnexB: "In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.",
            SourcePhaseImportRequiresDefault: 'Only `import source x from "./module"` is valid.',
            StaticPrototype: "Classes may not have static property named prototype.",
            SuperNotAllowed: "`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?",
            SuperPrivateField: "Private fields can't be accessed on super.",
            TrailingDecorator: "Decorators must be attached to a class element.",
            TupleExpressionBarIncorrectEndSyntaxType: "Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
            TupleExpressionBarIncorrectStartSyntaxType: "Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
            TupleExpressionHashIncorrectStartSyntaxType: "Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",
            UnexpectedArgumentPlaceholder: "Unexpected argument placeholder.",
            UnexpectedAwaitAfterPipelineBody: 'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal.',
            UnexpectedDigitAfterHash: "Unexpected digit after hash token.",
            UnexpectedImportExport: "'import' and 'export' may only appear at the top level.",
            UnexpectedKeyword: ({ keyword: a })=>`Unexpected keyword '${a}'.`,
            UnexpectedLeadingDecorator: "Leading decorators must be attached to a class declaration.",
            UnexpectedLexicalDeclaration: "Lexical declaration cannot appear in a single-statement context.",
            UnexpectedNewTarget: "`new.target` can only be used in functions or class properties.",
            UnexpectedNumericSeparator: "A numeric separator is only allowed between two digits.",
            UnexpectedPrivateField: "Unexpected private name.",
            UnexpectedReservedWord: ({ reservedWord: a })=>`Unexpected reserved word '${a}'.`,
            UnexpectedSuper: "'super' is only allowed in object methods and classes.",
            UnexpectedToken: ({ expected: a, unexpected: t })=>`Unexpected token${t ? ` '${t}'.` : ""}${a ? `, expected "${a}"` : ""}`,
            UnexpectedTokenUnaryExponentiation: "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.",
            UnexpectedUsingDeclaration: "Using declaration cannot appear in the top level when source type is `script`.",
            UnsupportedBind: "Binding should be performed on object property.",
            UnsupportedDecoratorExport: "A decorated export must export a class declaration.",
            UnsupportedDefaultExport: "Only expressions, functions or classes are allowed as the `default` export.",
            UnsupportedImport: "`import` can only be used in `import()` or `import.meta`.",
            UnsupportedMetaProperty: ({ target: a, onlyValidPropertyName: t })=>`The only valid meta property for ${a} is ${a}.${t}.`,
            UnsupportedParameterDecorator: "Decorators cannot be used to decorate parameters.",
            UnsupportedPropertyDecorator: "Decorators cannot be used to decorate object literal properties.",
            UnsupportedSuper: "'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).",
            UnterminatedComment: "Unterminated comment.",
            UnterminatedRegExp: "Unterminated regular expression.",
            UnterminatedString: "Unterminated string constant.",
            UnterminatedTemplate: "Unterminated template.",
            UsingDeclarationHasBindingPattern: "Using declaration cannot have destructuring patterns.",
            VarRedeclaration: ({ identifierName: a })=>`Identifier '${a}' has already been declared.`,
            YieldBindingIdentifier: "Can not use 'yield' as identifier inside a generator.",
            YieldInParameter: "Yield expression is not allowed in formal parameters.",
            ZeroDigitNumericSeparator: "Numeric separator can not be used after leading 0."
        }, si = {
            StrictDelete: "Deleting local variable in strict mode.",
            StrictEvalArguments: ({ referenceName: a })=>`Assigning to '${a}' in strict mode.`,
            StrictEvalArgumentsBinding: ({ bindingName: a })=>`Binding '${a}' in strict mode.`,
            StrictFunction: "In strict mode code, functions can only be declared at top level or inside a block.",
            StrictNumericEscape: "The only valid numeric escape in strict mode is '\\0'.",
            StrictOctalLiteral: "Legacy octal literals are not allowed in strict mode.",
            StrictWith: "'with' in strict mode."
        }, ii = new Set([
            "ArrowFunctionExpression",
            "AssignmentExpression",
            "ConditionalExpression",
            "YieldExpression"
        ]), ri = {
            PipeBodyIsTighter: "Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.",
            PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a "proposal": "hack" or "smart" option.',
            PipeTopicUnbound: "Topic reference is unbound; it must be inside a pipe body.",
            PipeTopicUnconfiguredToken: ({ token: a })=>`Invalid topic token ${a}. In order to use ${a} as a topic reference, the pipelineOperator plugin must be configured with { "proposal": "hack", "topicToken": "${a}" }.`,
            PipeTopicUnused: "Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.",
            PipeUnparenthesizedBody: ({ type: a })=>`Hack-style pipe body cannot be an unparenthesized ${Ie({
                    type: a
                })}; please wrap it in parentheses.`,
            PipelineBodyNoArrow: 'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized.',
            PipelineBodySequenceExpression: "Pipeline body may not be a comma-separated sequence expression.",
            PipelineHeadSequenceExpression: "Pipeline head should not be a comma-separated sequence expression.",
            PipelineTopicUnused: "Pipeline is in topic style but does not use topic reference.",
            PrimaryTopicNotAllowed: "Topic reference was used in a lexical context without topic binding.",
            PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a "proposal": "hack" or "smart" option.'
        }, ai = [
            "toMessage"
        ], ni = [
            "message"
        ];
        function Ft(a, t, e) {
            Object.defineProperty(a, t, {
                enumerable: !1,
                configurable: !0,
                value: e
            });
        }
        function oi(a) {
            let { toMessage: t } = a, e = Xt(a, ai);
            return function s(i, r) {
                let n = new SyntaxError;
                return Object.assign(n, e, {
                    loc: i,
                    pos: i.index
                }), "missingPlugin" in r && Object.assign(n, {
                    missingPlugin: r.missingPlugin
                }), Ft(n, "clone", function(h = {}) {
                    var l;
                    let { line: c, column: u, index: f } = (l = h.loc) != null ? l : i;
                    return s(new F(c, u, f), Object.assign({}, r, h.details));
                }), Ft(n, "details", r), Object.defineProperty(n, "message", {
                    configurable: !0,
                    get () {
                        let o = `${t(r)} (${i.line}:${i.column})`;
                        return this.message = o, o;
                    },
                    set (o) {
                        Object.defineProperty(this, "message", {
                            value: o,
                            writable: !0
                        });
                    }
                }), n;
            };
        }
        function $(a, t) {
            if (Array.isArray(a)) return (s)=>$(s, a[0]);
            let e = {};
            for (let s of Object.keys(a)){
                let i = a[s], r = typeof i == "string" ? {
                    message: ()=>i
                } : typeof i == "function" ? {
                    message: i
                } : i, { message: n } = r, o = Xt(r, ni), h = typeof n == "string" ? ()=>n : n;
                e[s] = oi(Object.assign({
                    code: "BABEL_PARSER_SYNTAX_ERROR",
                    reasonCode: s,
                    toMessage: h
                }, t ? {
                    syntaxPlugin: t
                } : {}, o));
            }
            return e;
        }
        var p = Object.assign({}, $(ei), $(ti), $(si), $`pipelineOperator`(ri)), { defineProperty: hi } = Object, Bt = (a, t)=>hi(a, t, {
                enumerable: !1,
                value: a[t]
            });
        function he(a) {
            return a.loc.start && Bt(a.loc.start, "index"), a.loc.end && Bt(a.loc.end, "index"), a;
        }
        var li = (a)=>class extends a {
                parse() {
                    let e = he(super.parse());
                    return this.options.tokens && (e.tokens = e.tokens.map(he)), e;
                }
                parseRegExpLiteral({ pattern: e, flags: s }) {
                    let i = null;
                    try {
                        i = new RegExp(e, s);
                    } catch  {}
                    let r = this.estreeParseLiteral(i);
                    return r.regex = {
                        pattern: e,
                        flags: s
                    }, r;
                }
                parseBigIntLiteral(e) {
                    let s;
                    try {
                        s = BigInt(e);
                    } catch  {
                        s = null;
                    }
                    let i = this.estreeParseLiteral(s);
                    return i.bigint = String(i.value || e), i;
                }
                parseDecimalLiteral(e) {
                    let i = this.estreeParseLiteral(null);
                    return i.decimal = String(i.value || e), i;
                }
                estreeParseLiteral(e) {
                    return this.parseLiteral(e, "Literal");
                }
                parseStringLiteral(e) {
                    return this.estreeParseLiteral(e);
                }
                parseNumericLiteral(e) {
                    return this.estreeParseLiteral(e);
                }
                parseNullLiteral() {
                    return this.estreeParseLiteral(null);
                }
                parseBooleanLiteral(e) {
                    return this.estreeParseLiteral(e);
                }
                directiveToStmt(e) {
                    let s = e.value;
                    delete e.value, s.type = "Literal", s.raw = s.extra.raw, s.value = s.extra.expressionValue;
                    let i = e;
                    return i.type = "ExpressionStatement", i.expression = s, i.directive = s.extra.rawValue, delete s.extra, i;
                }
                initFunction(e, s) {
                    super.initFunction(e, s), e.expression = !1;
                }
                checkDeclaration(e) {
                    e != null && this.isObjectProperty(e) ? this.checkDeclaration(e.value) : super.checkDeclaration(e);
                }
                getObjectOrClassMethodParams(e) {
                    return e.value.params;
                }
                isValidDirective(e) {
                    var s;
                    return e.type === "ExpressionStatement" && e.expression.type === "Literal" && typeof e.expression.value == "string" && !((s = e.expression.extra) != null && s.parenthesized);
                }
                parseBlockBody(e, s, i, r, n) {
                    super.parseBlockBody(e, s, i, r, n);
                    let o = e.directives.map((h)=>this.directiveToStmt(h));
                    e.body = o.concat(e.body), delete e.directives;
                }
                pushClassMethod(e, s, i, r, n, o) {
                    this.parseMethod(s, i, r, n, o, "ClassMethod", !0), s.typeParameters && (s.value.typeParameters = s.typeParameters, delete s.typeParameters), e.body.push(s);
                }
                parsePrivateName() {
                    let e = super.parsePrivateName();
                    return this.getPluginOption("estree", "classFeatures") ? this.convertPrivateNameToPrivateIdentifier(e) : e;
                }
                convertPrivateNameToPrivateIdentifier(e) {
                    let s = super.getPrivateNameSV(e);
                    return e, delete e.id, e.name = s, e.type = "PrivateIdentifier", e;
                }
                isPrivateName(e) {
                    return this.getPluginOption("estree", "classFeatures") ? e.type === "PrivateIdentifier" : super.isPrivateName(e);
                }
                getPrivateNameSV(e) {
                    return this.getPluginOption("estree", "classFeatures") ? e.name : super.getPrivateNameSV(e);
                }
                parseLiteral(e, s) {
                    let i = super.parseLiteral(e, s);
                    return i.raw = i.extra.raw, delete i.extra, i;
                }
                parseFunctionBody(e, s, i = !1) {
                    super.parseFunctionBody(e, s, i), e.expression = e.body.type !== "BlockStatement";
                }
                parseMethod(e, s, i, r, n, o, h = !1) {
                    let l = this.startNode();
                    return l.kind = e.kind, l = super.parseMethod(l, s, i, r, n, o, h), l.type = "FunctionExpression", delete l.kind, e.value = l, o === "ClassPrivateMethod" && (e.computed = !1), this.finishNode(e, "MethodDefinition");
                }
                parseClassProperty(...e) {
                    let s = super.parseClassProperty(...e);
                    return this.getPluginOption("estree", "classFeatures") && (s.type = "PropertyDefinition"), s;
                }
                parseClassPrivateProperty(...e) {
                    let s = super.parseClassPrivateProperty(...e);
                    return this.getPluginOption("estree", "classFeatures") && (s.type = "PropertyDefinition", s.computed = !1), s;
                }
                parseObjectMethod(e, s, i, r, n) {
                    let o = super.parseObjectMethod(e, s, i, r, n);
                    return o && (o.type = "Property", o.kind === "method" && (o.kind = "init"), o.shorthand = !1), o;
                }
                parseObjectProperty(e, s, i, r) {
                    let n = super.parseObjectProperty(e, s, i, r);
                    return n && (n.kind = "init", n.type = "Property"), n;
                }
                isValidLVal(e, s, i) {
                    return e === "Property" ? "value" : super.isValidLVal(e, s, i);
                }
                isAssignable(e, s) {
                    return e != null && this.isObjectProperty(e) ? this.isAssignable(e.value, s) : super.isAssignable(e, s);
                }
                toAssignable(e, s = !1) {
                    if (e != null && this.isObjectProperty(e)) {
                        let { key: i, value: r } = e;
                        this.isPrivateName(i) && this.classScope.usePrivateName(this.getPrivateNameSV(i), i.loc.start), this.toAssignable(r, s);
                    } else super.toAssignable(e, s);
                }
                toAssignableObjectExpressionProp(e, s, i) {
                    e.kind === "get" || e.kind === "set" ? this.raise(p.PatternHasAccessor, e.key) : e.method ? this.raise(p.PatternHasMethod, e.key) : super.toAssignableObjectExpressionProp(e, s, i);
                }
                finishCallExpression(e, s) {
                    let i = super.finishCallExpression(e, s);
                    if (i.callee.type === "Import") {
                        if (i.type = "ImportExpression", i.source = i.arguments[0], this.hasPlugin("importAttributes") || this.hasPlugin("importAssertions")) {
                            var r, n;
                            i.options = (r = i.arguments[1]) != null ? r : null, i.attributes = (n = i.arguments[1]) != null ? n : null;
                        }
                        delete i.arguments, delete i.callee;
                    }
                    return i;
                }
                toReferencedArguments(e) {
                    e.type !== "ImportExpression" && super.toReferencedArguments(e);
                }
                parseExport(e, s) {
                    let i = this.state.lastTokStartLoc, r = super.parseExport(e, s);
                    switch(r.type){
                        case "ExportAllDeclaration":
                            r.exported = null;
                            break;
                        case "ExportNamedDeclaration":
                            r.specifiers.length === 1 && r.specifiers[0].type === "ExportNamespaceSpecifier" && (r.type = "ExportAllDeclaration", r.exported = r.specifiers[0].exported, delete r.specifiers);
                        case "ExportDefaultDeclaration":
                            {
                                var n;
                                let { declaration: o } = r;
                                (o == null ? void 0 : o.type) === "ClassDeclaration" && ((n = o.decorators) == null ? void 0 : n.length) > 0 && o.start === r.start && this.resetStartLocation(r, i);
                            }
                            break;
                    }
                    return r;
                }
                parseSubscript(e, s, i, r) {
                    let n = super.parseSubscript(e, s, i, r);
                    if (r.optionalChainMember) {
                        if ((n.type === "OptionalMemberExpression" || n.type === "OptionalCallExpression") && (n.type = n.type.substring(8)), r.stop) {
                            let o = this.startNodeAtNode(n);
                            return o.expression = n, this.finishNode(o, "ChainExpression");
                        }
                    } else (n.type === "MemberExpression" || n.type === "CallExpression") && (n.optional = !1);
                    return n;
                }
                isOptionalMemberExpression(e) {
                    return e.type === "ChainExpression" ? e.expression.type === "MemberExpression" : super.isOptionalMemberExpression(e);
                }
                hasPropertyAsPrivateName(e) {
                    return e.type === "ChainExpression" && (e = e.expression), super.hasPropertyAsPrivateName(e);
                }
                isObjectProperty(e) {
                    return e.type === "Property" && e.kind === "init" && !e.method;
                }
                isObjectMethod(e) {
                    return e.method || e.kind === "get" || e.kind === "set";
                }
                finishNodeAt(e, s, i) {
                    return he(super.finishNodeAt(e, s, i));
                }
                resetStartLocation(e, s) {
                    super.resetStartLocation(e, s), he(e);
                }
                resetEndLocation(e, s = this.state.lastTokEndLoc) {
                    super.resetEndLocation(e, s), he(e);
                }
            }, X = class {
            constructor(t, e){
                this.token = void 0, this.preserveSpace = void 0, this.token = t, this.preserveSpace = !!e;
            }
        }, w = {
            brace: new X("{"),
            j_oTag: new X("<tag"),
            j_cTag: new X("</tag"),
            j_expr: new X("<tag>...</tag>", !0)
        };
        w.template = new X("`", !0);
        var b = !0, m = !0, qe = !0, le = !0, q = !0, ci = !0, Le = class {
            constructor(t, e = {}){
                this.label = void 0, this.keyword = void 0, this.beforeExpr = void 0, this.startsExpr = void 0, this.rightAssociative = void 0, this.isLoop = void 0, this.isAssign = void 0, this.prefix = void 0, this.postfix = void 0, this.binop = void 0, this.label = t, this.keyword = e.keyword, this.beforeExpr = !!e.beforeExpr, this.startsExpr = !!e.startsExpr, this.rightAssociative = !!e.rightAssociative, this.isLoop = !!e.isLoop, this.isAssign = !!e.isAssign, this.prefix = !!e.prefix, this.postfix = !!e.postfix, this.binop = e.binop != null ? e.binop : null, this.updateContext = null;
            }
        }, dt = new Map;
        function A(a, t = {}) {
            t.keyword = a;
            let e = P(a, t);
            return dt.set(a, e), e;
        }
        function v(a, t) {
            return P(a, {
                beforeExpr: b,
                binop: t
            });
        }
        var fe = -1, U = [], mt = [], yt = [], xt = [], Pt = [], gt = [];
        function P(a, t = {}) {
            var e, s, i, r;
            return ++fe, mt.push(a), yt.push((e = t.binop) != null ? e : -1), xt.push((s = t.beforeExpr) != null ? s : !1), Pt.push((i = t.startsExpr) != null ? i : !1), gt.push((r = t.prefix) != null ? r : !1), U.push(new Le(a, t)), fe;
        }
        function T(a, t = {}) {
            var e, s, i, r;
            return ++fe, dt.set(a, fe), mt.push(a), yt.push((e = t.binop) != null ? e : -1), xt.push((s = t.beforeExpr) != null ? s : !1), Pt.push((i = t.startsExpr) != null ? i : !1), gt.push((r = t.prefix) != null ? r : !1), U.push(new Le("name", t)), fe;
        }
        var pi = {
            bracketL: P("[", {
                beforeExpr: b,
                startsExpr: m
            }),
            bracketHashL: P("#[", {
                beforeExpr: b,
                startsExpr: m
            }),
            bracketBarL: P("[|", {
                beforeExpr: b,
                startsExpr: m
            }),
            bracketR: P("]"),
            bracketBarR: P("|]"),
            braceL: P("{", {
                beforeExpr: b,
                startsExpr: m
            }),
            braceBarL: P("{|", {
                beforeExpr: b,
                startsExpr: m
            }),
            braceHashL: P("#{", {
                beforeExpr: b,
                startsExpr: m
            }),
            braceR: P("}"),
            braceBarR: P("|}"),
            parenL: P("(", {
                beforeExpr: b,
                startsExpr: m
            }),
            parenR: P(")"),
            comma: P(",", {
                beforeExpr: b
            }),
            semi: P(";", {
                beforeExpr: b
            }),
            colon: P(":", {
                beforeExpr: b
            }),
            doubleColon: P("::", {
                beforeExpr: b
            }),
            dot: P("."),
            question: P("?", {
                beforeExpr: b
            }),
            questionDot: P("?."),
            arrow: P("=>", {
                beforeExpr: b
            }),
            template: P("template"),
            ellipsis: P("...", {
                beforeExpr: b
            }),
            backQuote: P("`", {
                startsExpr: m
            }),
            dollarBraceL: P("${", {
                beforeExpr: b,
                startsExpr: m
            }),
            templateTail: P("...`", {
                startsExpr: m
            }),
            templateNonTail: P("...${", {
                beforeExpr: b,
                startsExpr: m
            }),
            at: P("@"),
            hash: P("#", {
                startsExpr: m
            }),
            interpreterDirective: P("#!..."),
            eq: P("=", {
                beforeExpr: b,
                isAssign: le
            }),
            assign: P("_=", {
                beforeExpr: b,
                isAssign: le
            }),
            slashAssign: P("_=", {
                beforeExpr: b,
                isAssign: le
            }),
            xorAssign: P("_=", {
                beforeExpr: b,
                isAssign: le
            }),
            moduloAssign: P("_=", {
                beforeExpr: b,
                isAssign: le
            }),
            incDec: P("++/--", {
                prefix: q,
                postfix: ci,
                startsExpr: m
            }),
            bang: P("!", {
                beforeExpr: b,
                prefix: q,
                startsExpr: m
            }),
            tilde: P("~", {
                beforeExpr: b,
                prefix: q,
                startsExpr: m
            }),
            doubleCaret: P("^^", {
                startsExpr: m
            }),
            doubleAt: P("@@", {
                startsExpr: m
            }),
            pipeline: v("|>", 0),
            nullishCoalescing: v("??", 1),
            logicalOR: v("||", 1),
            logicalAND: v("&&", 2),
            bitwiseOR: v("|", 3),
            bitwiseXOR: v("^", 4),
            bitwiseAND: v("&", 5),
            equality: v("==/!=/===/!==", 6),
            lt: v("</>/<=/>=", 7),
            gt: v("</>/<=/>=", 7),
            relational: v("</>/<=/>=", 7),
            bitShift: v("<</>>/>>>", 8),
            bitShiftL: v("<</>>/>>>", 8),
            bitShiftR: v("<</>>/>>>", 8),
            plusMin: P("+/-", {
                beforeExpr: b,
                binop: 9,
                prefix: q,
                startsExpr: m
            }),
            modulo: P("%", {
                binop: 10,
                startsExpr: m
            }),
            star: P("*", {
                binop: 10
            }),
            slash: v("/", 10),
            exponent: P("**", {
                beforeExpr: b,
                binop: 11,
                rightAssociative: !0
            }),
            _in: A("in", {
                beforeExpr: b,
                binop: 7
            }),
            _instanceof: A("instanceof", {
                beforeExpr: b,
                binop: 7
            }),
            _break: A("break"),
            _case: A("case", {
                beforeExpr: b
            }),
            _catch: A("catch"),
            _continue: A("continue"),
            _debugger: A("debugger"),
            _default: A("default", {
                beforeExpr: b
            }),
            _else: A("else", {
                beforeExpr: b
            }),
            _finally: A("finally"),
            _function: A("function", {
                startsExpr: m
            }),
            _if: A("if"),
            _return: A("return", {
                beforeExpr: b
            }),
            _switch: A("switch"),
            _throw: A("throw", {
                beforeExpr: b,
                prefix: q,
                startsExpr: m
            }),
            _try: A("try"),
            _var: A("var"),
            _const: A("const"),
            _with: A("with"),
            _new: A("new", {
                beforeExpr: b,
                startsExpr: m
            }),
            _this: A("this", {
                startsExpr: m
            }),
            _super: A("super", {
                startsExpr: m
            }),
            _class: A("class", {
                startsExpr: m
            }),
            _extends: A("extends", {
                beforeExpr: b
            }),
            _export: A("export"),
            _import: A("import", {
                startsExpr: m
            }),
            _null: A("null", {
                startsExpr: m
            }),
            _true: A("true", {
                startsExpr: m
            }),
            _false: A("false", {
                startsExpr: m
            }),
            _typeof: A("typeof", {
                beforeExpr: b,
                prefix: q,
                startsExpr: m
            }),
            _void: A("void", {
                beforeExpr: b,
                prefix: q,
                startsExpr: m
            }),
            _delete: A("delete", {
                beforeExpr: b,
                prefix: q,
                startsExpr: m
            }),
            _do: A("do", {
                isLoop: qe,
                beforeExpr: b
            }),
            _for: A("for", {
                isLoop: qe
            }),
            _while: A("while", {
                isLoop: qe
            }),
            _as: T("as", {
                startsExpr: m
            }),
            _assert: T("assert", {
                startsExpr: m
            }),
            _async: T("async", {
                startsExpr: m
            }),
            _await: T("await", {
                startsExpr: m
            }),
            _defer: T("defer", {
                startsExpr: m
            }),
            _from: T("from", {
                startsExpr: m
            }),
            _get: T("get", {
                startsExpr: m
            }),
            _let: T("let", {
                startsExpr: m
            }),
            _meta: T("meta", {
                startsExpr: m
            }),
            _of: T("of", {
                startsExpr: m
            }),
            _sent: T("sent", {
                startsExpr: m
            }),
            _set: T("set", {
                startsExpr: m
            }),
            _source: T("source", {
                startsExpr: m
            }),
            _static: T("static", {
                startsExpr: m
            }),
            _using: T("using", {
                startsExpr: m
            }),
            _yield: T("yield", {
                startsExpr: m
            }),
            _asserts: T("asserts", {
                startsExpr: m
            }),
            _checks: T("checks", {
                startsExpr: m
            }),
            _exports: T("exports", {
                startsExpr: m
            }),
            _global: T("global", {
                startsExpr: m
            }),
            _implements: T("implements", {
                startsExpr: m
            }),
            _intrinsic: T("intrinsic", {
                startsExpr: m
            }),
            _infer: T("infer", {
                startsExpr: m
            }),
            _is: T("is", {
                startsExpr: m
            }),
            _mixins: T("mixins", {
                startsExpr: m
            }),
            _proto: T("proto", {
                startsExpr: m
            }),
            _require: T("require", {
                startsExpr: m
            }),
            _satisfies: T("satisfies", {
                startsExpr: m
            }),
            _keyof: T("keyof", {
                startsExpr: m
            }),
            _readonly: T("readonly", {
                startsExpr: m
            }),
            _unique: T("unique", {
                startsExpr: m
            }),
            _abstract: T("abstract", {
                startsExpr: m
            }),
            _declare: T("declare", {
                startsExpr: m
            }),
            _enum: T("enum", {
                startsExpr: m
            }),
            _module: T("module", {
                startsExpr: m
            }),
            _namespace: T("namespace", {
                startsExpr: m
            }),
            _interface: T("interface", {
                startsExpr: m
            }),
            _type: T("type", {
                startsExpr: m
            }),
            _opaque: T("opaque", {
                startsExpr: m
            }),
            name: P("name", {
                startsExpr: m
            }),
            string: P("string", {
                startsExpr: m
            }),
            num: P("num", {
                startsExpr: m
            }),
            bigint: P("bigint", {
                startsExpr: m
            }),
            decimal: P("decimal", {
                startsExpr: m
            }),
            regexp: P("regexp", {
                startsExpr: m
            }),
            privateName: P("#name", {
                startsExpr: m
            }),
            eof: P("eof"),
            jsxName: P("jsxName"),
            jsxText: P("jsxText", {
                beforeExpr: !0
            }),
            jsxTagStart: P("jsxTagStart", {
                startsExpr: !0
            }),
            jsxTagEnd: P("jsxTagEnd"),
            placeholder: P("%%", {
                startsExpr: !0
            })
        };
        function S(a) {
            return a >= 93 && a <= 132;
        }
        function ui(a) {
            return a <= 92;
        }
        function M(a) {
            return a >= 58 && a <= 132;
        }
        function Gt(a) {
            return a >= 58 && a <= 136;
        }
        function fi(a) {
            return xt[a];
        }
        function Je(a) {
            return Pt[a];
        }
        function di(a) {
            return a >= 29 && a <= 33;
        }
        function Rt(a) {
            return a >= 129 && a <= 131;
        }
        function mi(a) {
            return a >= 90 && a <= 92;
        }
        function Tt(a) {
            return a >= 58 && a <= 92;
        }
        function yi(a) {
            return a >= 39 && a <= 59;
        }
        function xi(a) {
            return a === 34;
        }
        function Pi(a) {
            return gt[a];
        }
        function gi(a) {
            return a >= 121 && a <= 123;
        }
        function Ti(a) {
            return a >= 124 && a <= 130;
        }
        function H(a) {
            return mt[a];
        }
        function Ne(a) {
            return yt[a];
        }
        function bi(a) {
            return a === 57;
        }
        function De(a) {
            return a >= 24 && a <= 25;
        }
        function _(a) {
            return U[a];
        }
        U[8].updateContext = (a)=>{
            a.pop();
        }, U[5].updateContext = U[7].updateContext = U[23].updateContext = (a)=>{
            a.push(w.brace);
        }, U[22].updateContext = (a)=>{
            a[a.length - 1] === w.template ? a.pop() : a.push(w.template);
        }, U[142].updateContext = (a)=>{
            a.push(w.j_expr, w.j_oTag);
        };
        var bt = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC", Yt = "\u200C\u200D\xb7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0CF3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECE\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\u30FB\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F\uFF65", Ai = new RegExp("[" + bt + "]"), Si = new RegExp("[" + bt + Yt + "]");
        bt = Yt = null;
        var Qt = [
            0,
            11,
            2,
            25,
            2,
            18,
            2,
            1,
            2,
            14,
            3,
            13,
            35,
            122,
            70,
            52,
            268,
            28,
            4,
            48,
            48,
            31,
            14,
            29,
            6,
            37,
            11,
            29,
            3,
            35,
            5,
            7,
            2,
            4,
            43,
            157,
            19,
            35,
            5,
            35,
            5,
            39,
            9,
            51,
            13,
            10,
            2,
            14,
            2,
            6,
            2,
            1,
            2,
            10,
            2,
            14,
            2,
            6,
            2,
            1,
            68,
            310,
            10,
            21,
            11,
            7,
            25,
            5,
            2,
            41,
            2,
            8,
            70,
            5,
            3,
            0,
            2,
            43,
            2,
            1,
            4,
            0,
            3,
            22,
            11,
            22,
            10,
            30,
            66,
            18,
            2,
            1,
            11,
            21,
            11,
            25,
            71,
            55,
            7,
            1,
            65,
            0,
            16,
            3,
            2,
            2,
            2,
            28,
            43,
            28,
            4,
            28,
            36,
            7,
            2,
            27,
            28,
            53,
            11,
            21,
            11,
            18,
            14,
            17,
            111,
            72,
            56,
            50,
            14,
            50,
            14,
            35,
            349,
            41,
            7,
            1,
            79,
            28,
            11,
            0,
            9,
            21,
            43,
            17,
            47,
            20,
            28,
            22,
            13,
            52,
            58,
            1,
            3,
            0,
            14,
            44,
            33,
            24,
            27,
            35,
            30,
            0,
            3,
            0,
            9,
            34,
            4,
            0,
            13,
            47,
            15,
            3,
            22,
            0,
            2,
            0,
            36,
            17,
            2,
            24,
            20,
            1,
            64,
            6,
            2,
            0,
            2,
            3,
            2,
            14,
            2,
            9,
            8,
            46,
            39,
            7,
            3,
            1,
            3,
            21,
            2,
            6,
            2,
            1,
            2,
            4,
            4,
            0,
            19,
            0,
            13,
            4,
            159,
            52,
            19,
            3,
            21,
            2,
            31,
            47,
            21,
            1,
            2,
            0,
            185,
            46,
            42,
            3,
            37,
            47,
            21,
            0,
            60,
            42,
            14,
            0,
            72,
            26,
            38,
            6,
            186,
            43,
            117,
            63,
            32,
            7,
            3,
            0,
            3,
            7,
            2,
            1,
            2,
            23,
            16,
            0,
            2,
            0,
            95,
            7,
            3,
            38,
            17,
            0,
            2,
            0,
            29,
            0,
            11,
            39,
            8,
            0,
            22,
            0,
            12,
            45,
            20,
            0,
            19,
            72,
            264,
            8,
            2,
            36,
            18,
            0,
            50,
            29,
            113,
            6,
            2,
            1,
            2,
            37,
            22,
            0,
            26,
            5,
            2,
            1,
            2,
            31,
            15,
            0,
            328,
            18,
            16,
            0,
            2,
            12,
            2,
            33,
            125,
            0,
            80,
            921,
            103,
            110,
            18,
            195,
            2637,
            96,
            16,
            1071,
            18,
            5,
            4026,
            582,
            8634,
            568,
            8,
            30,
            18,
            78,
            18,
            29,
            19,
            47,
            17,
            3,
            32,
            20,
            6,
            18,
            689,
            63,
            129,
            74,
            6,
            0,
            67,
            12,
            65,
            1,
            2,
            0,
            29,
            6135,
            9,
            1237,
            43,
            8,
            8936,
            3,
            2,
            6,
            2,
            1,
            2,
            290,
            16,
            0,
            30,
            2,
            3,
            0,
            15,
            3,
            9,
            395,
            2309,
            106,
            6,
            12,
            4,
            8,
            8,
            9,
            5991,
            84,
            2,
            70,
            2,
            1,
            3,
            0,
            3,
            1,
            3,
            3,
            2,
            11,
            2,
            0,
            2,
            6,
            2,
            64,
            2,
            3,
            3,
            7,
            2,
            6,
            2,
            27,
            2,
            3,
            2,
            4,
            2,
            0,
            4,
            6,
            2,
            339,
            3,
            24,
            2,
            24,
            2,
            30,
            2,
            24,
            2,
            30,
            2,
            24,
            2,
            30,
            2,
            24,
            2,
            30,
            2,
            24,
            2,
            7,
            1845,
            30,
            7,
            5,
            262,
            61,
            147,
            44,
            11,
            6,
            17,
            0,
            322,
            29,
            19,
            43,
            485,
            27,
            757,
            6,
            2,
            3,
            2,
            1,
            2,
            14,
            2,
            196,
            60,
            67,
            8,
            0,
            1205,
            3,
            2,
            26,
            2,
            1,
            2,
            0,
            3,
            0,
            2,
            9,
            2,
            3,
            2,
            0,
            2,
            0,
            7,
            0,
            5,
            0,
            2,
            0,
            2,
            0,
            2,
            2,
            2,
            1,
            2,
            0,
            3,
            0,
            2,
            0,
            2,
            0,
            2,
            0,
            2,
            0,
            2,
            1,
            2,
            0,
            3,
            3,
            2,
            6,
            2,
            3,
            2,
            3,
            2,
            0,
            2,
            9,
            2,
            16,
            6,
            2,
            2,
            4,
            2,
            16,
            4421,
            42719,
            33,
            4153,
            7,
            221,
            3,
            5761,
            15,
            7472,
            16,
            621,
            2467,
            541,
            1507,
            4938,
            6,
            4191
        ], wi = [
            509,
            0,
            227,
            0,
            150,
            4,
            294,
            9,
            1368,
            2,
            2,
            1,
            6,
            3,
            41,
            2,
            5,
            0,
            166,
            1,
            574,
            3,
            9,
            9,
            370,
            1,
            81,
            2,
            71,
            10,
            50,
            3,
            123,
            2,
            54,
            14,
            32,
            10,
            3,
            1,
            11,
            3,
            46,
            10,
            8,
            0,
            46,
            9,
            7,
            2,
            37,
            13,
            2,
            9,
            6,
            1,
            45,
            0,
            13,
            2,
            49,
            13,
            9,
            3,
            2,
            11,
            83,
            11,
            7,
            0,
            3,
            0,
            158,
            11,
            6,
            9,
            7,
            3,
            56,
            1,
            2,
            6,
            3,
            1,
            3,
            2,
            10,
            0,
            11,
            1,
            3,
            6,
            4,
            4,
            193,
            17,
            10,
            9,
            5,
            0,
            82,
            19,
            13,
            9,
            214,
            6,
            3,
            8,
            28,
            1,
            83,
            16,
            16,
            9,
            82,
            12,
            9,
            9,
            84,
            14,
            5,
            9,
            243,
            14,
            166,
            9,
            71,
            5,
            2,
            1,
            3,
            3,
            2,
            0,
            2,
            1,
            13,
            9,
            120,
            6,
            3,
            6,
            4,
            0,
            29,
            9,
            41,
            6,
            2,
            3,
            9,
            0,
            10,
            10,
            47,
            15,
            406,
            7,
            2,
            7,
            17,
            9,
            57,
            21,
            2,
            13,
            123,
            5,
            4,
            0,
            2,
            1,
            2,
            6,
            2,
            0,
            9,
            9,
            49,
            4,
            2,
            1,
            2,
            4,
            9,
            9,
            330,
            3,
            10,
            1,
            2,
            0,
            49,
            6,
            4,
            4,
            14,
            9,
            5351,
            0,
            7,
            14,
            13835,
            9,
            87,
            9,
            39,
            4,
            60,
            6,
            26,
            9,
            1014,
            0,
            2,
            54,
            8,
            3,
            82,
            0,
            12,
            1,
            19628,
            1,
            4706,
            45,
            3,
            22,
            543,
            4,
            4,
            5,
            9,
            7,
            3,
            6,
            31,
            3,
            149,
            2,
            1418,
            49,
            513,
            54,
            5,
            49,
            9,
            0,
            15,
            0,
            23,
            4,
            2,
            14,
            1361,
            6,
            2,
            16,
            3,
            6,
            2,
            1,
            2,
            4,
            101,
            0,
            161,
            6,
            10,
            9,
            357,
            0,
            62,
            13,
            499,
            13,
            983,
            6,
            110,
            6,
            6,
            9,
            4759,
            9,
            787719,
            239
        ];
        function Xe(a, t) {
            let e = 65536;
            for(let s = 0, i = t.length; s < i; s += 2){
                if (e += t[s], e > a) return !1;
                if (e += t[s + 1], e >= a) return !0;
            }
            return !1;
        }
        function j(a) {
            return a < 65 ? a === 36 : a <= 90 ? !0 : a < 97 ? a === 95 : a <= 122 ? !0 : a <= 65535 ? a >= 170 && Ai.test(String.fromCharCode(a)) : Xe(a, Qt);
        }
        function Z(a) {
            return a < 48 ? a === 36 : a < 58 ? !0 : a < 65 ? !1 : a <= 90 ? !0 : a < 97 ? a === 95 : a <= 122 ? !0 : a <= 65535 ? a >= 170 && Si.test(String.fromCharCode(a)) : Xe(a, Qt) || Xe(a, wi);
        }
        var At = {
            keyword: [
                "break",
                "case",
                "catch",
                "continue",
                "debugger",
                "default",
                "do",
                "else",
                "finally",
                "for",
                "function",
                "if",
                "return",
                "switch",
                "throw",
                "try",
                "var",
                "const",
                "while",
                "with",
                "new",
                "this",
                "super",
                "class",
                "extends",
                "export",
                "import",
                "null",
                "true",
                "false",
                "in",
                "instanceof",
                "typeof",
                "void",
                "delete"
            ],
            strict: [
                "implements",
                "interface",
                "let",
                "package",
                "private",
                "protected",
                "public",
                "static",
                "yield"
            ],
            strictBind: [
                "eval",
                "arguments"
            ]
        }, Ci = new Set(At.keyword), Ei = new Set(At.strict), Ii = new Set(At.strictBind);
        function Zt(a, t) {
            return t && a === "await" || a === "enum";
        }
        function es(a, t) {
            return Zt(a, t) || Ei.has(a);
        }
        function ts(a) {
            return Ii.has(a);
        }
        function ss(a, t) {
            return es(a, t) || ts(a);
        }
        function Ni(a) {
            return Ci.has(a);
        }
        function ki(a, t, e) {
            return a === 64 && t === 64 && j(e);
        }
        var vi = new Set([
            "break",
            "case",
            "catch",
            "continue",
            "debugger",
            "default",
            "do",
            "else",
            "finally",
            "for",
            "function",
            "if",
            "return",
            "switch",
            "throw",
            "try",
            "var",
            "const",
            "while",
            "with",
            "new",
            "this",
            "super",
            "class",
            "extends",
            "export",
            "import",
            "null",
            "true",
            "false",
            "in",
            "instanceof",
            "typeof",
            "void",
            "delete",
            "implements",
            "interface",
            "let",
            "package",
            "private",
            "protected",
            "public",
            "static",
            "yield",
            "eval",
            "arguments",
            "enum",
            "await"
        ]);
        function Li(a) {
            return vi.has(a);
        }
        var me = class {
            constructor(t){
                this.flags = 0, this.names = new Map, this.firstLexicalName = "", this.flags = t;
            }
        }, ye = class {
            constructor(t, e){
                this.parser = void 0, this.scopeStack = [], this.inModule = void 0, this.undefinedExports = new Map, this.parser = t, this.inModule = e;
            }
            get inTopLevel() {
                return (this.currentScope().flags & 1) > 0;
            }
            get inFunction() {
                return (this.currentVarScopeFlags() & 2) > 0;
            }
            get allowSuper() {
                return (this.currentThisScopeFlags() & 16) > 0;
            }
            get allowDirectSuper() {
                return (this.currentThisScopeFlags() & 32) > 0;
            }
            get inClass() {
                return (this.currentThisScopeFlags() & 64) > 0;
            }
            get inClassAndNotInNonArrowFunction() {
                let t = this.currentThisScopeFlags();
                return (t & 64) > 0 && (t & 2) === 0;
            }
            get inStaticBlock() {
                for(let t = this.scopeStack.length - 1;; t--){
                    let { flags: e } = this.scopeStack[t];
                    if (e & 128) return !0;
                    if (e & 451) return !1;
                }
            }
            get inNonArrowFunction() {
                return (this.currentThisScopeFlags() & 2) > 0;
            }
            get treatFunctionsAsVar() {
                return this.treatFunctionsAsVarInScope(this.currentScope());
            }
            createScope(t) {
                return new me(t);
            }
            enter(t) {
                this.scopeStack.push(this.createScope(t));
            }
            exit() {
                return this.scopeStack.pop().flags;
            }
            treatFunctionsAsVarInScope(t) {
                return !!(t.flags & 130 || !this.parser.inModule && t.flags & 1);
            }
            declareName(t, e, s) {
                let i = this.currentScope();
                if (e & 8 || e & 16) {
                    this.checkRedeclarationInScope(i, t, e, s);
                    let r = i.names.get(t) || 0;
                    e & 16 ? r = r | 4 : (i.firstLexicalName || (i.firstLexicalName = t), r = r | 2), i.names.set(t, r), e & 8 && this.maybeExportDefined(i, t);
                } else if (e & 4) for(let r = this.scopeStack.length - 1; r >= 0 && (i = this.scopeStack[r], this.checkRedeclarationInScope(i, t, e, s), i.names.set(t, (i.names.get(t) || 0) | 1), this.maybeExportDefined(i, t), !(i.flags & 387)); --r);
                this.parser.inModule && i.flags & 1 && this.undefinedExports.delete(t);
            }
            maybeExportDefined(t, e) {
                this.parser.inModule && t.flags & 1 && this.undefinedExports.delete(e);
            }
            checkRedeclarationInScope(t, e, s, i) {
                this.isRedeclaredInScope(t, e, s) && this.parser.raise(p.VarRedeclaration, i, {
                    identifierName: e
                });
            }
            isRedeclaredInScope(t, e, s) {
                if (!(s & 1)) return !1;
                if (s & 8) return t.names.has(e);
                let i = t.names.get(e);
                return s & 16 ? (i & 2) > 0 || !this.treatFunctionsAsVarInScope(t) && (i & 1) > 0 : (i & 2) > 0 && !(t.flags & 8 && t.firstLexicalName === e) || !this.treatFunctionsAsVarInScope(t) && (i & 4) > 0;
            }
            checkLocalExport(t) {
                let { name: e } = t;
                this.scopeStack[0].names.has(e) || this.undefinedExports.set(e, t.loc.start);
            }
            currentScope() {
                return this.scopeStack[this.scopeStack.length - 1];
            }
            currentVarScopeFlags() {
                for(let t = this.scopeStack.length - 1;; t--){
                    let { flags: e } = this.scopeStack[t];
                    if (e & 387) return e;
                }
            }
            currentThisScopeFlags() {
                for(let t = this.scopeStack.length - 1;; t--){
                    let { flags: e } = this.scopeStack[t];
                    if (e & 451 && !(e & 4)) return e;
                }
            }
        }, Ge = class extends me {
            constructor(...t){
                super(...t), this.declareFunctions = new Set;
            }
        }, Ye = class extends ye {
            createScope(t) {
                return new Ge(t);
            }
            declareName(t, e, s) {
                let i = this.currentScope();
                if (e & 2048) {
                    this.checkRedeclarationInScope(i, t, e, s), this.maybeExportDefined(i, t), i.declareFunctions.add(t);
                    return;
                }
                super.declareName(t, e, s);
            }
            isRedeclaredInScope(t, e, s) {
                if (super.isRedeclaredInScope(t, e, s)) return !0;
                if (s & 2048 && !t.declareFunctions.has(e)) {
                    let i = t.names.get(e);
                    return (i & 4) > 0 || (i & 2) > 0;
                }
                return !1;
            }
            checkLocalExport(t) {
                this.scopeStack[0].declareFunctions.has(t.name) || super.checkLocalExport(t);
            }
        }, Qe = class {
            constructor(){
                this.sawUnambiguousESM = !1, this.ambiguousScriptDifferentAst = !1;
            }
            hasPlugin(t) {
                if (typeof t == "string") return this.plugins.has(t);
                {
                    let [e, s] = t;
                    if (!this.hasPlugin(e)) return !1;
                    let i = this.plugins.get(e);
                    for (let r of Object.keys(s))if ((i == null ? void 0 : i[r]) !== s[r]) return !1;
                    return !0;
                }
            }
            getPluginOption(t, e) {
                var s;
                return (s = this.plugins.get(t)) == null ? void 0 : s[e];
            }
        };
        function is(a, t) {
            a.trailingComments === void 0 ? a.trailingComments = t : a.trailingComments.unshift(...t);
        }
        function Di(a, t) {
            a.leadingComments === void 0 ? a.leadingComments = t : a.leadingComments.unshift(...t);
        }
        function xe(a, t) {
            a.innerComments === void 0 ? a.innerComments = t : a.innerComments.unshift(...t);
        }
        function ce(a, t, e) {
            let s = null, i = t.length;
            for(; s === null && i > 0;)s = t[--i];
            s === null || s.start > e.start ? xe(a, e.comments) : is(s, e.comments);
        }
        var Ze = class extends Qe {
            addComment(t) {
                this.filename && (t.loc.filename = this.filename);
                let { commentsLen: e } = this.state;
                this.comments.length != e && (this.comments.length = e), this.comments.push(t), this.state.commentsLen++;
            }
            processComment(t) {
                let { commentStack: e } = this.state, s = e.length;
                if (s === 0) return;
                let i = s - 1, r = e[i];
                r.start === t.end && (r.leadingNode = t, i--);
                let { start: n } = t;
                for(; i >= 0; i--){
                    let o = e[i], h = o.end;
                    if (h > n) o.containingNode = t, this.finalizeComment(o), e.splice(i, 1);
                    else {
                        h === n && (o.trailingNode = t);
                        break;
                    }
                }
            }
            finalizeComment(t) {
                let { comments: e } = t;
                if (t.leadingNode !== null || t.trailingNode !== null) t.leadingNode !== null && is(t.leadingNode, e), t.trailingNode !== null && Di(t.trailingNode, e);
                else {
                    let { containingNode: s, start: i } = t;
                    if (this.input.charCodeAt(i - 1) === 44) switch(s.type){
                        case "ObjectExpression":
                        case "ObjectPattern":
                        case "RecordExpression":
                            ce(s, s.properties, t);
                            break;
                        case "CallExpression":
                        case "OptionalCallExpression":
                            ce(s, s.arguments, t);
                            break;
                        case "FunctionDeclaration":
                        case "FunctionExpression":
                        case "ArrowFunctionExpression":
                        case "ObjectMethod":
                        case "ClassMethod":
                        case "ClassPrivateMethod":
                            ce(s, s.params, t);
                            break;
                        case "ArrayExpression":
                        case "ArrayPattern":
                        case "TupleExpression":
                            ce(s, s.elements, t);
                            break;
                        case "ExportNamedDeclaration":
                        case "ImportDeclaration":
                            ce(s, s.specifiers, t);
                            break;
                        default:
                            xe(s, e);
                    }
                    else xe(s, e);
                }
            }
            finalizeRemainingComments() {
                let { commentStack: t } = this.state;
                for(let e = t.length - 1; e >= 0; e--)this.finalizeComment(t[e]);
                this.state.commentStack = [];
            }
            resetPreviousNodeTrailingComments(t) {
                let { commentStack: e } = this.state, { length: s } = e;
                if (s === 0) return;
                let i = e[s - 1];
                i.leadingNode === t && (i.leadingNode = null);
            }
            resetPreviousIdentifierLeadingComments(t) {
                let { commentStack: e } = this.state, { length: s } = e;
                s !== 0 && (e[s - 1].trailingNode === t ? e[s - 1].trailingNode = null : s >= 2 && e[s - 2].trailingNode === t && (e[s - 2].trailingNode = null));
            }
            takeSurroundingComments(t, e, s) {
                let { commentStack: i } = this.state, r = i.length;
                if (r === 0) return;
                let n = r - 1;
                for(; n >= 0; n--){
                    let o = i[n], h = o.end;
                    if (o.start === s) o.leadingNode = t;
                    else if (h === e) o.trailingNode = t;
                    else if (h < e) break;
                }
            }
        }, rs = /\r\n?|[\n\u2028\u2029]/, Ce = new RegExp(rs.source, "g");
        function de(a) {
            switch(a){
                case 10:
                case 13:
                case 8232:
                case 8233:
                    return !0;
                default:
                    return !1;
            }
        }
        var ze = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g, ke = /(?:[^\S\n\r\u2028\u2029]|\/\/.*|\/\*.*?\*\/)*/g, _t = new RegExp("(?=(" + ke.source + "))\\1" + /(?=[\n\r\u2028\u2029]|\/\*(?!.*?\*\/)|$)/.source, "y");
        function Mi(a) {
            switch(a){
                case 9:
                case 11:
                case 12:
                case 32:
                case 160:
                case 5760:
                case 8192:
                case 8193:
                case 8194:
                case 8195:
                case 8196:
                case 8197:
                case 8198:
                case 8199:
                case 8200:
                case 8201:
                case 8202:
                case 8239:
                case 8287:
                case 12288:
                case 65279:
                    return !0;
                default:
                    return !1;
            }
        }
        var et = class a {
            constructor(){
                this.flags = 1024, this.curLine = void 0, this.lineStart = void 0, this.startLoc = void 0, this.endLoc = void 0, this.errors = [], this.potentialArrowAt = -1, this.noArrowAt = [], this.noArrowParamsConversionAt = [], this.topicContext = {
                    maxNumOfResolvableTopics: 0,
                    maxTopicIndex: null
                }, this.labels = [], this.commentsLen = 0, this.commentStack = [], this.pos = 0, this.type = 139, this.value = null, this.start = 0, this.end = 0, this.lastTokEndLoc = null, this.lastTokStartLoc = null, this.context = [
                    w.brace
                ], this.firstInvalidTemplateEscapePos = null, this.strictErrors = new Map, this.tokensLength = 0;
            }
            get strict() {
                return (this.flags & 1) > 0;
            }
            set strict(t) {
                t ? this.flags |= 1 : this.flags &= -2;
            }
            init({ strictMode: t, sourceType: e, startLine: s, startColumn: i }) {
                this.strict = t === !1 ? !1 : t === !0 ? !0 : e === "module", this.curLine = s, this.lineStart = -i, this.startLoc = this.endLoc = new F(s, i, 0);
            }
            get maybeInArrowParameters() {
                return (this.flags & 2) > 0;
            }
            set maybeInArrowParameters(t) {
                t ? this.flags |= 2 : this.flags &= -3;
            }
            get inType() {
                return (this.flags & 4) > 0;
            }
            set inType(t) {
                t ? this.flags |= 4 : this.flags &= -5;
            }
            get noAnonFunctionType() {
                return (this.flags & 8) > 0;
            }
            set noAnonFunctionType(t) {
                t ? this.flags |= 8 : this.flags &= -9;
            }
            get hasFlowComment() {
                return (this.flags & 16) > 0;
            }
            set hasFlowComment(t) {
                t ? this.flags |= 16 : this.flags &= -17;
            }
            get isAmbientContext() {
                return (this.flags & 32) > 0;
            }
            set isAmbientContext(t) {
                t ? this.flags |= 32 : this.flags &= -33;
            }
            get inAbstractClass() {
                return (this.flags & 64) > 0;
            }
            set inAbstractClass(t) {
                t ? this.flags |= 64 : this.flags &= -65;
            }
            get inDisallowConditionalTypesContext() {
                return (this.flags & 128) > 0;
            }
            set inDisallowConditionalTypesContext(t) {
                t ? this.flags |= 128 : this.flags &= -129;
            }
            get soloAwait() {
                return (this.flags & 256) > 0;
            }
            set soloAwait(t) {
                t ? this.flags |= 256 : this.flags &= -257;
            }
            get inFSharpPipelineDirectBody() {
                return (this.flags & 512) > 0;
            }
            set inFSharpPipelineDirectBody(t) {
                t ? this.flags |= 512 : this.flags &= -513;
            }
            get canStartJSXElement() {
                return (this.flags & 1024) > 0;
            }
            set canStartJSXElement(t) {
                t ? this.flags |= 1024 : this.flags &= -1025;
            }
            get containsEsc() {
                return (this.flags & 2048) > 0;
            }
            set containsEsc(t) {
                t ? this.flags |= 2048 : this.flags &= -2049;
            }
            curPosition() {
                return new F(this.curLine, this.pos - this.lineStart, this.pos);
            }
            clone() {
                let t = new a;
                return t.flags = this.flags, t.curLine = this.curLine, t.lineStart = this.lineStart, t.startLoc = this.startLoc, t.endLoc = this.endLoc, t.errors = this.errors.slice(), t.potentialArrowAt = this.potentialArrowAt, t.noArrowAt = this.noArrowAt.slice(), t.noArrowParamsConversionAt = this.noArrowParamsConversionAt.slice(), t.topicContext = this.topicContext, t.labels = this.labels.slice(), t.commentsLen = this.commentsLen, t.commentStack = this.commentStack.slice(), t.pos = this.pos, t.type = this.type, t.value = this.value, t.start = this.start, t.end = this.end, t.lastTokEndLoc = this.lastTokEndLoc, t.lastTokStartLoc = this.lastTokStartLoc, t.context = this.context.slice(), t.firstInvalidTemplateEscapePos = this.firstInvalidTemplateEscapePos, t.strictErrors = this.strictErrors, t.tokensLength = this.tokensLength, t;
            }
        }, Oi = function(t) {
            return t >= 48 && t <= 57;
        }, Ut = {
            decBinOct: new Set([
                46,
                66,
                69,
                79,
                95,
                98,
                101,
                111
            ]),
            hex: new Set([
                46,
                88,
                95,
                120
            ])
        }, Ee = {
            bin: (a)=>a === 48 || a === 49,
            oct: (a)=>a >= 48 && a <= 55,
            dec: (a)=>a >= 48 && a <= 57,
            hex: (a)=>a >= 48 && a <= 57 || a >= 65 && a <= 70 || a >= 97 && a <= 102
        };
        function jt(a, t, e, s, i, r) {
            let n = e, o = s, h = i, l = "", c = null, u = e, { length: f } = t;
            for(;;){
                if (e >= f) {
                    r.unterminated(n, o, h), l += t.slice(u, e);
                    break;
                }
                let d = t.charCodeAt(e);
                if (Fi(a, d, t, e)) {
                    l += t.slice(u, e);
                    break;
                }
                if (d === 92) {
                    l += t.slice(u, e);
                    let y = Bi(t, e, s, i, a === "template", r);
                    y.ch === null && !c ? c = {
                        pos: e,
                        lineStart: s,
                        curLine: i
                    } : l += y.ch, ({ pos: e, lineStart: s, curLine: i } = y), u = e;
                } else d === 8232 || d === 8233 ? (++e, ++i, s = e) : d === 10 || d === 13 ? a === "template" ? (l += t.slice(u, e) + `
`, ++e, d === 13 && t.charCodeAt(e) === 10 && ++e, ++i, u = s = e) : r.unterminated(n, o, h) : ++e;
            }
            return {
                pos: e,
                str: l,
                firstInvalidLoc: c,
                lineStart: s,
                curLine: i,
                containsInvalid: !!c
            };
        }
        function Fi(a, t, e, s) {
            return a === "template" ? t === 96 || t === 36 && e.charCodeAt(s + 1) === 123 : t === (a === "double" ? 34 : 39);
        }
        function Bi(a, t, e, s, i, r) {
            let n = !i;
            t++;
            let o = (l)=>({
                    pos: t,
                    ch: l,
                    lineStart: e,
                    curLine: s
                }), h = a.charCodeAt(t++);
            switch(h){
                case 110:
                    return o(`
`);
                case 114:
                    return o("\r");
                case 120:
                    {
                        let l;
                        return { code: l, pos: t } = tt(a, t, e, s, 2, !1, n, r), o(l === null ? null : String.fromCharCode(l));
                    }
                case 117:
                    {
                        let l;
                        return { code: l, pos: t } = ns(a, t, e, s, n, r), o(l === null ? null : String.fromCodePoint(l));
                    }
                case 116:
                    return o("	");
                case 98:
                    return o("\b");
                case 118:
                    return o("\v");
                case 102:
                    return o("\f");
                case 13:
                    a.charCodeAt(t) === 10 && ++t;
                case 10:
                    e = t, ++s;
                case 8232:
                case 8233:
                    return o("");
                case 56:
                case 57:
                    if (i) return o(null);
                    r.strictNumericEscape(t - 1, e, s);
                default:
                    if (h >= 48 && h <= 55) {
                        let l = t - 1, u = a.slice(l, t + 2).match(/^[0-7]+/)[0], f = parseInt(u, 8);
                        f > 255 && (u = u.slice(0, -1), f = parseInt(u, 8)), t += u.length - 1;
                        let d = a.charCodeAt(t);
                        if (u !== "0" || d === 56 || d === 57) {
                            if (i) return o(null);
                            r.strictNumericEscape(l, e, s);
                        }
                        return o(String.fromCharCode(f));
                    }
                    return o(String.fromCharCode(h));
            }
        }
        function tt(a, t, e, s, i, r, n, o) {
            let h = t, l;
            return { n: l, pos: t } = as(a, t, e, s, 16, i, r, !1, o, !n), l === null && (n ? o.invalidEscapeSequence(h, e, s) : t = h - 1), {
                code: l,
                pos: t
            };
        }
        function as(a, t, e, s, i, r, n, o, h, l) {
            let c = t, u = i === 16 ? Ut.hex : Ut.decBinOct, f = i === 16 ? Ee.hex : i === 10 ? Ee.dec : i === 8 ? Ee.oct : Ee.bin, d = !1, y = 0;
            for(let I = 0, C = r ?? 1 / 0; I < C; ++I){
                let E = a.charCodeAt(t), k;
                if (E === 95 && o !== "bail") {
                    let Se = a.charCodeAt(t - 1), oe = a.charCodeAt(t + 1);
                    if (o) {
                        if (Number.isNaN(oe) || !f(oe) || u.has(Se) || u.has(oe)) {
                            if (l) return {
                                n: null,
                                pos: t
                            };
                            h.unexpectedNumericSeparator(t, e, s);
                        }
                    } else {
                        if (l) return {
                            n: null,
                            pos: t
                        };
                        h.numericSeparatorInEscapeSequence(t, e, s);
                    }
                    ++t;
                    continue;
                }
                if (E >= 97 ? k = E - 97 + 10 : E >= 65 ? k = E - 65 + 10 : Oi(E) ? k = E - 48 : k = 1 / 0, k >= i) {
                    if (k <= 9 && l) return {
                        n: null,
                        pos: t
                    };
                    if (k <= 9 && h.invalidDigit(t, e, s, i)) k = 0;
                    else if (n) k = 0, d = !0;
                    else break;
                }
                ++t, y = y * i + k;
            }
            return t === c || r != null && t - c !== r || d ? {
                n: null,
                pos: t
            } : {
                n: y,
                pos: t
            };
        }
        function ns(a, t, e, s, i, r) {
            let n = a.charCodeAt(t), o;
            if (n === 123) {
                if (++t, { code: o, pos: t } = tt(a, t, e, s, a.indexOf("}", t) - t, !0, i, r), ++t, o !== null && o > 1114111) {
                    if (i) r.invalidCodePoint(t, e, s);
                    else return {
                        code: null,
                        pos: t
                    };
                }
            } else ({ code: o, pos: t } = tt(a, t, e, s, 4, !1, i, r));
            return {
                code: o,
                pos: t
            };
        }
        function pe(a, t, e) {
            return new F(e, a - t, a);
        }
        var Ri = new Set([
            103,
            109,
            115,
            105,
            121,
            117,
            100,
            118
        ]), O = class {
            constructor(t){
                this.type = t.type, this.value = t.value, this.start = t.start, this.end = t.end, this.loc = new te(t.startLoc, t.endLoc);
            }
        }, st = class extends Ze {
            constructor(t, e){
                super(), this.isLookahead = void 0, this.tokens = [], this.errorHandlers_readInt = {
                    invalidDigit: (s, i, r, n)=>this.options.errorRecovery ? (this.raise(p.InvalidDigit, pe(s, i, r), {
                            radix: n
                        }), !0) : !1,
                    numericSeparatorInEscapeSequence: this.errorBuilder(p.NumericSeparatorInEscapeSequence),
                    unexpectedNumericSeparator: this.errorBuilder(p.UnexpectedNumericSeparator)
                }, this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {
                    invalidEscapeSequence: this.errorBuilder(p.InvalidEscapeSequence),
                    invalidCodePoint: this.errorBuilder(p.InvalidCodePoint)
                }), this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {
                    strictNumericEscape: (s, i, r)=>{
                        this.recordStrictModeErrors(p.StrictNumericEscape, pe(s, i, r));
                    },
                    unterminated: (s, i, r)=>{
                        throw this.raise(p.UnterminatedString, pe(s - 1, i, r));
                    }
                }), this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {
                    strictNumericEscape: this.errorBuilder(p.StrictNumericEscape),
                    unterminated: (s, i, r)=>{
                        throw this.raise(p.UnterminatedTemplate, pe(s, i, r));
                    }
                }), this.state = new et, this.state.init(t), this.input = e, this.length = e.length, this.comments = [], this.isLookahead = !1;
            }
            pushToken(t) {
                this.tokens.length = this.state.tokensLength, this.tokens.push(t), ++this.state.tokensLength;
            }
            next() {
                this.checkKeywordEscapes(), this.options.tokens && this.pushToken(new O(this.state)), this.state.lastTokEndLoc = this.state.endLoc, this.state.lastTokStartLoc = this.state.startLoc, this.nextToken();
            }
            eat(t) {
                return this.match(t) ? (this.next(), !0) : !1;
            }
            match(t) {
                return this.state.type === t;
            }
            createLookaheadState(t) {
                return {
                    pos: t.pos,
                    value: null,
                    type: t.type,
                    start: t.start,
                    end: t.end,
                    context: [
                        this.curContext()
                    ],
                    inType: t.inType,
                    startLoc: t.startLoc,
                    lastTokEndLoc: t.lastTokEndLoc,
                    curLine: t.curLine,
                    lineStart: t.lineStart,
                    curPosition: t.curPosition
                };
            }
            lookahead() {
                let t = this.state;
                this.state = this.createLookaheadState(t), this.isLookahead = !0, this.nextToken(), this.isLookahead = !1;
                let e = this.state;
                return this.state = t, e;
            }
            nextTokenStart() {
                return this.nextTokenStartSince(this.state.pos);
            }
            nextTokenStartSince(t) {
                return ze.lastIndex = t, ze.test(this.input) ? ze.lastIndex : t;
            }
            lookaheadCharCode() {
                return this.input.charCodeAt(this.nextTokenStart());
            }
            nextTokenInLineStart() {
                return this.nextTokenInLineStartSince(this.state.pos);
            }
            nextTokenInLineStartSince(t) {
                return ke.lastIndex = t, ke.test(this.input) ? ke.lastIndex : t;
            }
            lookaheadInLineCharCode() {
                return this.input.charCodeAt(this.nextTokenInLineStart());
            }
            codePointAtPos(t) {
                let e = this.input.charCodeAt(t);
                if ((e & 64512) === 55296 && ++t < this.input.length) {
                    let s = this.input.charCodeAt(t);
                    (s & 64512) === 56320 && (e = 65536 + ((e & 1023) << 10) + (s & 1023));
                }
                return e;
            }
            setStrict(t) {
                this.state.strict = t, t && (this.state.strictErrors.forEach(([e, s])=>this.raise(e, s)), this.state.strictErrors.clear());
            }
            curContext() {
                return this.state.context[this.state.context.length - 1];
            }
            nextToken() {
                if (this.skipSpace(), this.state.start = this.state.pos, this.isLookahead || (this.state.startLoc = this.state.curPosition()), this.state.pos >= this.length) {
                    this.finishToken(139);
                    return;
                }
                this.getTokenFromCode(this.codePointAtPos(this.state.pos));
            }
            skipBlockComment(t) {
                let e;
                this.isLookahead || (e = this.state.curPosition());
                let s = this.state.pos, i = this.input.indexOf(t, s + 2);
                if (i === -1) throw this.raise(p.UnterminatedComment, this.state.curPosition());
                for(this.state.pos = i + t.length, Ce.lastIndex = s + 2; Ce.test(this.input) && Ce.lastIndex <= i;)++this.state.curLine, this.state.lineStart = Ce.lastIndex;
                if (this.isLookahead) return;
                let r = {
                    type: "CommentBlock",
                    value: this.input.slice(s + 2, i),
                    start: s,
                    end: i + t.length,
                    loc: new te(e, this.state.curPosition())
                };
                return this.options.tokens && this.pushToken(r), r;
            }
            skipLineComment(t) {
                let e = this.state.pos, s;
                this.isLookahead || (s = this.state.curPosition());
                let i = this.input.charCodeAt(this.state.pos += t);
                if (this.state.pos < this.length) for(; !de(i) && ++this.state.pos < this.length;)i = this.input.charCodeAt(this.state.pos);
                if (this.isLookahead) return;
                let r = this.state.pos, o = {
                    type: "CommentLine",
                    value: this.input.slice(e + t, r),
                    start: e,
                    end: r,
                    loc: new te(s, this.state.curPosition())
                };
                return this.options.tokens && this.pushToken(o), o;
            }
            skipSpace() {
                let t = this.state.pos, e = [];
                e: for(; this.state.pos < this.length;){
                    let s = this.input.charCodeAt(this.state.pos);
                    switch(s){
                        case 32:
                        case 160:
                        case 9:
                            ++this.state.pos;
                            break;
                        case 13:
                            this.input.charCodeAt(this.state.pos + 1) === 10 && ++this.state.pos;
                        case 10:
                        case 8232:
                        case 8233:
                            ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;
                            break;
                        case 47:
                            switch(this.input.charCodeAt(this.state.pos + 1)){
                                case 42:
                                    {
                                        let i = this.skipBlockComment("*/");
                                        i !== void 0 && (this.addComment(i), this.options.attachComment && e.push(i));
                                        break;
                                    }
                                case 47:
                                    {
                                        let i = this.skipLineComment(2);
                                        i !== void 0 && (this.addComment(i), this.options.attachComment && e.push(i));
                                        break;
                                    }
                                default:
                                    break e;
                            }
                            break;
                        default:
                            if (Mi(s)) ++this.state.pos;
                            else if (s === 45 && !this.inModule && this.options.annexB) {
                                let i = this.state.pos;
                                if (this.input.charCodeAt(i + 1) === 45 && this.input.charCodeAt(i + 2) === 62 && (t === 0 || this.state.lineStart > t)) {
                                    let r = this.skipLineComment(3);
                                    r !== void 0 && (this.addComment(r), this.options.attachComment && e.push(r));
                                } else break e;
                            } else if (s === 60 && !this.inModule && this.options.annexB) {
                                let i = this.state.pos;
                                if (this.input.charCodeAt(i + 1) === 33 && this.input.charCodeAt(i + 2) === 45 && this.input.charCodeAt(i + 3) === 45) {
                                    let r = this.skipLineComment(4);
                                    r !== void 0 && (this.addComment(r), this.options.attachComment && e.push(r));
                                } else break e;
                            } else break e;
                    }
                }
                if (e.length > 0) {
                    let s = this.state.pos, i = {
                        start: t,
                        end: s,
                        comments: e,
                        leadingNode: null,
                        trailingNode: null,
                        containingNode: null
                    };
                    this.state.commentStack.push(i);
                }
            }
            finishToken(t, e) {
                this.state.end = this.state.pos, this.state.endLoc = this.state.curPosition();
                let s = this.state.type;
                this.state.type = t, this.state.value = e, this.isLookahead || this.updateContext(s);
            }
            replaceToken(t) {
                this.state.type = t, this.updateContext();
            }
            readToken_numberSign() {
                if (this.state.pos === 0 && this.readToken_interpreter()) return;
                let t = this.state.pos + 1, e = this.codePointAtPos(t);
                if (e >= 48 && e <= 57) throw this.raise(p.UnexpectedDigitAfterHash, this.state.curPosition());
                if (e === 123 || e === 91 && this.hasPlugin("recordAndTuple")) {
                    if (this.expectPlugin("recordAndTuple"), this.getPluginOption("recordAndTuple", "syntaxType") === "bar") throw this.raise(e === 123 ? p.RecordExpressionHashIncorrectStartSyntaxType : p.TupleExpressionHashIncorrectStartSyntaxType, this.state.curPosition());
                    this.state.pos += 2, e === 123 ? this.finishToken(7) : this.finishToken(1);
                } else j(e) ? (++this.state.pos, this.finishToken(138, this.readWord1(e))) : e === 92 ? (++this.state.pos, this.finishToken(138, this.readWord1())) : this.finishOp(27, 1);
            }
            readToken_dot() {
                let t = this.input.charCodeAt(this.state.pos + 1);
                if (t >= 48 && t <= 57) {
                    this.readNumber(!0);
                    return;
                }
                t === 46 && this.input.charCodeAt(this.state.pos + 2) === 46 ? (this.state.pos += 3, this.finishToken(21)) : (++this.state.pos, this.finishToken(16));
            }
            readToken_slash() {
                this.input.charCodeAt(this.state.pos + 1) === 61 ? this.finishOp(31, 2) : this.finishOp(56, 1);
            }
            readToken_interpreter() {
                if (this.state.pos !== 0 || this.length < 2) return !1;
                let t = this.input.charCodeAt(this.state.pos + 1);
                if (t !== 33) return !1;
                let e = this.state.pos;
                for(this.state.pos += 1; !de(t) && ++this.state.pos < this.length;)t = this.input.charCodeAt(this.state.pos);
                let s = this.input.slice(e + 2, this.state.pos);
                return this.finishToken(28, s), !0;
            }
            readToken_mult_modulo(t) {
                let e = t === 42 ? 55 : 54, s = 1, i = this.input.charCodeAt(this.state.pos + 1);
                t === 42 && i === 42 && (s++, i = this.input.charCodeAt(this.state.pos + 2), e = 57), i === 61 && !this.state.inType && (s++, e = t === 37 ? 33 : 30), this.finishOp(e, s);
            }
            readToken_pipe_amp(t) {
                let e = this.input.charCodeAt(this.state.pos + 1);
                if (e === t) {
                    this.input.charCodeAt(this.state.pos + 2) === 61 ? this.finishOp(30, 3) : this.finishOp(t === 124 ? 41 : 42, 2);
                    return;
                }
                if (t === 124) {
                    if (e === 62) {
                        this.finishOp(39, 2);
                        return;
                    }
                    if (this.hasPlugin("recordAndTuple") && e === 125) {
                        if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") throw this.raise(p.RecordExpressionBarIncorrectEndSyntaxType, this.state.curPosition());
                        this.state.pos += 2, this.finishToken(9);
                        return;
                    }
                    if (this.hasPlugin("recordAndTuple") && e === 93) {
                        if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") throw this.raise(p.TupleExpressionBarIncorrectEndSyntaxType, this.state.curPosition());
                        this.state.pos += 2, this.finishToken(4);
                        return;
                    }
                }
                if (e === 61) {
                    this.finishOp(30, 2);
                    return;
                }
                this.finishOp(t === 124 ? 43 : 45, 1);
            }
            readToken_caret() {
                let t = this.input.charCodeAt(this.state.pos + 1);
                t === 61 && !this.state.inType ? this.finishOp(32, 2) : t === 94 && this.hasPlugin([
                    "pipelineOperator",
                    {
                        proposal: "hack",
                        topicToken: "^^"
                    }
                ]) ? (this.finishOp(37, 2), this.input.codePointAt(this.state.pos) === 94 && this.unexpected()) : this.finishOp(44, 1);
            }
            readToken_atSign() {
                this.input.charCodeAt(this.state.pos + 1) === 64 && this.hasPlugin([
                    "pipelineOperator",
                    {
                        proposal: "hack",
                        topicToken: "@@"
                    }
                ]) ? this.finishOp(38, 2) : this.finishOp(26, 1);
            }
            readToken_plus_min(t) {
                let e = this.input.charCodeAt(this.state.pos + 1);
                if (e === t) {
                    this.finishOp(34, 2);
                    return;
                }
                e === 61 ? this.finishOp(30, 2) : this.finishOp(53, 1);
            }
            readToken_lt() {
                let { pos: t } = this.state, e = this.input.charCodeAt(t + 1);
                if (e === 60) {
                    if (this.input.charCodeAt(t + 2) === 61) {
                        this.finishOp(30, 3);
                        return;
                    }
                    this.finishOp(51, 2);
                    return;
                }
                if (e === 61) {
                    this.finishOp(49, 2);
                    return;
                }
                this.finishOp(47, 1);
            }
            readToken_gt() {
                let { pos: t } = this.state, e = this.input.charCodeAt(t + 1);
                if (e === 62) {
                    let s = this.input.charCodeAt(t + 2) === 62 ? 3 : 2;
                    if (this.input.charCodeAt(t + s) === 61) {
                        this.finishOp(30, s + 1);
                        return;
                    }
                    this.finishOp(52, s);
                    return;
                }
                if (e === 61) {
                    this.finishOp(49, 2);
                    return;
                }
                this.finishOp(48, 1);
            }
            readToken_eq_excl(t) {
                let e = this.input.charCodeAt(this.state.pos + 1);
                if (e === 61) {
                    this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);
                    return;
                }
                if (t === 61 && e === 62) {
                    this.state.pos += 2, this.finishToken(19);
                    return;
                }
                this.finishOp(t === 61 ? 29 : 35, 1);
            }
            readToken_question() {
                let t = this.input.charCodeAt(this.state.pos + 1), e = this.input.charCodeAt(this.state.pos + 2);
                t === 63 ? e === 61 ? this.finishOp(30, 3) : this.finishOp(40, 2) : t === 46 && !(e >= 48 && e <= 57) ? (this.state.pos += 2, this.finishToken(18)) : (++this.state.pos, this.finishToken(17));
            }
            getTokenFromCode(t) {
                switch(t){
                    case 46:
                        this.readToken_dot();
                        return;
                    case 40:
                        ++this.state.pos, this.finishToken(10);
                        return;
                    case 41:
                        ++this.state.pos, this.finishToken(11);
                        return;
                    case 59:
                        ++this.state.pos, this.finishToken(13);
                        return;
                    case 44:
                        ++this.state.pos, this.finishToken(12);
                        return;
                    case 91:
                        if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
                            if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") throw this.raise(p.TupleExpressionBarIncorrectStartSyntaxType, this.state.curPosition());
                            this.state.pos += 2, this.finishToken(2);
                        } else ++this.state.pos, this.finishToken(0);
                        return;
                    case 93:
                        ++this.state.pos, this.finishToken(3);
                        return;
                    case 123:
                        if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
                            if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") throw this.raise(p.RecordExpressionBarIncorrectStartSyntaxType, this.state.curPosition());
                            this.state.pos += 2, this.finishToken(6);
                        } else ++this.state.pos, this.finishToken(5);
                        return;
                    case 125:
                        ++this.state.pos, this.finishToken(8);
                        return;
                    case 58:
                        this.hasPlugin("functionBind") && this.input.charCodeAt(this.state.pos + 1) === 58 ? this.finishOp(15, 2) : (++this.state.pos, this.finishToken(14));
                        return;
                    case 63:
                        this.readToken_question();
                        return;
                    case 96:
                        this.readTemplateToken();
                        return;
                    case 48:
                        {
                            let e = this.input.charCodeAt(this.state.pos + 1);
                            if (e === 120 || e === 88) {
                                this.readRadixNumber(16);
                                return;
                            }
                            if (e === 111 || e === 79) {
                                this.readRadixNumber(8);
                                return;
                            }
                            if (e === 98 || e === 66) {
                                this.readRadixNumber(2);
                                return;
                            }
                        }
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                        this.readNumber(!1);
                        return;
                    case 34:
                    case 39:
                        this.readString(t);
                        return;
                    case 47:
                        this.readToken_slash();
                        return;
                    case 37:
                    case 42:
                        this.readToken_mult_modulo(t);
                        return;
                    case 124:
                    case 38:
                        this.readToken_pipe_amp(t);
                        return;
                    case 94:
                        this.readToken_caret();
                        return;
                    case 43:
                    case 45:
                        this.readToken_plus_min(t);
                        return;
                    case 60:
                        this.readToken_lt();
                        return;
                    case 62:
                        this.readToken_gt();
                        return;
                    case 61:
                    case 33:
                        this.readToken_eq_excl(t);
                        return;
                    case 126:
                        this.finishOp(36, 1);
                        return;
                    case 64:
                        this.readToken_atSign();
                        return;
                    case 35:
                        this.readToken_numberSign();
                        return;
                    case 92:
                        this.readWord();
                        return;
                    default:
                        if (j(t)) {
                            this.readWord(t);
                            return;
                        }
                }
                throw this.raise(p.InvalidOrUnexpectedToken, this.state.curPosition(), {
                    unexpected: String.fromCodePoint(t)
                });
            }
            finishOp(t, e) {
                let s = this.input.slice(this.state.pos, this.state.pos + e);
                this.state.pos += e, this.finishToken(t, s);
            }
            readRegexp() {
                let t = this.state.startLoc, e = this.state.start + 1, s, i, { pos: r } = this.state;
                for(;; ++r){
                    if (r >= this.length) throw this.raise(p.UnterminatedRegExp, L(t, 1));
                    let l = this.input.charCodeAt(r);
                    if (de(l)) throw this.raise(p.UnterminatedRegExp, L(t, 1));
                    if (s) s = !1;
                    else {
                        if (l === 91) i = !0;
                        else if (l === 93 && i) i = !1;
                        else if (l === 47 && !i) break;
                        s = l === 92;
                    }
                }
                let n = this.input.slice(e, r);
                ++r;
                let o = "", h = ()=>L(t, r + 2 - e);
                for(; r < this.length;){
                    let l = this.codePointAtPos(r), c = String.fromCharCode(l);
                    if (Ri.has(l)) l === 118 ? o.includes("u") && this.raise(p.IncompatibleRegExpUVFlags, h()) : l === 117 && o.includes("v") && this.raise(p.IncompatibleRegExpUVFlags, h()), o.includes(c) && this.raise(p.DuplicateRegExpFlags, h());
                    else if (Z(l) || l === 92) this.raise(p.MalformedRegExpFlags, h());
                    else break;
                    ++r, o += c;
                }
                this.state.pos = r, this.finishToken(137, {
                    pattern: n,
                    flags: o
                });
            }
            readInt(t, e, s = !1, i = !0) {
                let { n: r, pos: n } = as(this.input, this.state.pos, this.state.lineStart, this.state.curLine, t, e, s, i, this.errorHandlers_readInt, !1);
                return this.state.pos = n, r;
            }
            readRadixNumber(t) {
                let e = this.state.curPosition(), s = !1;
                this.state.pos += 2;
                let i = this.readInt(t);
                i == null && this.raise(p.InvalidDigit, L(e, 2), {
                    radix: t
                });
                let r = this.input.charCodeAt(this.state.pos);
                if (r === 110) ++this.state.pos, s = !0;
                else if (r === 109) throw this.raise(p.InvalidDecimal, e);
                if (j(this.codePointAtPos(this.state.pos))) throw this.raise(p.NumberIdentifier, this.state.curPosition());
                if (s) {
                    let n = this.input.slice(e.index, this.state.pos).replace(/[_n]/g, "");
                    this.finishToken(135, n);
                    return;
                }
                this.finishToken(134, i);
            }
            readNumber(t) {
                let e = this.state.pos, s = this.state.curPosition(), i = !1, r = !1, n = !1, o = !1, h = !1;
                !t && this.readInt(10) === null && this.raise(p.InvalidNumber, this.state.curPosition());
                let l = this.state.pos - e >= 2 && this.input.charCodeAt(e) === 48;
                if (l) {
                    let d = this.input.slice(e, this.state.pos);
                    if (this.recordStrictModeErrors(p.StrictOctalLiteral, s), !this.state.strict) {
                        let y = d.indexOf("_");
                        y > 0 && this.raise(p.ZeroDigitNumericSeparator, L(s, y));
                    }
                    h = l && !/[89]/.test(d);
                }
                let c = this.input.charCodeAt(this.state.pos);
                if (c === 46 && !h && (++this.state.pos, this.readInt(10), i = !0, c = this.input.charCodeAt(this.state.pos)), (c === 69 || c === 101) && !h && (c = this.input.charCodeAt(++this.state.pos), (c === 43 || c === 45) && ++this.state.pos, this.readInt(10) === null && this.raise(p.InvalidOrMissingExponent, s), i = !0, o = !0, c = this.input.charCodeAt(this.state.pos)), c === 110 && ((i || l) && this.raise(p.InvalidBigIntLiteral, s), ++this.state.pos, r = !0), c === 109 && (this.expectPlugin("decimal", this.state.curPosition()), (o || l) && this.raise(p.InvalidDecimal, s), ++this.state.pos, n = !0), j(this.codePointAtPos(this.state.pos))) throw this.raise(p.NumberIdentifier, this.state.curPosition());
                let u = this.input.slice(e, this.state.pos).replace(/[_mn]/g, "");
                if (r) {
                    this.finishToken(135, u);
                    return;
                }
                if (n) {
                    this.finishToken(136, u);
                    return;
                }
                let f = h ? parseInt(u, 8) : parseFloat(u);
                this.finishToken(134, f);
            }
            readCodePoint(t) {
                let { code: e, pos: s } = ns(this.input, this.state.pos, this.state.lineStart, this.state.curLine, t, this.errorHandlers_readCodePoint);
                return this.state.pos = s, e;
            }
            readString(t) {
                let { str: e, pos: s, curLine: i, lineStart: r } = jt(t === 34 ? "double" : "single", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);
                this.state.pos = s + 1, this.state.lineStart = r, this.state.curLine = i, this.finishToken(133, e);
            }
            readTemplateContinuation() {
                this.match(8) || this.unexpected(null, 8), this.state.pos--, this.readTemplateToken();
            }
            readTemplateToken() {
                let t = this.input[this.state.pos], { str: e, firstInvalidLoc: s, pos: i, curLine: r, lineStart: n } = jt("template", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);
                this.state.pos = i + 1, this.state.lineStart = n, this.state.curLine = r, s && (this.state.firstInvalidTemplateEscapePos = new F(s.curLine, s.pos - s.lineStart, s.pos)), this.input.codePointAt(i) === 96 ? this.finishToken(24, s ? null : t + e + "`") : (this.state.pos++, this.finishToken(25, s ? null : t + e + "${"));
            }
            recordStrictModeErrors(t, e) {
                let s = e.index;
                this.state.strict && !this.state.strictErrors.has(s) ? this.raise(t, e) : this.state.strictErrors.set(s, [
                    t,
                    e
                ]);
            }
            readWord1(t) {
                this.state.containsEsc = !1;
                let e = "", s = this.state.pos, i = this.state.pos;
                for(t !== void 0 && (this.state.pos += t <= 65535 ? 1 : 2); this.state.pos < this.length;){
                    let r = this.codePointAtPos(this.state.pos);
                    if (Z(r)) this.state.pos += r <= 65535 ? 1 : 2;
                    else if (r === 92) {
                        this.state.containsEsc = !0, e += this.input.slice(i, this.state.pos);
                        let n = this.state.curPosition(), o = this.state.pos === s ? j : Z;
                        if (this.input.charCodeAt(++this.state.pos) !== 117) {
                            this.raise(p.MissingUnicodeEscape, this.state.curPosition()), i = this.state.pos - 1;
                            continue;
                        }
                        ++this.state.pos;
                        let h = this.readCodePoint(!0);
                        h !== null && (o(h) || this.raise(p.EscapedCharNotAnIdentifier, n), e += String.fromCodePoint(h)), i = this.state.pos;
                    } else break;
                }
                return e + this.input.slice(i, this.state.pos);
            }
            readWord(t) {
                let e = this.readWord1(t), s = dt.get(e);
                s !== void 0 ? this.finishToken(s, H(s)) : this.finishToken(132, e);
            }
            checkKeywordEscapes() {
                let { type: t } = this.state;
                Tt(t) && this.state.containsEsc && this.raise(p.InvalidEscapedReservedWord, this.state.startLoc, {
                    reservedWord: H(t)
                });
            }
            raise(t, e, s = {}) {
                let i = e instanceof F ? e : e.loc.start, r = t(i, s);
                if (!this.options.errorRecovery) throw r;
                return this.isLookahead || this.state.errors.push(r), r;
            }
            raiseOverwrite(t, e, s = {}) {
                let i = e instanceof F ? e : e.loc.start, r = i.index, n = this.state.errors;
                for(let o = n.length - 1; o >= 0; o--){
                    let h = n[o];
                    if (h.loc.index === r) return n[o] = t(i, s);
                    if (h.loc.index < r) break;
                }
                return this.raise(t, e, s);
            }
            updateContext(t) {}
            unexpected(t, e) {
                throw this.raise(p.UnexpectedToken, t ?? this.state.startLoc, {
                    expected: e ? H(e) : null
                });
            }
            expectPlugin(t, e) {
                if (this.hasPlugin(t)) return !0;
                throw this.raise(p.MissingPlugin, e ?? this.state.startLoc, {
                    missingPlugin: [
                        t
                    ]
                });
            }
            expectOnePlugin(t) {
                if (!t.some((e)=>this.hasPlugin(e))) throw this.raise(p.MissingOneOfPlugins, this.state.startLoc, {
                    missingPlugin: t
                });
            }
            errorBuilder(t) {
                return (e, s, i)=>{
                    this.raise(t, pe(e, s, i));
                };
            }
        }, it = class {
            constructor(){
                this.privateNames = new Set, this.loneAccessors = new Map, this.undefinedPrivateNames = new Map;
            }
        }, rt = class {
            constructor(t){
                this.parser = void 0, this.stack = [], this.undefinedPrivateNames = new Map, this.parser = t;
            }
            current() {
                return this.stack[this.stack.length - 1];
            }
            enter() {
                this.stack.push(new it);
            }
            exit() {
                let t = this.stack.pop(), e = this.current();
                for (let [s, i] of Array.from(t.undefinedPrivateNames))e ? e.undefinedPrivateNames.has(s) || e.undefinedPrivateNames.set(s, i) : this.parser.raise(p.InvalidPrivateFieldResolution, i, {
                    identifierName: s
                });
            }
            declarePrivateName(t, e, s) {
                let { privateNames: i, loneAccessors: r, undefinedPrivateNames: n } = this.current(), o = i.has(t);
                if (e & 3) {
                    let h = o && r.get(t);
                    if (h) {
                        let l = h & 4, c = e & 4, u = h & 3, f = e & 3;
                        o = u === f || l !== c, o || r.delete(t);
                    } else o || r.set(t, e);
                }
                o && this.parser.raise(p.PrivateNameRedeclaration, s, {
                    identifierName: t
                }), i.add(t), n.delete(t);
            }
            usePrivateName(t, e) {
                let s;
                for (s of this.stack)if (s.privateNames.has(t)) return;
                s ? s.undefinedPrivateNames.set(t, e) : this.parser.raise(p.InvalidPrivateFieldResolution, e, {
                    identifierName: t
                });
            }
        }, se = class {
            constructor(t = 0){
                this.type = t;
            }
            canBeArrowParameterDeclaration() {
                return this.type === 2 || this.type === 1;
            }
            isCertainlyParameterDeclaration() {
                return this.type === 3;
            }
        }, Me = class extends se {
            constructor(t){
                super(t), this.declarationErrors = new Map;
            }
            recordDeclarationError(t, e) {
                let s = e.index;
                this.declarationErrors.set(s, [
                    t,
                    e
                ]);
            }
            clearDeclarationError(t) {
                this.declarationErrors.delete(t);
            }
            iterateErrors(t) {
                this.declarationErrors.forEach(t);
            }
        }, at = class {
            constructor(t){
                this.parser = void 0, this.stack = [
                    new se
                ], this.parser = t;
            }
            enter(t) {
                this.stack.push(t);
            }
            exit() {
                this.stack.pop();
            }
            recordParameterInitializerError(t, e) {
                let s = e.loc.start, { stack: i } = this, r = i.length - 1, n = i[r];
                for(; !n.isCertainlyParameterDeclaration();){
                    if (n.canBeArrowParameterDeclaration()) n.recordDeclarationError(t, s);
                    else return;
                    n = i[--r];
                }
                this.parser.raise(t, s);
            }
            recordArrowParameterBindingError(t, e) {
                let { stack: s } = this, i = s[s.length - 1], r = e.loc.start;
                if (i.isCertainlyParameterDeclaration()) this.parser.raise(t, r);
                else if (i.canBeArrowParameterDeclaration()) i.recordDeclarationError(t, r);
                else return;
            }
            recordAsyncArrowParametersError(t) {
                let { stack: e } = this, s = e.length - 1, i = e[s];
                for(; i.canBeArrowParameterDeclaration();)i.type === 2 && i.recordDeclarationError(p.AwaitBindingIdentifier, t), i = e[--s];
            }
            validateAsPattern() {
                let { stack: t } = this, e = t[t.length - 1];
                e.canBeArrowParameterDeclaration() && e.iterateErrors(([s, i])=>{
                    this.parser.raise(s, i);
                    let r = t.length - 2, n = t[r];
                    for(; n.canBeArrowParameterDeclaration();)n.clearDeclarationError(i.index), n = t[--r];
                });
            }
        };
        function _i() {
            return new se(3);
        }
        function Ui() {
            return new Me(1);
        }
        function ji() {
            return new Me(2);
        }
        function os() {
            return new se;
        }
        var nt = class {
            constructor(){
                this.stacks = [];
            }
            enter(t) {
                this.stacks.push(t);
            }
            exit() {
                this.stacks.pop();
            }
            currentFlags() {
                return this.stacks[this.stacks.length - 1];
            }
            get hasAwait() {
                return (this.currentFlags() & 2) > 0;
            }
            get hasYield() {
                return (this.currentFlags() & 1) > 0;
            }
            get hasReturn() {
                return (this.currentFlags() & 4) > 0;
            }
            get hasIn() {
                return (this.currentFlags() & 8) > 0;
            }
        };
        function ve(a, t) {
            return (a ? 2 : 0) | (t ? 1 : 0);
        }
        var ot = class extends st {
            addExtra(t, e, s, i = !0) {
                if (!t) return;
                let r = t.extra = t.extra || {};
                i ? r[e] = s : Object.defineProperty(r, e, {
                    enumerable: i,
                    value: s
                });
            }
            isContextual(t) {
                return this.state.type === t && !this.state.containsEsc;
            }
            isUnparsedContextual(t, e) {
                let s = t + e.length;
                if (this.input.slice(t, s) === e) {
                    let i = this.input.charCodeAt(s);
                    return !(Z(i) || (i & 64512) === 55296);
                }
                return !1;
            }
            isLookaheadContextual(t) {
                let e = this.nextTokenStart();
                return this.isUnparsedContextual(e, t);
            }
            eatContextual(t) {
                return this.isContextual(t) ? (this.next(), !0) : !1;
            }
            expectContextual(t, e) {
                if (!this.eatContextual(t)) {
                    if (e != null) throw this.raise(e, this.state.startLoc);
                    this.unexpected(null, t);
                }
            }
            canInsertSemicolon() {
                return this.match(139) || this.match(8) || this.hasPrecedingLineBreak();
            }
            hasPrecedingLineBreak() {
                return rs.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));
            }
            hasFollowingLineBreak() {
                return _t.lastIndex = this.state.end, _t.test(this.input);
            }
            isLineTerminator() {
                return this.eat(13) || this.canInsertSemicolon();
            }
            semicolon(t = !0) {
                (t ? this.isLineTerminator() : this.eat(13)) || this.raise(p.MissingSemicolon, this.state.lastTokEndLoc);
            }
            expect(t, e) {
                this.eat(t) || this.unexpected(e, t);
            }
            tryParse(t, e = this.state.clone()) {
                let s = {
                    node: null
                };
                try {
                    let i = t((r = null)=>{
                        throw s.node = r, s;
                    });
                    if (this.state.errors.length > e.errors.length) {
                        let r = this.state;
                        return this.state = e, this.state.tokensLength = r.tokensLength, {
                            node: i,
                            error: r.errors[e.errors.length],
                            thrown: !1,
                            aborted: !1,
                            failState: r
                        };
                    }
                    return {
                        node: i,
                        error: null,
                        thrown: !1,
                        aborted: !1,
                        failState: null
                    };
                } catch (i) {
                    let r = this.state;
                    if (this.state = e, i instanceof SyntaxError) return {
                        node: null,
                        error: i,
                        thrown: !0,
                        aborted: !1,
                        failState: r
                    };
                    if (i === s) return {
                        node: s.node,
                        error: null,
                        thrown: !1,
                        aborted: !0,
                        failState: r
                    };
                    throw i;
                }
            }
            checkExpressionErrors(t, e) {
                if (!t) return !1;
                let { shorthandAssignLoc: s, doubleProtoLoc: i, privateKeyLoc: r, optionalParametersLoc: n } = t, o = !!s || !!i || !!n || !!r;
                if (!e) return o;
                s != null && this.raise(p.InvalidCoverInitializedName, s), i != null && this.raise(p.DuplicateProto, i), r != null && this.raise(p.UnexpectedPrivateField, r), n != null && this.unexpected(n);
            }
            isLiteralPropertyName() {
                return Gt(this.state.type);
            }
            isPrivateName(t) {
                return t.type === "PrivateName";
            }
            getPrivateNameSV(t) {
                return t.id.name;
            }
            hasPropertyAsPrivateName(t) {
                return (t.type === "MemberExpression" || t.type === "OptionalMemberExpression") && this.isPrivateName(t.property);
            }
            isObjectProperty(t) {
                return t.type === "ObjectProperty";
            }
            isObjectMethod(t) {
                return t.type === "ObjectMethod";
            }
            initializeScopes(t = this.options.sourceType === "module") {
                let e = this.state.labels;
                this.state.labels = [];
                let s = this.exportedIdentifiers;
                this.exportedIdentifiers = new Set;
                let i = this.inModule;
                this.inModule = t;
                let r = this.scope, n = this.getScopeHandler();
                this.scope = new n(this, t);
                let o = this.prodParam;
                this.prodParam = new nt;
                let h = this.classScope;
                this.classScope = new rt(this);
                let l = this.expressionScope;
                return this.expressionScope = new at(this), ()=>{
                    this.state.labels = e, this.exportedIdentifiers = s, this.inModule = i, this.scope = r, this.prodParam = o, this.classScope = h, this.expressionScope = l;
                };
            }
            enterInitialScopes() {
                let t = 0;
                this.inModule && (t |= 2), this.scope.enter(1), this.prodParam.enter(t);
            }
            checkDestructuringPrivate(t) {
                let { privateKeyLoc: e } = t;
                e !== null && this.expectPlugin("destructuringPrivate", e);
            }
        }, ee = class {
            constructor(){
                this.shorthandAssignLoc = null, this.doubleProtoLoc = null, this.privateKeyLoc = null, this.optionalParametersLoc = null;
            }
        }, ie = class {
            constructor(t, e, s){
                this.type = "", this.start = e, this.end = 0, this.loc = new te(s), t != null && t.options.ranges && (this.range = [
                    e,
                    0
                ]), t != null && t.filename && (this.loc.filename = t.filename);
            }
        }, St = ie.prototype;
        St.__clone = function() {
            let a = new ie(void 0, this.start, this.loc.start), t = Object.keys(this);
            for(let e = 0, s = t.length; e < s; e++){
                let i = t[e];
                i !== "leadingComments" && i !== "trailingComments" && i !== "innerComments" && (a[i] = this[i]);
            }
            return a;
        };
        function $i(a) {
            return V(a);
        }
        function V(a) {
            let { type: t, start: e, end: s, loc: i, range: r, extra: n, name: o } = a, h = Object.create(St);
            return h.type = t, h.start = e, h.end = s, h.loc = i, h.range = r, h.extra = n, h.name = o, t === "Placeholder" && (h.expectedNode = a.expectedNode), h;
        }
        function Vi(a) {
            let { type: t, start: e, end: s, loc: i, range: r, extra: n } = a;
            if (t === "Placeholder") return $i(a);
            let o = Object.create(St);
            return o.type = t, o.start = e, o.end = s, o.loc = i, o.range = r, a.raw !== void 0 ? o.raw = a.raw : o.extra = n, o.value = a.value, o;
        }
        var ht = class extends ot {
            startNode() {
                let t = this.state.startLoc;
                return new ie(this, t.index, t);
            }
            startNodeAt(t) {
                return new ie(this, t.index, t);
            }
            startNodeAtNode(t) {
                return this.startNodeAt(t.loc.start);
            }
            finishNode(t, e) {
                return this.finishNodeAt(t, e, this.state.lastTokEndLoc);
            }
            finishNodeAt(t, e, s) {
                return t.type = e, t.end = s.index, t.loc.end = s, this.options.ranges && (t.range[1] = s.index), this.options.attachComment && this.processComment(t), t;
            }
            resetStartLocation(t, e) {
                t.start = e.index, t.loc.start = e, this.options.ranges && (t.range[0] = e.index);
            }
            resetEndLocation(t, e = this.state.lastTokEndLoc) {
                t.end = e.index, t.loc.end = e, this.options.ranges && (t.range[1] = e.index);
            }
            resetStartLocationFromNode(t, e) {
                this.resetStartLocation(t, e.loc.start);
            }
        }, qi = new Set([
            "_",
            "any",
            "bool",
            "boolean",
            "empty",
            "extends",
            "false",
            "interface",
            "mixed",
            "null",
            "number",
            "static",
            "string",
            "true",
            "typeof",
            "void"
        ]), g = $`flow`({
            AmbiguousConditionalArrow: "Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.",
            AmbiguousDeclareModuleKind: "Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.",
            AssignReservedType: ({ reservedType: a })=>`Cannot overwrite reserved type ${a}.`,
            DeclareClassElement: "The `declare` modifier can only appear on class fields.",
            DeclareClassFieldInitializer: "Initializers are not allowed in fields with the `declare` modifier.",
            DuplicateDeclareModuleExports: "Duplicate `declare module.exports` statement.",
            EnumBooleanMemberNotInitialized: ({ memberName: a, enumName: t })=>`Boolean enum members need to be initialized. Use either \`${a} = true,\` or \`${a} = false,\` in enum \`${t}\`.`,
            EnumDuplicateMemberName: ({ memberName: a, enumName: t })=>`Enum member names need to be unique, but the name \`${a}\` has already been used before in enum \`${t}\`.`,
            EnumInconsistentMemberValues: ({ enumName: a })=>`Enum \`${a}\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,
            EnumInvalidExplicitType: ({ invalidEnumType: a, enumName: t })=>`Enum type \`${a}\` is not valid. Use one of \`boolean\`, \`number\`, \`string\`, or \`symbol\` in enum \`${t}\`.`,
            EnumInvalidExplicitTypeUnknownSupplied: ({ enumName: a })=>`Supplied enum type is not valid. Use one of \`boolean\`, \`number\`, \`string\`, or \`symbol\` in enum \`${a}\`.`,
            EnumInvalidMemberInitializerPrimaryType: ({ enumName: a, memberName: t, explicitType: e })=>`Enum \`${a}\` has type \`${e}\`, so the initializer of \`${t}\` needs to be a ${e} literal.`,
            EnumInvalidMemberInitializerSymbolType: ({ enumName: a, memberName: t })=>`Symbol enum members cannot be initialized. Use \`${t},\` in enum \`${a}\`.`,
            EnumInvalidMemberInitializerUnknownType: ({ enumName: a, memberName: t })=>`The enum member initializer for \`${t}\` needs to be a literal (either a boolean, number, or string) in enum \`${a}\`.`,
            EnumInvalidMemberName: ({ enumName: a, memberName: t, suggestion: e })=>`Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \`${t}\`, consider using \`${e}\`, in enum \`${a}\`.`,
            EnumNumberMemberNotInitialized: ({ enumName: a, memberName: t })=>`Number enum members need to be initialized, e.g. \`${t} = 1\` in enum \`${a}\`.`,
            EnumStringMemberInconsistentlyInitialized: ({ enumName: a })=>`String enum members need to consistently either all use initializers, or use no initializers, in enum \`${a}\`.`,
            GetterMayNotHaveThisParam: "A getter cannot have a `this` parameter.",
            ImportReflectionHasImportType: "An `import module` declaration can not use `type` or `typeof` keyword.",
            ImportTypeShorthandOnlyInPureImport: "The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.",
            InexactInsideExact: "Explicit inexact syntax cannot appear inside an explicit exact object type.",
            InexactInsideNonObject: "Explicit inexact syntax cannot appear in class or interface definitions.",
            InexactVariance: "Explicit inexact syntax cannot have variance.",
            InvalidNonTypeImportInDeclareModule: "Imports within a `declare module` body must always be `import type` or `import typeof`.",
            MissingTypeParamDefault: "Type parameter declaration needs a default, since a preceding type parameter declaration has a default.",
            NestedDeclareModule: "`declare module` cannot be used inside another `declare module`.",
            NestedFlowComment: "Cannot have a flow comment inside another flow comment.",
            PatternIsOptional: Object.assign({
                message: "A binding pattern parameter cannot be optional in an implementation signature."
            }, {
                reasonCode: "OptionalBindingPattern"
            }),
            SetterMayNotHaveThisParam: "A setter cannot have a `this` parameter.",
            SpreadVariance: "Spread properties cannot have variance.",
            ThisParamAnnotationRequired: "A type annotation is required for the `this` parameter.",
            ThisParamBannedInConstructor: "Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.",
            ThisParamMayNotBeOptional: "The `this` parameter cannot be optional.",
            ThisParamMustBeFirst: "The `this` parameter must be the first function parameter.",
            ThisParamNoDefault: "The `this` parameter may not have a default value.",
            TypeBeforeInitializer: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",
            TypeCastInPattern: "The type cast expression is expected to be wrapped with parenthesis.",
            UnexpectedExplicitInexactInObject: "Explicit inexact syntax must appear at the end of an inexact object.",
            UnexpectedReservedType: ({ reservedType: a })=>`Unexpected reserved type ${a}.`,
            UnexpectedReservedUnderscore: "`_` is only allowed as a type argument to call or new.",
            UnexpectedSpaceBetweenModuloChecks: "Spaces between `%` and `checks` are not allowed here.",
            UnexpectedSpreadType: "Spread operator cannot appear in class or interface definitions.",
            UnexpectedSubtractionOperand: 'Unexpected token, expected "number" or "bigint".',
            UnexpectedTokenAfterTypeParameter: "Expected an arrow function after this type parameter declaration.",
            UnexpectedTypeParameterBeforeAsyncArrowFunction: "Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.",
            UnsupportedDeclareExportKind: ({ unsupportedExportKind: a, suggestion: t })=>`\`declare export ${a}\` is not supported. Use \`${t}\` instead.`,
            UnsupportedStatementInDeclareModule: "Only declares and type imports are allowed inside declare module.",
            UnterminatedFlowComment: "Unterminated flow-comment."
        });
        function zi(a) {
            return a.type === "DeclareExportAllDeclaration" || a.type === "DeclareExportDeclaration" && (!a.declaration || a.declaration.type !== "TypeAlias" && a.declaration.type !== "InterfaceDeclaration");
        }
        function $t(a) {
            return a.importKind === "type" || a.importKind === "typeof";
        }
        var Ki = {
            const: "declare export var",
            let: "declare export var",
            type: "export type",
            interface: "export interface"
        };
        function Hi(a, t) {
            let e = [], s = [];
            for(let i = 0; i < a.length; i++)(t(a[i], i, a) ? e : s).push(a[i]);
            return [
                e,
                s
            ];
        }
        var Wi = /\*?\s*@((?:no)?flow)\b/, Ji = (a)=>class extends a {
                constructor(...e){
                    super(...e), this.flowPragma = void 0;
                }
                getScopeHandler() {
                    return Ye;
                }
                shouldParseTypes() {
                    return this.getPluginOption("flow", "all") || this.flowPragma === "flow";
                }
                shouldParseEnums() {
                    return !!this.getPluginOption("flow", "enums");
                }
                finishToken(e, s) {
                    e !== 133 && e !== 13 && e !== 28 && this.flowPragma === void 0 && (this.flowPragma = null), super.finishToken(e, s);
                }
                addComment(e) {
                    if (this.flowPragma === void 0) {
                        let s = Wi.exec(e.value);
                        if (s) {
                            if (s[1] === "flow") this.flowPragma = "flow";
                            else if (s[1] === "noflow") this.flowPragma = "noflow";
                            else throw new Error("Unexpected flow pragma");
                        }
                    }
                    super.addComment(e);
                }
                flowParseTypeInitialiser(e) {
                    let s = this.state.inType;
                    this.state.inType = !0, this.expect(e || 14);
                    let i = this.flowParseType();
                    return this.state.inType = s, i;
                }
                flowParsePredicate() {
                    let e = this.startNode(), s = this.state.startLoc;
                    return this.next(), this.expectContextual(110), this.state.lastTokStartLoc.index > s.index + 1 && this.raise(g.UnexpectedSpaceBetweenModuloChecks, s), this.eat(10) ? (e.value = super.parseExpression(), this.expect(11), this.finishNode(e, "DeclaredPredicate")) : this.finishNode(e, "InferredPredicate");
                }
                flowParseTypeAndPredicateInitialiser() {
                    let e = this.state.inType;
                    this.state.inType = !0, this.expect(14);
                    let s = null, i = null;
                    return this.match(54) ? (this.state.inType = e, i = this.flowParsePredicate()) : (s = this.flowParseType(), this.state.inType = e, this.match(54) && (i = this.flowParsePredicate())), [
                        s,
                        i
                    ];
                }
                flowParseDeclareClass(e) {
                    return this.next(), this.flowParseInterfaceish(e, !0), this.finishNode(e, "DeclareClass");
                }
                flowParseDeclareFunction(e) {
                    this.next();
                    let s = e.id = this.parseIdentifier(), i = this.startNode(), r = this.startNode();
                    this.match(47) ? i.typeParameters = this.flowParseTypeParameterDeclaration() : i.typeParameters = null, this.expect(10);
                    let n = this.flowParseFunctionTypeParams();
                    return i.params = n.params, i.rest = n.rest, i.this = n._this, this.expect(11), [i.returnType, e.predicate] = this.flowParseTypeAndPredicateInitialiser(), r.typeAnnotation = this.finishNode(i, "FunctionTypeAnnotation"), s.typeAnnotation = this.finishNode(r, "TypeAnnotation"), this.resetEndLocation(s), this.semicolon(), this.scope.declareName(e.id.name, 2048, e.id.loc.start), this.finishNode(e, "DeclareFunction");
                }
                flowParseDeclare(e, s) {
                    if (this.match(80)) return this.flowParseDeclareClass(e);
                    if (this.match(68)) return this.flowParseDeclareFunction(e);
                    if (this.match(74)) return this.flowParseDeclareVariable(e);
                    if (this.eatContextual(127)) return this.match(16) ? this.flowParseDeclareModuleExports(e) : (s && this.raise(g.NestedDeclareModule, this.state.lastTokStartLoc), this.flowParseDeclareModule(e));
                    if (this.isContextual(130)) return this.flowParseDeclareTypeAlias(e);
                    if (this.isContextual(131)) return this.flowParseDeclareOpaqueType(e);
                    if (this.isContextual(129)) return this.flowParseDeclareInterface(e);
                    if (this.match(82)) return this.flowParseDeclareExportDeclaration(e, s);
                    this.unexpected();
                }
                flowParseDeclareVariable(e) {
                    return this.next(), e.id = this.flowParseTypeAnnotatableIdentifier(!0), this.scope.declareName(e.id.name, 5, e.id.loc.start), this.semicolon(), this.finishNode(e, "DeclareVariable");
                }
                flowParseDeclareModule(e) {
                    this.scope.enter(0), this.match(133) ? e.id = super.parseExprAtom() : e.id = this.parseIdentifier();
                    let s = e.body = this.startNode(), i = s.body = [];
                    for(this.expect(5); !this.match(8);){
                        let o = this.startNode();
                        this.match(83) ? (this.next(), !this.isContextual(130) && !this.match(87) && this.raise(g.InvalidNonTypeImportInDeclareModule, this.state.lastTokStartLoc), super.parseImport(o)) : (this.expectContextual(125, g.UnsupportedStatementInDeclareModule), o = this.flowParseDeclare(o, !0)), i.push(o);
                    }
                    this.scope.exit(), this.expect(8), this.finishNode(s, "BlockStatement");
                    let r = null, n = !1;
                    return i.forEach((o)=>{
                        zi(o) ? (r === "CommonJS" && this.raise(g.AmbiguousDeclareModuleKind, o), r = "ES") : o.type === "DeclareModuleExports" && (n && this.raise(g.DuplicateDeclareModuleExports, o), r === "ES" && this.raise(g.AmbiguousDeclareModuleKind, o), r = "CommonJS", n = !0);
                    }), e.kind = r || "CommonJS", this.finishNode(e, "DeclareModule");
                }
                flowParseDeclareExportDeclaration(e, s) {
                    if (this.expect(82), this.eat(65)) return this.match(68) || this.match(80) ? e.declaration = this.flowParseDeclare(this.startNode()) : (e.declaration = this.flowParseType(), this.semicolon()), e.default = !0, this.finishNode(e, "DeclareExportDeclaration");
                    if (this.match(75) || this.isLet() || (this.isContextual(130) || this.isContextual(129)) && !s) {
                        let i = this.state.value;
                        throw this.raise(g.UnsupportedDeclareExportKind, this.state.startLoc, {
                            unsupportedExportKind: i,
                            suggestion: Ki[i]
                        });
                    }
                    if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(131)) return e.declaration = this.flowParseDeclare(this.startNode()), e.default = !1, this.finishNode(e, "DeclareExportDeclaration");
                    if (this.match(55) || this.match(5) || this.isContextual(129) || this.isContextual(130) || this.isContextual(131)) return e = this.parseExport(e, null), e.type === "ExportNamedDeclaration" && (e.type = "ExportDeclaration", e.default = !1, delete e.exportKind), e.type = "Declare" + e.type, e;
                    this.unexpected();
                }
                flowParseDeclareModuleExports(e) {
                    return this.next(), this.expectContextual(111), e.typeAnnotation = this.flowParseTypeAnnotation(), this.semicolon(), this.finishNode(e, "DeclareModuleExports");
                }
                flowParseDeclareTypeAlias(e) {
                    this.next();
                    let s = this.flowParseTypeAlias(e);
                    return s.type = "DeclareTypeAlias", s;
                }
                flowParseDeclareOpaqueType(e) {
                    this.next();
                    let s = this.flowParseOpaqueType(e, !0);
                    return s.type = "DeclareOpaqueType", s;
                }
                flowParseDeclareInterface(e) {
                    return this.next(), this.flowParseInterfaceish(e, !1), this.finishNode(e, "DeclareInterface");
                }
                flowParseInterfaceish(e, s) {
                    if (e.id = this.flowParseRestrictedIdentifier(!s, !0), this.scope.declareName(e.id.name, s ? 17 : 8201, e.id.loc.start), this.match(47) ? e.typeParameters = this.flowParseTypeParameterDeclaration() : e.typeParameters = null, e.extends = [], this.eat(81)) do e.extends.push(this.flowParseInterfaceExtends());
                    while (!s && this.eat(12));
                    if (s) {
                        if (e.implements = [], e.mixins = [], this.eatContextual(117)) do e.mixins.push(this.flowParseInterfaceExtends());
                        while (this.eat(12));
                        if (this.eatContextual(113)) do e.implements.push(this.flowParseInterfaceExtends());
                        while (this.eat(12));
                    }
                    e.body = this.flowParseObjectType({
                        allowStatic: s,
                        allowExact: !1,
                        allowSpread: !1,
                        allowProto: s,
                        allowInexact: !1
                    });
                }
                flowParseInterfaceExtends() {
                    let e = this.startNode();
                    return e.id = this.flowParseQualifiedTypeIdentifier(), this.match(47) ? e.typeParameters = this.flowParseTypeParameterInstantiation() : e.typeParameters = null, this.finishNode(e, "InterfaceExtends");
                }
                flowParseInterface(e) {
                    return this.flowParseInterfaceish(e, !1), this.finishNode(e, "InterfaceDeclaration");
                }
                checkNotUnderscore(e) {
                    e === "_" && this.raise(g.UnexpectedReservedUnderscore, this.state.startLoc);
                }
                checkReservedType(e, s, i) {
                    qi.has(e) && this.raise(i ? g.AssignReservedType : g.UnexpectedReservedType, s, {
                        reservedType: e
                    });
                }
                flowParseRestrictedIdentifier(e, s) {
                    return this.checkReservedType(this.state.value, this.state.startLoc, s), this.parseIdentifier(e);
                }
                flowParseTypeAlias(e) {
                    return e.id = this.flowParseRestrictedIdentifier(!1, !0), this.scope.declareName(e.id.name, 8201, e.id.loc.start), this.match(47) ? e.typeParameters = this.flowParseTypeParameterDeclaration() : e.typeParameters = null, e.right = this.flowParseTypeInitialiser(29), this.semicolon(), this.finishNode(e, "TypeAlias");
                }
                flowParseOpaqueType(e, s) {
                    return this.expectContextual(130), e.id = this.flowParseRestrictedIdentifier(!0, !0), this.scope.declareName(e.id.name, 8201, e.id.loc.start), this.match(47) ? e.typeParameters = this.flowParseTypeParameterDeclaration() : e.typeParameters = null, e.supertype = null, this.match(14) && (e.supertype = this.flowParseTypeInitialiser(14)), e.impltype = null, s || (e.impltype = this.flowParseTypeInitialiser(29)), this.semicolon(), this.finishNode(e, "OpaqueType");
                }
                flowParseTypeParameter(e = !1) {
                    let s = this.state.startLoc, i = this.startNode(), r = this.flowParseVariance(), n = this.flowParseTypeAnnotatableIdentifier();
                    return i.name = n.name, i.variance = r, i.bound = n.typeAnnotation, this.match(29) ? (this.eat(29), i.default = this.flowParseType()) : e && this.raise(g.MissingTypeParamDefault, s), this.finishNode(i, "TypeParameter");
                }
                flowParseTypeParameterDeclaration() {
                    let e = this.state.inType, s = this.startNode();
                    s.params = [], this.state.inType = !0, this.match(47) || this.match(142) ? this.next() : this.unexpected();
                    let i = !1;
                    do {
                        let r = this.flowParseTypeParameter(i);
                        s.params.push(r), r.default && (i = !0), this.match(48) || this.expect(12);
                    }while (!this.match(48));
                    return this.expect(48), this.state.inType = e, this.finishNode(s, "TypeParameterDeclaration");
                }
                flowParseTypeParameterInstantiation() {
                    let e = this.startNode(), s = this.state.inType;
                    e.params = [], this.state.inType = !0, this.expect(47);
                    let i = this.state.noAnonFunctionType;
                    for(this.state.noAnonFunctionType = !1; !this.match(48);)e.params.push(this.flowParseType()), this.match(48) || this.expect(12);
                    return this.state.noAnonFunctionType = i, this.expect(48), this.state.inType = s, this.finishNode(e, "TypeParameterInstantiation");
                }
                flowParseTypeParameterInstantiationCallOrNew() {
                    let e = this.startNode(), s = this.state.inType;
                    for(e.params = [], this.state.inType = !0, this.expect(47); !this.match(48);)e.params.push(this.flowParseTypeOrImplicitInstantiation()), this.match(48) || this.expect(12);
                    return this.expect(48), this.state.inType = s, this.finishNode(e, "TypeParameterInstantiation");
                }
                flowParseInterfaceType() {
                    let e = this.startNode();
                    if (this.expectContextual(129), e.extends = [], this.eat(81)) do e.extends.push(this.flowParseInterfaceExtends());
                    while (this.eat(12));
                    return e.body = this.flowParseObjectType({
                        allowStatic: !1,
                        allowExact: !1,
                        allowSpread: !1,
                        allowProto: !1,
                        allowInexact: !1
                    }), this.finishNode(e, "InterfaceTypeAnnotation");
                }
                flowParseObjectPropertyKey() {
                    return this.match(134) || this.match(133) ? super.parseExprAtom() : this.parseIdentifier(!0);
                }
                flowParseObjectTypeIndexer(e, s, i) {
                    return e.static = s, this.lookahead().type === 14 ? (e.id = this.flowParseObjectPropertyKey(), e.key = this.flowParseTypeInitialiser()) : (e.id = null, e.key = this.flowParseType()), this.expect(3), e.value = this.flowParseTypeInitialiser(), e.variance = i, this.finishNode(e, "ObjectTypeIndexer");
                }
                flowParseObjectTypeInternalSlot(e, s) {
                    return e.static = s, e.id = this.flowParseObjectPropertyKey(), this.expect(3), this.expect(3), this.match(47) || this.match(10) ? (e.method = !0, e.optional = !1, e.value = this.flowParseObjectTypeMethodish(this.startNodeAt(e.loc.start))) : (e.method = !1, this.eat(17) && (e.optional = !0), e.value = this.flowParseTypeInitialiser()), this.finishNode(e, "ObjectTypeInternalSlot");
                }
                flowParseObjectTypeMethodish(e) {
                    for(e.params = [], e.rest = null, e.typeParameters = null, e.this = null, this.match(47) && (e.typeParameters = this.flowParseTypeParameterDeclaration()), this.expect(10), this.match(78) && (e.this = this.flowParseFunctionTypeParam(!0), e.this.name = null, this.match(11) || this.expect(12)); !this.match(11) && !this.match(21);)e.params.push(this.flowParseFunctionTypeParam(!1)), this.match(11) || this.expect(12);
                    return this.eat(21) && (e.rest = this.flowParseFunctionTypeParam(!1)), this.expect(11), e.returnType = this.flowParseTypeInitialiser(), this.finishNode(e, "FunctionTypeAnnotation");
                }
                flowParseObjectTypeCallProperty(e, s) {
                    let i = this.startNode();
                    return e.static = s, e.value = this.flowParseObjectTypeMethodish(i), this.finishNode(e, "ObjectTypeCallProperty");
                }
                flowParseObjectType({ allowStatic: e, allowExact: s, allowSpread: i, allowProto: r, allowInexact: n }) {
                    let o = this.state.inType;
                    this.state.inType = !0;
                    let h = this.startNode();
                    h.callProperties = [], h.properties = [], h.indexers = [], h.internalSlots = [];
                    let l, c, u = !1;
                    for(s && this.match(6) ? (this.expect(6), l = 9, c = !0) : (this.expect(5), l = 8, c = !1), h.exact = c; !this.match(l);){
                        let d = !1, y = null, I = null, C = this.startNode();
                        if (r && this.isContextual(118)) {
                            let k = this.lookahead();
                            k.type !== 14 && k.type !== 17 && (this.next(), y = this.state.startLoc, e = !1);
                        }
                        if (e && this.isContextual(106)) {
                            let k = this.lookahead();
                            k.type !== 14 && k.type !== 17 && (this.next(), d = !0);
                        }
                        let E = this.flowParseVariance();
                        if (this.eat(0)) y != null && this.unexpected(y), this.eat(0) ? (E && this.unexpected(E.loc.start), h.internalSlots.push(this.flowParseObjectTypeInternalSlot(C, d))) : h.indexers.push(this.flowParseObjectTypeIndexer(C, d, E));
                        else if (this.match(10) || this.match(47)) y != null && this.unexpected(y), E && this.unexpected(E.loc.start), h.callProperties.push(this.flowParseObjectTypeCallProperty(C, d));
                        else {
                            let k = "init";
                            if (this.isContextual(99) || this.isContextual(104)) {
                                let oe = this.lookahead();
                                Gt(oe.type) && (k = this.state.value, this.next());
                            }
                            let Se = this.flowParseObjectTypeProperty(C, d, y, E, k, i, n ?? !c);
                            Se === null ? (u = !0, I = this.state.lastTokStartLoc) : h.properties.push(Se);
                        }
                        this.flowObjectTypeSemicolon(), I && !this.match(8) && !this.match(9) && this.raise(g.UnexpectedExplicitInexactInObject, I);
                    }
                    this.expect(l), i && (h.inexact = u);
                    let f = this.finishNode(h, "ObjectTypeAnnotation");
                    return this.state.inType = o, f;
                }
                flowParseObjectTypeProperty(e, s, i, r, n, o, h) {
                    if (this.eat(21)) return this.match(12) || this.match(13) || this.match(8) || this.match(9) ? (o ? h || this.raise(g.InexactInsideExact, this.state.lastTokStartLoc) : this.raise(g.InexactInsideNonObject, this.state.lastTokStartLoc), r && this.raise(g.InexactVariance, r), null) : (o || this.raise(g.UnexpectedSpreadType, this.state.lastTokStartLoc), i != null && this.unexpected(i), r && this.raise(g.SpreadVariance, r), e.argument = this.flowParseType(), this.finishNode(e, "ObjectTypeSpreadProperty"));
                    {
                        e.key = this.flowParseObjectPropertyKey(), e.static = s, e.proto = i != null, e.kind = n;
                        let l = !1;
                        return this.match(47) || this.match(10) ? (e.method = !0, i != null && this.unexpected(i), r && this.unexpected(r.loc.start), e.value = this.flowParseObjectTypeMethodish(this.startNodeAt(e.loc.start)), (n === "get" || n === "set") && this.flowCheckGetterSetterParams(e), !o && e.key.name === "constructor" && e.value.this && this.raise(g.ThisParamBannedInConstructor, e.value.this)) : (n !== "init" && this.unexpected(), e.method = !1, this.eat(17) && (l = !0), e.value = this.flowParseTypeInitialiser(), e.variance = r), e.optional = l, this.finishNode(e, "ObjectTypeProperty");
                    }
                }
                flowCheckGetterSetterParams(e) {
                    let s = e.kind === "get" ? 0 : 1, i = e.value.params.length + (e.value.rest ? 1 : 0);
                    e.value.this && this.raise(e.kind === "get" ? g.GetterMayNotHaveThisParam : g.SetterMayNotHaveThisParam, e.value.this), i !== s && this.raise(e.kind === "get" ? p.BadGetterArity : p.BadSetterArity, e), e.kind === "set" && e.value.rest && this.raise(p.BadSetterRestParameter, e);
                }
                flowObjectTypeSemicolon() {
                    !this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9) && this.unexpected();
                }
                flowParseQualifiedTypeIdentifier(e, s) {
                    var i;
                    (i = e) != null || (e = this.state.startLoc);
                    let r = s || this.flowParseRestrictedIdentifier(!0);
                    for(; this.eat(16);){
                        let n = this.startNodeAt(e);
                        n.qualification = r, n.id = this.flowParseRestrictedIdentifier(!0), r = this.finishNode(n, "QualifiedTypeIdentifier");
                    }
                    return r;
                }
                flowParseGenericType(e, s) {
                    let i = this.startNodeAt(e);
                    return i.typeParameters = null, i.id = this.flowParseQualifiedTypeIdentifier(e, s), this.match(47) && (i.typeParameters = this.flowParseTypeParameterInstantiation()), this.finishNode(i, "GenericTypeAnnotation");
                }
                flowParseTypeofType() {
                    let e = this.startNode();
                    return this.expect(87), e.argument = this.flowParsePrimaryType(), this.finishNode(e, "TypeofTypeAnnotation");
                }
                flowParseTupleType() {
                    let e = this.startNode();
                    for(e.types = [], this.expect(0); this.state.pos < this.length && !this.match(3) && (e.types.push(this.flowParseType()), !this.match(3));)this.expect(12);
                    return this.expect(3), this.finishNode(e, "TupleTypeAnnotation");
                }
                flowParseFunctionTypeParam(e) {
                    let s = null, i = !1, r = null, n = this.startNode(), o = this.lookahead(), h = this.state.type === 78;
                    return o.type === 14 || o.type === 17 ? (h && !e && this.raise(g.ThisParamMustBeFirst, n), s = this.parseIdentifier(h), this.eat(17) && (i = !0, h && this.raise(g.ThisParamMayNotBeOptional, n)), r = this.flowParseTypeInitialiser()) : r = this.flowParseType(), n.name = s, n.optional = i, n.typeAnnotation = r, this.finishNode(n, "FunctionTypeParam");
                }
                reinterpretTypeAsFunctionTypeParam(e) {
                    let s = this.startNodeAt(e.loc.start);
                    return s.name = null, s.optional = !1, s.typeAnnotation = e, this.finishNode(s, "FunctionTypeParam");
                }
                flowParseFunctionTypeParams(e = []) {
                    let s = null, i = null;
                    for(this.match(78) && (i = this.flowParseFunctionTypeParam(!0), i.name = null, this.match(11) || this.expect(12)); !this.match(11) && !this.match(21);)e.push(this.flowParseFunctionTypeParam(!1)), this.match(11) || this.expect(12);
                    return this.eat(21) && (s = this.flowParseFunctionTypeParam(!1)), {
                        params: e,
                        rest: s,
                        _this: i
                    };
                }
                flowIdentToTypeAnnotation(e, s, i) {
                    switch(i.name){
                        case "any":
                            return this.finishNode(s, "AnyTypeAnnotation");
                        case "bool":
                        case "boolean":
                            return this.finishNode(s, "BooleanTypeAnnotation");
                        case "mixed":
                            return this.finishNode(s, "MixedTypeAnnotation");
                        case "empty":
                            return this.finishNode(s, "EmptyTypeAnnotation");
                        case "number":
                            return this.finishNode(s, "NumberTypeAnnotation");
                        case "string":
                            return this.finishNode(s, "StringTypeAnnotation");
                        case "symbol":
                            return this.finishNode(s, "SymbolTypeAnnotation");
                        default:
                            return this.checkNotUnderscore(i.name), this.flowParseGenericType(e, i);
                    }
                }
                flowParsePrimaryType() {
                    let e = this.state.startLoc, s = this.startNode(), i, r, n = !1, o = this.state.noAnonFunctionType;
                    switch(this.state.type){
                        case 5:
                            return this.flowParseObjectType({
                                allowStatic: !1,
                                allowExact: !1,
                                allowSpread: !0,
                                allowProto: !1,
                                allowInexact: !0
                            });
                        case 6:
                            return this.flowParseObjectType({
                                allowStatic: !1,
                                allowExact: !0,
                                allowSpread: !0,
                                allowProto: !1,
                                allowInexact: !1
                            });
                        case 0:
                            return this.state.noAnonFunctionType = !1, r = this.flowParseTupleType(), this.state.noAnonFunctionType = o, r;
                        case 47:
                            return s.typeParameters = this.flowParseTypeParameterDeclaration(), this.expect(10), i = this.flowParseFunctionTypeParams(), s.params = i.params, s.rest = i.rest, s.this = i._this, this.expect(11), this.expect(19), s.returnType = this.flowParseType(), this.finishNode(s, "FunctionTypeAnnotation");
                        case 10:
                            if (this.next(), !this.match(11) && !this.match(21)) {
                                if (S(this.state.type) || this.match(78)) {
                                    let h = this.lookahead().type;
                                    n = h !== 17 && h !== 14;
                                } else n = !0;
                            }
                            if (n) {
                                if (this.state.noAnonFunctionType = !1, r = this.flowParseType(), this.state.noAnonFunctionType = o, this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) return this.expect(11), r;
                                this.eat(12);
                            }
                            return r ? i = this.flowParseFunctionTypeParams([
                                this.reinterpretTypeAsFunctionTypeParam(r)
                            ]) : i = this.flowParseFunctionTypeParams(), s.params = i.params, s.rest = i.rest, s.this = i._this, this.expect(11), this.expect(19), s.returnType = this.flowParseType(), s.typeParameters = null, this.finishNode(s, "FunctionTypeAnnotation");
                        case 133:
                            return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");
                        case 85:
                        case 86:
                            return s.value = this.match(85), this.next(), this.finishNode(s, "BooleanLiteralTypeAnnotation");
                        case 53:
                            if (this.state.value === "-") {
                                if (this.next(), this.match(134)) return this.parseLiteralAtNode(-this.state.value, "NumberLiteralTypeAnnotation", s);
                                if (this.match(135)) return this.parseLiteralAtNode(-this.state.value, "BigIntLiteralTypeAnnotation", s);
                                throw this.raise(g.UnexpectedSubtractionOperand, this.state.startLoc);
                            }
                            this.unexpected();
                            return;
                        case 134:
                            return this.parseLiteral(this.state.value, "NumberLiteralTypeAnnotation");
                        case 135:
                            return this.parseLiteral(this.state.value, "BigIntLiteralTypeAnnotation");
                        case 88:
                            return this.next(), this.finishNode(s, "VoidTypeAnnotation");
                        case 84:
                            return this.next(), this.finishNode(s, "NullLiteralTypeAnnotation");
                        case 78:
                            return this.next(), this.finishNode(s, "ThisTypeAnnotation");
                        case 55:
                            return this.next(), this.finishNode(s, "ExistsTypeAnnotation");
                        case 87:
                            return this.flowParseTypeofType();
                        default:
                            if (Tt(this.state.type)) {
                                let h = H(this.state.type);
                                return this.next(), super.createIdentifier(s, h);
                            } else if (S(this.state.type)) return this.isContextual(129) ? this.flowParseInterfaceType() : this.flowIdentToTypeAnnotation(e, s, this.parseIdentifier());
                    }
                    this.unexpected();
                }
                flowParsePostfixType() {
                    let e = this.state.startLoc, s = this.flowParsePrimaryType(), i = !1;
                    for(; (this.match(0) || this.match(18)) && !this.canInsertSemicolon();){
                        let r = this.startNodeAt(e), n = this.eat(18);
                        i = i || n, this.expect(0), !n && this.match(3) ? (r.elementType = s, this.next(), s = this.finishNode(r, "ArrayTypeAnnotation")) : (r.objectType = s, r.indexType = this.flowParseType(), this.expect(3), i ? (r.optional = n, s = this.finishNode(r, "OptionalIndexedAccessType")) : s = this.finishNode(r, "IndexedAccessType"));
                    }
                    return s;
                }
                flowParsePrefixType() {
                    let e = this.startNode();
                    return this.eat(17) ? (e.typeAnnotation = this.flowParsePrefixType(), this.finishNode(e, "NullableTypeAnnotation")) : this.flowParsePostfixType();
                }
                flowParseAnonFunctionWithoutParens() {
                    let e = this.flowParsePrefixType();
                    if (!this.state.noAnonFunctionType && this.eat(19)) {
                        let s = this.startNodeAt(e.loc.start);
                        return s.params = [
                            this.reinterpretTypeAsFunctionTypeParam(e)
                        ], s.rest = null, s.this = null, s.returnType = this.flowParseType(), s.typeParameters = null, this.finishNode(s, "FunctionTypeAnnotation");
                    }
                    return e;
                }
                flowParseIntersectionType() {
                    let e = this.startNode();
                    this.eat(45);
                    let s = this.flowParseAnonFunctionWithoutParens();
                    for(e.types = [
                        s
                    ]; this.eat(45);)e.types.push(this.flowParseAnonFunctionWithoutParens());
                    return e.types.length === 1 ? s : this.finishNode(e, "IntersectionTypeAnnotation");
                }
                flowParseUnionType() {
                    let e = this.startNode();
                    this.eat(43);
                    let s = this.flowParseIntersectionType();
                    for(e.types = [
                        s
                    ]; this.eat(43);)e.types.push(this.flowParseIntersectionType());
                    return e.types.length === 1 ? s : this.finishNode(e, "UnionTypeAnnotation");
                }
                flowParseType() {
                    let e = this.state.inType;
                    this.state.inType = !0;
                    let s = this.flowParseUnionType();
                    return this.state.inType = e, s;
                }
                flowParseTypeOrImplicitInstantiation() {
                    if (this.state.type === 132 && this.state.value === "_") {
                        let e = this.state.startLoc, s = this.parseIdentifier();
                        return this.flowParseGenericType(e, s);
                    } else return this.flowParseType();
                }
                flowParseTypeAnnotation() {
                    let e = this.startNode();
                    return e.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(e, "TypeAnnotation");
                }
                flowParseTypeAnnotatableIdentifier(e) {
                    let s = e ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();
                    return this.match(14) && (s.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(s)), s;
                }
                typeCastToParameter(e) {
                    return e.expression.typeAnnotation = e.typeAnnotation, this.resetEndLocation(e.expression, e.typeAnnotation.loc.end), e.expression;
                }
                flowParseVariance() {
                    let e = null;
                    return this.match(53) ? (e = this.startNode(), this.state.value === "+" ? e.kind = "plus" : e.kind = "minus", this.next(), this.finishNode(e, "Variance")) : e;
                }
                parseFunctionBody(e, s, i = !1) {
                    if (s) {
                        this.forwardNoArrowParamsConversionAt(e, ()=>super.parseFunctionBody(e, !0, i));
                        return;
                    }
                    super.parseFunctionBody(e, !1, i);
                }
                parseFunctionBodyAndFinish(e, s, i = !1) {
                    if (this.match(14)) {
                        let r = this.startNode();
                        [r.typeAnnotation, e.predicate] = this.flowParseTypeAndPredicateInitialiser(), e.returnType = r.typeAnnotation ? this.finishNode(r, "TypeAnnotation") : null;
                    }
                    return super.parseFunctionBodyAndFinish(e, s, i);
                }
                parseStatementLike(e) {
                    if (this.state.strict && this.isContextual(129)) {
                        let i = this.lookahead();
                        if (M(i.type)) {
                            let r = this.startNode();
                            return this.next(), this.flowParseInterface(r);
                        }
                    } else if (this.shouldParseEnums() && this.isContextual(126)) {
                        let i = this.startNode();
                        return this.next(), this.flowParseEnumDeclaration(i);
                    }
                    let s = super.parseStatementLike(e);
                    return this.flowPragma === void 0 && !this.isValidDirective(s) && (this.flowPragma = null), s;
                }
                parseExpressionStatement(e, s, i) {
                    if (s.type === "Identifier") {
                        if (s.name === "declare") {
                            if (this.match(80) || S(this.state.type) || this.match(68) || this.match(74) || this.match(82)) return this.flowParseDeclare(e);
                        } else if (S(this.state.type)) {
                            if (s.name === "interface") return this.flowParseInterface(e);
                            if (s.name === "type") return this.flowParseTypeAlias(e);
                            if (s.name === "opaque") return this.flowParseOpaqueType(e, !1);
                        }
                    }
                    return super.parseExpressionStatement(e, s, i);
                }
                shouldParseExportDeclaration() {
                    let { type: e } = this.state;
                    return Rt(e) || this.shouldParseEnums() && e === 126 ? !this.state.containsEsc : super.shouldParseExportDeclaration();
                }
                isExportDefaultSpecifier() {
                    let { type: e } = this.state;
                    return Rt(e) || this.shouldParseEnums() && e === 126 ? this.state.containsEsc : super.isExportDefaultSpecifier();
                }
                parseExportDefaultExpression() {
                    if (this.shouldParseEnums() && this.isContextual(126)) {
                        let e = this.startNode();
                        return this.next(), this.flowParseEnumDeclaration(e);
                    }
                    return super.parseExportDefaultExpression();
                }
                parseConditional(e, s, i) {
                    if (!this.match(17)) return e;
                    if (this.state.maybeInArrowParameters) {
                        let f = this.lookaheadCharCode();
                        if (f === 44 || f === 61 || f === 58 || f === 41) return this.setOptionalParametersError(i), e;
                    }
                    this.expect(17);
                    let r = this.state.clone(), n = this.state.noArrowAt, o = this.startNodeAt(s), { consequent: h, failed: l } = this.tryParseConditionalConsequent(), [c, u] = this.getArrowLikeExpressions(h);
                    if (l || u.length > 0) {
                        let f = [
                            ...n
                        ];
                        if (u.length > 0) {
                            this.state = r, this.state.noArrowAt = f;
                            for(let d = 0; d < u.length; d++)f.push(u[d].start);
                            ({ consequent: h, failed: l } = this.tryParseConditionalConsequent()), [c, u] = this.getArrowLikeExpressions(h);
                        }
                        l && c.length > 1 && this.raise(g.AmbiguousConditionalArrow, r.startLoc), l && c.length === 1 && (this.state = r, f.push(c[0].start), this.state.noArrowAt = f, { consequent: h, failed: l } = this.tryParseConditionalConsequent());
                    }
                    return this.getArrowLikeExpressions(h, !0), this.state.noArrowAt = n, this.expect(14), o.test = e, o.consequent = h, o.alternate = this.forwardNoArrowParamsConversionAt(o, ()=>this.parseMaybeAssign(void 0, void 0)), this.finishNode(o, "ConditionalExpression");
                }
                tryParseConditionalConsequent() {
                    this.state.noArrowParamsConversionAt.push(this.state.start);
                    let e = this.parseMaybeAssignAllowIn(), s = !this.match(14);
                    return this.state.noArrowParamsConversionAt.pop(), {
                        consequent: e,
                        failed: s
                    };
                }
                getArrowLikeExpressions(e, s) {
                    let i = [
                        e
                    ], r = [];
                    for(; i.length !== 0;){
                        let n = i.pop();
                        n.type === "ArrowFunctionExpression" ? (n.typeParameters || !n.returnType ? this.finishArrowValidation(n) : r.push(n), i.push(n.body)) : n.type === "ConditionalExpression" && (i.push(n.consequent), i.push(n.alternate));
                    }
                    return s ? (r.forEach((n)=>this.finishArrowValidation(n)), [
                        r,
                        []
                    ]) : Hi(r, (n)=>n.params.every((o)=>this.isAssignable(o, !0)));
                }
                finishArrowValidation(e) {
                    var s;
                    this.toAssignableList(e.params, (s = e.extra) == null ? void 0 : s.trailingCommaLoc, !1), this.scope.enter(6), super.checkParams(e, !1, !0), this.scope.exit();
                }
                forwardNoArrowParamsConversionAt(e, s) {
                    let i;
                    return this.state.noArrowParamsConversionAt.indexOf(e.start) !== -1 ? (this.state.noArrowParamsConversionAt.push(this.state.start), i = s(), this.state.noArrowParamsConversionAt.pop()) : i = s(), i;
                }
                parseParenItem(e, s) {
                    if (e = super.parseParenItem(e, s), this.eat(17) && (e.optional = !0, this.resetEndLocation(e)), this.match(14)) {
                        let i = this.startNodeAt(s);
                        return i.expression = e, i.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(i, "TypeCastExpression");
                    }
                    return e;
                }
                assertModuleNodeAllowed(e) {
                    e.type === "ImportDeclaration" && (e.importKind === "type" || e.importKind === "typeof") || e.type === "ExportNamedDeclaration" && e.exportKind === "type" || e.type === "ExportAllDeclaration" && e.exportKind === "type" || super.assertModuleNodeAllowed(e);
                }
                parseExportDeclaration(e) {
                    if (this.isContextual(130)) {
                        e.exportKind = "type";
                        let s = this.startNode();
                        return this.next(), this.match(5) ? (e.specifiers = this.parseExportSpecifiers(!0), super.parseExportFrom(e), null) : this.flowParseTypeAlias(s);
                    } else if (this.isContextual(131)) {
                        e.exportKind = "type";
                        let s = this.startNode();
                        return this.next(), this.flowParseOpaqueType(s, !1);
                    } else if (this.isContextual(129)) {
                        e.exportKind = "type";
                        let s = this.startNode();
                        return this.next(), this.flowParseInterface(s);
                    } else if (this.shouldParseEnums() && this.isContextual(126)) {
                        e.exportKind = "value";
                        let s = this.startNode();
                        return this.next(), this.flowParseEnumDeclaration(s);
                    } else return super.parseExportDeclaration(e);
                }
                eatExportStar(e) {
                    return super.eatExportStar(e) ? !0 : this.isContextual(130) && this.lookahead().type === 55 ? (e.exportKind = "type", this.next(), this.next(), !0) : !1;
                }
                maybeParseExportNamespaceSpecifier(e) {
                    let { startLoc: s } = this.state, i = super.maybeParseExportNamespaceSpecifier(e);
                    return i && e.exportKind === "type" && this.unexpected(s), i;
                }
                parseClassId(e, s, i) {
                    super.parseClassId(e, s, i), this.match(47) && (e.typeParameters = this.flowParseTypeParameterDeclaration());
                }
                parseClassMember(e, s, i) {
                    let { startLoc: r } = this.state;
                    if (this.isContextual(125)) {
                        if (super.parseClassMemberFromModifier(e, s)) return;
                        s.declare = !0;
                    }
                    super.parseClassMember(e, s, i), s.declare && (s.type !== "ClassProperty" && s.type !== "ClassPrivateProperty" && s.type !== "PropertyDefinition" ? this.raise(g.DeclareClassElement, r) : s.value && this.raise(g.DeclareClassFieldInitializer, s.value));
                }
                isIterator(e) {
                    return e === "iterator" || e === "asyncIterator";
                }
                readIterator() {
                    let e = super.readWord1(), s = "@@" + e;
                    (!this.isIterator(e) || !this.state.inType) && this.raise(p.InvalidIdentifier, this.state.curPosition(), {
                        identifierName: s
                    }), this.finishToken(132, s);
                }
                getTokenFromCode(e) {
                    let s = this.input.charCodeAt(this.state.pos + 1);
                    e === 123 && s === 124 ? this.finishOp(6, 2) : this.state.inType && (e === 62 || e === 60) ? this.finishOp(e === 62 ? 48 : 47, 1) : this.state.inType && e === 63 ? s === 46 ? this.finishOp(18, 2) : this.finishOp(17, 1) : ki(e, s, this.input.charCodeAt(this.state.pos + 2)) ? (this.state.pos += 2, this.readIterator()) : super.getTokenFromCode(e);
                }
                isAssignable(e, s) {
                    return e.type === "TypeCastExpression" ? this.isAssignable(e.expression, s) : super.isAssignable(e, s);
                }
                toAssignable(e, s = !1) {
                    !s && e.type === "AssignmentExpression" && e.left.type === "TypeCastExpression" && (e.left = this.typeCastToParameter(e.left)), super.toAssignable(e, s);
                }
                toAssignableList(e, s, i) {
                    for(let r = 0; r < e.length; r++){
                        let n = e[r];
                        (n == null ? void 0 : n.type) === "TypeCastExpression" && (e[r] = this.typeCastToParameter(n));
                    }
                    super.toAssignableList(e, s, i);
                }
                toReferencedList(e, s) {
                    for(let r = 0; r < e.length; r++){
                        var i;
                        let n = e[r];
                        n && n.type === "TypeCastExpression" && !((i = n.extra) != null && i.parenthesized) && (e.length > 1 || !s) && this.raise(g.TypeCastInPattern, n.typeAnnotation);
                    }
                    return e;
                }
                parseArrayLike(e, s, i, r) {
                    let n = super.parseArrayLike(e, s, i, r);
                    return s && !this.state.maybeInArrowParameters && this.toReferencedList(n.elements), n;
                }
                isValidLVal(e, s, i) {
                    return e === "TypeCastExpression" || super.isValidLVal(e, s, i);
                }
                parseClassProperty(e) {
                    return this.match(14) && (e.typeAnnotation = this.flowParseTypeAnnotation()), super.parseClassProperty(e);
                }
                parseClassPrivateProperty(e) {
                    return this.match(14) && (e.typeAnnotation = this.flowParseTypeAnnotation()), super.parseClassPrivateProperty(e);
                }
                isClassMethod() {
                    return this.match(47) || super.isClassMethod();
                }
                isClassProperty() {
                    return this.match(14) || super.isClassProperty();
                }
                isNonstaticConstructor(e) {
                    return !this.match(14) && super.isNonstaticConstructor(e);
                }
                pushClassMethod(e, s, i, r, n, o) {
                    if (s.variance && this.unexpected(s.variance.loc.start), delete s.variance, this.match(47) && (s.typeParameters = this.flowParseTypeParameterDeclaration()), super.pushClassMethod(e, s, i, r, n, o), s.params && n) {
                        let h = s.params;
                        h.length > 0 && this.isThisParam(h[0]) && this.raise(g.ThisParamBannedInConstructor, s);
                    } else if (s.type === "MethodDefinition" && n && s.value.params) {
                        let h = s.value.params;
                        h.length > 0 && this.isThisParam(h[0]) && this.raise(g.ThisParamBannedInConstructor, s);
                    }
                }
                pushClassPrivateMethod(e, s, i, r) {
                    s.variance && this.unexpected(s.variance.loc.start), delete s.variance, this.match(47) && (s.typeParameters = this.flowParseTypeParameterDeclaration()), super.pushClassPrivateMethod(e, s, i, r);
                }
                parseClassSuper(e) {
                    if (super.parseClassSuper(e), e.superClass && this.match(47) && (e.superTypeParameters = this.flowParseTypeParameterInstantiation()), this.isContextual(113)) {
                        this.next();
                        let s = e.implements = [];
                        do {
                            let i = this.startNode();
                            i.id = this.flowParseRestrictedIdentifier(!0), this.match(47) ? i.typeParameters = this.flowParseTypeParameterInstantiation() : i.typeParameters = null, s.push(this.finishNode(i, "ClassImplements"));
                        }while (this.eat(12));
                    }
                }
                checkGetterSetterParams(e) {
                    super.checkGetterSetterParams(e);
                    let s = this.getObjectOrClassMethodParams(e);
                    if (s.length > 0) {
                        let i = s[0];
                        this.isThisParam(i) && e.kind === "get" ? this.raise(g.GetterMayNotHaveThisParam, i) : this.isThisParam(i) && this.raise(g.SetterMayNotHaveThisParam, i);
                    }
                }
                parsePropertyNamePrefixOperator(e) {
                    e.variance = this.flowParseVariance();
                }
                parseObjPropValue(e, s, i, r, n, o, h) {
                    e.variance && this.unexpected(e.variance.loc.start), delete e.variance;
                    let l;
                    this.match(47) && !o && (l = this.flowParseTypeParameterDeclaration(), this.match(10) || this.unexpected());
                    let c = super.parseObjPropValue(e, s, i, r, n, o, h);
                    return l && ((c.value || c).typeParameters = l), c;
                }
                parseAssignableListItemTypes(e) {
                    return this.eat(17) && (e.type !== "Identifier" && this.raise(g.PatternIsOptional, e), this.isThisParam(e) && this.raise(g.ThisParamMayNotBeOptional, e), e.optional = !0), this.match(14) ? e.typeAnnotation = this.flowParseTypeAnnotation() : this.isThisParam(e) && this.raise(g.ThisParamAnnotationRequired, e), this.match(29) && this.isThisParam(e) && this.raise(g.ThisParamNoDefault, e), this.resetEndLocation(e), e;
                }
                parseMaybeDefault(e, s) {
                    let i = super.parseMaybeDefault(e, s);
                    return i.type === "AssignmentPattern" && i.typeAnnotation && i.right.start < i.typeAnnotation.start && this.raise(g.TypeBeforeInitializer, i.typeAnnotation), i;
                }
                checkImportReflection(e) {
                    super.checkImportReflection(e), e.module && e.importKind !== "value" && this.raise(g.ImportReflectionHasImportType, e.specifiers[0].loc.start);
                }
                parseImportSpecifierLocal(e, s, i) {
                    s.local = $t(e) ? this.flowParseRestrictedIdentifier(!0, !0) : this.parseIdentifier(), e.specifiers.push(this.finishImportSpecifier(s, i));
                }
                isPotentialImportPhase(e) {
                    if (super.isPotentialImportPhase(e)) return !0;
                    if (this.isContextual(130)) {
                        if (!e) return !0;
                        let s = this.lookaheadCharCode();
                        return s === 123 || s === 42;
                    }
                    return !e && this.isContextual(87);
                }
                applyImportPhase(e, s, i, r) {
                    if (super.applyImportPhase(e, s, i, r), s) {
                        if (!i && this.match(65)) return;
                        e.exportKind = i === "type" ? i : "value";
                    } else i === "type" && this.match(55) && this.unexpected(), e.importKind = i === "type" || i === "typeof" ? i : "value";
                }
                parseImportSpecifier(e, s, i, r, n) {
                    let o = e.imported, h = null;
                    o.type === "Identifier" && (o.name === "type" ? h = "type" : o.name === "typeof" && (h = "typeof"));
                    let l = !1;
                    if (this.isContextual(93) && !this.isLookaheadContextual("as")) {
                        let u = this.parseIdentifier(!0);
                        h !== null && !M(this.state.type) ? (e.imported = u, e.importKind = h, e.local = V(u)) : (e.imported = o, e.importKind = null, e.local = this.parseIdentifier());
                    } else {
                        if (h !== null && M(this.state.type)) e.imported = this.parseIdentifier(!0), e.importKind = h;
                        else {
                            if (s) throw this.raise(p.ImportBindingIsString, e, {
                                importName: o.value
                            });
                            e.imported = o, e.importKind = null;
                        }
                        this.eatContextual(93) ? e.local = this.parseIdentifier() : (l = !0, e.local = V(e.imported));
                    }
                    let c = $t(e);
                    return i && c && this.raise(g.ImportTypeShorthandOnlyInPureImport, e), (i || c) && this.checkReservedType(e.local.name, e.local.loc.start, !0), l && !i && !c && this.checkReservedWord(e.local.name, e.loc.start, !0, !0), this.finishImportSpecifier(e, "ImportSpecifier");
                }
                parseBindingAtom() {
                    switch(this.state.type){
                        case 78:
                            return this.parseIdentifier(!0);
                        default:
                            return super.parseBindingAtom();
                    }
                }
                parseFunctionParams(e, s) {
                    let i = e.kind;
                    i !== "get" && i !== "set" && this.match(47) && (e.typeParameters = this.flowParseTypeParameterDeclaration()), super.parseFunctionParams(e, s);
                }
                parseVarId(e, s) {
                    super.parseVarId(e, s), this.match(14) && (e.id.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(e.id));
                }
                parseAsyncArrowFromCallExpression(e, s) {
                    if (this.match(14)) {
                        let i = this.state.noAnonFunctionType;
                        this.state.noAnonFunctionType = !0, e.returnType = this.flowParseTypeAnnotation(), this.state.noAnonFunctionType = i;
                    }
                    return super.parseAsyncArrowFromCallExpression(e, s);
                }
                shouldParseAsyncArrow() {
                    return this.match(14) || super.shouldParseAsyncArrow();
                }
                parseMaybeAssign(e, s) {
                    var i;
                    let r = null, n;
                    if (this.hasPlugin("jsx") && (this.match(142) || this.match(47))) {
                        if (r = this.state.clone(), n = this.tryParse(()=>super.parseMaybeAssign(e, s), r), !n.error) return n.node;
                        let { context: l } = this.state, c = l[l.length - 1];
                        (c === w.j_oTag || c === w.j_expr) && l.pop();
                    }
                    if ((i = n) != null && i.error || this.match(47)) {
                        var o, h;
                        r = r || this.state.clone();
                        let l, c = this.tryParse((f)=>{
                            var d;
                            l = this.flowParseTypeParameterDeclaration();
                            let y = this.forwardNoArrowParamsConversionAt(l, ()=>{
                                let C = super.parseMaybeAssign(e, s);
                                return this.resetStartLocationFromNode(C, l), C;
                            });
                            (d = y.extra) != null && d.parenthesized && f();
                            let I = this.maybeUnwrapTypeCastExpression(y);
                            return I.type !== "ArrowFunctionExpression" && f(), I.typeParameters = l, this.resetStartLocationFromNode(I, l), y;
                        }, r), u = null;
                        if (c.node && this.maybeUnwrapTypeCastExpression(c.node).type === "ArrowFunctionExpression") {
                            if (!c.error && !c.aborted) return c.node.async && this.raise(g.UnexpectedTypeParameterBeforeAsyncArrowFunction, l), c.node;
                            u = c.node;
                        }
                        if ((o = n) != null && o.node) return this.state = n.failState, n.node;
                        if (u) return this.state = c.failState, u;
                        throw (h = n) != null && h.thrown ? n.error : c.thrown ? c.error : this.raise(g.UnexpectedTokenAfterTypeParameter, l);
                    }
                    return super.parseMaybeAssign(e, s);
                }
                parseArrow(e) {
                    if (this.match(14)) {
                        let s = this.tryParse(()=>{
                            let i = this.state.noAnonFunctionType;
                            this.state.noAnonFunctionType = !0;
                            let r = this.startNode();
                            return [r.typeAnnotation, e.predicate] = this.flowParseTypeAndPredicateInitialiser(), this.state.noAnonFunctionType = i, this.canInsertSemicolon() && this.unexpected(), this.match(19) || this.unexpected(), r;
                        });
                        if (s.thrown) return null;
                        s.error && (this.state = s.failState), e.returnType = s.node.typeAnnotation ? this.finishNode(s.node, "TypeAnnotation") : null;
                    }
                    return super.parseArrow(e);
                }
                shouldParseArrow(e) {
                    return this.match(14) || super.shouldParseArrow(e);
                }
                setArrowFunctionParameters(e, s) {
                    this.state.noArrowParamsConversionAt.indexOf(e.start) !== -1 ? e.params = s : super.setArrowFunctionParameters(e, s);
                }
                checkParams(e, s, i, r = !0) {
                    if (!(i && this.state.noArrowParamsConversionAt.indexOf(e.start) !== -1)) {
                        for(let n = 0; n < e.params.length; n++)this.isThisParam(e.params[n]) && n > 0 && this.raise(g.ThisParamMustBeFirst, e.params[n]);
                        super.checkParams(e, s, i, r);
                    }
                }
                parseParenAndDistinguishExpression(e) {
                    return super.parseParenAndDistinguishExpression(e && this.state.noArrowAt.indexOf(this.state.start) === -1);
                }
                parseSubscripts(e, s, i) {
                    if (e.type === "Identifier" && e.name === "async" && this.state.noArrowAt.indexOf(s.index) !== -1) {
                        this.next();
                        let r = this.startNodeAt(s);
                        r.callee = e, r.arguments = super.parseCallExpressionArguments(11, !1), e = this.finishNode(r, "CallExpression");
                    } else if (e.type === "Identifier" && e.name === "async" && this.match(47)) {
                        let r = this.state.clone(), n = this.tryParse((h)=>this.parseAsyncArrowWithTypeParameters(s) || h(), r);
                        if (!n.error && !n.aborted) return n.node;
                        let o = this.tryParse(()=>super.parseSubscripts(e, s, i), r);
                        if (o.node && !o.error) return o.node;
                        if (n.node) return this.state = n.failState, n.node;
                        if (o.node) return this.state = o.failState, o.node;
                        throw n.error || o.error;
                    }
                    return super.parseSubscripts(e, s, i);
                }
                parseSubscript(e, s, i, r) {
                    if (this.match(18) && this.isLookaheadToken_lt()) {
                        if (r.optionalChainMember = !0, i) return r.stop = !0, e;
                        this.next();
                        let n = this.startNodeAt(s);
                        return n.callee = e, n.typeArguments = this.flowParseTypeParameterInstantiation(), this.expect(10), n.arguments = this.parseCallExpressionArguments(11, !1), n.optional = !0, this.finishCallExpression(n, !0);
                    } else if (!i && this.shouldParseTypes() && this.match(47)) {
                        let n = this.startNodeAt(s);
                        n.callee = e;
                        let o = this.tryParse(()=>(n.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew(), this.expect(10), n.arguments = super.parseCallExpressionArguments(11, !1), r.optionalChainMember && (n.optional = !1), this.finishCallExpression(n, r.optionalChainMember)));
                        if (o.node) return o.error && (this.state = o.failState), o.node;
                    }
                    return super.parseSubscript(e, s, i, r);
                }
                parseNewCallee(e) {
                    super.parseNewCallee(e);
                    let s = null;
                    this.shouldParseTypes() && this.match(47) && (s = this.tryParse(()=>this.flowParseTypeParameterInstantiationCallOrNew()).node), e.typeArguments = s;
                }
                parseAsyncArrowWithTypeParameters(e) {
                    let s = this.startNodeAt(e);
                    if (this.parseFunctionParams(s, !1), !!this.parseArrow(s)) return super.parseArrowExpression(s, void 0, !0);
                }
                readToken_mult_modulo(e) {
                    let s = this.input.charCodeAt(this.state.pos + 1);
                    if (e === 42 && s === 47 && this.state.hasFlowComment) {
                        this.state.hasFlowComment = !1, this.state.pos += 2, this.nextToken();
                        return;
                    }
                    super.readToken_mult_modulo(e);
                }
                readToken_pipe_amp(e) {
                    let s = this.input.charCodeAt(this.state.pos + 1);
                    if (e === 124 && s === 125) {
                        this.finishOp(9, 2);
                        return;
                    }
                    super.readToken_pipe_amp(e);
                }
                parseTopLevel(e, s) {
                    let i = super.parseTopLevel(e, s);
                    return this.state.hasFlowComment && this.raise(g.UnterminatedFlowComment, this.state.curPosition()), i;
                }
                skipBlockComment() {
                    if (this.hasPlugin("flowComments") && this.skipFlowComment()) {
                        if (this.state.hasFlowComment) throw this.raise(g.NestedFlowComment, this.state.startLoc);
                        this.hasFlowCommentCompletion();
                        let e = this.skipFlowComment();
                        e && (this.state.pos += e, this.state.hasFlowComment = !0);
                        return;
                    }
                    return super.skipBlockComment(this.state.hasFlowComment ? "*-/" : "*/");
                }
                skipFlowComment() {
                    let { pos: e } = this.state, s = 2;
                    for(; [
                        32,
                        9
                    ].includes(this.input.charCodeAt(e + s));)s++;
                    let i = this.input.charCodeAt(s + e), r = this.input.charCodeAt(s + e + 1);
                    return i === 58 && r === 58 ? s + 2 : this.input.slice(s + e, s + e + 12) === "flow-include" ? s + 12 : i === 58 && r !== 58 ? s : !1;
                }
                hasFlowCommentCompletion() {
                    if (this.input.indexOf("*/", this.state.pos) === -1) throw this.raise(p.UnterminatedComment, this.state.curPosition());
                }
                flowEnumErrorBooleanMemberNotInitialized(e, { enumName: s, memberName: i }) {
                    this.raise(g.EnumBooleanMemberNotInitialized, e, {
                        memberName: i,
                        enumName: s
                    });
                }
                flowEnumErrorInvalidMemberInitializer(e, s) {
                    return this.raise(s.explicitType ? s.explicitType === "symbol" ? g.EnumInvalidMemberInitializerSymbolType : g.EnumInvalidMemberInitializerPrimaryType : g.EnumInvalidMemberInitializerUnknownType, e, s);
                }
                flowEnumErrorNumberMemberNotInitialized(e, s) {
                    this.raise(g.EnumNumberMemberNotInitialized, e, s);
                }
                flowEnumErrorStringMemberInconsistentlyInitialized(e, s) {
                    this.raise(g.EnumStringMemberInconsistentlyInitialized, e, s);
                }
                flowEnumMemberInit() {
                    let e = this.state.startLoc, s = ()=>this.match(12) || this.match(8);
                    switch(this.state.type){
                        case 134:
                            {
                                let i = this.parseNumericLiteral(this.state.value);
                                return s() ? {
                                    type: "number",
                                    loc: i.loc.start,
                                    value: i
                                } : {
                                    type: "invalid",
                                    loc: e
                                };
                            }
                        case 133:
                            {
                                let i = this.parseStringLiteral(this.state.value);
                                return s() ? {
                                    type: "string",
                                    loc: i.loc.start,
                                    value: i
                                } : {
                                    type: "invalid",
                                    loc: e
                                };
                            }
                        case 85:
                        case 86:
                            {
                                let i = this.parseBooleanLiteral(this.match(85));
                                return s() ? {
                                    type: "boolean",
                                    loc: i.loc.start,
                                    value: i
                                } : {
                                    type: "invalid",
                                    loc: e
                                };
                            }
                        default:
                            return {
                                type: "invalid",
                                loc: e
                            };
                    }
                }
                flowEnumMemberRaw() {
                    let e = this.state.startLoc, s = this.parseIdentifier(!0), i = this.eat(29) ? this.flowEnumMemberInit() : {
                        type: "none",
                        loc: e
                    };
                    return {
                        id: s,
                        init: i
                    };
                }
                flowEnumCheckExplicitTypeMismatch(e, s, i) {
                    let { explicitType: r } = s;
                    r !== null && r !== i && this.flowEnumErrorInvalidMemberInitializer(e, s);
                }
                flowEnumMembers({ enumName: e, explicitType: s }) {
                    let i = new Set, r = {
                        booleanMembers: [],
                        numberMembers: [],
                        stringMembers: [],
                        defaultedMembers: []
                    }, n = !1;
                    for(; !this.match(8);){
                        if (this.eat(21)) {
                            n = !0;
                            break;
                        }
                        let o = this.startNode(), { id: h, init: l } = this.flowEnumMemberRaw(), c = h.name;
                        if (c === "") continue;
                        /^[a-z]/.test(c) && this.raise(g.EnumInvalidMemberName, h, {
                            memberName: c,
                            suggestion: c[0].toUpperCase() + c.slice(1),
                            enumName: e
                        }), i.has(c) && this.raise(g.EnumDuplicateMemberName, h, {
                            memberName: c,
                            enumName: e
                        }), i.add(c);
                        let u = {
                            enumName: e,
                            explicitType: s,
                            memberName: c
                        };
                        switch(o.id = h, l.type){
                            case "boolean":
                                this.flowEnumCheckExplicitTypeMismatch(l.loc, u, "boolean"), o.init = l.value, r.booleanMembers.push(this.finishNode(o, "EnumBooleanMember"));
                                break;
                            case "number":
                                this.flowEnumCheckExplicitTypeMismatch(l.loc, u, "number"), o.init = l.value, r.numberMembers.push(this.finishNode(o, "EnumNumberMember"));
                                break;
                            case "string":
                                this.flowEnumCheckExplicitTypeMismatch(l.loc, u, "string"), o.init = l.value, r.stringMembers.push(this.finishNode(o, "EnumStringMember"));
                                break;
                            case "invalid":
                                throw this.flowEnumErrorInvalidMemberInitializer(l.loc, u);
                            case "none":
                                switch(s){
                                    case "boolean":
                                        this.flowEnumErrorBooleanMemberNotInitialized(l.loc, u);
                                        break;
                                    case "number":
                                        this.flowEnumErrorNumberMemberNotInitialized(l.loc, u);
                                        break;
                                    default:
                                        r.defaultedMembers.push(this.finishNode(o, "EnumDefaultedMember"));
                                }
                        }
                        this.match(8) || this.expect(12);
                    }
                    return {
                        members: r,
                        hasUnknownMembers: n
                    };
                }
                flowEnumStringMembers(e, s, { enumName: i }) {
                    if (e.length === 0) return s;
                    if (s.length === 0) return e;
                    if (s.length > e.length) {
                        for (let r of e)this.flowEnumErrorStringMemberInconsistentlyInitialized(r, {
                            enumName: i
                        });
                        return s;
                    } else {
                        for (let r of s)this.flowEnumErrorStringMemberInconsistentlyInitialized(r, {
                            enumName: i
                        });
                        return e;
                    }
                }
                flowEnumParseExplicitType({ enumName: e }) {
                    if (!this.eatContextual(102)) return null;
                    if (!S(this.state.type)) throw this.raise(g.EnumInvalidExplicitTypeUnknownSupplied, this.state.startLoc, {
                        enumName: e
                    });
                    let { value: s } = this.state;
                    return this.next(), s !== "boolean" && s !== "number" && s !== "string" && s !== "symbol" && this.raise(g.EnumInvalidExplicitType, this.state.startLoc, {
                        enumName: e,
                        invalidEnumType: s
                    }), s;
                }
                flowEnumBody(e, s) {
                    let i = s.name, r = s.loc.start, n = this.flowEnumParseExplicitType({
                        enumName: i
                    });
                    this.expect(5);
                    let { members: o, hasUnknownMembers: h } = this.flowEnumMembers({
                        enumName: i,
                        explicitType: n
                    });
                    switch(e.hasUnknownMembers = h, n){
                        case "boolean":
                            return e.explicitType = !0, e.members = o.booleanMembers, this.expect(8), this.finishNode(e, "EnumBooleanBody");
                        case "number":
                            return e.explicitType = !0, e.members = o.numberMembers, this.expect(8), this.finishNode(e, "EnumNumberBody");
                        case "string":
                            return e.explicitType = !0, e.members = this.flowEnumStringMembers(o.stringMembers, o.defaultedMembers, {
                                enumName: i
                            }), this.expect(8), this.finishNode(e, "EnumStringBody");
                        case "symbol":
                            return e.members = o.defaultedMembers, this.expect(8), this.finishNode(e, "EnumSymbolBody");
                        default:
                            {
                                let l = ()=>(e.members = [], this.expect(8), this.finishNode(e, "EnumStringBody"));
                                e.explicitType = !1;
                                let c = o.booleanMembers.length, u = o.numberMembers.length, f = o.stringMembers.length, d = o.defaultedMembers.length;
                                if (!c && !u && !f && !d) return l();
                                if (!c && !u) return e.members = this.flowEnumStringMembers(o.stringMembers, o.defaultedMembers, {
                                    enumName: i
                                }), this.expect(8), this.finishNode(e, "EnumStringBody");
                                if (!u && !f && c >= d) {
                                    for (let y of o.defaultedMembers)this.flowEnumErrorBooleanMemberNotInitialized(y.loc.start, {
                                        enumName: i,
                                        memberName: y.id.name
                                    });
                                    return e.members = o.booleanMembers, this.expect(8), this.finishNode(e, "EnumBooleanBody");
                                } else if (!c && !f && u >= d) {
                                    for (let y of o.defaultedMembers)this.flowEnumErrorNumberMemberNotInitialized(y.loc.start, {
                                        enumName: i,
                                        memberName: y.id.name
                                    });
                                    return e.members = o.numberMembers, this.expect(8), this.finishNode(e, "EnumNumberBody");
                                } else return this.raise(g.EnumInconsistentMemberValues, r, {
                                    enumName: i
                                }), l();
                            }
                    }
                }
                flowParseEnumDeclaration(e) {
                    let s = this.parseIdentifier();
                    return e.id = s, e.body = this.flowEnumBody(this.startNode(), s), this.finishNode(e, "EnumDeclaration");
                }
                isLookaheadToken_lt() {
                    let e = this.nextTokenStart();
                    if (this.input.charCodeAt(e) === 60) {
                        let s = this.input.charCodeAt(e + 1);
                        return s !== 60 && s !== 61;
                    }
                    return !1;
                }
                maybeUnwrapTypeCastExpression(e) {
                    return e.type === "TypeCastExpression" ? e.expression : e;
                }
            }, J = $`jsx`({
            AttributeIsEmpty: "JSX attributes must only be assigned a non-empty expression.",
            MissingClosingTagElement: ({ openingTagName: a })=>`Expected corresponding JSX closing tag for <${a}>.`,
            MissingClosingTagFragment: "Expected corresponding JSX closing tag for <>.",
            UnexpectedSequenceExpression: "Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?",
            UnexpectedToken: ({ unexpected: a, HTMLEntity: t })=>`Unexpected token \`${a}\`. Did you mean \`${t}\` or \`{'${a}'}\`?`,
            UnsupportedJsxValue: "JSX value should be either an expression or a quoted JSX text.",
            UnterminatedJsxContent: "Unterminated JSX contents.",
            UnwrappedAdjacentJSXElements: "Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"
        });
        function z(a) {
            return a ? a.type === "JSXOpeningFragment" || a.type === "JSXClosingFragment" : !1;
        }
        function Q(a) {
            if (a.type === "JSXIdentifier") return a.name;
            if (a.type === "JSXNamespacedName") return a.namespace.name + ":" + a.name.name;
            if (a.type === "JSXMemberExpression") return Q(a.object) + "." + Q(a.property);
            throw new Error("Node had unexpected type: " + a.type);
        }
        var Xi = (a)=>class extends a {
                jsxReadToken() {
                    let e = "", s = this.state.pos;
                    for(;;){
                        if (this.state.pos >= this.length) throw this.raise(J.UnterminatedJsxContent, this.state.startLoc);
                        let i = this.input.charCodeAt(this.state.pos);
                        switch(i){
                            case 60:
                            case 123:
                                if (this.state.pos === this.state.start) {
                                    i === 60 && this.state.canStartJSXElement ? (++this.state.pos, this.finishToken(142)) : super.getTokenFromCode(i);
                                    return;
                                }
                                e += this.input.slice(s, this.state.pos), this.finishToken(141, e);
                                return;
                            case 38:
                                e += this.input.slice(s, this.state.pos), e += this.jsxReadEntity(), s = this.state.pos;
                                break;
                            case 62:
                            case 125:
                            default:
                                de(i) ? (e += this.input.slice(s, this.state.pos), e += this.jsxReadNewLine(!0), s = this.state.pos) : ++this.state.pos;
                        }
                    }
                }
                jsxReadNewLine(e) {
                    let s = this.input.charCodeAt(this.state.pos), i;
                    return ++this.state.pos, s === 13 && this.input.charCodeAt(this.state.pos) === 10 ? (++this.state.pos, i = e ? `
` : `\r
`) : i = String.fromCharCode(s), ++this.state.curLine, this.state.lineStart = this.state.pos, i;
                }
                jsxReadString(e) {
                    let s = "", i = ++this.state.pos;
                    for(;;){
                        if (this.state.pos >= this.length) throw this.raise(p.UnterminatedString, this.state.startLoc);
                        let r = this.input.charCodeAt(this.state.pos);
                        if (r === e) break;
                        r === 38 ? (s += this.input.slice(i, this.state.pos), s += this.jsxReadEntity(), i = this.state.pos) : de(r) ? (s += this.input.slice(i, this.state.pos), s += this.jsxReadNewLine(!1), i = this.state.pos) : ++this.state.pos;
                    }
                    s += this.input.slice(i, this.state.pos++), this.finishToken(133, s);
                }
                jsxReadEntity() {
                    let e = ++this.state.pos;
                    if (this.codePointAtPos(this.state.pos) === 35) {
                        ++this.state.pos;
                        let s = 10;
                        this.codePointAtPos(this.state.pos) === 120 && (s = 16, ++this.state.pos);
                        let i = this.readInt(s, void 0, !1, "bail");
                        if (i !== null && this.codePointAtPos(this.state.pos) === 59) return ++this.state.pos, String.fromCodePoint(i);
                    } else {
                        let s = 0, i = !1;
                        for(; s++ < 10 && this.state.pos < this.length && !(i = this.codePointAtPos(this.state.pos) == 59);)++this.state.pos;
                        if (i) {
                            let r = this.input.slice(e, this.state.pos), n = void 0;
                            if (++this.state.pos, n) return n;
                        }
                    }
                    return this.state.pos = e, "&";
                }
                jsxReadWord() {
                    let e, s = this.state.pos;
                    do e = this.input.charCodeAt(++this.state.pos);
                    while (Z(e) || e === 45);
                    this.finishToken(140, this.input.slice(s, this.state.pos));
                }
                jsxParseIdentifier() {
                    let e = this.startNode();
                    return this.match(140) ? e.name = this.state.value : Tt(this.state.type) ? e.name = H(this.state.type) : this.unexpected(), this.next(), this.finishNode(e, "JSXIdentifier");
                }
                jsxParseNamespacedName() {
                    let e = this.state.startLoc, s = this.jsxParseIdentifier();
                    if (!this.eat(14)) return s;
                    let i = this.startNodeAt(e);
                    return i.namespace = s, i.name = this.jsxParseIdentifier(), this.finishNode(i, "JSXNamespacedName");
                }
                jsxParseElementName() {
                    let e = this.state.startLoc, s = this.jsxParseNamespacedName();
                    if (s.type === "JSXNamespacedName") return s;
                    for(; this.eat(16);){
                        let i = this.startNodeAt(e);
                        i.object = s, i.property = this.jsxParseIdentifier(), s = this.finishNode(i, "JSXMemberExpression");
                    }
                    return s;
                }
                jsxParseAttributeValue() {
                    let e;
                    switch(this.state.type){
                        case 5:
                            return e = this.startNode(), this.setContext(w.brace), this.next(), e = this.jsxParseExpressionContainer(e, w.j_oTag), e.expression.type === "JSXEmptyExpression" && this.raise(J.AttributeIsEmpty, e), e;
                        case 142:
                        case 133:
                            return this.parseExprAtom();
                        default:
                            throw this.raise(J.UnsupportedJsxValue, this.state.startLoc);
                    }
                }
                jsxParseEmptyExpression() {
                    let e = this.startNodeAt(this.state.lastTokEndLoc);
                    return this.finishNodeAt(e, "JSXEmptyExpression", this.state.startLoc);
                }
                jsxParseSpreadChild(e) {
                    return this.next(), e.expression = this.parseExpression(), this.setContext(w.j_expr), this.state.canStartJSXElement = !0, this.expect(8), this.finishNode(e, "JSXSpreadChild");
                }
                jsxParseExpressionContainer(e, s) {
                    if (this.match(8)) e.expression = this.jsxParseEmptyExpression();
                    else {
                        let i = this.parseExpression();
                        e.expression = i;
                    }
                    return this.setContext(s), this.state.canStartJSXElement = !0, this.expect(8), this.finishNode(e, "JSXExpressionContainer");
                }
                jsxParseAttribute() {
                    let e = this.startNode();
                    return this.match(5) ? (this.setContext(w.brace), this.next(), this.expect(21), e.argument = this.parseMaybeAssignAllowIn(), this.setContext(w.j_oTag), this.state.canStartJSXElement = !0, this.expect(8), this.finishNode(e, "JSXSpreadAttribute")) : (e.name = this.jsxParseNamespacedName(), e.value = this.eat(29) ? this.jsxParseAttributeValue() : null, this.finishNode(e, "JSXAttribute"));
                }
                jsxParseOpeningElementAt(e) {
                    let s = this.startNodeAt(e);
                    return this.eat(143) ? this.finishNode(s, "JSXOpeningFragment") : (s.name = this.jsxParseElementName(), this.jsxParseOpeningElementAfterName(s));
                }
                jsxParseOpeningElementAfterName(e) {
                    let s = [];
                    for(; !this.match(56) && !this.match(143);)s.push(this.jsxParseAttribute());
                    return e.attributes = s, e.selfClosing = this.eat(56), this.expect(143), this.finishNode(e, "JSXOpeningElement");
                }
                jsxParseClosingElementAt(e) {
                    let s = this.startNodeAt(e);
                    return this.eat(143) ? this.finishNode(s, "JSXClosingFragment") : (s.name = this.jsxParseElementName(), this.expect(143), this.finishNode(s, "JSXClosingElement"));
                }
                jsxParseElementAt(e) {
                    let s = this.startNodeAt(e), i = [], r = this.jsxParseOpeningElementAt(e), n = null;
                    if (!r.selfClosing) {
                        e: for(;;)switch(this.state.type){
                            case 142:
                                if (e = this.state.startLoc, this.next(), this.eat(56)) {
                                    n = this.jsxParseClosingElementAt(e);
                                    break e;
                                }
                                i.push(this.jsxParseElementAt(e));
                                break;
                            case 141:
                                i.push(this.parseExprAtom());
                                break;
                            case 5:
                                {
                                    let o = this.startNode();
                                    this.setContext(w.brace), this.next(), this.match(21) ? i.push(this.jsxParseSpreadChild(o)) : i.push(this.jsxParseExpressionContainer(o, w.j_expr));
                                    break;
                                }
                            default:
                                this.unexpected();
                        }
                        z(r) && !z(n) && n !== null ? this.raise(J.MissingClosingTagFragment, n) : !z(r) && z(n) ? this.raise(J.MissingClosingTagElement, n, {
                            openingTagName: Q(r.name)
                        }) : !z(r) && !z(n) && Q(n.name) !== Q(r.name) && this.raise(J.MissingClosingTagElement, n, {
                            openingTagName: Q(r.name)
                        });
                    }
                    if (z(r) ? (s.openingFragment = r, s.closingFragment = n) : (s.openingElement = r, s.closingElement = n), s.children = i, this.match(47)) throw this.raise(J.UnwrappedAdjacentJSXElements, this.state.startLoc);
                    return z(r) ? this.finishNode(s, "JSXFragment") : this.finishNode(s, "JSXElement");
                }
                jsxParseElement() {
                    let e = this.state.startLoc;
                    return this.next(), this.jsxParseElementAt(e);
                }
                setContext(e) {
                    let { context: s } = this.state;
                    s[s.length - 1] = e;
                }
                parseExprAtom(e) {
                    return this.match(141) ? this.parseLiteral(this.state.value, "JSXText") : this.match(142) ? this.jsxParseElement() : this.match(47) && this.input.charCodeAt(this.state.pos) !== 33 ? (this.replaceToken(142), this.jsxParseElement()) : super.parseExprAtom(e);
                }
                skipSpace() {
                    this.curContext().preserveSpace || super.skipSpace();
                }
                getTokenFromCode(e) {
                    let s = this.curContext();
                    if (s === w.j_expr) {
                        this.jsxReadToken();
                        return;
                    }
                    if (s === w.j_oTag || s === w.j_cTag) {
                        if (j(e)) {
                            this.jsxReadWord();
                            return;
                        }
                        if (e === 62) {
                            ++this.state.pos, this.finishToken(143);
                            return;
                        }
                        if ((e === 34 || e === 39) && s === w.j_oTag) {
                            this.jsxReadString(e);
                            return;
                        }
                    }
                    if (e === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {
                        ++this.state.pos, this.finishToken(142);
                        return;
                    }
                    super.getTokenFromCode(e);
                }
                updateContext(e) {
                    let { context: s, type: i } = this.state;
                    if (i === 56 && e === 142) s.splice(-2, 2, w.j_cTag), this.state.canStartJSXElement = !1;
                    else if (i === 142) s.push(w.j_oTag);
                    else if (i === 143) {
                        let r = s[s.length - 1];
                        r === w.j_oTag && e === 56 || r === w.j_cTag ? (s.pop(), this.state.canStartJSXElement = s[s.length - 1] === w.j_expr) : (this.setContext(w.j_expr), this.state.canStartJSXElement = !0);
                    } else this.state.canStartJSXElement = fi(i);
                }
            }, lt = class extends me {
            constructor(...t){
                super(...t), this.tsNames = new Map;
            }
        }, ct = class extends ye {
            constructor(...t){
                super(...t), this.importsStack = [];
            }
            createScope(t) {
                return this.importsStack.push(new Set), new lt(t);
            }
            enter(t) {
                t == 256 && this.importsStack.push(new Set), super.enter(t);
            }
            exit() {
                let t = super.exit();
                return t == 256 && this.importsStack.pop(), t;
            }
            hasImport(t, e) {
                let s = this.importsStack.length;
                if (this.importsStack[s - 1].has(t)) return !0;
                if (!e && s > 1) {
                    for(let i = 0; i < s - 1; i++)if (this.importsStack[i].has(t)) return !0;
                }
                return !1;
            }
            declareName(t, e, s) {
                if (e & 4096) {
                    this.hasImport(t, !0) && this.parser.raise(p.VarRedeclaration, s, {
                        identifierName: t
                    }), this.importsStack[this.importsStack.length - 1].add(t);
                    return;
                }
                let i = this.currentScope(), r = i.tsNames.get(t) || 0;
                if (e & 1024) {
                    this.maybeExportDefined(i, t), i.tsNames.set(t, r | 16);
                    return;
                }
                super.declareName(t, e, s), e & 2 && (e & 1 || (this.checkRedeclarationInScope(i, t, e, s), this.maybeExportDefined(i, t)), r = r | 1), e & 256 && (r = r | 2), e & 512 && (r = r | 4), e & 128 && (r = r | 8), r && i.tsNames.set(t, r);
            }
            isRedeclaredInScope(t, e, s) {
                let i = t.tsNames.get(e);
                if ((i & 2) > 0) {
                    if (s & 256) {
                        let r = !!(s & 512), n = (i & 4) > 0;
                        return r !== n;
                    }
                    return !0;
                }
                return s & 128 && (i & 8) > 0 ? t.names.get(e) & 2 ? !!(s & 1) : !1 : s & 2 && (i & 1) > 0 ? !0 : super.isRedeclaredInScope(t, e, s);
            }
            checkLocalExport(t) {
                let { name: e } = t;
                if (this.hasImport(e)) return;
                let s = this.scopeStack.length;
                for(let i = s - 1; i >= 0; i--){
                    let n = this.scopeStack[i].tsNames.get(e);
                    if ((n & 1) > 0 || (n & 16) > 0) return;
                }
                super.checkLocalExport(t);
            }
        }, Gi = (a, t)=>Object.hasOwnProperty.call(a, t) && a[t], hs = (a)=>a.type === "ParenthesizedExpression" ? hs(a.expression) : a, pt = class extends ht {
            toAssignable(t, e = !1) {
                var s, i;
                let r;
                switch((t.type === "ParenthesizedExpression" || (s = t.extra) != null && s.parenthesized) && (r = hs(t), e ? r.type === "Identifier" ? this.expressionScope.recordArrowParameterBindingError(p.InvalidParenthesizedAssignment, t) : r.type !== "MemberExpression" && !this.isOptionalMemberExpression(r) && this.raise(p.InvalidParenthesizedAssignment, t) : this.raise(p.InvalidParenthesizedAssignment, t)), t.type){
                    case "Identifier":
                    case "ObjectPattern":
                    case "ArrayPattern":
                    case "AssignmentPattern":
                    case "RestElement":
                        break;
                    case "ObjectExpression":
                        t.type = "ObjectPattern";
                        for(let o = 0, h = t.properties.length, l = h - 1; o < h; o++){
                            var n;
                            let c = t.properties[o], u = o === l;
                            this.toAssignableObjectExpressionProp(c, u, e), u && c.type === "RestElement" && (n = t.extra) != null && n.trailingCommaLoc && this.raise(p.RestTrailingComma, t.extra.trailingCommaLoc);
                        }
                        break;
                    case "ObjectProperty":
                        {
                            let { key: o, value: h } = t;
                            this.isPrivateName(o) && this.classScope.usePrivateName(this.getPrivateNameSV(o), o.loc.start), this.toAssignable(h, e);
                            break;
                        }
                    case "SpreadElement":
                        throw new Error("Internal @babel/parser error (this is a bug, please report it). SpreadElement should be converted by .toAssignable's caller.");
                    case "ArrayExpression":
                        t.type = "ArrayPattern", this.toAssignableList(t.elements, (i = t.extra) == null ? void 0 : i.trailingCommaLoc, e);
                        break;
                    case "AssignmentExpression":
                        t.operator !== "=" && this.raise(p.MissingEqInAssignment, t.left.loc.end), t.type = "AssignmentPattern", delete t.operator, this.toAssignable(t.left, e);
                        break;
                    case "ParenthesizedExpression":
                        this.toAssignable(r, e);
                        break;
                }
            }
            toAssignableObjectExpressionProp(t, e, s) {
                if (t.type === "ObjectMethod") this.raise(t.kind === "get" || t.kind === "set" ? p.PatternHasAccessor : p.PatternHasMethod, t.key);
                else if (t.type === "SpreadElement") {
                    t.type = "RestElement";
                    let i = t.argument;
                    this.checkToRestConversion(i, !1), this.toAssignable(i, s), e || this.raise(p.RestTrailingComma, t);
                } else this.toAssignable(t, s);
            }
            toAssignableList(t, e, s) {
                let i = t.length - 1;
                for(let r = 0; r <= i; r++){
                    let n = t[r];
                    if (n) {
                        if (n.type === "SpreadElement") {
                            n.type = "RestElement";
                            let o = n.argument;
                            this.checkToRestConversion(o, !0), this.toAssignable(o, s);
                        } else this.toAssignable(n, s);
                        n.type === "RestElement" && (r < i ? this.raise(p.RestTrailingComma, n) : e && this.raise(p.RestTrailingComma, e));
                    }
                }
            }
            isAssignable(t, e) {
                switch(t.type){
                    case "Identifier":
                    case "ObjectPattern":
                    case "ArrayPattern":
                    case "AssignmentPattern":
                    case "RestElement":
                        return !0;
                    case "ObjectExpression":
                        {
                            let s = t.properties.length - 1;
                            return t.properties.every((i, r)=>i.type !== "ObjectMethod" && (r === s || i.type !== "SpreadElement") && this.isAssignable(i));
                        }
                    case "ObjectProperty":
                        return this.isAssignable(t.value);
                    case "SpreadElement":
                        return this.isAssignable(t.argument);
                    case "ArrayExpression":
                        return t.elements.every((s)=>s === null || this.isAssignable(s));
                    case "AssignmentExpression":
                        return t.operator === "=";
                    case "ParenthesizedExpression":
                        return this.isAssignable(t.expression);
                    case "MemberExpression":
                    case "OptionalMemberExpression":
                        return !e;
                    default:
                        return !1;
                }
            }
            toReferencedList(t, e) {
                return t;
            }
            toReferencedListDeep(t, e) {
                this.toReferencedList(t, e);
                for (let s of t)(s == null ? void 0 : s.type) === "ArrayExpression" && this.toReferencedListDeep(s.elements);
            }
            parseSpread(t) {
                let e = this.startNode();
                return this.next(), e.argument = this.parseMaybeAssignAllowIn(t, void 0), this.finishNode(e, "SpreadElement");
            }
            parseRestBinding() {
                let t = this.startNode();
                return this.next(), t.argument = this.parseBindingAtom(), this.finishNode(t, "RestElement");
            }
            parseBindingAtom() {
                switch(this.state.type){
                    case 0:
                        {
                            let t = this.startNode();
                            return this.next(), t.elements = this.parseBindingList(3, 93, 1), this.finishNode(t, "ArrayPattern");
                        }
                    case 5:
                        return this.parseObjectLike(8, !0);
                }
                return this.parseIdentifier();
            }
            parseBindingList(t, e, s) {
                let i = s & 1, r = [], n = !0;
                for(; !this.eat(t);)if (n ? n = !1 : this.expect(12), i && this.match(12)) r.push(null);
                else {
                    if (this.eat(t)) break;
                    if (this.match(21)) {
                        if (r.push(this.parseAssignableListItemTypes(this.parseRestBinding(), s)), !this.checkCommaAfterRest(e)) {
                            this.expect(t);
                            break;
                        }
                    } else {
                        let o = [];
                        for(this.match(26) && this.hasPlugin("decorators") && this.raise(p.UnsupportedParameterDecorator, this.state.startLoc); this.match(26);)o.push(this.parseDecorator());
                        r.push(this.parseAssignableListItem(s, o));
                    }
                }
                return r;
            }
            parseBindingRestProperty(t) {
                return this.next(), t.argument = this.parseIdentifier(), this.checkCommaAfterRest(125), this.finishNode(t, "RestElement");
            }
            parseBindingProperty() {
                let t = this.startNode(), { type: e, startLoc: s } = this.state;
                return e === 21 ? this.parseBindingRestProperty(t) : (e === 138 ? (this.expectPlugin("destructuringPrivate", s), this.classScope.usePrivateName(this.state.value, s), t.key = this.parsePrivateName()) : this.parsePropertyName(t), t.method = !1, this.parseObjPropValue(t, s, !1, !1, !0, !1));
            }
            parseAssignableListItem(t, e) {
                let s = this.parseMaybeDefault();
                this.parseAssignableListItemTypes(s, t);
                let i = this.parseMaybeDefault(s.loc.start, s);
                return e.length && (s.decorators = e), i;
            }
            parseAssignableListItemTypes(t, e) {
                return t;
            }
            parseMaybeDefault(t, e) {
                var s, i;
                if ((s = t) != null || (t = this.state.startLoc), e = (i = e) != null ? i : this.parseBindingAtom(), !this.eat(29)) return e;
                let r = this.startNodeAt(t);
                return r.left = e, r.right = this.parseMaybeAssignAllowIn(), this.finishNode(r, "AssignmentPattern");
            }
            isValidLVal(t, e, s) {
                return Gi({
                    AssignmentPattern: "left",
                    RestElement: "argument",
                    ObjectProperty: "value",
                    ParenthesizedExpression: "expression",
                    ArrayPattern: "elements",
                    ObjectPattern: "properties"
                }, t);
            }
            isOptionalMemberExpression(t) {
                return t.type === "OptionalMemberExpression";
            }
            checkLVal(t, { in: e, binding: s = 64, checkClashes: i = !1, strictModeChanged: r = !1, hasParenthesizedAncestor: n = !1 }) {
                var o;
                let h = t.type;
                if (this.isObjectMethod(t)) return;
                let l = this.isOptionalMemberExpression(t);
                if (l || h === "MemberExpression") {
                    l && (this.expectPlugin("optionalChainingAssign", t.loc.start), e.type !== "AssignmentExpression" && this.raise(p.InvalidLhsOptionalChaining, t, {
                        ancestor: e
                    })), s !== 64 && this.raise(p.InvalidPropertyBindingPattern, t);
                    return;
                }
                if (h === "Identifier") {
                    this.checkIdentifier(t, s, r);
                    let { name: y } = t;
                    i && (i.has(y) ? this.raise(p.ParamDupe, t) : i.add(y));
                    return;
                }
                let c = this.isValidLVal(h, !(n || (o = t.extra) != null && o.parenthesized) && e.type === "AssignmentExpression", s);
                if (c === !0) return;
                if (c === !1) {
                    let y = s === 64 ? p.InvalidLhs : p.InvalidLhsBinding;
                    this.raise(y, t, {
                        ancestor: e
                    });
                    return;
                }
                let [u, f] = Array.isArray(c) ? c : [
                    c,
                    h === "ParenthesizedExpression"
                ], d = h === "ArrayPattern" || h === "ObjectPattern" ? {
                    type: h
                } : e;
                for (let y of [].concat(t[u]))y && this.checkLVal(y, {
                    in: d,
                    binding: s,
                    checkClashes: i,
                    strictModeChanged: r,
                    hasParenthesizedAncestor: f
                });
            }
            checkIdentifier(t, e, s = !1) {
                this.state.strict && (s ? ss(t.name, this.inModule) : ts(t.name)) && (e === 64 ? this.raise(p.StrictEvalArguments, t, {
                    referenceName: t.name
                }) : this.raise(p.StrictEvalArgumentsBinding, t, {
                    bindingName: t.name
                })), e & 8192 && t.name === "let" && this.raise(p.LetInLexicalBinding, t), e & 64 || this.declareNameFromIdentifier(t, e);
            }
            declareNameFromIdentifier(t, e) {
                this.scope.declareName(t.name, e, t.loc.start);
            }
            checkToRestConversion(t, e) {
                switch(t.type){
                    case "ParenthesizedExpression":
                        this.checkToRestConversion(t.expression, e);
                        break;
                    case "Identifier":
                    case "MemberExpression":
                        break;
                    case "ArrayExpression":
                    case "ObjectExpression":
                        if (e) break;
                    default:
                        this.raise(p.InvalidRestAssignmentPattern, t);
                }
            }
            checkCommaAfterRest(t) {
                return this.match(12) ? (this.raise(this.lookaheadCharCode() === t ? p.RestTrailingComma : p.ElementAfterRest, this.state.startLoc), !0) : !1;
            }
        }, Yi = (a, t)=>Object.hasOwnProperty.call(a, t) && a[t];
        function Qi(a) {
            if (a == null) throw new Error(`Unexpected ${a} value.`);
            return a;
        }
        function Vt(a) {
            if (!a) throw new Error("Assert fail");
        }
        var x = $`typescript`({
            AbstractMethodHasImplementation: ({ methodName: a })=>`Method '${a}' cannot have an implementation because it is marked abstract.`,
            AbstractPropertyHasInitializer: ({ propertyName: a })=>`Property '${a}' cannot have an initializer because it is marked abstract.`,
            AccesorCannotDeclareThisParameter: "'get' and 'set' accessors cannot declare 'this' parameters.",
            AccesorCannotHaveTypeParameters: "An accessor cannot have type parameters.",
            AccessorCannotBeOptional: "An 'accessor' property cannot be declared optional.",
            ClassMethodHasDeclare: "Class methods cannot have the 'declare' modifier.",
            ClassMethodHasReadonly: "Class methods cannot have the 'readonly' modifier.",
            ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: "A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.",
            ConstructorHasTypeParameters: "Type parameters cannot appear on a constructor declaration.",
            DeclareAccessor: ({ kind: a })=>`'declare' is not allowed in ${a}ters.`,
            DeclareClassFieldHasInitializer: "Initializers are not allowed in ambient contexts.",
            DeclareFunctionHasImplementation: "An implementation cannot be declared in ambient contexts.",
            DuplicateAccessibilityModifier: ({ modifier: a })=>"Accessibility modifier already seen.",
            DuplicateModifier: ({ modifier: a })=>`Duplicate modifier: '${a}'.`,
            EmptyHeritageClauseType: ({ token: a })=>`'${a}' list cannot be empty.`,
            EmptyTypeArguments: "Type argument list cannot be empty.",
            EmptyTypeParameters: "Type parameter list cannot be empty.",
            ExpectedAmbientAfterExportDeclare: "'export declare' must be followed by an ambient declaration.",
            ImportAliasHasImportType: "An import alias can not use 'import type'.",
            ImportReflectionHasImportType: "An `import module` declaration can not use `type` modifier",
            IncompatibleModifiers: ({ modifiers: a })=>`'${a[0]}' modifier cannot be used with '${a[1]}' modifier.`,
            IndexSignatureHasAbstract: "Index signatures cannot have the 'abstract' modifier.",
            IndexSignatureHasAccessibility: ({ modifier: a })=>`Index signatures cannot have an accessibility modifier ('${a}').`,
            IndexSignatureHasDeclare: "Index signatures cannot have the 'declare' modifier.",
            IndexSignatureHasOverride: "'override' modifier cannot appear on an index signature.",
            IndexSignatureHasStatic: "Index signatures cannot have the 'static' modifier.",
            InitializerNotAllowedInAmbientContext: "Initializers are not allowed in ambient contexts.",
            InvalidModifierOnTypeMember: ({ modifier: a })=>`'${a}' modifier cannot appear on a type member.`,
            InvalidModifierOnTypeParameter: ({ modifier: a })=>`'${a}' modifier cannot appear on a type parameter.`,
            InvalidModifierOnTypeParameterPositions: ({ modifier: a })=>`'${a}' modifier can only appear on a type parameter of a class, interface or type alias.`,
            InvalidModifiersOrder: ({ orderedModifiers: a })=>`'${a[0]}' modifier must precede '${a[1]}' modifier.`,
            InvalidPropertyAccessAfterInstantiationExpression: "Invalid property access after an instantiation expression. You can either wrap the instantiation expression in parentheses, or delete the type arguments.",
            InvalidTupleMemberLabel: "Tuple members must be labeled with a simple identifier.",
            MissingInterfaceName: "'interface' declarations must be followed by an identifier.",
            NonAbstractClassHasAbstractMethod: "Abstract methods can only appear within an abstract class.",
            NonClassMethodPropertyHasAbstractModifer: "'abstract' modifier can only appear on a class, method, or property declaration.",
            OptionalTypeBeforeRequired: "A required element cannot follow an optional element.",
            OverrideNotInSubClass: "This member cannot have an 'override' modifier because its containing class does not extend another class.",
            PatternIsOptional: "A binding pattern parameter cannot be optional in an implementation signature.",
            PrivateElementHasAbstract: "Private elements cannot have the 'abstract' modifier.",
            PrivateElementHasAccessibility: ({ modifier: a })=>`Private elements cannot have an accessibility modifier ('${a}').`,
            ReadonlyForMethodSignature: "'readonly' modifier can only appear on a property declaration or index signature.",
            ReservedArrowTypeParam: "This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.",
            ReservedTypeAssertion: "This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.",
            SetAccesorCannotHaveOptionalParameter: "A 'set' accessor cannot have an optional parameter.",
            SetAccesorCannotHaveRestParameter: "A 'set' accessor cannot have rest parameter.",
            SetAccesorCannotHaveReturnType: "A 'set' accessor cannot have a return type annotation.",
            SingleTypeParameterWithoutTrailingComma: ({ typeParameterName: a })=>`Single type parameter ${a} should have a trailing comma. Example usage: <${a},>.`,
            StaticBlockCannotHaveModifier: "Static class blocks cannot have any modifier.",
            TupleOptionalAfterType: "A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).",
            TypeAnnotationAfterAssign: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",
            TypeImportCannotSpecifyDefaultAndNamed: "A type-only import can specify a default import or named bindings, but not both.",
            TypeModifierIsUsedInTypeExports: "The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.",
            TypeModifierIsUsedInTypeImports: "The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.",
            UnexpectedParameterModifier: "A parameter property is only allowed in a constructor implementation.",
            UnexpectedReadonly: "'readonly' type modifier is only permitted on array and tuple literal types.",
            UnexpectedTypeAnnotation: "Did not expect a type annotation here.",
            UnexpectedTypeCastInParameter: "Unexpected type cast in parameter position.",
            UnsupportedImportTypeArgument: "Argument in a type import must be a string literal.",
            UnsupportedParameterPropertyKind: "A parameter property may not be declared using a binding pattern.",
            UnsupportedSignatureParameterKind: ({ type: a })=>`Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${a}.`
        });
        function Zi(a) {
            switch(a){
                case "any":
                    return "TSAnyKeyword";
                case "boolean":
                    return "TSBooleanKeyword";
                case "bigint":
                    return "TSBigIntKeyword";
                case "never":
                    return "TSNeverKeyword";
                case "number":
                    return "TSNumberKeyword";
                case "object":
                    return "TSObjectKeyword";
                case "string":
                    return "TSStringKeyword";
                case "symbol":
                    return "TSSymbolKeyword";
                case "undefined":
                    return "TSUndefinedKeyword";
                case "unknown":
                    return "TSUnknownKeyword";
                default:
                    return;
            }
        }
        function qt(a) {
            return a === "private" || a === "public" || a === "protected";
        }
        function er(a) {
            return a === "in" || a === "out";
        }
        var tr = (a)=>class extends a {
                constructor(...e){
                    super(...e), this.tsParseInOutModifiers = this.tsParseModifiers.bind(this, {
                        allowedModifiers: [
                            "in",
                            "out"
                        ],
                        disallowedModifiers: [
                            "const",
                            "public",
                            "private",
                            "protected",
                            "readonly",
                            "declare",
                            "abstract",
                            "override"
                        ],
                        errorTemplate: x.InvalidModifierOnTypeParameter
                    }), this.tsParseConstModifier = this.tsParseModifiers.bind(this, {
                        allowedModifiers: [
                            "const"
                        ],
                        disallowedModifiers: [
                            "in",
                            "out"
                        ],
                        errorTemplate: x.InvalidModifierOnTypeParameterPositions
                    }), this.tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {
                        allowedModifiers: [
                            "in",
                            "out",
                            "const"
                        ],
                        disallowedModifiers: [
                            "public",
                            "private",
                            "protected",
                            "readonly",
                            "declare",
                            "abstract",
                            "override"
                        ],
                        errorTemplate: x.InvalidModifierOnTypeParameter
                    });
                }
                getScopeHandler() {
                    return ct;
                }
                tsIsIdentifier() {
                    return S(this.state.type);
                }
                tsTokenCanFollowModifier() {
                    return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(138) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();
                }
                tsNextTokenCanFollowModifier() {
                    return this.next(), this.tsTokenCanFollowModifier();
                }
                tsParseModifier(e, s) {
                    if (!S(this.state.type) && this.state.type !== 58 && this.state.type !== 75) return;
                    let i = this.state.value;
                    if (e.indexOf(i) !== -1) {
                        if (s && this.tsIsStartOfStaticBlocks()) return;
                        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) return i;
                    }
                }
                tsParseModifiers({ allowedModifiers: e, disallowedModifiers: s, stopOnStartOfClassStaticBlock: i, errorTemplate: r = x.InvalidModifierOnTypeMember }, n) {
                    let o = (l, c, u, f)=>{
                        c === u && n[f] && this.raise(x.InvalidModifiersOrder, l, {
                            orderedModifiers: [
                                u,
                                f
                            ]
                        });
                    }, h = (l, c, u, f)=>{
                        (n[u] && c === f || n[f] && c === u) && this.raise(x.IncompatibleModifiers, l, {
                            modifiers: [
                                u,
                                f
                            ]
                        });
                    };
                    for(;;){
                        let { startLoc: l } = this.state, c = this.tsParseModifier(e.concat(s ?? []), i);
                        if (!c) break;
                        qt(c) ? n.accessibility ? this.raise(x.DuplicateAccessibilityModifier, l, {
                            modifier: c
                        }) : (o(l, c, c, "override"), o(l, c, c, "static"), o(l, c, c, "readonly"), n.accessibility = c) : er(c) ? (n[c] && this.raise(x.DuplicateModifier, l, {
                            modifier: c
                        }), n[c] = !0, o(l, c, "in", "out")) : (Object.hasOwnProperty.call(n, c) ? this.raise(x.DuplicateModifier, l, {
                            modifier: c
                        }) : (o(l, c, "static", "readonly"), o(l, c, "static", "override"), o(l, c, "override", "readonly"), o(l, c, "abstract", "override"), h(l, c, "declare", "override"), h(l, c, "static", "abstract")), n[c] = !0), s != null && s.includes(c) && this.raise(r, l, {
                            modifier: c
                        });
                    }
                }
                tsIsListTerminator(e) {
                    switch(e){
                        case "EnumMembers":
                        case "TypeMembers":
                            return this.match(8);
                        case "HeritageClauseElement":
                            return this.match(5);
                        case "TupleElementTypes":
                            return this.match(3);
                        case "TypeParametersOrArguments":
                            return this.match(48);
                    }
                }
                tsParseList(e, s) {
                    let i = [];
                    for(; !this.tsIsListTerminator(e);)i.push(s());
                    return i;
                }
                tsParseDelimitedList(e, s, i) {
                    return Qi(this.tsParseDelimitedListWorker(e, s, !0, i));
                }
                tsParseDelimitedListWorker(e, s, i, r) {
                    let n = [], o = -1;
                    for(; !this.tsIsListTerminator(e);){
                        o = -1;
                        let h = s();
                        if (h == null) return;
                        if (n.push(h), this.eat(12)) {
                            o = this.state.lastTokStartLoc.index;
                            continue;
                        }
                        if (this.tsIsListTerminator(e)) break;
                        i && this.expect(12);
                        return;
                    }
                    return r && (r.value = o), n;
                }
                tsParseBracketedList(e, s, i, r, n) {
                    r || (i ? this.expect(0) : this.expect(47));
                    let o = this.tsParseDelimitedList(e, s, n);
                    return i ? this.expect(3) : this.expect(48), o;
                }
                tsParseImportType() {
                    let e = this.startNode();
                    return this.expect(83), this.expect(10), this.match(133) || this.raise(x.UnsupportedImportTypeArgument, this.state.startLoc), e.argument = super.parseExprAtom(), this.expect(11), this.eat(16) && (e.qualifier = this.tsParseEntityName()), this.match(47) && (e.typeParameters = this.tsParseTypeArguments()), this.finishNode(e, "TSImportType");
                }
                tsParseEntityName(e = !0) {
                    let s = this.parseIdentifier(e);
                    for(; this.eat(16);){
                        let i = this.startNodeAtNode(s);
                        i.left = s, i.right = this.parseIdentifier(e), s = this.finishNode(i, "TSQualifiedName");
                    }
                    return s;
                }
                tsParseTypeReference() {
                    let e = this.startNode();
                    return e.typeName = this.tsParseEntityName(), !this.hasPrecedingLineBreak() && this.match(47) && (e.typeParameters = this.tsParseTypeArguments()), this.finishNode(e, "TSTypeReference");
                }
                tsParseThisTypePredicate(e) {
                    this.next();
                    let s = this.startNodeAtNode(e);
                    return s.parameterName = e, s.typeAnnotation = this.tsParseTypeAnnotation(!1), s.asserts = !1, this.finishNode(s, "TSTypePredicate");
                }
                tsParseThisTypeNode() {
                    let e = this.startNode();
                    return this.next(), this.finishNode(e, "TSThisType");
                }
                tsParseTypeQuery() {
                    let e = this.startNode();
                    return this.expect(87), this.match(83) ? e.exprName = this.tsParseImportType() : e.exprName = this.tsParseEntityName(), !this.hasPrecedingLineBreak() && this.match(47) && (e.typeParameters = this.tsParseTypeArguments()), this.finishNode(e, "TSTypeQuery");
                }
                tsParseTypeParameter(e) {
                    let s = this.startNode();
                    return e(s), s.name = this.tsParseTypeParameterName(), s.constraint = this.tsEatThenParseType(81), s.default = this.tsEatThenParseType(29), this.finishNode(s, "TSTypeParameter");
                }
                tsTryParseTypeParameters(e) {
                    if (this.match(47)) return this.tsParseTypeParameters(e);
                }
                tsParseTypeParameters(e) {
                    let s = this.startNode();
                    this.match(47) || this.match(142) ? this.next() : this.unexpected();
                    let i = {
                        value: -1
                    };
                    return s.params = this.tsParseBracketedList("TypeParametersOrArguments", this.tsParseTypeParameter.bind(this, e), !1, !0, i), s.params.length === 0 && this.raise(x.EmptyTypeParameters, s), i.value !== -1 && this.addExtra(s, "trailingComma", i.value), this.finishNode(s, "TSTypeParameterDeclaration");
                }
                tsFillSignature(e, s) {
                    let i = e === 19, r = "parameters", n = "typeAnnotation";
                    s.typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier), this.expect(10), s[r] = this.tsParseBindingListForSignature(), i ? s[n] = this.tsParseTypeOrTypePredicateAnnotation(e) : this.match(e) && (s[n] = this.tsParseTypeOrTypePredicateAnnotation(e));
                }
                tsParseBindingListForSignature() {
                    let e = super.parseBindingList(11, 41, 2);
                    for (let s of e){
                        let { type: i } = s;
                        (i === "AssignmentPattern" || i === "TSParameterProperty") && this.raise(x.UnsupportedSignatureParameterKind, s, {
                            type: i
                        });
                    }
                    return e;
                }
                tsParseTypeMemberSemicolon() {
                    !this.eat(12) && !this.isLineTerminator() && this.expect(13);
                }
                tsParseSignatureMember(e, s) {
                    return this.tsFillSignature(14, s), this.tsParseTypeMemberSemicolon(), this.finishNode(s, e);
                }
                tsIsUnambiguouslyIndexSignature() {
                    return this.next(), S(this.state.type) ? (this.next(), this.match(14)) : !1;
                }
                tsTryParseIndexSignature(e) {
                    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) return;
                    this.expect(0);
                    let s = this.parseIdentifier();
                    s.typeAnnotation = this.tsParseTypeAnnotation(), this.resetEndLocation(s), this.expect(3), e.parameters = [
                        s
                    ];
                    let i = this.tsTryParseTypeAnnotation();
                    return i && (e.typeAnnotation = i), this.tsParseTypeMemberSemicolon(), this.finishNode(e, "TSIndexSignature");
                }
                tsParsePropertyOrMethodSignature(e, s) {
                    this.eat(17) && (e.optional = !0);
                    let i = e;
                    if (this.match(10) || this.match(47)) {
                        s && this.raise(x.ReadonlyForMethodSignature, e);
                        let r = i;
                        r.kind && this.match(47) && this.raise(x.AccesorCannotHaveTypeParameters, this.state.curPosition()), this.tsFillSignature(14, r), this.tsParseTypeMemberSemicolon();
                        let n = "parameters", o = "typeAnnotation";
                        if (r.kind === "get") r[n].length > 0 && (this.raise(p.BadGetterArity, this.state.curPosition()), this.isThisParam(r[n][0]) && this.raise(x.AccesorCannotDeclareThisParameter, this.state.curPosition()));
                        else if (r.kind === "set") {
                            if (r[n].length !== 1) this.raise(p.BadSetterArity, this.state.curPosition());
                            else {
                                let h = r[n][0];
                                this.isThisParam(h) && this.raise(x.AccesorCannotDeclareThisParameter, this.state.curPosition()), h.type === "Identifier" && h.optional && this.raise(x.SetAccesorCannotHaveOptionalParameter, this.state.curPosition()), h.type === "RestElement" && this.raise(x.SetAccesorCannotHaveRestParameter, this.state.curPosition());
                            }
                            r[o] && this.raise(x.SetAccesorCannotHaveReturnType, r[o]);
                        } else r.kind = "method";
                        return this.finishNode(r, "TSMethodSignature");
                    } else {
                        let r = i;
                        s && (r.readonly = !0);
                        let n = this.tsTryParseTypeAnnotation();
                        return n && (r.typeAnnotation = n), this.tsParseTypeMemberSemicolon(), this.finishNode(r, "TSPropertySignature");
                    }
                }
                tsParseTypeMember() {
                    let e = this.startNode();
                    if (this.match(10) || this.match(47)) return this.tsParseSignatureMember("TSCallSignatureDeclaration", e);
                    if (this.match(77)) {
                        let i = this.startNode();
                        return this.next(), this.match(10) || this.match(47) ? this.tsParseSignatureMember("TSConstructSignatureDeclaration", e) : (e.key = this.createIdentifier(i, "new"), this.tsParsePropertyOrMethodSignature(e, !1));
                    }
                    this.tsParseModifiers({
                        allowedModifiers: [
                            "readonly"
                        ],
                        disallowedModifiers: [
                            "declare",
                            "abstract",
                            "private",
                            "protected",
                            "public",
                            "static",
                            "override"
                        ]
                    }, e);
                    let s = this.tsTryParseIndexSignature(e);
                    return s || (super.parsePropertyName(e), !e.computed && e.key.type === "Identifier" && (e.key.name === "get" || e.key.name === "set") && this.tsTokenCanFollowModifier() && (e.kind = e.key.name, super.parsePropertyName(e)), this.tsParsePropertyOrMethodSignature(e, !!e.readonly));
                }
                tsParseTypeLiteral() {
                    let e = this.startNode();
                    return e.members = this.tsParseObjectTypeMembers(), this.finishNode(e, "TSTypeLiteral");
                }
                tsParseObjectTypeMembers() {
                    this.expect(5);
                    let e = this.tsParseList("TypeMembers", this.tsParseTypeMember.bind(this));
                    return this.expect(8), e;
                }
                tsIsStartOfMappedType() {
                    return this.next(), this.eat(53) ? this.isContextual(122) : (this.isContextual(122) && this.next(), !this.match(0) || (this.next(), !this.tsIsIdentifier()) ? !1 : (this.next(), this.match(58)));
                }
                tsParseMappedTypeParameter() {
                    let e = this.startNode();
                    return e.name = this.tsParseTypeParameterName(), e.constraint = this.tsExpectThenParseType(58), this.finishNode(e, "TSTypeParameter");
                }
                tsParseMappedType() {
                    let e = this.startNode();
                    return this.expect(5), this.match(53) ? (e.readonly = this.state.value, this.next(), this.expectContextual(122)) : this.eatContextual(122) && (e.readonly = !0), this.expect(0), e.typeParameter = this.tsParseMappedTypeParameter(), e.nameType = this.eatContextual(93) ? this.tsParseType() : null, this.expect(3), this.match(53) ? (e.optional = this.state.value, this.next(), this.expect(17)) : this.eat(17) && (e.optional = !0), e.typeAnnotation = this.tsTryParseType(), this.semicolon(), this.expect(8), this.finishNode(e, "TSMappedType");
                }
                tsParseTupleType() {
                    let e = this.startNode();
                    e.elementTypes = this.tsParseBracketedList("TupleElementTypes", this.tsParseTupleElementType.bind(this), !0, !1);
                    let s = !1;
                    return e.elementTypes.forEach((i)=>{
                        let { type: r } = i;
                        s && r !== "TSRestType" && r !== "TSOptionalType" && !(r === "TSNamedTupleMember" && i.optional) && this.raise(x.OptionalTypeBeforeRequired, i), s || (s = r === "TSNamedTupleMember" && i.optional || r === "TSOptionalType");
                    }), this.finishNode(e, "TSTupleType");
                }
                tsParseTupleElementType() {
                    let { startLoc: e } = this.state, s = this.eat(21), i, r, n, o, l = M(this.state.type) ? this.lookaheadCharCode() : null;
                    if (l === 58) i = !0, n = !1, r = this.parseIdentifier(!0), this.expect(14), o = this.tsParseType();
                    else if (l === 63) {
                        n = !0;
                        let c = this.state.startLoc, u = this.state.value, f = this.tsParseNonArrayType();
                        this.lookaheadCharCode() === 58 ? (i = !0, r = this.createIdentifier(this.startNodeAt(c), u), this.expect(17), this.expect(14), o = this.tsParseType()) : (i = !1, o = f, this.expect(17));
                    } else o = this.tsParseType(), n = this.eat(17), i = this.eat(14);
                    if (i) {
                        let c;
                        r ? (c = this.startNodeAtNode(r), c.optional = n, c.label = r, c.elementType = o, this.eat(17) && (c.optional = !0, this.raise(x.TupleOptionalAfterType, this.state.lastTokStartLoc))) : (c = this.startNodeAtNode(o), c.optional = n, this.raise(x.InvalidTupleMemberLabel, o), c.label = o, c.elementType = this.tsParseType()), o = this.finishNode(c, "TSNamedTupleMember");
                    } else if (n) {
                        let c = this.startNodeAtNode(o);
                        c.typeAnnotation = o, o = this.finishNode(c, "TSOptionalType");
                    }
                    if (s) {
                        let c = this.startNodeAt(e);
                        c.typeAnnotation = o, o = this.finishNode(c, "TSRestType");
                    }
                    return o;
                }
                tsParseParenthesizedType() {
                    let e = this.startNode();
                    return this.expect(10), e.typeAnnotation = this.tsParseType(), this.expect(11), this.finishNode(e, "TSParenthesizedType");
                }
                tsParseFunctionOrConstructorType(e, s) {
                    let i = this.startNode();
                    return e === "TSConstructorType" && (i.abstract = !!s, s && this.next(), this.next()), this.tsInAllowConditionalTypesContext(()=>this.tsFillSignature(19, i)), this.finishNode(i, e);
                }
                tsParseLiteralTypeNode() {
                    let e = this.startNode();
                    switch(this.state.type){
                        case 134:
                        case 135:
                        case 133:
                        case 85:
                        case 86:
                            e.literal = super.parseExprAtom();
                            break;
                        default:
                            this.unexpected();
                    }
                    return this.finishNode(e, "TSLiteralType");
                }
                tsParseTemplateLiteralType() {
                    let e = this.startNode();
                    return e.literal = super.parseTemplate(!1), this.finishNode(e, "TSLiteralType");
                }
                parseTemplateSubstitution() {
                    return this.state.inType ? this.tsParseType() : super.parseTemplateSubstitution();
                }
                tsParseThisTypeOrThisTypePredicate() {
                    let e = this.tsParseThisTypeNode();
                    return this.isContextual(116) && !this.hasPrecedingLineBreak() ? this.tsParseThisTypePredicate(e) : e;
                }
                tsParseNonArrayType() {
                    switch(this.state.type){
                        case 133:
                        case 134:
                        case 135:
                        case 85:
                        case 86:
                            return this.tsParseLiteralTypeNode();
                        case 53:
                            if (this.state.value === "-") {
                                let e = this.startNode(), s = this.lookahead();
                                return s.type !== 134 && s.type !== 135 && this.unexpected(), e.literal = this.parseMaybeUnary(), this.finishNode(e, "TSLiteralType");
                            }
                            break;
                        case 78:
                            return this.tsParseThisTypeOrThisTypePredicate();
                        case 87:
                            return this.tsParseTypeQuery();
                        case 83:
                            return this.tsParseImportType();
                        case 5:
                            return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();
                        case 0:
                            return this.tsParseTupleType();
                        case 10:
                            return this.tsParseParenthesizedType();
                        case 25:
                        case 24:
                            return this.tsParseTemplateLiteralType();
                        default:
                            {
                                let { type: e } = this.state;
                                if (S(e) || e === 88 || e === 84) {
                                    let s = e === 88 ? "TSVoidKeyword" : e === 84 ? "TSNullKeyword" : Zi(this.state.value);
                                    if (s !== void 0 && this.lookaheadCharCode() !== 46) {
                                        let i = this.startNode();
                                        return this.next(), this.finishNode(i, s);
                                    }
                                    return this.tsParseTypeReference();
                                }
                            }
                    }
                    this.unexpected();
                }
                tsParseArrayTypeOrHigher() {
                    let e = this.tsParseNonArrayType();
                    for(; !this.hasPrecedingLineBreak() && this.eat(0);)if (this.match(3)) {
                        let s = this.startNodeAtNode(e);
                        s.elementType = e, this.expect(3), e = this.finishNode(s, "TSArrayType");
                    } else {
                        let s = this.startNodeAtNode(e);
                        s.objectType = e, s.indexType = this.tsParseType(), this.expect(3), e = this.finishNode(s, "TSIndexedAccessType");
                    }
                    return e;
                }
                tsParseTypeOperator() {
                    let e = this.startNode(), s = this.state.value;
                    return this.next(), e.operator = s, e.typeAnnotation = this.tsParseTypeOperatorOrHigher(), s === "readonly" && this.tsCheckTypeAnnotationForReadOnly(e), this.finishNode(e, "TSTypeOperator");
                }
                tsCheckTypeAnnotationForReadOnly(e) {
                    switch(e.typeAnnotation.type){
                        case "TSTupleType":
                        case "TSArrayType":
                            return;
                        default:
                            this.raise(x.UnexpectedReadonly, e);
                    }
                }
                tsParseInferType() {
                    let e = this.startNode();
                    this.expectContextual(115);
                    let s = this.startNode();
                    return s.name = this.tsParseTypeParameterName(), s.constraint = this.tsTryParse(()=>this.tsParseConstraintForInferType()), e.typeParameter = this.finishNode(s, "TSTypeParameter"), this.finishNode(e, "TSInferType");
                }
                tsParseConstraintForInferType() {
                    if (this.eat(81)) {
                        let e = this.tsInDisallowConditionalTypesContext(()=>this.tsParseType());
                        if (this.state.inDisallowConditionalTypesContext || !this.match(17)) return e;
                    }
                }
                tsParseTypeOperatorOrHigher() {
                    return gi(this.state.type) && !this.state.containsEsc ? this.tsParseTypeOperator() : this.isContextual(115) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(()=>this.tsParseArrayTypeOrHigher());
                }
                tsParseUnionOrIntersectionType(e, s, i) {
                    let r = this.startNode(), n = this.eat(i), o = [];
                    do o.push(s());
                    while (this.eat(i));
                    return o.length === 1 && !n ? o[0] : (r.types = o, this.finishNode(r, e));
                }
                tsParseIntersectionTypeOrHigher() {
                    return this.tsParseUnionOrIntersectionType("TSIntersectionType", this.tsParseTypeOperatorOrHigher.bind(this), 45);
                }
                tsParseUnionTypeOrHigher() {
                    return this.tsParseUnionOrIntersectionType("TSUnionType", this.tsParseIntersectionTypeOrHigher.bind(this), 43);
                }
                tsIsStartOfFunctionType() {
                    return this.match(47) ? !0 : this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));
                }
                tsSkipParameterStart() {
                    if (S(this.state.type) || this.match(78)) return this.next(), !0;
                    if (this.match(5)) {
                        let { errors: e } = this.state, s = e.length;
                        try {
                            return this.parseObjectLike(8, !0), e.length === s;
                        } catch  {
                            return !1;
                        }
                    }
                    if (this.match(0)) {
                        this.next();
                        let { errors: e } = this.state, s = e.length;
                        try {
                            return super.parseBindingList(3, 93, 1), e.length === s;
                        } catch  {
                            return !1;
                        }
                    }
                    return !1;
                }
                tsIsUnambiguouslyStartOfFunctionType() {
                    return this.next(), !!(this.match(11) || this.match(21) || this.tsSkipParameterStart() && (this.match(14) || this.match(12) || this.match(17) || this.match(29) || this.match(11) && (this.next(), this.match(19))));
                }
                tsParseTypeOrTypePredicateAnnotation(e) {
                    return this.tsInType(()=>{
                        let s = this.startNode();
                        this.expect(e);
                        let i = this.startNode(), r = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));
                        if (r && this.match(78)) {
                            let h = this.tsParseThisTypeOrThisTypePredicate();
                            return h.type === "TSThisType" ? (i.parameterName = h, i.asserts = !0, i.typeAnnotation = null, h = this.finishNode(i, "TSTypePredicate")) : (this.resetStartLocationFromNode(h, i), h.asserts = !0), s.typeAnnotation = h, this.finishNode(s, "TSTypeAnnotation");
                        }
                        let n = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));
                        if (!n) return r ? (i.parameterName = this.parseIdentifier(), i.asserts = r, i.typeAnnotation = null, s.typeAnnotation = this.finishNode(i, "TSTypePredicate"), this.finishNode(s, "TSTypeAnnotation")) : this.tsParseTypeAnnotation(!1, s);
                        let o = this.tsParseTypeAnnotation(!1);
                        return i.parameterName = n, i.typeAnnotation = o, i.asserts = r, s.typeAnnotation = this.finishNode(i, "TSTypePredicate"), this.finishNode(s, "TSTypeAnnotation");
                    });
                }
                tsTryParseTypeOrTypePredicateAnnotation() {
                    if (this.match(14)) return this.tsParseTypeOrTypePredicateAnnotation(14);
                }
                tsTryParseTypeAnnotation() {
                    if (this.match(14)) return this.tsParseTypeAnnotation();
                }
                tsTryParseType() {
                    return this.tsEatThenParseType(14);
                }
                tsParseTypePredicatePrefix() {
                    let e = this.parseIdentifier();
                    if (this.isContextual(116) && !this.hasPrecedingLineBreak()) return this.next(), e;
                }
                tsParseTypePredicateAsserts() {
                    if (this.state.type !== 109) return !1;
                    let e = this.state.containsEsc;
                    return this.next(), !S(this.state.type) && !this.match(78) ? !1 : (e && this.raise(p.InvalidEscapedReservedWord, this.state.lastTokStartLoc, {
                        reservedWord: "asserts"
                    }), !0);
                }
                tsParseTypeAnnotation(e = !0, s = this.startNode()) {
                    return this.tsInType(()=>{
                        e && this.expect(14), s.typeAnnotation = this.tsParseType();
                    }), this.finishNode(s, "TSTypeAnnotation");
                }
                tsParseType() {
                    Vt(this.state.inType);
                    let e = this.tsParseNonConditionalType();
                    if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) return e;
                    let s = this.startNodeAtNode(e);
                    return s.checkType = e, s.extendsType = this.tsInDisallowConditionalTypesContext(()=>this.tsParseNonConditionalType()), this.expect(17), s.trueType = this.tsInAllowConditionalTypesContext(()=>this.tsParseType()), this.expect(14), s.falseType = this.tsInAllowConditionalTypesContext(()=>this.tsParseType()), this.finishNode(s, "TSConditionalType");
                }
                isAbstractConstructorSignature() {
                    return this.isContextual(124) && this.lookahead().type === 77;
                }
                tsParseNonConditionalType() {
                    return this.tsIsStartOfFunctionType() ? this.tsParseFunctionOrConstructorType("TSFunctionType") : this.match(77) ? this.tsParseFunctionOrConstructorType("TSConstructorType") : this.isAbstractConstructorSignature() ? this.tsParseFunctionOrConstructorType("TSConstructorType", !0) : this.tsParseUnionTypeOrHigher();
                }
                tsParseTypeAssertion() {
                    this.getPluginOption("typescript", "disallowAmbiguousJSXLike") && this.raise(x.ReservedTypeAssertion, this.state.startLoc);
                    let e = this.startNode();
                    return e.typeAnnotation = this.tsInType(()=>(this.next(), this.match(75) ? this.tsParseTypeReference() : this.tsParseType())), this.expect(48), e.expression = this.parseMaybeUnary(), this.finishNode(e, "TSTypeAssertion");
                }
                tsParseHeritageClause(e) {
                    let s = this.state.startLoc, i = this.tsParseDelimitedList("HeritageClauseElement", ()=>{
                        let r = this.startNode();
                        return r.expression = this.tsParseEntityName(), this.match(47) && (r.typeParameters = this.tsParseTypeArguments()), this.finishNode(r, "TSExpressionWithTypeArguments");
                    });
                    return i.length || this.raise(x.EmptyHeritageClauseType, s, {
                        token: e
                    }), i;
                }
                tsParseInterfaceDeclaration(e, s = {}) {
                    if (this.hasFollowingLineBreak()) return null;
                    this.expectContextual(129), s.declare && (e.declare = !0), S(this.state.type) ? (e.id = this.parseIdentifier(), this.checkIdentifier(e.id, 130)) : (e.id = null, this.raise(x.MissingInterfaceName, this.state.startLoc)), e.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers), this.eat(81) && (e.extends = this.tsParseHeritageClause("extends"));
                    let i = this.startNode();
                    return i.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this)), e.body = this.finishNode(i, "TSInterfaceBody"), this.finishNode(e, "TSInterfaceDeclaration");
                }
                tsParseTypeAliasDeclaration(e) {
                    return e.id = this.parseIdentifier(), this.checkIdentifier(e.id, 2), e.typeAnnotation = this.tsInType(()=>{
                        if (e.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers), this.expect(29), this.isContextual(114) && this.lookahead().type !== 16) {
                            let s = this.startNode();
                            return this.next(), this.finishNode(s, "TSIntrinsicKeyword");
                        }
                        return this.tsParseType();
                    }), this.semicolon(), this.finishNode(e, "TSTypeAliasDeclaration");
                }
                tsInNoContext(e) {
                    let s = this.state.context;
                    this.state.context = [
                        s[0]
                    ];
                    try {
                        return e();
                    } finally{
                        this.state.context = s;
                    }
                }
                tsInType(e) {
                    let s = this.state.inType;
                    this.state.inType = !0;
                    try {
                        return e();
                    } finally{
                        this.state.inType = s;
                    }
                }
                tsInDisallowConditionalTypesContext(e) {
                    let s = this.state.inDisallowConditionalTypesContext;
                    this.state.inDisallowConditionalTypesContext = !0;
                    try {
                        return e();
                    } finally{
                        this.state.inDisallowConditionalTypesContext = s;
                    }
                }
                tsInAllowConditionalTypesContext(e) {
                    let s = this.state.inDisallowConditionalTypesContext;
                    this.state.inDisallowConditionalTypesContext = !1;
                    try {
                        return e();
                    } finally{
                        this.state.inDisallowConditionalTypesContext = s;
                    }
                }
                tsEatThenParseType(e) {
                    if (this.match(e)) return this.tsNextThenParseType();
                }
                tsExpectThenParseType(e) {
                    return this.tsInType(()=>(this.expect(e), this.tsParseType()));
                }
                tsNextThenParseType() {
                    return this.tsInType(()=>(this.next(), this.tsParseType()));
                }
                tsParseEnumMember() {
                    let e = this.startNode();
                    return e.id = this.match(133) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(!0), this.eat(29) && (e.initializer = super.parseMaybeAssignAllowIn()), this.finishNode(e, "TSEnumMember");
                }
                tsParseEnumDeclaration(e, s = {}) {
                    return s.const && (e.const = !0), s.declare && (e.declare = !0), this.expectContextual(126), e.id = this.parseIdentifier(), this.checkIdentifier(e.id, e.const ? 8971 : 8459), this.expect(5), e.members = this.tsParseDelimitedList("EnumMembers", this.tsParseEnumMember.bind(this)), this.expect(8), this.finishNode(e, "TSEnumDeclaration");
                }
                tsParseModuleBlock() {
                    let e = this.startNode();
                    return this.scope.enter(0), this.expect(5), super.parseBlockOrModuleBlockBody(e.body = [], void 0, !0, 8), this.scope.exit(), this.finishNode(e, "TSModuleBlock");
                }
                tsParseModuleOrNamespaceDeclaration(e, s = !1) {
                    if (e.id = this.parseIdentifier(), s || this.checkIdentifier(e.id, 1024), this.eat(16)) {
                        let i = this.startNode();
                        this.tsParseModuleOrNamespaceDeclaration(i, !0), e.body = i;
                    } else this.scope.enter(256), this.prodParam.enter(0), e.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit();
                    return this.finishNode(e, "TSModuleDeclaration");
                }
                tsParseAmbientExternalModuleDeclaration(e) {
                    return this.isContextual(112) ? (e.global = !0, e.id = this.parseIdentifier()) : this.match(133) ? e.id = super.parseStringLiteral(this.state.value) : this.unexpected(), this.match(5) ? (this.scope.enter(256), this.prodParam.enter(0), e.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit()) : this.semicolon(), this.finishNode(e, "TSModuleDeclaration");
                }
                tsParseImportEqualsDeclaration(e, s, i) {
                    e.isExport = i || !1, e.id = s || this.parseIdentifier(), this.checkIdentifier(e.id, 4096), this.expect(29);
                    let r = this.tsParseModuleReference();
                    return e.importKind === "type" && r.type !== "TSExternalModuleReference" && this.raise(x.ImportAliasHasImportType, r), e.moduleReference = r, this.semicolon(), this.finishNode(e, "TSImportEqualsDeclaration");
                }
                tsIsExternalModuleReference() {
                    return this.isContextual(119) && this.lookaheadCharCode() === 40;
                }
                tsParseModuleReference() {
                    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(!1);
                }
                tsParseExternalModuleReference() {
                    let e = this.startNode();
                    return this.expectContextual(119), this.expect(10), this.match(133) || this.unexpected(), e.expression = super.parseExprAtom(), this.expect(11), this.sawUnambiguousESM = !0, this.finishNode(e, "TSExternalModuleReference");
                }
                tsLookAhead(e) {
                    let s = this.state.clone(), i = e();
                    return this.state = s, i;
                }
                tsTryParseAndCatch(e) {
                    let s = this.tryParse((i)=>e() || i());
                    if (!(s.aborted || !s.node)) return s.error && (this.state = s.failState), s.node;
                }
                tsTryParse(e) {
                    let s = this.state.clone(), i = e();
                    if (i !== void 0 && i !== !1) return i;
                    this.state = s;
                }
                tsTryParseDeclare(e) {
                    if (this.isLineTerminator()) return;
                    let s = this.state.type, i;
                    return this.isContextual(100) && (s = 74, i = "let"), this.tsInAmbientContext(()=>{
                        switch(s){
                            case 68:
                                return e.declare = !0, super.parseFunctionStatement(e, !1, !1);
                            case 80:
                                return e.declare = !0, this.parseClass(e, !0, !1);
                            case 126:
                                return this.tsParseEnumDeclaration(e, {
                                    declare: !0
                                });
                            case 112:
                                return this.tsParseAmbientExternalModuleDeclaration(e);
                            case 75:
                            case 74:
                                return !this.match(75) || !this.isLookaheadContextual("enum") ? (e.declare = !0, this.parseVarStatement(e, i || this.state.value, !0)) : (this.expect(75), this.tsParseEnumDeclaration(e, {
                                    const: !0,
                                    declare: !0
                                }));
                            case 129:
                                {
                                    let r = this.tsParseInterfaceDeclaration(e, {
                                        declare: !0
                                    });
                                    if (r) return r;
                                }
                            default:
                                if (S(s)) return this.tsParseDeclaration(e, this.state.value, !0, null);
                        }
                    });
                }
                tsTryParseExportDeclaration() {
                    return this.tsParseDeclaration(this.startNode(), this.state.value, !0, null);
                }
                tsParseExpressionStatement(e, s, i) {
                    switch(s.name){
                        case "declare":
                            {
                                let r = this.tsTryParseDeclare(e);
                                return r && (r.declare = !0), r;
                            }
                        case "global":
                            if (this.match(5)) {
                                this.scope.enter(256), this.prodParam.enter(0);
                                let r = e;
                                return r.global = !0, r.id = s, r.body = this.tsParseModuleBlock(), this.scope.exit(), this.prodParam.exit(), this.finishNode(r, "TSModuleDeclaration");
                            }
                            break;
                        default:
                            return this.tsParseDeclaration(e, s.name, !1, i);
                    }
                }
                tsParseDeclaration(e, s, i, r) {
                    switch(s){
                        case "abstract":
                            if (this.tsCheckLineTerminator(i) && (this.match(80) || S(this.state.type))) return this.tsParseAbstractDeclaration(e, r);
                            break;
                        case "module":
                            if (this.tsCheckLineTerminator(i)) {
                                if (this.match(133)) return this.tsParseAmbientExternalModuleDeclaration(e);
                                if (S(this.state.type)) return this.tsParseModuleOrNamespaceDeclaration(e);
                            }
                            break;
                        case "namespace":
                            if (this.tsCheckLineTerminator(i) && S(this.state.type)) return this.tsParseModuleOrNamespaceDeclaration(e);
                            break;
                        case "type":
                            if (this.tsCheckLineTerminator(i) && S(this.state.type)) return this.tsParseTypeAliasDeclaration(e);
                            break;
                    }
                }
                tsCheckLineTerminator(e) {
                    return e ? this.hasFollowingLineBreak() ? !1 : (this.next(), !0) : !this.isLineTerminator();
                }
                tsTryParseGenericAsyncArrowFunction(e) {
                    if (!this.match(47)) return;
                    let s = this.state.maybeInArrowParameters;
                    this.state.maybeInArrowParameters = !0;
                    let i = this.tsTryParseAndCatch(()=>{
                        let r = this.startNodeAt(e);
                        return r.typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier), super.parseFunctionParams(r), r.returnType = this.tsTryParseTypeOrTypePredicateAnnotation(), this.expect(19), r;
                    });
                    if (this.state.maybeInArrowParameters = s, !!i) return super.parseArrowExpression(i, null, !0);
                }
                tsParseTypeArgumentsInExpression() {
                    if (this.reScan_lt() === 47) return this.tsParseTypeArguments();
                }
                tsParseTypeArguments() {
                    let e = this.startNode();
                    return e.params = this.tsInType(()=>this.tsInNoContext(()=>(this.expect(47), this.tsParseDelimitedList("TypeParametersOrArguments", this.tsParseType.bind(this))))), e.params.length === 0 ? this.raise(x.EmptyTypeArguments, e) : !this.state.inType && this.curContext() === w.brace && this.reScan_lt_gt(), this.expect(48), this.finishNode(e, "TSTypeParameterInstantiation");
                }
                tsIsDeclarationStart() {
                    return Ti(this.state.type);
                }
                isExportDefaultSpecifier() {
                    return this.tsIsDeclarationStart() ? !1 : super.isExportDefaultSpecifier();
                }
                parseAssignableListItem(e, s) {
                    let i = this.state.startLoc, r = {};
                    this.tsParseModifiers({
                        allowedModifiers: [
                            "public",
                            "private",
                            "protected",
                            "override",
                            "readonly"
                        ]
                    }, r);
                    let n = r.accessibility, o = r.override, h = r.readonly;
                    !(e & 4) && (n || h || o) && this.raise(x.UnexpectedParameterModifier, i);
                    let l = this.parseMaybeDefault();
                    this.parseAssignableListItemTypes(l, e);
                    let c = this.parseMaybeDefault(l.loc.start, l);
                    if (n || h || o) {
                        let u = this.startNodeAt(i);
                        return s.length && (u.decorators = s), n && (u.accessibility = n), h && (u.readonly = h), o && (u.override = o), c.type !== "Identifier" && c.type !== "AssignmentPattern" && this.raise(x.UnsupportedParameterPropertyKind, u), u.parameter = c, this.finishNode(u, "TSParameterProperty");
                    }
                    return s.length && (l.decorators = s), c;
                }
                isSimpleParameter(e) {
                    return e.type === "TSParameterProperty" && super.isSimpleParameter(e.parameter) || super.isSimpleParameter(e);
                }
                tsDisallowOptionalPattern(e) {
                    for (let s of e.params)s.type !== "Identifier" && s.optional && !this.state.isAmbientContext && this.raise(x.PatternIsOptional, s);
                }
                setArrowFunctionParameters(e, s, i) {
                    super.setArrowFunctionParameters(e, s, i), this.tsDisallowOptionalPattern(e);
                }
                parseFunctionBodyAndFinish(e, s, i = !1) {
                    this.match(14) && (e.returnType = this.tsParseTypeOrTypePredicateAnnotation(14));
                    let r = s === "FunctionDeclaration" ? "TSDeclareFunction" : s === "ClassMethod" || s === "ClassPrivateMethod" ? "TSDeclareMethod" : void 0;
                    return r && !this.match(5) && this.isLineTerminator() ? this.finishNode(e, r) : r === "TSDeclareFunction" && this.state.isAmbientContext && (this.raise(x.DeclareFunctionHasImplementation, e), e.declare) ? super.parseFunctionBodyAndFinish(e, r, i) : (this.tsDisallowOptionalPattern(e), super.parseFunctionBodyAndFinish(e, s, i));
                }
                registerFunctionStatementId(e) {
                    !e.body && e.id ? this.checkIdentifier(e.id, 1024) : super.registerFunctionStatementId(e);
                }
                tsCheckForInvalidTypeCasts(e) {
                    e.forEach((s)=>{
                        (s == null ? void 0 : s.type) === "TSTypeCastExpression" && this.raise(x.UnexpectedTypeAnnotation, s.typeAnnotation);
                    });
                }
                toReferencedList(e, s) {
                    return this.tsCheckForInvalidTypeCasts(e), e;
                }
                parseArrayLike(e, s, i, r) {
                    let n = super.parseArrayLike(e, s, i, r);
                    return n.type === "ArrayExpression" && this.tsCheckForInvalidTypeCasts(n.elements), n;
                }
                parseSubscript(e, s, i, r) {
                    if (!this.hasPrecedingLineBreak() && this.match(35)) {
                        this.state.canStartJSXElement = !1, this.next();
                        let o = this.startNodeAt(s);
                        return o.expression = e, this.finishNode(o, "TSNonNullExpression");
                    }
                    let n = !1;
                    if (this.match(18) && this.lookaheadCharCode() === 60) {
                        if (i) return r.stop = !0, e;
                        r.optionalChainMember = n = !0, this.next();
                    }
                    if (this.match(47) || this.match(51)) {
                        let o, h = this.tsTryParseAndCatch(()=>{
                            if (!i && this.atPossibleAsyncArrow(e)) {
                                let f = this.tsTryParseGenericAsyncArrowFunction(s);
                                if (f) return f;
                            }
                            let l = this.tsParseTypeArgumentsInExpression();
                            if (!l) return;
                            if (n && !this.match(10)) {
                                o = this.state.curPosition();
                                return;
                            }
                            if (De(this.state.type)) {
                                let f = super.parseTaggedTemplateExpression(e, s, r);
                                return f.typeParameters = l, f;
                            }
                            if (!i && this.eat(10)) {
                                let f = this.startNodeAt(s);
                                return f.callee = e, f.arguments = this.parseCallExpressionArguments(11, !1), this.tsCheckForInvalidTypeCasts(f.arguments), f.typeParameters = l, r.optionalChainMember && (f.optional = n), this.finishCallExpression(f, r.optionalChainMember);
                            }
                            let c = this.state.type;
                            if (c === 48 || c === 52 || c !== 10 && Je(c) && !this.hasPrecedingLineBreak()) return;
                            let u = this.startNodeAt(s);
                            return u.expression = e, u.typeParameters = l, this.finishNode(u, "TSInstantiationExpression");
                        });
                        if (o && this.unexpected(o, 10), h) return h.type === "TSInstantiationExpression" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40) && this.raise(x.InvalidPropertyAccessAfterInstantiationExpression, this.state.startLoc), h;
                    }
                    return super.parseSubscript(e, s, i, r);
                }
                parseNewCallee(e) {
                    var s;
                    super.parseNewCallee(e);
                    let { callee: i } = e;
                    i.type === "TSInstantiationExpression" && !((s = i.extra) != null && s.parenthesized) && (e.typeParameters = i.typeParameters, e.callee = i.expression);
                }
                parseExprOp(e, s, i) {
                    let r;
                    if (Ne(58) > i && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (r = this.isContextual(120)))) {
                        let n = this.startNodeAt(s);
                        return n.expression = e, n.typeAnnotation = this.tsInType(()=>(this.next(), this.match(75) ? (r && this.raise(p.UnexpectedKeyword, this.state.startLoc, {
                                keyword: "const"
                            }), this.tsParseTypeReference()) : this.tsParseType())), this.finishNode(n, r ? "TSSatisfiesExpression" : "TSAsExpression"), this.reScan_lt_gt(), this.parseExprOp(n, s, i);
                    }
                    return super.parseExprOp(e, s, i);
                }
                checkReservedWord(e, s, i, r) {
                    this.state.isAmbientContext || super.checkReservedWord(e, s, i, r);
                }
                checkImportReflection(e) {
                    super.checkImportReflection(e), e.module && e.importKind !== "value" && this.raise(x.ImportReflectionHasImportType, e.specifiers[0].loc.start);
                }
                checkDuplicateExports() {}
                isPotentialImportPhase(e) {
                    if (super.isPotentialImportPhase(e)) return !0;
                    if (this.isContextual(130)) {
                        let s = this.lookaheadCharCode();
                        return e ? s === 123 || s === 42 : s !== 61;
                    }
                    return !e && this.isContextual(87);
                }
                applyImportPhase(e, s, i, r) {
                    super.applyImportPhase(e, s, i, r), s ? e.exportKind = i === "type" ? "type" : "value" : e.importKind = i === "type" || i === "typeof" ? i : "value";
                }
                parseImport(e) {
                    if (this.match(133)) return e.importKind = "value", super.parseImport(e);
                    let s;
                    if (S(this.state.type) && this.lookaheadCharCode() === 61) return e.importKind = "value", this.tsParseImportEqualsDeclaration(e);
                    if (this.isContextual(130)) {
                        let i = this.parseMaybeImportPhase(e, !1);
                        if (this.lookaheadCharCode() === 61) return this.tsParseImportEqualsDeclaration(e, i);
                        s = super.parseImportSpecifiersAndAfter(e, i);
                    } else s = super.parseImport(e);
                    return s.importKind === "type" && s.specifiers.length > 1 && s.specifiers[0].type === "ImportDefaultSpecifier" && this.raise(x.TypeImportCannotSpecifyDefaultAndNamed, s), s;
                }
                parseExport(e, s) {
                    if (this.match(83)) {
                        this.next();
                        let i = null;
                        return this.isContextual(130) && this.isPotentialImportPhase(!1) ? i = this.parseMaybeImportPhase(e, !1) : e.importKind = "value", this.tsParseImportEqualsDeclaration(e, i, !0);
                    } else if (this.eat(29)) {
                        let i = e;
                        return i.expression = super.parseExpression(), this.semicolon(), this.sawUnambiguousESM = !0, this.finishNode(i, "TSExportAssignment");
                    } else if (this.eatContextual(93)) {
                        let i = e;
                        return this.expectContextual(128), i.id = this.parseIdentifier(), this.semicolon(), this.finishNode(i, "TSNamespaceExportDeclaration");
                    } else return super.parseExport(e, s);
                }
                isAbstractClass() {
                    return this.isContextual(124) && this.lookahead().type === 80;
                }
                parseExportDefaultExpression() {
                    if (this.isAbstractClass()) {
                        let e = this.startNode();
                        return this.next(), e.abstract = !0, this.parseClass(e, !0, !0);
                    }
                    if (this.match(129)) {
                        let e = this.tsParseInterfaceDeclaration(this.startNode());
                        if (e) return e;
                    }
                    return super.parseExportDefaultExpression();
                }
                parseVarStatement(e, s, i = !1) {
                    let { isAmbientContext: r } = this.state, n = super.parseVarStatement(e, s, i || r);
                    if (!r) return n;
                    for (let { id: o, init: h } of n.declarations)h && (s !== "const" || o.typeAnnotation ? this.raise(x.InitializerNotAllowedInAmbientContext, h) : ir(h, this.hasPlugin("estree")) || this.raise(x.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, h));
                    return n;
                }
                parseStatementContent(e, s) {
                    if (this.match(75) && this.isLookaheadContextual("enum")) {
                        let i = this.startNode();
                        return this.expect(75), this.tsParseEnumDeclaration(i, {
                            const: !0
                        });
                    }
                    if (this.isContextual(126)) return this.tsParseEnumDeclaration(this.startNode());
                    if (this.isContextual(129)) {
                        let i = this.tsParseInterfaceDeclaration(this.startNode());
                        if (i) return i;
                    }
                    return super.parseStatementContent(e, s);
                }
                parseAccessModifier() {
                    return this.tsParseModifier([
                        "public",
                        "protected",
                        "private"
                    ]);
                }
                tsHasSomeModifiers(e, s) {
                    return s.some((i)=>qt(i) ? e.accessibility === i : !!e[i]);
                }
                tsIsStartOfStaticBlocks() {
                    return this.isContextual(106) && this.lookaheadCharCode() === 123;
                }
                parseClassMember(e, s, i) {
                    let r = [
                        "declare",
                        "private",
                        "public",
                        "protected",
                        "override",
                        "abstract",
                        "readonly",
                        "static"
                    ];
                    this.tsParseModifiers({
                        allowedModifiers: r,
                        disallowedModifiers: [
                            "in",
                            "out"
                        ],
                        stopOnStartOfClassStaticBlock: !0,
                        errorTemplate: x.InvalidModifierOnTypeParameterPositions
                    }, s);
                    let n = ()=>{
                        this.tsIsStartOfStaticBlocks() ? (this.next(), this.next(), this.tsHasSomeModifiers(s, r) && this.raise(x.StaticBlockCannotHaveModifier, this.state.curPosition()), super.parseClassStaticBlock(e, s)) : this.parseClassMemberWithIsStatic(e, s, i, !!s.static);
                    };
                    s.declare ? this.tsInAmbientContext(n) : n();
                }
                parseClassMemberWithIsStatic(e, s, i, r) {
                    let n = this.tsTryParseIndexSignature(s);
                    if (n) {
                        e.body.push(n), s.abstract && this.raise(x.IndexSignatureHasAbstract, s), s.accessibility && this.raise(x.IndexSignatureHasAccessibility, s, {
                            modifier: s.accessibility
                        }), s.declare && this.raise(x.IndexSignatureHasDeclare, s), s.override && this.raise(x.IndexSignatureHasOverride, s);
                        return;
                    }
                    !this.state.inAbstractClass && s.abstract && this.raise(x.NonAbstractClassHasAbstractMethod, s), s.override && (i.hadSuperClass || this.raise(x.OverrideNotInSubClass, s)), super.parseClassMemberWithIsStatic(e, s, i, r);
                }
                parsePostMemberNameModifiers(e) {
                    this.eat(17) && (e.optional = !0), e.readonly && this.match(10) && this.raise(x.ClassMethodHasReadonly, e), e.declare && this.match(10) && this.raise(x.ClassMethodHasDeclare, e);
                }
                parseExpressionStatement(e, s, i) {
                    return (s.type === "Identifier" ? this.tsParseExpressionStatement(e, s, i) : void 0) || super.parseExpressionStatement(e, s, i);
                }
                shouldParseExportDeclaration() {
                    return this.tsIsDeclarationStart() ? !0 : super.shouldParseExportDeclaration();
                }
                parseConditional(e, s, i) {
                    if (!this.state.maybeInArrowParameters || !this.match(17)) return super.parseConditional(e, s, i);
                    let r = this.tryParse(()=>super.parseConditional(e, s));
                    return r.node ? (r.error && (this.state = r.failState), r.node) : (r.error && super.setOptionalParametersError(i, r.error), e);
                }
                parseParenItem(e, s) {
                    if (e = super.parseParenItem(e, s), this.eat(17) && (e.optional = !0, this.resetEndLocation(e)), this.match(14)) {
                        let i = this.startNodeAt(s);
                        return i.expression = e, i.typeAnnotation = this.tsParseTypeAnnotation(), this.finishNode(i, "TSTypeCastExpression");
                    }
                    return e;
                }
                parseExportDeclaration(e) {
                    if (!this.state.isAmbientContext && this.isContextual(125)) return this.tsInAmbientContext(()=>this.parseExportDeclaration(e));
                    let s = this.state.startLoc, i = this.eatContextual(125);
                    if (i && (this.isContextual(125) || !this.shouldParseExportDeclaration())) throw this.raise(x.ExpectedAmbientAfterExportDeclare, this.state.startLoc);
                    let n = S(this.state.type) && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(e);
                    return n ? ((n.type === "TSInterfaceDeclaration" || n.type === "TSTypeAliasDeclaration" || i) && (e.exportKind = "type"), i && (this.resetStartLocation(n, s), n.declare = !0), n) : null;
                }
                parseClassId(e, s, i, r) {
                    if ((!s || i) && this.isContextual(113)) return;
                    super.parseClassId(e, s, i, e.declare ? 1024 : 8331);
                    let n = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);
                    n && (e.typeParameters = n);
                }
                parseClassPropertyAnnotation(e) {
                    e.optional || (this.eat(35) ? e.definite = !0 : this.eat(17) && (e.optional = !0));
                    let s = this.tsTryParseTypeAnnotation();
                    s && (e.typeAnnotation = s);
                }
                parseClassProperty(e) {
                    if (this.parseClassPropertyAnnotation(e), this.state.isAmbientContext && !(e.readonly && !e.typeAnnotation) && this.match(29) && this.raise(x.DeclareClassFieldHasInitializer, this.state.startLoc), e.abstract && this.match(29)) {
                        let { key: s } = e;
                        this.raise(x.AbstractPropertyHasInitializer, this.state.startLoc, {
                            propertyName: s.type === "Identifier" && !e.computed ? s.name : `[${this.input.slice(s.start, s.end)}]`
                        });
                    }
                    return super.parseClassProperty(e);
                }
                parseClassPrivateProperty(e) {
                    return e.abstract && this.raise(x.PrivateElementHasAbstract, e), e.accessibility && this.raise(x.PrivateElementHasAccessibility, e, {
                        modifier: e.accessibility
                    }), this.parseClassPropertyAnnotation(e), super.parseClassPrivateProperty(e);
                }
                parseClassAccessorProperty(e) {
                    return this.parseClassPropertyAnnotation(e), e.optional && this.raise(x.AccessorCannotBeOptional, e), super.parseClassAccessorProperty(e);
                }
                pushClassMethod(e, s, i, r, n, o) {
                    let h = this.tsTryParseTypeParameters(this.tsParseConstModifier);
                    h && n && this.raise(x.ConstructorHasTypeParameters, h);
                    let { declare: l = !1, kind: c } = s;
                    l && (c === "get" || c === "set") && this.raise(x.DeclareAccessor, s, {
                        kind: c
                    }), h && (s.typeParameters = h), super.pushClassMethod(e, s, i, r, n, o);
                }
                pushClassPrivateMethod(e, s, i, r) {
                    let n = this.tsTryParseTypeParameters(this.tsParseConstModifier);
                    n && (s.typeParameters = n), super.pushClassPrivateMethod(e, s, i, r);
                }
                declareClassPrivateMethodInScope(e, s) {
                    e.type !== "TSDeclareMethod" && (e.type === "MethodDefinition" && !e.value.body || super.declareClassPrivateMethodInScope(e, s));
                }
                parseClassSuper(e) {
                    super.parseClassSuper(e), e.superClass && (this.match(47) || this.match(51)) && (e.superTypeParameters = this.tsParseTypeArgumentsInExpression()), this.eatContextual(113) && (e.implements = this.tsParseHeritageClause("implements"));
                }
                parseObjPropValue(e, s, i, r, n, o, h) {
                    let l = this.tsTryParseTypeParameters(this.tsParseConstModifier);
                    return l && (e.typeParameters = l), super.parseObjPropValue(e, s, i, r, n, o, h);
                }
                parseFunctionParams(e, s) {
                    let i = this.tsTryParseTypeParameters(this.tsParseConstModifier);
                    i && (e.typeParameters = i), super.parseFunctionParams(e, s);
                }
                parseVarId(e, s) {
                    super.parseVarId(e, s), e.id.type === "Identifier" && !this.hasPrecedingLineBreak() && this.eat(35) && (e.definite = !0);
                    let i = this.tsTryParseTypeAnnotation();
                    i && (e.id.typeAnnotation = i, this.resetEndLocation(e.id));
                }
                parseAsyncArrowFromCallExpression(e, s) {
                    return this.match(14) && (e.returnType = this.tsParseTypeAnnotation()), super.parseAsyncArrowFromCallExpression(e, s);
                }
                parseMaybeAssign(e, s) {
                    var i, r, n, o, h;
                    let l, c, u;
                    if (this.hasPlugin("jsx") && (this.match(142) || this.match(47))) {
                        if (l = this.state.clone(), c = this.tryParse(()=>super.parseMaybeAssign(e, s), l), !c.error) return c.node;
                        let { context: y } = this.state, I = y[y.length - 1];
                        (I === w.j_oTag || I === w.j_expr) && y.pop();
                    }
                    if (!((i = c) != null && i.error) && !this.match(47)) return super.parseMaybeAssign(e, s);
                    (!l || l === this.state) && (l = this.state.clone());
                    let f, d = this.tryParse((y)=>{
                        var I, C;
                        f = this.tsParseTypeParameters(this.tsParseConstModifier);
                        let E = super.parseMaybeAssign(e, s);
                        return (E.type !== "ArrowFunctionExpression" || (I = E.extra) != null && I.parenthesized) && y(), ((C = f) == null ? void 0 : C.params.length) !== 0 && this.resetStartLocationFromNode(E, f), E.typeParameters = f, E;
                    }, l);
                    if (!d.error && !d.aborted) return f && this.reportReservedArrowTypeParam(f), d.node;
                    if (!c && (Vt(!this.hasPlugin("jsx")), u = this.tryParse(()=>super.parseMaybeAssign(e, s), l), !u.error)) return u.node;
                    if ((r = c) != null && r.node) return this.state = c.failState, c.node;
                    if (d.node) return this.state = d.failState, f && this.reportReservedArrowTypeParam(f), d.node;
                    if ((n = u) != null && n.node) return this.state = u.failState, u.node;
                    throw ((o = c) == null ? void 0 : o.error) || d.error || ((h = u) == null ? void 0 : h.error);
                }
                reportReservedArrowTypeParam(e) {
                    var s;
                    e.params.length === 1 && !e.params[0].constraint && !((s = e.extra) != null && s.trailingComma) && this.getPluginOption("typescript", "disallowAmbiguousJSXLike") && this.raise(x.ReservedArrowTypeParam, e);
                }
                parseMaybeUnary(e, s) {
                    return !this.hasPlugin("jsx") && this.match(47) ? this.tsParseTypeAssertion() : super.parseMaybeUnary(e, s);
                }
                parseArrow(e) {
                    if (this.match(14)) {
                        let s = this.tryParse((i)=>{
                            let r = this.tsParseTypeOrTypePredicateAnnotation(14);
                            return (this.canInsertSemicolon() || !this.match(19)) && i(), r;
                        });
                        if (s.aborted) return;
                        s.thrown || (s.error && (this.state = s.failState), e.returnType = s.node);
                    }
                    return super.parseArrow(e);
                }
                parseAssignableListItemTypes(e, s) {
                    if (!(s & 2)) return e;
                    this.eat(17) && (e.optional = !0);
                    let i = this.tsTryParseTypeAnnotation();
                    return i && (e.typeAnnotation = i), this.resetEndLocation(e), e;
                }
                isAssignable(e, s) {
                    switch(e.type){
                        case "TSTypeCastExpression":
                            return this.isAssignable(e.expression, s);
                        case "TSParameterProperty":
                            return !0;
                        default:
                            return super.isAssignable(e, s);
                    }
                }
                toAssignable(e, s = !1) {
                    switch(e.type){
                        case "ParenthesizedExpression":
                            this.toAssignableParenthesizedExpression(e, s);
                            break;
                        case "TSAsExpression":
                        case "TSSatisfiesExpression":
                        case "TSNonNullExpression":
                        case "TSTypeAssertion":
                            s ? this.expressionScope.recordArrowParameterBindingError(x.UnexpectedTypeCastInParameter, e) : this.raise(x.UnexpectedTypeCastInParameter, e), this.toAssignable(e.expression, s);
                            break;
                        case "AssignmentExpression":
                            !s && e.left.type === "TSTypeCastExpression" && (e.left = this.typeCastToParameter(e.left));
                        default:
                            super.toAssignable(e, s);
                    }
                }
                toAssignableParenthesizedExpression(e, s) {
                    switch(e.expression.type){
                        case "TSAsExpression":
                        case "TSSatisfiesExpression":
                        case "TSNonNullExpression":
                        case "TSTypeAssertion":
                        case "ParenthesizedExpression":
                            this.toAssignable(e.expression, s);
                            break;
                        default:
                            super.toAssignable(e, s);
                    }
                }
                checkToRestConversion(e, s) {
                    switch(e.type){
                        case "TSAsExpression":
                        case "TSSatisfiesExpression":
                        case "TSTypeAssertion":
                        case "TSNonNullExpression":
                            this.checkToRestConversion(e.expression, !1);
                            break;
                        default:
                            super.checkToRestConversion(e, s);
                    }
                }
                isValidLVal(e, s, i) {
                    return Yi({
                        TSTypeCastExpression: !0,
                        TSParameterProperty: "parameter",
                        TSNonNullExpression: "expression",
                        TSAsExpression: (i !== 64 || !s) && [
                            "expression",
                            !0
                        ],
                        TSSatisfiesExpression: (i !== 64 || !s) && [
                            "expression",
                            !0
                        ],
                        TSTypeAssertion: (i !== 64 || !s) && [
                            "expression",
                            !0
                        ]
                    }, e) || super.isValidLVal(e, s, i);
                }
                parseBindingAtom() {
                    return this.state.type === 78 ? this.parseIdentifier(!0) : super.parseBindingAtom();
                }
                parseMaybeDecoratorArguments(e) {
                    if (this.match(47) || this.match(51)) {
                        let s = this.tsParseTypeArgumentsInExpression();
                        if (this.match(10)) {
                            let i = super.parseMaybeDecoratorArguments(e);
                            return i.typeParameters = s, i;
                        }
                        this.unexpected(null, 10);
                    }
                    return super.parseMaybeDecoratorArguments(e);
                }
                checkCommaAfterRest(e) {
                    return this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === e ? (this.next(), !1) : super.checkCommaAfterRest(e);
                }
                isClassMethod() {
                    return this.match(47) || super.isClassMethod();
                }
                isClassProperty() {
                    return this.match(35) || this.match(14) || super.isClassProperty();
                }
                parseMaybeDefault(e, s) {
                    let i = super.parseMaybeDefault(e, s);
                    return i.type === "AssignmentPattern" && i.typeAnnotation && i.right.start < i.typeAnnotation.start && this.raise(x.TypeAnnotationAfterAssign, i.typeAnnotation), i;
                }
                getTokenFromCode(e) {
                    if (this.state.inType) {
                        if (e === 62) {
                            this.finishOp(48, 1);
                            return;
                        }
                        if (e === 60) {
                            this.finishOp(47, 1);
                            return;
                        }
                    }
                    super.getTokenFromCode(e);
                }
                reScan_lt_gt() {
                    let { type: e } = this.state;
                    e === 47 ? (this.state.pos -= 1, this.readToken_lt()) : e === 48 && (this.state.pos -= 1, this.readToken_gt());
                }
                reScan_lt() {
                    let { type: e } = this.state;
                    return e === 51 ? (this.state.pos -= 2, this.finishOp(47, 1), 47) : e;
                }
                toAssignableList(e, s, i) {
                    for(let r = 0; r < e.length; r++){
                        let n = e[r];
                        (n == null ? void 0 : n.type) === "TSTypeCastExpression" && (e[r] = this.typeCastToParameter(n));
                    }
                    super.toAssignableList(e, s, i);
                }
                typeCastToParameter(e) {
                    return e.expression.typeAnnotation = e.typeAnnotation, this.resetEndLocation(e.expression, e.typeAnnotation.loc.end), e.expression;
                }
                shouldParseArrow(e) {
                    return this.match(14) ? e.every((s)=>this.isAssignable(s, !0)) : super.shouldParseArrow(e);
                }
                shouldParseAsyncArrow() {
                    return this.match(14) || super.shouldParseAsyncArrow();
                }
                canHaveLeadingDecorator() {
                    return super.canHaveLeadingDecorator() || this.isAbstractClass();
                }
                jsxParseOpeningElementAfterName(e) {
                    if (this.match(47) || this.match(51)) {
                        let s = this.tsTryParseAndCatch(()=>this.tsParseTypeArgumentsInExpression());
                        s && (e.typeParameters = s);
                    }
                    return super.jsxParseOpeningElementAfterName(e);
                }
                getGetterSetterExpectedParamCount(e) {
                    let s = super.getGetterSetterExpectedParamCount(e), r = this.getObjectOrClassMethodParams(e)[0];
                    return r && this.isThisParam(r) ? s + 1 : s;
                }
                parseCatchClauseParam() {
                    let e = super.parseCatchClauseParam(), s = this.tsTryParseTypeAnnotation();
                    return s && (e.typeAnnotation = s, this.resetEndLocation(e)), e;
                }
                tsInAmbientContext(e) {
                    let s = this.state.isAmbientContext;
                    this.state.isAmbientContext = !0;
                    try {
                        return e();
                    } finally{
                        this.state.isAmbientContext = s;
                    }
                }
                parseClass(e, s, i) {
                    let r = this.state.inAbstractClass;
                    this.state.inAbstractClass = !!e.abstract;
                    try {
                        return super.parseClass(e, s, i);
                    } finally{
                        this.state.inAbstractClass = r;
                    }
                }
                tsParseAbstractDeclaration(e, s) {
                    if (this.match(80)) return e.abstract = !0, this.maybeTakeDecorators(s, this.parseClass(e, !0, !1));
                    if (this.isContextual(129)) {
                        if (!this.hasFollowingLineBreak()) return e.abstract = !0, this.raise(x.NonClassMethodPropertyHasAbstractModifer, e), this.tsParseInterfaceDeclaration(e);
                    } else this.unexpected(null, 80);
                }
                parseMethod(e, s, i, r, n, o, h) {
                    let l = super.parseMethod(e, s, i, r, n, o, h);
                    if (l.abstract && (this.hasPlugin("estree") ? !!l.value.body : !!l.body)) {
                        let { key: u } = l;
                        this.raise(x.AbstractMethodHasImplementation, l, {
                            methodName: u.type === "Identifier" && !l.computed ? u.name : `[${this.input.slice(u.start, u.end)}]`
                        });
                    }
                    return l;
                }
                tsParseTypeParameterName() {
                    return this.parseIdentifier().name;
                }
                shouldParseAsAmbientContext() {
                    return !!this.getPluginOption("typescript", "dts");
                }
                parse() {
                    return this.shouldParseAsAmbientContext() && (this.state.isAmbientContext = !0), super.parse();
                }
                getExpression() {
                    return this.shouldParseAsAmbientContext() && (this.state.isAmbientContext = !0), super.getExpression();
                }
                parseExportSpecifier(e, s, i, r) {
                    return !s && r ? (this.parseTypeOnlyImportExportSpecifier(e, !1, i), this.finishNode(e, "ExportSpecifier")) : (e.exportKind = "value", super.parseExportSpecifier(e, s, i, r));
                }
                parseImportSpecifier(e, s, i, r, n) {
                    return !s && r ? (this.parseTypeOnlyImportExportSpecifier(e, !0, i), this.finishNode(e, "ImportSpecifier")) : (e.importKind = "value", super.parseImportSpecifier(e, s, i, r, i ? 4098 : 4096));
                }
                parseTypeOnlyImportExportSpecifier(e, s, i) {
                    let r = s ? "imported" : "local", n = s ? "local" : "exported", o = e[r], h, l = !1, c = !0, u = o.loc.start;
                    if (this.isContextual(93)) {
                        let d = this.parseIdentifier();
                        if (this.isContextual(93)) {
                            let y = this.parseIdentifier();
                            M(this.state.type) ? (l = !0, o = d, h = s ? this.parseIdentifier() : this.parseModuleExportName(), c = !1) : (h = y, c = !1);
                        } else M(this.state.type) ? (c = !1, h = s ? this.parseIdentifier() : this.parseModuleExportName()) : (l = !0, o = d);
                    } else M(this.state.type) && (l = !0, s ? (o = this.parseIdentifier(!0), this.isContextual(93) || this.checkReservedWord(o.name, o.loc.start, !0, !0)) : o = this.parseModuleExportName());
                    l && i && this.raise(s ? x.TypeModifierIsUsedInTypeImports : x.TypeModifierIsUsedInTypeExports, u), e[r] = o, e[n] = h;
                    let f = s ? "importKind" : "exportKind";
                    e[f] = l ? "type" : "value", c && this.eatContextual(93) && (e[n] = s ? this.parseIdentifier() : this.parseModuleExportName()), e[n] || (e[n] = V(e[r])), s && this.checkIdentifier(e[n], l ? 4098 : 4096);
                }
            };
        function sr(a) {
            if (a.type !== "MemberExpression") return !1;
            let { computed: t, property: e } = a;
            return t && e.type !== "StringLiteral" && (e.type !== "TemplateLiteral" || e.expressions.length > 0) ? !1 : cs(a.object);
        }
        function ir(a, t) {
            var e;
            let { type: s } = a;
            if ((e = a.extra) != null && e.parenthesized) return !1;
            if (t) {
                if (s === "Literal") {
                    let { value: i } = a;
                    if (typeof i == "string" || typeof i == "boolean") return !0;
                }
            } else if (s === "StringLiteral" || s === "BooleanLiteral") return !0;
            return !!(ls(a, t) || rr(a, t) || s === "TemplateLiteral" && a.expressions.length === 0 || sr(a));
        }
        function ls(a, t) {
            return t ? a.type === "Literal" && (typeof a.value == "number" || "bigint" in a) : a.type === "NumericLiteral" || a.type === "BigIntLiteral";
        }
        function rr(a, t) {
            if (a.type === "UnaryExpression") {
                let { operator: e, argument: s } = a;
                if (e === "-" && ls(s, t)) return !0;
            }
            return !1;
        }
        function cs(a) {
            return a.type === "Identifier" ? !0 : a.type !== "MemberExpression" || a.computed ? !1 : cs(a.object);
        }
        var zt = $`placeholders`({
            ClassNameIsRequired: "A class name is required.",
            UnexpectedSpace: "Unexpected space in placeholder."
        }), ar = (a)=>class extends a {
                parsePlaceholder(e) {
                    if (this.match(144)) {
                        let s = this.startNode();
                        return this.next(), this.assertNoSpace(), s.name = super.parseIdentifier(!0), this.assertNoSpace(), this.expect(144), this.finishPlaceholder(s, e);
                    }
                }
                finishPlaceholder(e, s) {
                    let i = !!(e.expectedNode && e.type === "Placeholder");
                    return e.expectedNode = s, i ? e : this.finishNode(e, "Placeholder");
                }
                getTokenFromCode(e) {
                    e === 37 && this.input.charCodeAt(this.state.pos + 1) === 37 ? this.finishOp(144, 2) : super.getTokenFromCode(e);
                }
                parseExprAtom(e) {
                    return this.parsePlaceholder("Expression") || super.parseExprAtom(e);
                }
                parseIdentifier(e) {
                    return this.parsePlaceholder("Identifier") || super.parseIdentifier(e);
                }
                checkReservedWord(e, s, i, r) {
                    e !== void 0 && super.checkReservedWord(e, s, i, r);
                }
                parseBindingAtom() {
                    return this.parsePlaceholder("Pattern") || super.parseBindingAtom();
                }
                isValidLVal(e, s, i) {
                    return e === "Placeholder" || super.isValidLVal(e, s, i);
                }
                toAssignable(e, s) {
                    e && e.type === "Placeholder" && e.expectedNode === "Expression" ? e.expectedNode = "Pattern" : super.toAssignable(e, s);
                }
                chStartsBindingIdentifier(e, s) {
                    return !!(super.chStartsBindingIdentifier(e, s) || this.lookahead().type === 144);
                }
                verifyBreakContinue(e, s) {
                    e.label && e.label.type === "Placeholder" || super.verifyBreakContinue(e, s);
                }
                parseExpressionStatement(e, s) {
                    var i;
                    if (s.type !== "Placeholder" || (i = s.extra) != null && i.parenthesized) return super.parseExpressionStatement(e, s);
                    if (this.match(14)) {
                        let r = e;
                        return r.label = this.finishPlaceholder(s, "Identifier"), this.next(), r.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration(), this.finishNode(r, "LabeledStatement");
                    }
                    return this.semicolon(), e.name = s.name, this.finishPlaceholder(e, "Statement");
                }
                parseBlock(e, s, i) {
                    return this.parsePlaceholder("BlockStatement") || super.parseBlock(e, s, i);
                }
                parseFunctionId(e) {
                    return this.parsePlaceholder("Identifier") || super.parseFunctionId(e);
                }
                parseClass(e, s, i) {
                    let r = s ? "ClassDeclaration" : "ClassExpression";
                    this.next();
                    let n = this.state.strict, o = this.parsePlaceholder("Identifier");
                    if (o) {
                        if (this.match(81) || this.match(144) || this.match(5)) e.id = o;
                        else {
                            if (i || !s) return e.id = null, e.body = this.finishPlaceholder(o, "ClassBody"), this.finishNode(e, r);
                            throw this.raise(zt.ClassNameIsRequired, this.state.startLoc);
                        }
                    } else this.parseClassId(e, s, i);
                    return super.parseClassSuper(e), e.body = this.parsePlaceholder("ClassBody") || super.parseClassBody(!!e.superClass, n), this.finishNode(e, r);
                }
                parseExport(e, s) {
                    let i = this.parsePlaceholder("Identifier");
                    if (!i) return super.parseExport(e, s);
                    if (!this.isContextual(98) && !this.match(12)) return e.specifiers = [], e.source = null, e.declaration = this.finishPlaceholder(i, "Declaration"), this.finishNode(e, "ExportNamedDeclaration");
                    this.expectPlugin("exportDefaultFrom");
                    let r = this.startNode();
                    return r.exported = i, e.specifiers = [
                        this.finishNode(r, "ExportDefaultSpecifier")
                    ], super.parseExport(e, s);
                }
                isExportDefaultSpecifier() {
                    if (this.match(65)) {
                        let e = this.nextTokenStart();
                        if (this.isUnparsedContextual(e, "from") && this.input.startsWith(H(144), this.nextTokenStartSince(e + 4))) return !0;
                    }
                    return super.isExportDefaultSpecifier();
                }
                maybeParseExportDefaultSpecifier(e, s) {
                    var i;
                    return (i = e.specifiers) != null && i.length ? !0 : super.maybeParseExportDefaultSpecifier(e, s);
                }
                checkExport(e) {
                    let { specifiers: s } = e;
                    s != null && s.length && (e.specifiers = s.filter((i)=>i.exported.type === "Placeholder")), super.checkExport(e), e.specifiers = s;
                }
                parseImport(e) {
                    let s = this.parsePlaceholder("Identifier");
                    if (!s) return super.parseImport(e);
                    if (e.specifiers = [], !this.isContextual(98) && !this.match(12)) return e.source = this.finishPlaceholder(s, "StringLiteral"), this.semicolon(), this.finishNode(e, "ImportDeclaration");
                    let i = this.startNodeAtNode(s);
                    return i.local = s, e.specifiers.push(this.finishNode(i, "ImportDefaultSpecifier")), this.eat(12) && (this.maybeParseStarImportSpecifier(e) || this.parseNamedImportSpecifiers(e)), this.expectContextual(98), e.source = this.parseImportSource(), this.semicolon(), this.finishNode(e, "ImportDeclaration");
                }
                parseImportSource() {
                    return this.parsePlaceholder("StringLiteral") || super.parseImportSource();
                }
                assertNoSpace() {
                    this.state.start > this.state.lastTokEndLoc.index && this.raise(zt.UnexpectedSpace, this.state.lastTokEndLoc);
                }
            }, nr = (a)=>class extends a {
                parseV8Intrinsic() {
                    if (this.match(54)) {
                        let e = this.state.startLoc, s = this.startNode();
                        if (this.next(), S(this.state.type)) {
                            let i = this.parseIdentifierName(), r = this.createIdentifier(s, i);
                            if (r.type = "V8IntrinsicIdentifier", this.match(10)) return r;
                        }
                        this.unexpected(e);
                    }
                }
                parseExprAtom(e) {
                    return this.parseV8Intrinsic() || super.parseExprAtom(e);
                }
            };
        function N(a, t) {
            let [e, s] = typeof t == "string" ? [
                t,
                {}
            ] : t, i = Object.keys(s), r = i.length === 0;
            return a.some((n)=>{
                if (typeof n == "string") return r && n === e;
                {
                    let [o, h] = n;
                    if (o !== e) return !1;
                    for (let l of i)if (h[l] !== s[l]) return !1;
                    return !0;
                }
            });
        }
        function K(a, t, e) {
            let s = a.find((i)=>Array.isArray(i) ? i[0] === t : i === t);
            return s && Array.isArray(s) && s.length > 1 ? s[1][e] : null;
        }
        var Kt = [
            "minimal",
            "fsharp",
            "hack",
            "smart"
        ], Ht = [
            "^^",
            "@@",
            "^",
            "%",
            "#"
        ], Wt = [
            "hash",
            "bar"
        ];
        function or(a) {
            if (N(a, "decorators")) {
                if (N(a, "decorators-legacy")) throw new Error("Cannot use the decorators and decorators-legacy plugin together");
                let t = K(a, "decorators", "decoratorsBeforeExport");
                if (t != null && typeof t != "boolean") throw new Error("'decoratorsBeforeExport' must be a boolean, if specified.");
                let e = K(a, "decorators", "allowCallParenthesized");
                if (e != null && typeof e != "boolean") throw new Error("'allowCallParenthesized' must be a boolean.");
            }
            if (N(a, "flow") && N(a, "typescript")) throw new Error("Cannot combine flow and typescript plugins.");
            if (N(a, "placeholders") && N(a, "v8intrinsic")) throw new Error("Cannot combine placeholders and v8intrinsic plugins.");
            if (N(a, "pipelineOperator")) {
                let t = K(a, "pipelineOperator", "proposal");
                if (!Kt.includes(t)) {
                    let s = Kt.map((i)=>`"${i}"`).join(", ");
                    throw new Error(`"pipelineOperator" requires "proposal" option whose value must be one of: ${s}.`);
                }
                let e = N(a, [
                    "recordAndTuple",
                    {
                        syntaxType: "hash"
                    }
                ]);
                if (t === "hack") {
                    if (N(a, "placeholders")) throw new Error("Cannot combine placeholders plugin and Hack-style pipes.");
                    if (N(a, "v8intrinsic")) throw new Error("Cannot combine v8intrinsic plugin and Hack-style pipes.");
                    let s = K(a, "pipelineOperator", "topicToken");
                    if (!Ht.includes(s)) {
                        let i = Ht.map((r)=>`"${r}"`).join(", ");
                        throw new Error(`"pipelineOperator" in "proposal": "hack" mode also requires a "topicToken" option whose value must be one of: ${i}.`);
                    }
                    if (s === "#" && e) throw new Error('Plugin conflict between `["pipelineOperator", { proposal: "hack", topicToken: "#" }]` and `["recordAndtuple", { syntaxType: "hash"}]`.');
                } else if (t === "smart" && e) throw new Error('Plugin conflict between `["pipelineOperator", { proposal: "smart" }]` and `["recordAndtuple", { syntaxType: "hash"}]`.');
            }
            if (N(a, "moduleAttributes")) {
                if (N(a, "importAssertions") || N(a, "importAttributes")) throw new Error("Cannot combine importAssertions, importAttributes and moduleAttributes plugins.");
                if (K(a, "moduleAttributes", "version") !== "may-2020") throw new Error("The 'moduleAttributes' plugin requires a 'version' option, representing the last proposal update. Currently, the only supported value is 'may-2020'.");
            }
            if (N(a, "importAssertions") && N(a, "importAttributes")) throw new Error("Cannot combine importAssertions and importAttributes plugins.");
            if (N(a, "recordAndTuple") && K(a, "recordAndTuple", "syntaxType") != null && !Wt.includes(K(a, "recordAndTuple", "syntaxType"))) throw new Error("The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: " + Wt.map((t)=>`'${t}'`).join(", "));
            if (N(a, "asyncDoExpressions") && !N(a, "doExpressions")) {
                let t = new Error("'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.");
                throw t.missingPlugins = "doExpressions", t;
            }
            if (N(a, "optionalChainingAssign") && K(a, "optionalChainingAssign", "version") !== "2023-07") throw new Error("The 'optionalChainingAssign' plugin requires a 'version' option, representing the last proposal update. Currently, the only supported value is '2023-07'.");
        }
        var ps = {
            estree: li,
            jsx: Xi,
            flow: Ji,
            typescript: tr,
            v8intrinsic: nr,
            placeholders: ar
        }, hr = Object.keys(ps), Ke = {
            sourceType: "script",
            sourceFilename: void 0,
            startColumn: 0,
            startLine: 1,
            allowAwaitOutsideFunction: !1,
            allowReturnOutsideFunction: !1,
            allowNewTargetOutsideFunction: !1,
            allowImportExportEverywhere: !1,
            allowSuperOutsideMethod: !1,
            allowUndeclaredExports: !1,
            plugins: [],
            strictMode: null,
            ranges: !1,
            tokens: !1,
            createImportExpressions: !1,
            createParenthesizedExpressions: !1,
            errorRecovery: !1,
            attachComment: !0,
            annexB: !0
        };
        function lr(a) {
            if (a == null) return Object.assign({}, Ke);
            if (a.annexB != null && a.annexB !== !1) throw new Error("The `annexB` option can only be set to `false`.");
            let t = {};
            for (let s of Object.keys(Ke)){
                var e;
                t[s] = (e = a[s]) != null ? e : Ke[s];
            }
            return t;
        }
        var ut = class extends pt {
            checkProto(t, e, s, i) {
                if (t.type === "SpreadElement" || this.isObjectMethod(t) || t.computed || t.shorthand) return;
                let r = t.key;
                if ((r.type === "Identifier" ? r.name : r.value) === "__proto__") {
                    if (e) {
                        this.raise(p.RecordNoProto, r);
                        return;
                    }
                    s.used && (i ? i.doubleProtoLoc === null && (i.doubleProtoLoc = r.loc.start) : this.raise(p.DuplicateProto, r)), s.used = !0;
                }
            }
            shouldExitDescending(t, e) {
                return t.type === "ArrowFunctionExpression" && t.start === e;
            }
            getExpression() {
                this.enterInitialScopes(), this.nextToken();
                let t = this.parseExpression();
                return this.match(139) || this.unexpected(), this.finalizeRemainingComments(), t.comments = this.comments, t.errors = this.state.errors, this.options.tokens && (t.tokens = this.tokens), t;
            }
            parseExpression(t, e) {
                return t ? this.disallowInAnd(()=>this.parseExpressionBase(e)) : this.allowInAnd(()=>this.parseExpressionBase(e));
            }
            parseExpressionBase(t) {
                let e = this.state.startLoc, s = this.parseMaybeAssign(t);
                if (this.match(12)) {
                    let i = this.startNodeAt(e);
                    for(i.expressions = [
                        s
                    ]; this.eat(12);)i.expressions.push(this.parseMaybeAssign(t));
                    return this.toReferencedList(i.expressions), this.finishNode(i, "SequenceExpression");
                }
                return s;
            }
            parseMaybeAssignDisallowIn(t, e) {
                return this.disallowInAnd(()=>this.parseMaybeAssign(t, e));
            }
            parseMaybeAssignAllowIn(t, e) {
                return this.allowInAnd(()=>this.parseMaybeAssign(t, e));
            }
            setOptionalParametersError(t, e) {
                var s;
                t.optionalParametersLoc = (s = e == null ? void 0 : e.loc) != null ? s : this.state.startLoc;
            }
            parseMaybeAssign(t, e) {
                let s = this.state.startLoc;
                if (this.isContextual(108) && this.prodParam.hasYield) {
                    let o = this.parseYield();
                    return e && (o = e.call(this, o, s)), o;
                }
                let i;
                t ? i = !1 : (t = new ee, i = !0);
                let { type: r } = this.state;
                (r === 10 || S(r)) && (this.state.potentialArrowAt = this.state.start);
                let n = this.parseMaybeConditional(t);
                if (e && (n = e.call(this, n, s)), di(this.state.type)) {
                    let o = this.startNodeAt(s), h = this.state.value;
                    if (o.operator = h, this.match(29)) {
                        this.toAssignable(n, !0), o.left = n;
                        let l = s.index;
                        t.doubleProtoLoc != null && t.doubleProtoLoc.index >= l && (t.doubleProtoLoc = null), t.shorthandAssignLoc != null && t.shorthandAssignLoc.index >= l && (t.shorthandAssignLoc = null), t.privateKeyLoc != null && t.privateKeyLoc.index >= l && (this.checkDestructuringPrivate(t), t.privateKeyLoc = null);
                    } else o.left = n;
                    return this.next(), o.right = this.parseMaybeAssign(), this.checkLVal(n, {
                        in: this.finishNode(o, "AssignmentExpression")
                    }), o;
                } else i && this.checkExpressionErrors(t, !0);
                return n;
            }
            parseMaybeConditional(t) {
                let e = this.state.startLoc, s = this.state.potentialArrowAt, i = this.parseExprOps(t);
                return this.shouldExitDescending(i, s) ? i : this.parseConditional(i, e, t);
            }
            parseConditional(t, e, s) {
                if (this.eat(17)) {
                    let i = this.startNodeAt(e);
                    return i.test = t, i.consequent = this.parseMaybeAssignAllowIn(), this.expect(14), i.alternate = this.parseMaybeAssign(), this.finishNode(i, "ConditionalExpression");
                }
                return t;
            }
            parseMaybeUnaryOrPrivate(t) {
                return this.match(138) ? this.parsePrivateName() : this.parseMaybeUnary(t);
            }
            parseExprOps(t) {
                let e = this.state.startLoc, s = this.state.potentialArrowAt, i = this.parseMaybeUnaryOrPrivate(t);
                return this.shouldExitDescending(i, s) ? i : this.parseExprOp(i, e, -1);
            }
            parseExprOp(t, e, s) {
                if (this.isPrivateName(t)) {
                    let r = this.getPrivateNameSV(t);
                    (s >= Ne(58) || !this.prodParam.hasIn || !this.match(58)) && this.raise(p.PrivateInExpectedIn, t, {
                        identifierName: r
                    }), this.classScope.usePrivateName(r, t.loc.start);
                }
                let i = this.state.type;
                if (yi(i) && (this.prodParam.hasIn || !this.match(58))) {
                    let r = Ne(i);
                    if (r > s) {
                        if (i === 39) {
                            if (this.expectPlugin("pipelineOperator"), this.state.inFSharpPipelineDirectBody) return t;
                            this.checkPipelineAtInfixOperator(t, e);
                        }
                        let n = this.startNodeAt(e);
                        n.left = t, n.operator = this.state.value;
                        let o = i === 41 || i === 42, h = i === 40;
                        if (h && (r = Ne(42)), this.next(), i === 39 && this.hasPlugin([
                            "pipelineOperator",
                            {
                                proposal: "minimal"
                            }
                        ]) && this.state.type === 96 && this.prodParam.hasAwait) throw this.raise(p.UnexpectedAwaitAfterPipelineBody, this.state.startLoc);
                        n.right = this.parseExprOpRightExpr(i, r);
                        let l = this.finishNode(n, o || h ? "LogicalExpression" : "BinaryExpression"), c = this.state.type;
                        if (h && (c === 41 || c === 42) || o && c === 40) throw this.raise(p.MixingCoalesceWithLogical, this.state.startLoc);
                        return this.parseExprOp(l, e, s);
                    }
                }
                return t;
            }
            parseExprOpRightExpr(t, e) {
                let s = this.state.startLoc;
                switch(t){
                    case 39:
                        switch(this.getPluginOption("pipelineOperator", "proposal")){
                            case "hack":
                                return this.withTopicBindingContext(()=>this.parseHackPipeBody());
                            case "smart":
                                return this.withTopicBindingContext(()=>{
                                    if (this.prodParam.hasYield && this.isContextual(108)) throw this.raise(p.PipeBodyIsTighter, this.state.startLoc);
                                    return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(t, e), s);
                                });
                            case "fsharp":
                                return this.withSoloAwaitPermittingContext(()=>this.parseFSharpPipelineBody(e));
                        }
                    default:
                        return this.parseExprOpBaseRightExpr(t, e);
                }
            }
            parseExprOpBaseRightExpr(t, e) {
                let s = this.state.startLoc;
                return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), s, bi(t) ? e - 1 : e);
            }
            parseHackPipeBody() {
                var t;
                let { startLoc: e } = this.state, s = this.parseMaybeAssign();
                return ii.has(s.type) && !((t = s.extra) != null && t.parenthesized) && this.raise(p.PipeUnparenthesizedBody, e, {
                    type: s.type
                }), this.topicReferenceWasUsedInCurrentContext() || this.raise(p.PipeTopicUnused, e), s;
            }
            checkExponentialAfterUnary(t) {
                this.match(57) && this.raise(p.UnexpectedTokenUnaryExponentiation, t.argument);
            }
            parseMaybeUnary(t, e) {
                let s = this.state.startLoc, i = this.isContextual(96);
                if (i && this.isAwaitAllowed()) {
                    this.next();
                    let h = this.parseAwait(s);
                    return e || this.checkExponentialAfterUnary(h), h;
                }
                let r = this.match(34), n = this.startNode();
                if (Pi(this.state.type)) {
                    n.operator = this.state.value, n.prefix = !0, this.match(72) && this.expectPlugin("throwExpressions");
                    let h = this.match(89);
                    if (this.next(), n.argument = this.parseMaybeUnary(null, !0), this.checkExpressionErrors(t, !0), this.state.strict && h) {
                        let l = n.argument;
                        l.type === "Identifier" ? this.raise(p.StrictDelete, n) : this.hasPropertyAsPrivateName(l) && this.raise(p.DeletePrivateField, n);
                    }
                    if (!r) return e || this.checkExponentialAfterUnary(n), this.finishNode(n, "UnaryExpression");
                }
                let o = this.parseUpdate(n, r, t);
                if (i) {
                    let { type: h } = this.state;
                    if ((this.hasPlugin("v8intrinsic") ? Je(h) : Je(h) && !this.match(54)) && !this.isAmbiguousAwait()) return this.raiseOverwrite(p.AwaitNotInAsyncContext, s), this.parseAwait(s);
                }
                return o;
            }
            parseUpdate(t, e, s) {
                if (e) {
                    let n = t;
                    return this.checkLVal(n.argument, {
                        in: this.finishNode(n, "UpdateExpression")
                    }), t;
                }
                let i = this.state.startLoc, r = this.parseExprSubscripts(s);
                if (this.checkExpressionErrors(s, !1)) return r;
                for(; xi(this.state.type) && !this.canInsertSemicolon();){
                    let n = this.startNodeAt(i);
                    n.operator = this.state.value, n.prefix = !1, n.argument = r, this.next(), this.checkLVal(r, {
                        in: r = this.finishNode(n, "UpdateExpression")
                    });
                }
                return r;
            }
            parseExprSubscripts(t) {
                let e = this.state.startLoc, s = this.state.potentialArrowAt, i = this.parseExprAtom(t);
                return this.shouldExitDescending(i, s) ? i : this.parseSubscripts(i, e);
            }
            parseSubscripts(t, e, s) {
                let i = {
                    optionalChainMember: !1,
                    maybeAsyncArrow: this.atPossibleAsyncArrow(t),
                    stop: !1
                };
                do t = this.parseSubscript(t, e, s, i), i.maybeAsyncArrow = !1;
                while (!i.stop);
                return t;
            }
            parseSubscript(t, e, s, i) {
                let { type: r } = this.state;
                if (!s && r === 15) return this.parseBind(t, e, s, i);
                if (De(r)) return this.parseTaggedTemplateExpression(t, e, i);
                let n = !1;
                if (r === 18) {
                    if (s && (this.raise(p.OptionalChainingNoNew, this.state.startLoc), this.lookaheadCharCode() === 40)) return i.stop = !0, t;
                    i.optionalChainMember = n = !0, this.next();
                }
                if (!s && this.match(10)) return this.parseCoverCallAndAsyncArrowHead(t, e, i, n);
                {
                    let o = this.eat(0);
                    return o || n || this.eat(16) ? this.parseMember(t, e, i, o, n) : (i.stop = !0, t);
                }
            }
            parseMember(t, e, s, i, r) {
                let n = this.startNodeAt(e);
                return n.object = t, n.computed = i, i ? (n.property = this.parseExpression(), this.expect(3)) : this.match(138) ? (t.type === "Super" && this.raise(p.SuperPrivateField, e), this.classScope.usePrivateName(this.state.value, this.state.startLoc), n.property = this.parsePrivateName()) : n.property = this.parseIdentifier(!0), s.optionalChainMember ? (n.optional = r, this.finishNode(n, "OptionalMemberExpression")) : this.finishNode(n, "MemberExpression");
            }
            parseBind(t, e, s, i) {
                let r = this.startNodeAt(e);
                return r.object = t, this.next(), r.callee = this.parseNoCallExpr(), i.stop = !0, this.parseSubscripts(this.finishNode(r, "BindExpression"), e, s);
            }
            parseCoverCallAndAsyncArrowHead(t, e, s, i) {
                let r = this.state.maybeInArrowParameters, n = null;
                this.state.maybeInArrowParameters = !0, this.next();
                let o = this.startNodeAt(e);
                o.callee = t;
                let { maybeAsyncArrow: h, optionalChainMember: l } = s;
                h && (this.expressionScope.enter(ji()), n = new ee), l && (o.optional = i), i ? o.arguments = this.parseCallExpressionArguments(11) : o.arguments = this.parseCallExpressionArguments(11, t.type === "Import", t.type !== "Super", o, n);
                let c = this.finishCallExpression(o, l);
                return h && this.shouldParseAsyncArrow() && !i ? (s.stop = !0, this.checkDestructuringPrivate(n), this.expressionScope.validateAsPattern(), this.expressionScope.exit(), c = this.parseAsyncArrowFromCallExpression(this.startNodeAt(e), c)) : (h && (this.checkExpressionErrors(n, !0), this.expressionScope.exit()), this.toReferencedArguments(c)), this.state.maybeInArrowParameters = r, c;
            }
            toReferencedArguments(t, e) {
                this.toReferencedListDeep(t.arguments, e);
            }
            parseTaggedTemplateExpression(t, e, s) {
                let i = this.startNodeAt(e);
                return i.tag = t, i.quasi = this.parseTemplate(!0), s.optionalChainMember && this.raise(p.OptionalChainingNoTemplate, e), this.finishNode(i, "TaggedTemplateExpression");
            }
            atPossibleAsyncArrow(t) {
                return t.type === "Identifier" && t.name === "async" && this.state.lastTokEndLoc.index === t.end && !this.canInsertSemicolon() && t.end - t.start === 5 && t.start === this.state.potentialArrowAt;
            }
            expectImportAttributesPlugin() {
                this.hasPlugin("importAssertions") || this.expectPlugin("importAttributes");
            }
            finishCallExpression(t, e) {
                if (t.callee.type === "Import") {
                    if (t.arguments.length === 2 && (this.hasPlugin("moduleAttributes") || this.expectImportAttributesPlugin()), t.arguments.length === 0 || t.arguments.length > 2) this.raise(p.ImportCallArity, t, {
                        maxArgumentCount: this.hasPlugin("importAttributes") || this.hasPlugin("importAssertions") || this.hasPlugin("moduleAttributes") ? 2 : 1
                    });
                    else for (let s of t.arguments)s.type === "SpreadElement" && this.raise(p.ImportCallSpreadArgument, s);
                }
                return this.finishNode(t, e ? "OptionalCallExpression" : "CallExpression");
            }
            parseCallExpressionArguments(t, e, s, i, r) {
                let n = [], o = !0, h = this.state.inFSharpPipelineDirectBody;
                for(this.state.inFSharpPipelineDirectBody = !1; !this.eat(t);){
                    if (o) o = !1;
                    else if (this.expect(12), this.match(t)) {
                        e && !this.hasPlugin("importAttributes") && !this.hasPlugin("importAssertions") && !this.hasPlugin("moduleAttributes") && this.raise(p.ImportCallArgumentTrailingComma, this.state.lastTokStartLoc), i && this.addTrailingCommaExtraToNode(i), this.next();
                        break;
                    }
                    n.push(this.parseExprListItem(!1, r, s));
                }
                return this.state.inFSharpPipelineDirectBody = h, n;
            }
            shouldParseAsyncArrow() {
                return this.match(19) && !this.canInsertSemicolon();
            }
            parseAsyncArrowFromCallExpression(t, e) {
                var s;
                return this.resetPreviousNodeTrailingComments(e), this.expect(19), this.parseArrowExpression(t, e.arguments, !0, (s = e.extra) == null ? void 0 : s.trailingCommaLoc), e.innerComments && xe(t, e.innerComments), e.callee.trailingComments && xe(t, e.callee.trailingComments), t;
            }
            parseNoCallExpr() {
                let t = this.state.startLoc;
                return this.parseSubscripts(this.parseExprAtom(), t, !0);
            }
            parseExprAtom(t) {
                let e, s = null, { type: i } = this.state;
                switch(i){
                    case 79:
                        return this.parseSuper();
                    case 83:
                        return e = this.startNode(), this.next(), this.match(16) ? this.parseImportMetaProperty(e) : this.match(10) ? this.options.createImportExpressions ? this.parseImportCall(e) : this.finishNode(e, "Import") : (this.raise(p.UnsupportedImport, this.state.lastTokStartLoc), this.finishNode(e, "Import"));
                    case 78:
                        return e = this.startNode(), this.next(), this.finishNode(e, "ThisExpression");
                    case 90:
                        return this.parseDo(this.startNode(), !1);
                    case 56:
                    case 31:
                        return this.readRegexp(), this.parseRegExpLiteral(this.state.value);
                    case 134:
                        return this.parseNumericLiteral(this.state.value);
                    case 135:
                        return this.parseBigIntLiteral(this.state.value);
                    case 136:
                        return this.parseDecimalLiteral(this.state.value);
                    case 133:
                        return this.parseStringLiteral(this.state.value);
                    case 84:
                        return this.parseNullLiteral();
                    case 85:
                        return this.parseBooleanLiteral(!0);
                    case 86:
                        return this.parseBooleanLiteral(!1);
                    case 10:
                        {
                            let r = this.state.potentialArrowAt === this.state.start;
                            return this.parseParenAndDistinguishExpression(r);
                        }
                    case 2:
                    case 1:
                        return this.parseArrayLike(this.state.type === 2 ? 4 : 3, !1, !0);
                    case 0:
                        return this.parseArrayLike(3, !0, !1, t);
                    case 6:
                    case 7:
                        return this.parseObjectLike(this.state.type === 6 ? 9 : 8, !1, !0);
                    case 5:
                        return this.parseObjectLike(8, !1, !1, t);
                    case 68:
                        return this.parseFunctionOrFunctionSent();
                    case 26:
                        s = this.parseDecorators();
                    case 80:
                        return this.parseClass(this.maybeTakeDecorators(s, this.startNode()), !1);
                    case 77:
                        return this.parseNewOrNewTarget();
                    case 25:
                    case 24:
                        return this.parseTemplate(!1);
                    case 15:
                        {
                            e = this.startNode(), this.next(), e.object = null;
                            let r = e.callee = this.parseNoCallExpr();
                            if (r.type === "MemberExpression") return this.finishNode(e, "BindExpression");
                            throw this.raise(p.UnsupportedBind, r);
                        }
                    case 138:
                        return this.raise(p.PrivateInExpectedIn, this.state.startLoc, {
                            identifierName: this.state.value
                        }), this.parsePrivateName();
                    case 33:
                        return this.parseTopicReferenceThenEqualsSign(54, "%");
                    case 32:
                        return this.parseTopicReferenceThenEqualsSign(44, "^");
                    case 37:
                    case 38:
                        return this.parseTopicReference("hack");
                    case 44:
                    case 54:
                    case 27:
                        {
                            let r = this.getPluginOption("pipelineOperator", "proposal");
                            if (r) return this.parseTopicReference(r);
                            this.unexpected();
                            break;
                        }
                    case 47:
                        {
                            let r = this.input.codePointAt(this.nextTokenStart());
                            j(r) || r === 62 ? this.expectOnePlugin([
                                "jsx",
                                "flow",
                                "typescript"
                            ]) : this.unexpected();
                            break;
                        }
                    default:
                        if (S(i)) {
                            if (this.isContextual(127) && this.lookaheadInLineCharCode() === 123) return this.parseModuleExpression();
                            let r = this.state.potentialArrowAt === this.state.start, n = this.state.containsEsc, o = this.parseIdentifier();
                            if (!n && o.name === "async" && !this.canInsertSemicolon()) {
                                let { type: h } = this.state;
                                if (h === 68) return this.resetPreviousNodeTrailingComments(o), this.next(), this.parseAsyncFunctionExpression(this.startNodeAtNode(o));
                                if (S(h)) return this.lookaheadCharCode() === 61 ? this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(o)) : o;
                                if (h === 90) return this.resetPreviousNodeTrailingComments(o), this.parseDo(this.startNodeAtNode(o), !0);
                            }
                            return r && this.match(19) && !this.canInsertSemicolon() ? (this.next(), this.parseArrowExpression(this.startNodeAtNode(o), [
                                o
                            ], !1)) : o;
                        } else this.unexpected();
                }
            }
            parseTopicReferenceThenEqualsSign(t, e) {
                let s = this.getPluginOption("pipelineOperator", "proposal");
                if (s) return this.state.type = t, this.state.value = e, this.state.pos--, this.state.end--, this.state.endLoc = L(this.state.endLoc, -1), this.parseTopicReference(s);
                this.unexpected();
            }
            parseTopicReference(t) {
                let e = this.startNode(), s = this.state.startLoc, i = this.state.type;
                return this.next(), this.finishTopicReference(e, s, t, i);
            }
            finishTopicReference(t, e, s, i) {
                if (this.testTopicReferenceConfiguration(s, e, i)) {
                    let r = s === "smart" ? "PipelinePrimaryTopicReference" : "TopicReference";
                    return this.topicReferenceIsAllowedInCurrentContext() || this.raise(s === "smart" ? p.PrimaryTopicNotAllowed : p.PipeTopicUnbound, e), this.registerTopicReference(), this.finishNode(t, r);
                } else throw this.raise(p.PipeTopicUnconfiguredToken, e, {
                    token: H(i)
                });
            }
            testTopicReferenceConfiguration(t, e, s) {
                switch(t){
                    case "hack":
                        return this.hasPlugin([
                            "pipelineOperator",
                            {
                                topicToken: H(s)
                            }
                        ]);
                    case "smart":
                        return s === 27;
                    default:
                        throw this.raise(p.PipeTopicRequiresHackPipes, e);
                }
            }
            parseAsyncArrowUnaryFunction(t) {
                this.prodParam.enter(ve(!0, this.prodParam.hasYield));
                let e = [
                    this.parseIdentifier()
                ];
                return this.prodParam.exit(), this.hasPrecedingLineBreak() && this.raise(p.LineTerminatorBeforeArrow, this.state.curPosition()), this.expect(19), this.parseArrowExpression(t, e, !0);
            }
            parseDo(t, e) {
                this.expectPlugin("doExpressions"), e && this.expectPlugin("asyncDoExpressions"), t.async = e, this.next();
                let s = this.state.labels;
                return this.state.labels = [], e ? (this.prodParam.enter(2), t.body = this.parseBlock(), this.prodParam.exit()) : t.body = this.parseBlock(), this.state.labels = s, this.finishNode(t, "DoExpression");
            }
            parseSuper() {
                let t = this.startNode();
                return this.next(), this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod ? this.raise(p.SuperNotAllowed, t) : !this.scope.allowSuper && !this.options.allowSuperOutsideMethod && this.raise(p.UnexpectedSuper, t), !this.match(10) && !this.match(0) && !this.match(16) && this.raise(p.UnsupportedSuper, t), this.finishNode(t, "Super");
            }
            parsePrivateName() {
                let t = this.startNode(), e = this.startNodeAt(L(this.state.startLoc, 1)), s = this.state.value;
                return this.next(), t.id = this.createIdentifier(e, s), this.finishNode(t, "PrivateName");
            }
            parseFunctionOrFunctionSent() {
                let t = this.startNode();
                if (this.next(), this.prodParam.hasYield && this.match(16)) {
                    let e = this.createIdentifier(this.startNodeAtNode(t), "function");
                    return this.next(), this.match(103) ? this.expectPlugin("functionSent") : this.hasPlugin("functionSent") || this.unexpected(), this.parseMetaProperty(t, e, "sent");
                }
                return this.parseFunction(t);
            }
            parseMetaProperty(t, e, s) {
                t.meta = e;
                let i = this.state.containsEsc;
                return t.property = this.parseIdentifier(!0), (t.property.name !== s || i) && this.raise(p.UnsupportedMetaProperty, t.property, {
                    target: e.name,
                    onlyValidPropertyName: s
                }), this.finishNode(t, "MetaProperty");
            }
            parseImportMetaProperty(t) {
                let e = this.createIdentifier(this.startNodeAtNode(t), "import");
                if (this.next(), this.isContextual(101)) this.inModule || this.raise(p.ImportMetaOutsideModule, e), this.sawUnambiguousESM = !0;
                else if (this.isContextual(105) || this.isContextual(97)) {
                    let s = this.isContextual(105);
                    if (s || this.unexpected(), this.expectPlugin(s ? "sourcePhaseImports" : "deferredImportEvaluation"), !this.options.createImportExpressions) throw this.raise(p.DynamicImportPhaseRequiresImportExpressions, this.state.startLoc, {
                        phase: this.state.value
                    });
                    return this.next(), t.phase = s ? "source" : "defer", this.parseImportCall(t);
                }
                return this.parseMetaProperty(t, e, "meta");
            }
            parseLiteralAtNode(t, e, s) {
                return this.addExtra(s, "rawValue", t), this.addExtra(s, "raw", this.input.slice(s.start, this.state.end)), s.value = t, this.next(), this.finishNode(s, e);
            }
            parseLiteral(t, e) {
                let s = this.startNode();
                return this.parseLiteralAtNode(t, e, s);
            }
            parseStringLiteral(t) {
                return this.parseLiteral(t, "StringLiteral");
            }
            parseNumericLiteral(t) {
                return this.parseLiteral(t, "NumericLiteral");
            }
            parseBigIntLiteral(t) {
                return this.parseLiteral(t, "BigIntLiteral");
            }
            parseDecimalLiteral(t) {
                return this.parseLiteral(t, "DecimalLiteral");
            }
            parseRegExpLiteral(t) {
                let e = this.parseLiteral(t.value, "RegExpLiteral");
                return e.pattern = t.pattern, e.flags = t.flags, e;
            }
            parseBooleanLiteral(t) {
                let e = this.startNode();
                return e.value = t, this.next(), this.finishNode(e, "BooleanLiteral");
            }
            parseNullLiteral() {
                let t = this.startNode();
                return this.next(), this.finishNode(t, "NullLiteral");
            }
            parseParenAndDistinguishExpression(t) {
                let e = this.state.startLoc, s;
                this.next(), this.expressionScope.enter(Ui());
                let i = this.state.maybeInArrowParameters, r = this.state.inFSharpPipelineDirectBody;
                this.state.maybeInArrowParameters = !0, this.state.inFSharpPipelineDirectBody = !1;
                let n = this.state.startLoc, o = [], h = new ee, l = !0, c, u;
                for(; !this.match(11);){
                    if (l) l = !1;
                    else if (this.expect(12, h.optionalParametersLoc === null ? null : h.optionalParametersLoc), this.match(11)) {
                        u = this.state.startLoc;
                        break;
                    }
                    if (this.match(21)) {
                        let y = this.state.startLoc;
                        if (c = this.state.startLoc, o.push(this.parseParenItem(this.parseRestBinding(), y)), !this.checkCommaAfterRest(41)) break;
                    } else o.push(this.parseMaybeAssignAllowIn(h, this.parseParenItem));
                }
                let f = this.state.lastTokEndLoc;
                this.expect(11), this.state.maybeInArrowParameters = i, this.state.inFSharpPipelineDirectBody = r;
                let d = this.startNodeAt(e);
                return t && this.shouldParseArrow(o) && (d = this.parseArrow(d)) ? (this.checkDestructuringPrivate(h), this.expressionScope.validateAsPattern(), this.expressionScope.exit(), this.parseArrowExpression(d, o, !1), d) : (this.expressionScope.exit(), o.length || this.unexpected(this.state.lastTokStartLoc), u && this.unexpected(u), c && this.unexpected(c), this.checkExpressionErrors(h, !0), this.toReferencedListDeep(o, !0), o.length > 1 ? (s = this.startNodeAt(n), s.expressions = o, this.finishNode(s, "SequenceExpression"), this.resetEndLocation(s, f)) : s = o[0], this.wrapParenthesis(e, s));
            }
            wrapParenthesis(t, e) {
                if (!this.options.createParenthesizedExpressions) return this.addExtra(e, "parenthesized", !0), this.addExtra(e, "parenStart", t.index), this.takeSurroundingComments(e, t.index, this.state.lastTokEndLoc.index), e;
                let s = this.startNodeAt(t);
                return s.expression = e, this.finishNode(s, "ParenthesizedExpression");
            }
            shouldParseArrow(t) {
                return !this.canInsertSemicolon();
            }
            parseArrow(t) {
                if (this.eat(19)) return t;
            }
            parseParenItem(t, e) {
                return t;
            }
            parseNewOrNewTarget() {
                let t = this.startNode();
                if (this.next(), this.match(16)) {
                    let e = this.createIdentifier(this.startNodeAtNode(t), "new");
                    this.next();
                    let s = this.parseMetaProperty(t, e, "target");
                    return !this.scope.inNonArrowFunction && !this.scope.inClass && !this.options.allowNewTargetOutsideFunction && this.raise(p.UnexpectedNewTarget, s), s;
                }
                return this.parseNew(t);
            }
            parseNew(t) {
                if (this.parseNewCallee(t), this.eat(10)) {
                    let e = this.parseExprList(11);
                    this.toReferencedList(e), t.arguments = e;
                } else t.arguments = [];
                return this.finishNode(t, "NewExpression");
            }
            parseNewCallee(t) {
                let e = this.match(83), s = this.parseNoCallExpr();
                t.callee = s, e && (s.type === "Import" || s.type === "ImportExpression") && this.raise(p.ImportCallNotNewExpression, s);
            }
            parseTemplateElement(t) {
                let { start: e, startLoc: s, end: i, value: r } = this.state, n = e + 1, o = this.startNodeAt(L(s, 1));
                r === null && (t || this.raise(p.InvalidEscapeSequenceTemplate, L(this.state.firstInvalidTemplateEscapePos, 1)));
                let h = this.match(24), l = h ? -1 : -2, c = i + l;
                o.value = {
                    raw: this.input.slice(n, c).replace(/\r\n?/g, `
`),
                    cooked: r === null ? null : r.slice(1, l)
                }, o.tail = h, this.next();
                let u = this.finishNode(o, "TemplateElement");
                return this.resetEndLocation(u, L(this.state.lastTokEndLoc, l)), u;
            }
            parseTemplate(t) {
                let e = this.startNode();
                e.expressions = [];
                let s = this.parseTemplateElement(t);
                for(e.quasis = [
                    s
                ]; !s.tail;)e.expressions.push(this.parseTemplateSubstitution()), this.readTemplateContinuation(), e.quasis.push(s = this.parseTemplateElement(t));
                return this.finishNode(e, "TemplateLiteral");
            }
            parseTemplateSubstitution() {
                return this.parseExpression();
            }
            parseObjectLike(t, e, s, i) {
                s && this.expectPlugin("recordAndTuple");
                let r = this.state.inFSharpPipelineDirectBody;
                this.state.inFSharpPipelineDirectBody = !1;
                let n = Object.create(null), o = !0, h = this.startNode();
                for(h.properties = [], this.next(); !this.match(t);){
                    if (o) o = !1;
                    else if (this.expect(12), this.match(t)) {
                        this.addTrailingCommaExtraToNode(h);
                        break;
                    }
                    let c;
                    e ? c = this.parseBindingProperty() : (c = this.parsePropertyDefinition(i), this.checkProto(c, s, n, i)), s && !this.isObjectProperty(c) && c.type !== "SpreadElement" && this.raise(p.InvalidRecordProperty, c), c.shorthand && this.addExtra(c, "shorthand", !0), h.properties.push(c);
                }
                this.next(), this.state.inFSharpPipelineDirectBody = r;
                let l = "ObjectExpression";
                return e ? l = "ObjectPattern" : s && (l = "RecordExpression"), this.finishNode(h, l);
            }
            addTrailingCommaExtraToNode(t) {
                this.addExtra(t, "trailingComma", this.state.lastTokStartLoc.index), this.addExtra(t, "trailingCommaLoc", this.state.lastTokStartLoc, !1);
            }
            maybeAsyncOrAccessorProp(t) {
                return !t.computed && t.key.type === "Identifier" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));
            }
            parsePropertyDefinition(t) {
                let e = [];
                if (this.match(26)) for(this.hasPlugin("decorators") && this.raise(p.UnsupportedPropertyDecorator, this.state.startLoc); this.match(26);)e.push(this.parseDecorator());
                let s = this.startNode(), i = !1, r = !1, n;
                if (this.match(21)) return e.length && this.unexpected(), this.parseSpread();
                e.length && (s.decorators = e, e = []), s.method = !1, t && (n = this.state.startLoc);
                let o = this.eat(55);
                this.parsePropertyNamePrefixOperator(s);
                let h = this.state.containsEsc, l = this.parsePropertyName(s, t);
                if (!o && !h && this.maybeAsyncOrAccessorProp(s)) {
                    let c = l.name;
                    c === "async" && !this.hasPrecedingLineBreak() && (i = !0, this.resetPreviousNodeTrailingComments(l), o = this.eat(55), this.parsePropertyName(s)), (c === "get" || c === "set") && (r = !0, this.resetPreviousNodeTrailingComments(l), s.kind = c, this.match(55) && (o = !0, this.raise(p.AccessorIsGenerator, this.state.curPosition(), {
                        kind: c
                    }), this.next()), this.parsePropertyName(s));
                }
                return this.parseObjPropValue(s, n, o, i, !1, r, t);
            }
            getGetterSetterExpectedParamCount(t) {
                return t.kind === "get" ? 0 : 1;
            }
            getObjectOrClassMethodParams(t) {
                return t.params;
            }
            checkGetterSetterParams(t) {
                var e;
                let s = this.getGetterSetterExpectedParamCount(t), i = this.getObjectOrClassMethodParams(t);
                i.length !== s && this.raise(t.kind === "get" ? p.BadGetterArity : p.BadSetterArity, t), t.kind === "set" && ((e = i[i.length - 1]) == null ? void 0 : e.type) === "RestElement" && this.raise(p.BadSetterRestParameter, t);
            }
            parseObjectMethod(t, e, s, i, r) {
                if (r) {
                    let n = this.parseMethod(t, e, !1, !1, !1, "ObjectMethod");
                    return this.checkGetterSetterParams(n), n;
                }
                if (s || e || this.match(10)) return i && this.unexpected(), t.kind = "method", t.method = !0, this.parseMethod(t, e, s, !1, !1, "ObjectMethod");
            }
            parseObjectProperty(t, e, s, i) {
                if (t.shorthand = !1, this.eat(14)) return t.value = s ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(i), this.finishNode(t, "ObjectProperty");
                if (!t.computed && t.key.type === "Identifier") {
                    if (this.checkReservedWord(t.key.name, t.key.loc.start, !0, !1), s) t.value = this.parseMaybeDefault(e, V(t.key));
                    else if (this.match(29)) {
                        let r = this.state.startLoc;
                        i != null ? i.shorthandAssignLoc === null && (i.shorthandAssignLoc = r) : this.raise(p.InvalidCoverInitializedName, r), t.value = this.parseMaybeDefault(e, V(t.key));
                    } else t.value = V(t.key);
                    return t.shorthand = !0, this.finishNode(t, "ObjectProperty");
                }
            }
            parseObjPropValue(t, e, s, i, r, n, o) {
                let h = this.parseObjectMethod(t, s, i, r, n) || this.parseObjectProperty(t, e, r, o);
                return h || this.unexpected(), h;
            }
            parsePropertyName(t, e) {
                if (this.eat(0)) t.computed = !0, t.key = this.parseMaybeAssignAllowIn(), this.expect(3);
                else {
                    let { type: s, value: i } = this.state, r;
                    if (M(s)) r = this.parseIdentifier(!0);
                    else switch(s){
                        case 134:
                            r = this.parseNumericLiteral(i);
                            break;
                        case 133:
                            r = this.parseStringLiteral(i);
                            break;
                        case 135:
                            r = this.parseBigIntLiteral(i);
                            break;
                        case 136:
                            r = this.parseDecimalLiteral(i);
                            break;
                        case 138:
                            {
                                let n = this.state.startLoc;
                                e != null ? e.privateKeyLoc === null && (e.privateKeyLoc = n) : this.raise(p.UnexpectedPrivateField, n), r = this.parsePrivateName();
                                break;
                            }
                        default:
                            this.unexpected();
                    }
                    t.key = r, s !== 138 && (t.computed = !1);
                }
                return t.key;
            }
            initFunction(t, e) {
                t.id = null, t.generator = !1, t.async = e;
            }
            parseMethod(t, e, s, i, r, n, o = !1) {
                this.initFunction(t, s), t.generator = e, this.scope.enter(18 | (o ? 64 : 0) | (r ? 32 : 0)), this.prodParam.enter(ve(s, t.generator)), this.parseFunctionParams(t, i);
                let h = this.parseFunctionBodyAndFinish(t, n, !0);
                return this.prodParam.exit(), this.scope.exit(), h;
            }
            parseArrayLike(t, e, s, i) {
                s && this.expectPlugin("recordAndTuple");
                let r = this.state.inFSharpPipelineDirectBody;
                this.state.inFSharpPipelineDirectBody = !1;
                let n = this.startNode();
                return this.next(), n.elements = this.parseExprList(t, !s, i, n), this.state.inFSharpPipelineDirectBody = r, this.finishNode(n, s ? "TupleExpression" : "ArrayExpression");
            }
            parseArrowExpression(t, e, s, i) {
                this.scope.enter(6);
                let r = ve(s, !1);
                !this.match(5) && this.prodParam.hasIn && (r |= 8), this.prodParam.enter(r), this.initFunction(t, s);
                let n = this.state.maybeInArrowParameters;
                return e && (this.state.maybeInArrowParameters = !0, this.setArrowFunctionParameters(t, e, i)), this.state.maybeInArrowParameters = !1, this.parseFunctionBody(t, !0), this.prodParam.exit(), this.scope.exit(), this.state.maybeInArrowParameters = n, this.finishNode(t, "ArrowFunctionExpression");
            }
            setArrowFunctionParameters(t, e, s) {
                this.toAssignableList(e, s, !1), t.params = e;
            }
            parseFunctionBodyAndFinish(t, e, s = !1) {
                return this.parseFunctionBody(t, !1, s), this.finishNode(t, e);
            }
            parseFunctionBody(t, e, s = !1) {
                let i = e && !this.match(5);
                if (this.expressionScope.enter(os()), i) t.body = this.parseMaybeAssign(), this.checkParams(t, !1, e, !1);
                else {
                    let r = this.state.strict, n = this.state.labels;
                    this.state.labels = [], this.prodParam.enter(this.prodParam.currentFlags() | 4), t.body = this.parseBlock(!0, !1, (o)=>{
                        let h = !this.isSimpleParamList(t.params);
                        o && h && this.raise(p.IllegalLanguageModeDirective, (t.kind === "method" || t.kind === "constructor") && t.key ? t.key.loc.end : t);
                        let l = !r && this.state.strict;
                        this.checkParams(t, !this.state.strict && !e && !s && !h, e, l), this.state.strict && t.id && this.checkIdentifier(t.id, 65, l);
                    }), this.prodParam.exit(), this.state.labels = n;
                }
                this.expressionScope.exit();
            }
            isSimpleParameter(t) {
                return t.type === "Identifier";
            }
            isSimpleParamList(t) {
                for(let e = 0, s = t.length; e < s; e++)if (!this.isSimpleParameter(t[e])) return !1;
                return !0;
            }
            checkParams(t, e, s, i = !0) {
                let r = !e && new Set, n = {
                    type: "FormalParameters"
                };
                for (let o of t.params)this.checkLVal(o, {
                    in: n,
                    binding: 5,
                    checkClashes: r,
                    strictModeChanged: i
                });
            }
            parseExprList(t, e, s, i) {
                let r = [], n = !0;
                for(; !this.eat(t);){
                    if (n) n = !1;
                    else if (this.expect(12), this.match(t)) {
                        i && this.addTrailingCommaExtraToNode(i), this.next();
                        break;
                    }
                    r.push(this.parseExprListItem(e, s));
                }
                return r;
            }
            parseExprListItem(t, e, s) {
                let i;
                if (this.match(12)) t || this.raise(p.UnexpectedToken, this.state.curPosition(), {
                    unexpected: ","
                }), i = null;
                else if (this.match(21)) {
                    let r = this.state.startLoc;
                    i = this.parseParenItem(this.parseSpread(e), r);
                } else if (this.match(17)) {
                    this.expectPlugin("partialApplication"), s || this.raise(p.UnexpectedArgumentPlaceholder, this.state.startLoc);
                    let r = this.startNode();
                    this.next(), i = this.finishNode(r, "ArgumentPlaceholder");
                } else i = this.parseMaybeAssignAllowIn(e, this.parseParenItem);
                return i;
            }
            parseIdentifier(t) {
                let e = this.startNode(), s = this.parseIdentifierName(t);
                return this.createIdentifier(e, s);
            }
            createIdentifier(t, e) {
                return t.name = e, t.loc.identifierName = e, this.finishNode(t, "Identifier");
            }
            parseIdentifierName(t) {
                let e, { startLoc: s, type: i } = this.state;
                M(i) ? e = this.state.value : this.unexpected();
                let r = ui(i);
                return t ? r && this.replaceToken(132) : this.checkReservedWord(e, s, r, !1), this.next(), e;
            }
            checkReservedWord(t, e, s, i) {
                if (t.length > 10 || !Li(t)) return;
                if (s && Ni(t)) {
                    this.raise(p.UnexpectedKeyword, e, {
                        keyword: t
                    });
                    return;
                }
                if ((this.state.strict ? i ? ss : es : Zt)(t, this.inModule)) {
                    this.raise(p.UnexpectedReservedWord, e, {
                        reservedWord: t
                    });
                    return;
                } else if (t === "yield") {
                    if (this.prodParam.hasYield) {
                        this.raise(p.YieldBindingIdentifier, e);
                        return;
                    }
                } else if (t === "await") {
                    if (this.prodParam.hasAwait) {
                        this.raise(p.AwaitBindingIdentifier, e);
                        return;
                    }
                    if (this.scope.inStaticBlock) {
                        this.raise(p.AwaitBindingIdentifierInStaticBlock, e);
                        return;
                    }
                    this.expressionScope.recordAsyncArrowParametersError(e);
                } else if (t === "arguments" && this.scope.inClassAndNotInNonArrowFunction) {
                    this.raise(p.ArgumentsInClass, e);
                    return;
                }
            }
            isAwaitAllowed() {
                return !!(this.prodParam.hasAwait || this.options.allowAwaitOutsideFunction && !this.scope.inFunction);
            }
            parseAwait(t) {
                let e = this.startNodeAt(t);
                return this.expressionScope.recordParameterInitializerError(p.AwaitExpressionFormalParameter, e), this.eat(55) && this.raise(p.ObsoleteAwaitStar, e), !this.scope.inFunction && !this.options.allowAwaitOutsideFunction && (this.isAmbiguousAwait() ? this.ambiguousScriptDifferentAst = !0 : this.sawUnambiguousESM = !0), this.state.soloAwait || (e.argument = this.parseMaybeUnary(null, !0)), this.finishNode(e, "AwaitExpression");
            }
            isAmbiguousAwait() {
                if (this.hasPrecedingLineBreak()) return !0;
                let { type: t } = this.state;
                return t === 53 || t === 10 || t === 0 || De(t) || t === 102 && !this.state.containsEsc || t === 137 || t === 56 || this.hasPlugin("v8intrinsic") && t === 54;
            }
            parseYield() {
                let t = this.startNode();
                this.expressionScope.recordParameterInitializerError(p.YieldInParameter, t), this.next();
                let e = !1, s = null;
                if (!this.hasPrecedingLineBreak()) switch(e = this.eat(55), this.state.type){
                    case 13:
                    case 139:
                    case 8:
                    case 11:
                    case 3:
                    case 9:
                    case 14:
                    case 12:
                        if (!e) break;
                    default:
                        s = this.parseMaybeAssign();
                }
                return t.delegate = e, t.argument = s, this.finishNode(t, "YieldExpression");
            }
            parseImportCall(t) {
                return this.next(), t.source = this.parseMaybeAssignAllowIn(), (this.hasPlugin("importAttributes") || this.hasPlugin("importAssertions")) && (t.options = null), this.eat(12) && (this.expectImportAttributesPlugin(), this.match(11) || (t.options = this.parseMaybeAssignAllowIn(), this.eat(12))), this.expect(11), this.finishNode(t, "ImportExpression");
            }
            checkPipelineAtInfixOperator(t, e) {
                this.hasPlugin([
                    "pipelineOperator",
                    {
                        proposal: "smart"
                    }
                ]) && t.type === "SequenceExpression" && this.raise(p.PipelineHeadSequenceExpression, e);
            }
            parseSmartPipelineBodyInStyle(t, e) {
                if (this.isSimpleReference(t)) {
                    let s = this.startNodeAt(e);
                    return s.callee = t, this.finishNode(s, "PipelineBareFunction");
                } else {
                    let s = this.startNodeAt(e);
                    return this.checkSmartPipeTopicBodyEarlyErrors(e), s.expression = t, this.finishNode(s, "PipelineTopicExpression");
                }
            }
            isSimpleReference(t) {
                switch(t.type){
                    case "MemberExpression":
                        return !t.computed && this.isSimpleReference(t.object);
                    case "Identifier":
                        return !0;
                    default:
                        return !1;
                }
            }
            checkSmartPipeTopicBodyEarlyErrors(t) {
                if (this.match(19)) throw this.raise(p.PipelineBodyNoArrow, this.state.startLoc);
                this.topicReferenceWasUsedInCurrentContext() || this.raise(p.PipelineTopicUnused, t);
            }
            withTopicBindingContext(t) {
                let e = this.state.topicContext;
                this.state.topicContext = {
                    maxNumOfResolvableTopics: 1,
                    maxTopicIndex: null
                };
                try {
                    return t();
                } finally{
                    this.state.topicContext = e;
                }
            }
            withSmartMixTopicForbiddingContext(t) {
                if (this.hasPlugin([
                    "pipelineOperator",
                    {
                        proposal: "smart"
                    }
                ])) {
                    let e = this.state.topicContext;
                    this.state.topicContext = {
                        maxNumOfResolvableTopics: 0,
                        maxTopicIndex: null
                    };
                    try {
                        return t();
                    } finally{
                        this.state.topicContext = e;
                    }
                } else return t();
            }
            withSoloAwaitPermittingContext(t) {
                let e = this.state.soloAwait;
                this.state.soloAwait = !0;
                try {
                    return t();
                } finally{
                    this.state.soloAwait = e;
                }
            }
            allowInAnd(t) {
                let e = this.prodParam.currentFlags();
                if (8 & ~e) {
                    this.prodParam.enter(e | 8);
                    try {
                        return t();
                    } finally{
                        this.prodParam.exit();
                    }
                }
                return t();
            }
            disallowInAnd(t) {
                let e = this.prodParam.currentFlags();
                if (8 & e) {
                    this.prodParam.enter(e & -9);
                    try {
                        return t();
                    } finally{
                        this.prodParam.exit();
                    }
                }
                return t();
            }
            registerTopicReference() {
                this.state.topicContext.maxTopicIndex = 0;
            }
            topicReferenceIsAllowedInCurrentContext() {
                return this.state.topicContext.maxNumOfResolvableTopics >= 1;
            }
            topicReferenceWasUsedInCurrentContext() {
                return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;
            }
            parseFSharpPipelineBody(t) {
                let e = this.state.startLoc;
                this.state.potentialArrowAt = this.state.start;
                let s = this.state.inFSharpPipelineDirectBody;
                this.state.inFSharpPipelineDirectBody = !0;
                let i = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), e, t);
                return this.state.inFSharpPipelineDirectBody = s, i;
            }
            parseModuleExpression() {
                this.expectPlugin("moduleBlocks");
                let t = this.startNode();
                this.next(), this.match(5) || this.unexpected(null, 5);
                let e = this.startNodeAt(this.state.endLoc);
                this.next();
                let s = this.initializeScopes(!0);
                this.enterInitialScopes();
                try {
                    t.body = this.parseProgram(e, 8, "module");
                } finally{
                    s();
                }
                return this.finishNode(t, "ModuleExpression");
            }
            parsePropertyNamePrefixOperator(t) {}
        }, He = {
            kind: 1
        }, cr = {
            kind: 2
        }, pr = /[\uD800-\uDFFF]/u, We = /in(?:stanceof)?/y;
        function ur(a, t) {
            for(let e = 0; e < a.length; e++){
                let s = a[e], { type: i } = s;
                if (typeof i == "number") {
                    if (i === 138) {
                        let { loc: r, start: n, value: o, end: h } = s, l = n + 1, c = L(r.start, 1);
                        a.splice(e, 1, new O({
                            type: _(27),
                            value: "#",
                            start: n,
                            end: l,
                            startLoc: r.start,
                            endLoc: c
                        }), new O({
                            type: _(132),
                            value: o,
                            start: l,
                            end: h,
                            startLoc: c,
                            endLoc: r.end
                        })), e++;
                        continue;
                    }
                    if (De(i)) {
                        let { loc: r, start: n, value: o, end: h } = s, l = n + 1, c = L(r.start, 1), u;
                        t.charCodeAt(n) === 96 ? u = new O({
                            type: _(22),
                            value: "`",
                            start: n,
                            end: l,
                            startLoc: r.start,
                            endLoc: c
                        }) : u = new O({
                            type: _(8),
                            value: "}",
                            start: n,
                            end: l,
                            startLoc: r.start,
                            endLoc: c
                        });
                        let f, d, y, I;
                        i === 24 ? (d = h - 1, y = L(r.end, -1), f = o === null ? null : o.slice(1, -1), I = new O({
                            type: _(22),
                            value: "`",
                            start: d,
                            end: h,
                            startLoc: y,
                            endLoc: r.end
                        })) : (d = h - 2, y = L(r.end, -2), f = o === null ? null : o.slice(1, -2), I = new O({
                            type: _(23),
                            value: "${",
                            start: d,
                            end: h,
                            startLoc: y,
                            endLoc: r.end
                        })), a.splice(e, 1, u, new O({
                            type: _(20),
                            value: f,
                            start: l,
                            end: d,
                            startLoc: c,
                            endLoc: y
                        }), I), e += 2;
                        continue;
                    }
                    s.type = _(i);
                }
            }
            return a;
        }
        var ft = class extends ut {
            parseTopLevel(t, e) {
                return t.program = this.parseProgram(e), t.comments = this.comments, this.options.tokens && (t.tokens = ur(this.tokens, this.input)), this.finishNode(t, "File");
            }
            parseProgram(t, e = 139, s = this.options.sourceType) {
                if (t.sourceType = s, t.interpreter = this.parseInterpreterDirective(), this.parseBlockBody(t, !0, !0, e), this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) for (let [r, n] of Array.from(this.scope.undefinedExports))this.raise(p.ModuleExportUndefined, n, {
                    localName: r
                });
                let i;
                return e === 139 ? i = this.finishNode(t, "Program") : i = this.finishNodeAt(t, "Program", L(this.state.startLoc, -1)), i;
            }
            stmtToDirective(t) {
                let e = t;
                e.type = "Directive", e.value = e.expression, delete e.expression;
                let s = e.value, i = s.value, r = this.input.slice(s.start, s.end), n = s.value = r.slice(1, -1);
                return this.addExtra(s, "raw", r), this.addExtra(s, "rawValue", n), this.addExtra(s, "expressionValue", i), s.type = "DirectiveLiteral", e;
            }
            parseInterpreterDirective() {
                if (!this.match(28)) return null;
                let t = this.startNode();
                return t.value = this.state.value, this.next(), this.finishNode(t, "InterpreterDirective");
            }
            isLet() {
                return this.isContextual(100) ? this.hasFollowingBindingAtom() : !1;
            }
            chStartsBindingIdentifier(t, e) {
                if (j(t)) {
                    if (We.lastIndex = e, We.test(this.input)) {
                        let s = this.codePointAtPos(We.lastIndex);
                        if (!Z(s) && s !== 92) return !1;
                    }
                    return !0;
                } else return t === 92;
            }
            chStartsBindingPattern(t) {
                return t === 91 || t === 123;
            }
            hasFollowingBindingAtom() {
                let t = this.nextTokenStart(), e = this.codePointAtPos(t);
                return this.chStartsBindingPattern(e) || this.chStartsBindingIdentifier(e, t);
            }
            hasInLineFollowingBindingIdentifier() {
                let t = this.nextTokenInLineStart(), e = this.codePointAtPos(t);
                return this.chStartsBindingIdentifier(e, t);
            }
            startsUsingForOf() {
                let { type: t, containsEsc: e } = this.lookahead();
                if (t === 102 && !e) return !1;
                if (S(t) && !this.hasFollowingLineBreak()) return this.expectPlugin("explicitResourceManagement"), !0;
            }
            startsAwaitUsing() {
                let t = this.nextTokenInLineStart();
                if (this.isUnparsedContextual(t, "using")) {
                    t = this.nextTokenInLineStartSince(t + 5);
                    let e = this.codePointAtPos(t);
                    if (this.chStartsBindingIdentifier(e, t)) return this.expectPlugin("explicitResourceManagement"), !0;
                }
                return !1;
            }
            parseModuleItem() {
                return this.parseStatementLike(15);
            }
            parseStatementListItem() {
                return this.parseStatementLike(6 | (!this.options.annexB || this.state.strict ? 0 : 8));
            }
            parseStatementOrSloppyAnnexBFunctionDeclaration(t = !1) {
                let e = 0;
                return this.options.annexB && !this.state.strict && (e |= 4, t && (e |= 8)), this.parseStatementLike(e);
            }
            parseStatement() {
                return this.parseStatementLike(0);
            }
            parseStatementLike(t) {
                let e = null;
                return this.match(26) && (e = this.parseDecorators(!0)), this.parseStatementContent(t, e);
            }
            parseStatementContent(t, e) {
                let s = this.state.type, i = this.startNode(), r = !!(t & 2), n = !!(t & 4), o = t & 1;
                switch(s){
                    case 60:
                        return this.parseBreakContinueStatement(i, !0);
                    case 63:
                        return this.parseBreakContinueStatement(i, !1);
                    case 64:
                        return this.parseDebuggerStatement(i);
                    case 90:
                        return this.parseDoWhileStatement(i);
                    case 91:
                        return this.parseForStatement(i);
                    case 68:
                        if (this.lookaheadCharCode() === 46) break;
                        return n || this.raise(this.state.strict ? p.StrictFunction : this.options.annexB ? p.SloppyFunctionAnnexB : p.SloppyFunction, this.state.startLoc), this.parseFunctionStatement(i, !1, !r && n);
                    case 80:
                        return r || this.unexpected(), this.parseClass(this.maybeTakeDecorators(e, i), !0);
                    case 69:
                        return this.parseIfStatement(i);
                    case 70:
                        return this.parseReturnStatement(i);
                    case 71:
                        return this.parseSwitchStatement(i);
                    case 72:
                        return this.parseThrowStatement(i);
                    case 73:
                        return this.parseTryStatement(i);
                    case 96:
                        if (!this.state.containsEsc && this.startsAwaitUsing()) return this.isAwaitAllowed() ? r || this.raise(p.UnexpectedLexicalDeclaration, i) : this.raise(p.AwaitUsingNotInAsyncContext, i), this.next(), this.parseVarStatement(i, "await using");
                        break;
                    case 107:
                        if (this.state.containsEsc || !this.hasInLineFollowingBindingIdentifier()) break;
                        return this.expectPlugin("explicitResourceManagement"), !this.scope.inModule && this.scope.inTopLevel ? this.raise(p.UnexpectedUsingDeclaration, this.state.startLoc) : r || this.raise(p.UnexpectedLexicalDeclaration, this.state.startLoc), this.parseVarStatement(i, "using");
                    case 100:
                        {
                            if (this.state.containsEsc) break;
                            let c = this.nextTokenStart(), u = this.codePointAtPos(c);
                            if (u !== 91 && (!r && this.hasFollowingLineBreak() || !this.chStartsBindingIdentifier(u, c) && u !== 123)) break;
                        }
                    case 75:
                        r || this.raise(p.UnexpectedLexicalDeclaration, this.state.startLoc);
                    case 74:
                        {
                            let c = this.state.value;
                            return this.parseVarStatement(i, c);
                        }
                    case 92:
                        return this.parseWhileStatement(i);
                    case 76:
                        return this.parseWithStatement(i);
                    case 5:
                        return this.parseBlock();
                    case 13:
                        return this.parseEmptyStatement(i);
                    case 83:
                        {
                            let c = this.lookaheadCharCode();
                            if (c === 40 || c === 46) break;
                        }
                    case 82:
                        {
                            !this.options.allowImportExportEverywhere && !o && this.raise(p.UnexpectedImportExport, this.state.startLoc), this.next();
                            let c;
                            return s === 83 ? (c = this.parseImport(i), c.type === "ImportDeclaration" && (!c.importKind || c.importKind === "value") && (this.sawUnambiguousESM = !0)) : (c = this.parseExport(i, e), (c.type === "ExportNamedDeclaration" && (!c.exportKind || c.exportKind === "value") || c.type === "ExportAllDeclaration" && (!c.exportKind || c.exportKind === "value") || c.type === "ExportDefaultDeclaration") && (this.sawUnambiguousESM = !0)), this.assertModuleNodeAllowed(c), c;
                        }
                    default:
                        if (this.isAsyncFunction()) return r || this.raise(p.AsyncFunctionInSingleStatementContext, this.state.startLoc), this.next(), this.parseFunctionStatement(i, !0, !r && n);
                }
                let h = this.state.value, l = this.parseExpression();
                return S(s) && l.type === "Identifier" && this.eat(14) ? this.parseLabeledStatement(i, h, l, t) : this.parseExpressionStatement(i, l, e);
            }
            assertModuleNodeAllowed(t) {
                !this.options.allowImportExportEverywhere && !this.inModule && this.raise(p.ImportOutsideModule, t);
            }
            decoratorsEnabledBeforeExport() {
                return this.hasPlugin("decorators-legacy") ? !0 : this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport") !== !1;
            }
            maybeTakeDecorators(t, e, s) {
                return t && (e.decorators && e.decorators.length > 0 ? (typeof this.getPluginOption("decorators", "decoratorsBeforeExport") != "boolean" && this.raise(p.DecoratorsBeforeAfterExport, e.decorators[0]), e.decorators.unshift(...t)) : e.decorators = t, this.resetStartLocationFromNode(e, t[0]), s && this.resetStartLocationFromNode(s, e)), e;
            }
            canHaveLeadingDecorator() {
                return this.match(80);
            }
            parseDecorators(t) {
                let e = [];
                do e.push(this.parseDecorator());
                while (this.match(26));
                if (this.match(82)) t || this.unexpected(), this.decoratorsEnabledBeforeExport() || this.raise(p.DecoratorExportClass, this.state.startLoc);
                else if (!this.canHaveLeadingDecorator()) throw this.raise(p.UnexpectedLeadingDecorator, this.state.startLoc);
                return e;
            }
            parseDecorator() {
                this.expectOnePlugin([
                    "decorators",
                    "decorators-legacy"
                ]);
                let t = this.startNode();
                if (this.next(), this.hasPlugin("decorators")) {
                    let e = this.state.startLoc, s;
                    if (this.match(10)) {
                        let i = this.state.startLoc;
                        this.next(), s = this.parseExpression(), this.expect(11), s = this.wrapParenthesis(i, s);
                        let r = this.state.startLoc;
                        t.expression = this.parseMaybeDecoratorArguments(s), this.getPluginOption("decorators", "allowCallParenthesized") === !1 && t.expression !== s && this.raise(p.DecoratorArgumentsOutsideParentheses, r);
                    } else {
                        for(s = this.parseIdentifier(!1); this.eat(16);){
                            let i = this.startNodeAt(e);
                            i.object = s, this.match(138) ? (this.classScope.usePrivateName(this.state.value, this.state.startLoc), i.property = this.parsePrivateName()) : i.property = this.parseIdentifier(!0), i.computed = !1, s = this.finishNode(i, "MemberExpression");
                        }
                        t.expression = this.parseMaybeDecoratorArguments(s);
                    }
                } else t.expression = this.parseExprSubscripts();
                return this.finishNode(t, "Decorator");
            }
            parseMaybeDecoratorArguments(t) {
                if (this.eat(10)) {
                    let e = this.startNodeAtNode(t);
                    return e.callee = t, e.arguments = this.parseCallExpressionArguments(11, !1), this.toReferencedList(e.arguments), this.finishNode(e, "CallExpression");
                }
                return t;
            }
            parseBreakContinueStatement(t, e) {
                return this.next(), this.isLineTerminator() ? t.label = null : (t.label = this.parseIdentifier(), this.semicolon()), this.verifyBreakContinue(t, e), this.finishNode(t, e ? "BreakStatement" : "ContinueStatement");
            }
            verifyBreakContinue(t, e) {
                let s;
                for(s = 0; s < this.state.labels.length; ++s){
                    let i = this.state.labels[s];
                    if ((t.label == null || i.name === t.label.name) && (i.kind != null && (e || i.kind === 1) || t.label && e)) break;
                }
                if (s === this.state.labels.length) {
                    let i = e ? "BreakStatement" : "ContinueStatement";
                    this.raise(p.IllegalBreakContinue, t, {
                        type: i
                    });
                }
            }
            parseDebuggerStatement(t) {
                return this.next(), this.semicolon(), this.finishNode(t, "DebuggerStatement");
            }
            parseHeaderExpression() {
                this.expect(10);
                let t = this.parseExpression();
                return this.expect(11), t;
            }
            parseDoWhileStatement(t) {
                return this.next(), this.state.labels.push(He), t.body = this.withSmartMixTopicForbiddingContext(()=>this.parseStatement()), this.state.labels.pop(), this.expect(92), t.test = this.parseHeaderExpression(), this.eat(13), this.finishNode(t, "DoWhileStatement");
            }
            parseForStatement(t) {
                this.next(), this.state.labels.push(He);
                let e = null;
                if (this.isAwaitAllowed() && this.eatContextual(96) && (e = this.state.lastTokStartLoc), this.scope.enter(0), this.expect(10), this.match(13)) return e !== null && this.unexpected(e), this.parseFor(t, null);
                let s = this.isContextual(100);
                {
                    let h = this.isContextual(96) && this.startsAwaitUsing(), l = h || this.isContextual(107) && this.startsUsingForOf(), c = s && this.hasFollowingBindingAtom() || l;
                    if (this.match(74) || this.match(75) || c) {
                        let u = this.startNode(), f;
                        h ? (f = "await using", this.isAwaitAllowed() || this.raise(p.AwaitUsingNotInAsyncContext, this.state.startLoc), this.next()) : f = this.state.value, this.next(), this.parseVar(u, !0, f);
                        let d = this.finishNode(u, "VariableDeclaration"), y = this.match(58);
                        return y && l && this.raise(p.ForInUsing, d), (y || this.isContextual(102)) && d.declarations.length === 1 ? this.parseForIn(t, d, e) : (e !== null && this.unexpected(e), this.parseFor(t, d));
                    }
                }
                let i = this.isContextual(95), r = new ee, n = this.parseExpression(!0, r), o = this.isContextual(102);
                if (o && (s && this.raise(p.ForOfLet, n), e === null && i && n.type === "Identifier" && this.raise(p.ForOfAsync, n)), o || this.match(58)) {
                    this.checkDestructuringPrivate(r), this.toAssignable(n, !0);
                    let h = o ? "ForOfStatement" : "ForInStatement";
                    return this.checkLVal(n, {
                        in: {
                            type: h
                        }
                    }), this.parseForIn(t, n, e);
                } else this.checkExpressionErrors(r, !0);
                return e !== null && this.unexpected(e), this.parseFor(t, n);
            }
            parseFunctionStatement(t, e, s) {
                return this.next(), this.parseFunction(t, 1 | (s ? 2 : 0) | (e ? 8 : 0));
            }
            parseIfStatement(t) {
                return this.next(), t.test = this.parseHeaderExpression(), t.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration(), t.alternate = this.eat(66) ? this.parseStatementOrSloppyAnnexBFunctionDeclaration() : null, this.finishNode(t, "IfStatement");
            }
            parseReturnStatement(t) {
                return !this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction && this.raise(p.IllegalReturn, this.state.startLoc), this.next(), this.isLineTerminator() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, "ReturnStatement");
            }
            parseSwitchStatement(t) {
                this.next(), t.discriminant = this.parseHeaderExpression();
                let e = t.cases = [];
                this.expect(5), this.state.labels.push(cr), this.scope.enter(0);
                let s;
                for(let i; !this.match(8);)if (this.match(61) || this.match(65)) {
                    let r = this.match(61);
                    s && this.finishNode(s, "SwitchCase"), e.push(s = this.startNode()), s.consequent = [], this.next(), r ? s.test = this.parseExpression() : (i && this.raise(p.MultipleDefaultsInSwitch, this.state.lastTokStartLoc), i = !0, s.test = null), this.expect(14);
                } else s ? s.consequent.push(this.parseStatementListItem()) : this.unexpected();
                return this.scope.exit(), s && this.finishNode(s, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(t, "SwitchStatement");
            }
            parseThrowStatement(t) {
                return this.next(), this.hasPrecedingLineBreak() && this.raise(p.NewlineAfterThrow, this.state.lastTokEndLoc), t.argument = this.parseExpression(), this.semicolon(), this.finishNode(t, "ThrowStatement");
            }
            parseCatchClauseParam() {
                let t = this.parseBindingAtom();
                return this.scope.enter(this.options.annexB && t.type === "Identifier" ? 8 : 0), this.checkLVal(t, {
                    in: {
                        type: "CatchClause"
                    },
                    binding: 9
                }), t;
            }
            parseTryStatement(t) {
                if (this.next(), t.block = this.parseBlock(), t.handler = null, this.match(62)) {
                    let e = this.startNode();
                    this.next(), this.match(10) ? (this.expect(10), e.param = this.parseCatchClauseParam(), this.expect(11)) : (e.param = null, this.scope.enter(0)), e.body = this.withSmartMixTopicForbiddingContext(()=>this.parseBlock(!1, !1)), this.scope.exit(), t.handler = this.finishNode(e, "CatchClause");
                }
                return t.finalizer = this.eat(67) ? this.parseBlock() : null, !t.handler && !t.finalizer && this.raise(p.NoCatchOrFinally, t), this.finishNode(t, "TryStatement");
            }
            parseVarStatement(t, e, s = !1) {
                return this.next(), this.parseVar(t, !1, e, s), this.semicolon(), this.finishNode(t, "VariableDeclaration");
            }
            parseWhileStatement(t) {
                return this.next(), t.test = this.parseHeaderExpression(), this.state.labels.push(He), t.body = this.withSmartMixTopicForbiddingContext(()=>this.parseStatement()), this.state.labels.pop(), this.finishNode(t, "WhileStatement");
            }
            parseWithStatement(t) {
                return this.state.strict && this.raise(p.StrictWith, this.state.startLoc), this.next(), t.object = this.parseHeaderExpression(), t.body = this.withSmartMixTopicForbiddingContext(()=>this.parseStatement()), this.finishNode(t, "WithStatement");
            }
            parseEmptyStatement(t) {
                return this.next(), this.finishNode(t, "EmptyStatement");
            }
            parseLabeledStatement(t, e, s, i) {
                for (let n of this.state.labels)n.name === e && this.raise(p.LabelRedeclaration, s, {
                    labelName: e
                });
                let r = mi(this.state.type) ? 1 : this.match(71) ? 2 : null;
                for(let n = this.state.labels.length - 1; n >= 0; n--){
                    let o = this.state.labels[n];
                    if (o.statementStart === t.start) o.statementStart = this.state.start, o.kind = r;
                    else break;
                }
                return this.state.labels.push({
                    name: e,
                    kind: r,
                    statementStart: this.state.start
                }), t.body = i & 8 ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(!0) : this.parseStatement(), this.state.labels.pop(), t.label = s, this.finishNode(t, "LabeledStatement");
            }
            parseExpressionStatement(t, e, s) {
                return t.expression = e, this.semicolon(), this.finishNode(t, "ExpressionStatement");
            }
            parseBlock(t = !1, e = !0, s) {
                let i = this.startNode();
                return t && this.state.strictErrors.clear(), this.expect(5), e && this.scope.enter(0), this.parseBlockBody(i, t, !1, 8, s), e && this.scope.exit(), this.finishNode(i, "BlockStatement");
            }
            isValidDirective(t) {
                return t.type === "ExpressionStatement" && t.expression.type === "StringLiteral" && !t.expression.extra.parenthesized;
            }
            parseBlockBody(t, e, s, i, r) {
                let n = t.body = [], o = t.directives = [];
                this.parseBlockOrModuleBlockBody(n, e ? o : void 0, s, i, r);
            }
            parseBlockOrModuleBlockBody(t, e, s, i, r) {
                let n = this.state.strict, o = !1, h = !1;
                for(; !this.match(i);){
                    let l = s ? this.parseModuleItem() : this.parseStatementListItem();
                    if (e && !h) {
                        if (this.isValidDirective(l)) {
                            let c = this.stmtToDirective(l);
                            e.push(c), !o && c.value.value === "use strict" && (o = !0, this.setStrict(!0));
                            continue;
                        }
                        h = !0, this.state.strictErrors.clear();
                    }
                    t.push(l);
                }
                r == null || r.call(this, o), n || this.setStrict(!1), this.next();
            }
            parseFor(t, e) {
                return t.init = e, this.semicolon(!1), t.test = this.match(13) ? null : this.parseExpression(), this.semicolon(!1), t.update = this.match(11) ? null : this.parseExpression(), this.expect(11), t.body = this.withSmartMixTopicForbiddingContext(()=>this.parseStatement()), this.scope.exit(), this.state.labels.pop(), this.finishNode(t, "ForStatement");
            }
            parseForIn(t, e, s) {
                let i = this.match(58);
                return this.next(), i ? s !== null && this.unexpected(s) : t.await = s !== null, e.type === "VariableDeclaration" && e.declarations[0].init != null && (!i || !this.options.annexB || this.state.strict || e.kind !== "var" || e.declarations[0].id.type !== "Identifier") && this.raise(p.ForInOfLoopInitializer, e, {
                    type: i ? "ForInStatement" : "ForOfStatement"
                }), e.type === "AssignmentPattern" && this.raise(p.InvalidLhs, e, {
                    ancestor: {
                        type: "ForStatement"
                    }
                }), t.left = e, t.right = i ? this.parseExpression() : this.parseMaybeAssignAllowIn(), this.expect(11), t.body = this.withSmartMixTopicForbiddingContext(()=>this.parseStatement()), this.scope.exit(), this.state.labels.pop(), this.finishNode(t, i ? "ForInStatement" : "ForOfStatement");
            }
            parseVar(t, e, s, i = !1) {
                let r = t.declarations = [];
                for(t.kind = s;;){
                    let n = this.startNode();
                    if (this.parseVarId(n, s), n.init = this.eat(29) ? e ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn() : null, n.init === null && !i && (n.id.type !== "Identifier" && !(e && (this.match(58) || this.isContextual(102))) ? this.raise(p.DeclarationMissingInitializer, this.state.lastTokEndLoc, {
                        kind: "destructuring"
                    }) : s === "const" && !(this.match(58) || this.isContextual(102)) && this.raise(p.DeclarationMissingInitializer, this.state.lastTokEndLoc, {
                        kind: "const"
                    })), r.push(this.finishNode(n, "VariableDeclarator")), !this.eat(12)) break;
                }
                return t;
            }
            parseVarId(t, e) {
                let s = this.parseBindingAtom();
                this.checkLVal(s, {
                    in: {
                        type: "VariableDeclarator"
                    },
                    binding: e === "var" ? 5 : 8201
                }), t.id = s;
            }
            parseAsyncFunctionExpression(t) {
                return this.parseFunction(t, 8);
            }
            parseFunction(t, e = 0) {
                let s = e & 2, i = !!(e & 1), r = i && !(e & 4), n = !!(e & 8);
                this.initFunction(t, n), this.match(55) && (s && this.raise(p.GeneratorInSingleStatementContext, this.state.startLoc), this.next(), t.generator = !0), i && (t.id = this.parseFunctionId(r));
                let o = this.state.maybeInArrowParameters;
                return this.state.maybeInArrowParameters = !1, this.scope.enter(2), this.prodParam.enter(ve(n, t.generator)), i || (t.id = this.parseFunctionId()), this.parseFunctionParams(t, !1), this.withSmartMixTopicForbiddingContext(()=>{
                    this.parseFunctionBodyAndFinish(t, i ? "FunctionDeclaration" : "FunctionExpression");
                }), this.prodParam.exit(), this.scope.exit(), i && !s && this.registerFunctionStatementId(t), this.state.maybeInArrowParameters = o, t;
            }
            parseFunctionId(t) {
                return t || S(this.state.type) ? this.parseIdentifier() : null;
            }
            parseFunctionParams(t, e) {
                this.expect(10), this.expressionScope.enter(_i()), t.params = this.parseBindingList(11, 41, 2 | (e ? 4 : 0)), this.expressionScope.exit();
            }
            registerFunctionStatementId(t) {
                t.id && this.scope.declareName(t.id.name, !this.options.annexB || this.state.strict || t.generator || t.async ? this.scope.treatFunctionsAsVar ? 5 : 8201 : 17, t.id.loc.start);
            }
            parseClass(t, e, s) {
                this.next();
                let i = this.state.strict;
                return this.state.strict = !0, this.parseClassId(t, e, s), this.parseClassSuper(t), t.body = this.parseClassBody(!!t.superClass, i), this.finishNode(t, e ? "ClassDeclaration" : "ClassExpression");
            }
            isClassProperty() {
                return this.match(29) || this.match(13) || this.match(8);
            }
            isClassMethod() {
                return this.match(10);
            }
            isNonstaticConstructor(t) {
                return !t.computed && !t.static && (t.key.name === "constructor" || t.key.value === "constructor");
            }
            parseClassBody(t, e) {
                this.classScope.enter();
                let s = {
                    hadConstructor: !1,
                    hadSuperClass: t
                }, i = [], r = this.startNode();
                if (r.body = [], this.expect(5), this.withSmartMixTopicForbiddingContext(()=>{
                    for(; !this.match(8);){
                        if (this.eat(13)) {
                            if (i.length > 0) throw this.raise(p.DecoratorSemicolon, this.state.lastTokEndLoc);
                            continue;
                        }
                        if (this.match(26)) {
                            i.push(this.parseDecorator());
                            continue;
                        }
                        let n = this.startNode();
                        i.length && (n.decorators = i, this.resetStartLocationFromNode(n, i[0]), i = []), this.parseClassMember(r, n, s), n.kind === "constructor" && n.decorators && n.decorators.length > 0 && this.raise(p.DecoratorConstructor, n);
                    }
                }), this.state.strict = e, this.next(), i.length) throw this.raise(p.TrailingDecorator, this.state.startLoc);
                return this.classScope.exit(), this.finishNode(r, "ClassBody");
            }
            parseClassMemberFromModifier(t, e) {
                let s = this.parseIdentifier(!0);
                if (this.isClassMethod()) {
                    let i = e;
                    return i.kind = "method", i.computed = !1, i.key = s, i.static = !1, this.pushClassMethod(t, i, !1, !1, !1, !1), !0;
                } else if (this.isClassProperty()) {
                    let i = e;
                    return i.computed = !1, i.key = s, i.static = !1, t.body.push(this.parseClassProperty(i)), !0;
                }
                return this.resetPreviousNodeTrailingComments(s), !1;
            }
            parseClassMember(t, e, s) {
                let i = this.isContextual(106);
                if (i) {
                    if (this.parseClassMemberFromModifier(t, e)) return;
                    if (this.eat(5)) {
                        this.parseClassStaticBlock(t, e);
                        return;
                    }
                }
                this.parseClassMemberWithIsStatic(t, e, s, i);
            }
            parseClassMemberWithIsStatic(t, e, s, i) {
                let r = e, n = e, o = e, h = e, l = e, c = r, u = r;
                if (e.static = i, this.parsePropertyNamePrefixOperator(e), this.eat(55)) {
                    c.kind = "method";
                    let C = this.match(138);
                    if (this.parseClassElementName(c), C) {
                        this.pushClassPrivateMethod(t, n, !0, !1);
                        return;
                    }
                    this.isNonstaticConstructor(r) && this.raise(p.ConstructorIsGenerator, r.key), this.pushClassMethod(t, r, !0, !1, !1, !1);
                    return;
                }
                let f = S(this.state.type) && !this.state.containsEsc, d = this.match(138), y = this.parseClassElementName(e), I = this.state.startLoc;
                if (this.parsePostMemberNameModifiers(u), this.isClassMethod()) {
                    if (c.kind = "method", d) {
                        this.pushClassPrivateMethod(t, n, !1, !1);
                        return;
                    }
                    let C = this.isNonstaticConstructor(r), E = !1;
                    C && (r.kind = "constructor", s.hadConstructor && !this.hasPlugin("typescript") && this.raise(p.DuplicateConstructor, y), C && this.hasPlugin("typescript") && e.override && this.raise(p.OverrideOnConstructor, y), s.hadConstructor = !0, E = s.hadSuperClass), this.pushClassMethod(t, r, !1, !1, C, E);
                } else if (this.isClassProperty()) d ? this.pushClassPrivateProperty(t, h) : this.pushClassProperty(t, o);
                else if (f && y.name === "async" && !this.isLineTerminator()) {
                    this.resetPreviousNodeTrailingComments(y);
                    let C = this.eat(55);
                    u.optional && this.unexpected(I), c.kind = "method";
                    let E = this.match(138);
                    this.parseClassElementName(c), this.parsePostMemberNameModifiers(u), E ? this.pushClassPrivateMethod(t, n, C, !0) : (this.isNonstaticConstructor(r) && this.raise(p.ConstructorIsAsync, r.key), this.pushClassMethod(t, r, C, !0, !1, !1));
                } else if (f && (y.name === "get" || y.name === "set") && !(this.match(55) && this.isLineTerminator())) {
                    this.resetPreviousNodeTrailingComments(y), c.kind = y.name;
                    let C = this.match(138);
                    this.parseClassElementName(r), C ? this.pushClassPrivateMethod(t, n, !1, !1) : (this.isNonstaticConstructor(r) && this.raise(p.ConstructorIsAccessor, r.key), this.pushClassMethod(t, r, !1, !1, !1, !1)), this.checkGetterSetterParams(r);
                } else if (f && y.name === "accessor" && !this.isLineTerminator()) {
                    this.expectPlugin("decoratorAutoAccessors"), this.resetPreviousNodeTrailingComments(y);
                    let C = this.match(138);
                    this.parseClassElementName(o), this.pushClassAccessorProperty(t, l, C);
                } else this.isLineTerminator() ? d ? this.pushClassPrivateProperty(t, h) : this.pushClassProperty(t, o) : this.unexpected();
            }
            parseClassElementName(t) {
                let { type: e, value: s } = this.state;
                if ((e === 132 || e === 133) && t.static && s === "prototype" && this.raise(p.StaticPrototype, this.state.startLoc), e === 138) {
                    s === "constructor" && this.raise(p.ConstructorClassPrivateField, this.state.startLoc);
                    let i = this.parsePrivateName();
                    return t.key = i, i;
                }
                return this.parsePropertyName(t);
            }
            parseClassStaticBlock(t, e) {
                var s;
                this.scope.enter(208);
                let i = this.state.labels;
                this.state.labels = [], this.prodParam.enter(0);
                let r = e.body = [];
                this.parseBlockOrModuleBlockBody(r, void 0, !1, 8), this.prodParam.exit(), this.scope.exit(), this.state.labels = i, t.body.push(this.finishNode(e, "StaticBlock")), (s = e.decorators) != null && s.length && this.raise(p.DecoratorStaticBlock, e);
            }
            pushClassProperty(t, e) {
                !e.computed && (e.key.name === "constructor" || e.key.value === "constructor") && this.raise(p.ConstructorClassField, e.key), t.body.push(this.parseClassProperty(e));
            }
            pushClassPrivateProperty(t, e) {
                let s = this.parseClassPrivateProperty(e);
                t.body.push(s), this.classScope.declarePrivateName(this.getPrivateNameSV(s.key), 0, s.key.loc.start);
            }
            pushClassAccessorProperty(t, e, s) {
                if (!s && !e.computed) {
                    let r = e.key;
                    (r.name === "constructor" || r.value === "constructor") && this.raise(p.ConstructorClassField, r);
                }
                let i = this.parseClassAccessorProperty(e);
                t.body.push(i), s && this.classScope.declarePrivateName(this.getPrivateNameSV(i.key), 0, i.key.loc.start);
            }
            pushClassMethod(t, e, s, i, r, n) {
                t.body.push(this.parseMethod(e, s, i, r, n, "ClassMethod", !0));
            }
            pushClassPrivateMethod(t, e, s, i) {
                let r = this.parseMethod(e, s, i, !1, !1, "ClassPrivateMethod", !0);
                t.body.push(r);
                let n = r.kind === "get" ? r.static ? 6 : 2 : r.kind === "set" ? r.static ? 5 : 1 : 0;
                this.declareClassPrivateMethodInScope(r, n);
            }
            declareClassPrivateMethodInScope(t, e) {
                this.classScope.declarePrivateName(this.getPrivateNameSV(t.key), e, t.key.loc.start);
            }
            parsePostMemberNameModifiers(t) {}
            parseClassPrivateProperty(t) {
                return this.parseInitializer(t), this.semicolon(), this.finishNode(t, "ClassPrivateProperty");
            }
            parseClassProperty(t) {
                return this.parseInitializer(t), this.semicolon(), this.finishNode(t, "ClassProperty");
            }
            parseClassAccessorProperty(t) {
                return this.parseInitializer(t), this.semicolon(), this.finishNode(t, "ClassAccessorProperty");
            }
            parseInitializer(t) {
                this.scope.enter(80), this.expressionScope.enter(os()), this.prodParam.enter(0), t.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null, this.expressionScope.exit(), this.prodParam.exit(), this.scope.exit();
            }
            parseClassId(t, e, s, i = 8331) {
                if (S(this.state.type)) t.id = this.parseIdentifier(), e && this.declareNameFromIdentifier(t.id, i);
                else if (s || !e) t.id = null;
                else throw this.raise(p.MissingClassName, this.state.startLoc);
            }
            parseClassSuper(t) {
                t.superClass = this.eat(81) ? this.parseExprSubscripts() : null;
            }
            parseExport(t, e) {
                let s = this.parseMaybeImportPhase(t, !0), i = this.maybeParseExportDefaultSpecifier(t, s), r = !i || this.eat(12), n = r && this.eatExportStar(t), o = n && this.maybeParseExportNamespaceSpecifier(t), h = r && (!o || this.eat(12)), l = i || n;
                if (n && !o) {
                    if (i && this.unexpected(), e) throw this.raise(p.UnsupportedDecoratorExport, t);
                    return this.parseExportFrom(t, !0), this.finishNode(t, "ExportAllDeclaration");
                }
                let c = this.maybeParseExportNamedSpecifiers(t);
                i && r && !n && !c && this.unexpected(null, 5), o && h && this.unexpected(null, 98);
                let u;
                if (l || c) {
                    if (u = !1, e) throw this.raise(p.UnsupportedDecoratorExport, t);
                    this.parseExportFrom(t, l);
                } else u = this.maybeParseExportDeclaration(t);
                if (l || c || u) {
                    var f;
                    let d = t;
                    if (this.checkExport(d, !0, !1, !!d.source), ((f = d.declaration) == null ? void 0 : f.type) === "ClassDeclaration") this.maybeTakeDecorators(e, d.declaration, d);
                    else if (e) throw this.raise(p.UnsupportedDecoratorExport, t);
                    return this.finishNode(d, "ExportNamedDeclaration");
                }
                if (this.eat(65)) {
                    let d = t, y = this.parseExportDefaultExpression();
                    if (d.declaration = y, y.type === "ClassDeclaration") this.maybeTakeDecorators(e, y, d);
                    else if (e) throw this.raise(p.UnsupportedDecoratorExport, t);
                    return this.checkExport(d, !0, !0), this.finishNode(d, "ExportDefaultDeclaration");
                }
                this.unexpected(null, 5);
            }
            eatExportStar(t) {
                return this.eat(55);
            }
            maybeParseExportDefaultSpecifier(t, e) {
                if (e || this.isExportDefaultSpecifier()) {
                    this.expectPlugin("exportDefaultFrom", e == null ? void 0 : e.loc.start);
                    let s = e || this.parseIdentifier(!0), i = this.startNodeAtNode(s);
                    return i.exported = s, t.specifiers = [
                        this.finishNode(i, "ExportDefaultSpecifier")
                    ], !0;
                }
                return !1;
            }
            maybeParseExportNamespaceSpecifier(t) {
                if (this.isContextual(93)) {
                    t.specifiers || (t.specifiers = []);
                    let e = this.startNodeAt(this.state.lastTokStartLoc);
                    return this.next(), e.exported = this.parseModuleExportName(), t.specifiers.push(this.finishNode(e, "ExportNamespaceSpecifier")), !0;
                }
                return !1;
            }
            maybeParseExportNamedSpecifiers(t) {
                if (this.match(5)) {
                    t.specifiers || (t.specifiers = []);
                    let e = t.exportKind === "type";
                    return t.specifiers.push(...this.parseExportSpecifiers(e)), t.source = null, t.declaration = null, this.hasPlugin("importAssertions") && (t.assertions = []), !0;
                }
                return !1;
            }
            maybeParseExportDeclaration(t) {
                return this.shouldParseExportDeclaration() ? (t.specifiers = [], t.source = null, this.hasPlugin("importAssertions") && (t.assertions = []), t.declaration = this.parseExportDeclaration(t), !0) : !1;
            }
            isAsyncFunction() {
                if (!this.isContextual(95)) return !1;
                let t = this.nextTokenInLineStart();
                return this.isUnparsedContextual(t, "function");
            }
            parseExportDefaultExpression() {
                let t = this.startNode();
                if (this.match(68)) return this.next(), this.parseFunction(t, 5);
                if (this.isAsyncFunction()) return this.next(), this.next(), this.parseFunction(t, 13);
                if (this.match(80)) return this.parseClass(t, !0, !0);
                if (this.match(26)) return this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport") === !0 && this.raise(p.DecoratorBeforeExport, this.state.startLoc), this.parseClass(this.maybeTakeDecorators(this.parseDecorators(!1), this.startNode()), !0, !0);
                if (this.match(75) || this.match(74) || this.isLet()) throw this.raise(p.UnsupportedDefaultExport, this.state.startLoc);
                let e = this.parseMaybeAssignAllowIn();
                return this.semicolon(), e;
            }
            parseExportDeclaration(t) {
                return this.match(80) ? this.parseClass(this.startNode(), !0, !1) : this.parseStatementListItem();
            }
            isExportDefaultSpecifier() {
                let { type: t } = this.state;
                if (S(t)) {
                    if (t === 95 && !this.state.containsEsc || t === 100) return !1;
                    if ((t === 130 || t === 129) && !this.state.containsEsc) {
                        let { type: i } = this.lookahead();
                        if (S(i) && i !== 98 || i === 5) return this.expectOnePlugin([
                            "flow",
                            "typescript"
                        ]), !1;
                    }
                } else if (!this.match(65)) return !1;
                let e = this.nextTokenStart(), s = this.isUnparsedContextual(e, "from");
                if (this.input.charCodeAt(e) === 44 || S(this.state.type) && s) return !0;
                if (this.match(65) && s) {
                    let i = this.input.charCodeAt(this.nextTokenStartSince(e + 4));
                    return i === 34 || i === 39;
                }
                return !1;
            }
            parseExportFrom(t, e) {
                this.eatContextual(98) ? (t.source = this.parseImportSource(), this.checkExport(t), this.maybeParseImportAttributes(t), this.checkJSONModuleImport(t)) : e && this.unexpected(), this.semicolon();
            }
            shouldParseExportDeclaration() {
                let { type: t } = this.state;
                return t === 26 && (this.expectOnePlugin([
                    "decorators",
                    "decorators-legacy"
                ]), this.hasPlugin("decorators")) ? (this.getPluginOption("decorators", "decoratorsBeforeExport") === !0 && this.raise(p.DecoratorBeforeExport, this.state.startLoc), !0) : t === 74 || t === 75 || t === 68 || t === 80 || this.isLet() || this.isAsyncFunction();
            }
            checkExport(t, e, s, i) {
                if (e) {
                    var r;
                    if (s) {
                        if (this.checkDuplicateExports(t, "default"), this.hasPlugin("exportDefaultFrom")) {
                            var n;
                            let o = t.declaration;
                            o.type === "Identifier" && o.name === "from" && o.end - o.start === 4 && !((n = o.extra) != null && n.parenthesized) && this.raise(p.ExportDefaultFromAsIdentifier, o);
                        }
                    } else if ((r = t.specifiers) != null && r.length) for (let o of t.specifiers){
                        let { exported: h } = o, l = h.type === "Identifier" ? h.name : h.value;
                        if (this.checkDuplicateExports(o, l), !i && o.local) {
                            let { local: c } = o;
                            c.type !== "Identifier" ? this.raise(p.ExportBindingIsString, o, {
                                localName: c.value,
                                exportName: l
                            }) : (this.checkReservedWord(c.name, c.loc.start, !0, !1), this.scope.checkLocalExport(c));
                        }
                    }
                    else if (t.declaration) {
                        if (t.declaration.type === "FunctionDeclaration" || t.declaration.type === "ClassDeclaration") {
                            let o = t.declaration.id;
                            if (!o) throw new Error("Assertion failure");
                            this.checkDuplicateExports(t, o.name);
                        } else if (t.declaration.type === "VariableDeclaration") for (let o of t.declaration.declarations)this.checkDeclaration(o.id);
                    }
                }
            }
            checkDeclaration(t) {
                if (t.type === "Identifier") this.checkDuplicateExports(t, t.name);
                else if (t.type === "ObjectPattern") for (let e of t.properties)this.checkDeclaration(e);
                else if (t.type === "ArrayPattern") for (let e of t.elements)e && this.checkDeclaration(e);
                else t.type === "ObjectProperty" ? this.checkDeclaration(t.value) : t.type === "RestElement" ? this.checkDeclaration(t.argument) : t.type === "AssignmentPattern" && this.checkDeclaration(t.left);
            }
            checkDuplicateExports(t, e) {
                this.exportedIdentifiers.has(e) && (e === "default" ? this.raise(p.DuplicateDefaultExport, t) : this.raise(p.DuplicateExport, t, {
                    exportName: e
                })), this.exportedIdentifiers.add(e);
            }
            parseExportSpecifiers(t) {
                let e = [], s = !0;
                for(this.expect(5); !this.eat(8);){
                    if (s) s = !1;
                    else if (this.expect(12), this.eat(8)) break;
                    let i = this.isContextual(130), r = this.match(133), n = this.startNode();
                    n.local = this.parseModuleExportName(), e.push(this.parseExportSpecifier(n, r, t, i));
                }
                return e;
            }
            parseExportSpecifier(t, e, s, i) {
                return this.eatContextual(93) ? t.exported = this.parseModuleExportName() : e ? t.exported = Vi(t.local) : t.exported || (t.exported = V(t.local)), this.finishNode(t, "ExportSpecifier");
            }
            parseModuleExportName() {
                if (this.match(133)) {
                    let t = this.parseStringLiteral(this.state.value), e = t.value.match(pr);
                    return e && this.raise(p.ModuleExportNameHasLoneSurrogate, t, {
                        surrogateCharCode: e[0].charCodeAt(0)
                    }), t;
                }
                return this.parseIdentifier(!0);
            }
            isJSONModuleImport(t) {
                return t.assertions != null ? t.assertions.some(({ key: e, value: s })=>s.value === "json" && (e.type === "Identifier" ? e.name === "type" : e.value === "type")) : !1;
            }
            checkImportReflection(t) {
                let { specifiers: e } = t, s = e.length === 1 ? e[0].type : null;
                if (t.phase === "source") s !== "ImportDefaultSpecifier" && this.raise(p.SourcePhaseImportRequiresDefault, e[0].loc.start);
                else if (t.phase === "defer") s !== "ImportNamespaceSpecifier" && this.raise(p.DeferImportRequiresNamespace, e[0].loc.start);
                else if (t.module) {
                    var i;
                    s !== "ImportDefaultSpecifier" && this.raise(p.ImportReflectionNotBinding, e[0].loc.start), ((i = t.assertions) == null ? void 0 : i.length) > 0 && this.raise(p.ImportReflectionHasAssertion, e[0].loc.start);
                }
            }
            checkJSONModuleImport(t) {
                if (this.isJSONModuleImport(t) && t.type !== "ExportAllDeclaration") {
                    let { specifiers: e } = t;
                    if (e != null) {
                        let s = e.find((i)=>{
                            let r;
                            if (i.type === "ExportSpecifier" ? r = i.local : i.type === "ImportSpecifier" && (r = i.imported), r !== void 0) return r.type === "Identifier" ? r.name !== "default" : r.value !== "default";
                        });
                        s !== void 0 && this.raise(p.ImportJSONBindingNotDefault, s.loc.start);
                    }
                }
            }
            isPotentialImportPhase(t) {
                return t ? !1 : this.isContextual(105) || this.isContextual(97) || this.isContextual(127);
            }
            applyImportPhase(t, e, s, i) {
                e || (s === "module" ? (this.expectPlugin("importReflection", i), t.module = !0) : this.hasPlugin("importReflection") && (t.module = !1), s === "source" ? (this.expectPlugin("sourcePhaseImports", i), t.phase = "source") : s === "defer" ? (this.expectPlugin("deferredImportEvaluation", i), t.phase = "defer") : this.hasPlugin("sourcePhaseImports") && (t.phase = null));
            }
            parseMaybeImportPhase(t, e) {
                if (!this.isPotentialImportPhase(e)) return this.applyImportPhase(t, e, null), null;
                let s = this.parseIdentifier(!0), { type: i } = this.state;
                return (M(i) ? i !== 98 || this.lookaheadCharCode() === 102 : i !== 12) ? (this.resetPreviousIdentifierLeadingComments(s), this.applyImportPhase(t, e, s.name, s.loc.start), null) : (this.applyImportPhase(t, e, null), s);
            }
            isPrecedingIdImportPhase(t) {
                let { type: e } = this.state;
                return S(e) ? e !== 98 || this.lookaheadCharCode() === 102 : e !== 12;
            }
            parseImport(t) {
                return this.match(133) ? this.parseImportSourceAndAttributes(t) : this.parseImportSpecifiersAndAfter(t, this.parseMaybeImportPhase(t, !1));
            }
            parseImportSpecifiersAndAfter(t, e) {
                t.specifiers = [];
                let i = !this.maybeParseDefaultImportSpecifier(t, e) || this.eat(12), r = i && this.maybeParseStarImportSpecifier(t);
                return i && !r && this.parseNamedImportSpecifiers(t), this.expectContextual(98), this.parseImportSourceAndAttributes(t);
            }
            parseImportSourceAndAttributes(t) {
                var e;
                return (e = t.specifiers) != null || (t.specifiers = []), t.source = this.parseImportSource(), this.maybeParseImportAttributes(t), this.checkImportReflection(t), this.checkJSONModuleImport(t), this.semicolon(), this.finishNode(t, "ImportDeclaration");
            }
            parseImportSource() {
                return this.match(133) || this.unexpected(), this.parseExprAtom();
            }
            parseImportSpecifierLocal(t, e, s) {
                e.local = this.parseIdentifier(), t.specifiers.push(this.finishImportSpecifier(e, s));
            }
            finishImportSpecifier(t, e, s = 8201) {
                return this.checkLVal(t.local, {
                    in: {
                        type: e
                    },
                    binding: s
                }), this.finishNode(t, e);
            }
            parseImportAttributes() {
                this.expect(5);
                let t = [], e = new Set;
                do {
                    if (this.match(8)) break;
                    let s = this.startNode(), i = this.state.value;
                    if (e.has(i) && this.raise(p.ModuleAttributesWithDuplicateKeys, this.state.startLoc, {
                        key: i
                    }), e.add(i), this.match(133) ? s.key = this.parseStringLiteral(i) : s.key = this.parseIdentifier(!0), this.expect(14), !this.match(133)) throw this.raise(p.ModuleAttributeInvalidValue, this.state.startLoc);
                    s.value = this.parseStringLiteral(this.state.value), t.push(this.finishNode(s, "ImportAttribute"));
                }while (this.eat(12));
                return this.expect(8), t;
            }
            parseModuleAttributes() {
                let t = [], e = new Set;
                do {
                    let s = this.startNode();
                    if (s.key = this.parseIdentifier(!0), s.key.name !== "type" && this.raise(p.ModuleAttributeDifferentFromType, s.key), e.has(s.key.name) && this.raise(p.ModuleAttributesWithDuplicateKeys, s.key, {
                        key: s.key.name
                    }), e.add(s.key.name), this.expect(14), !this.match(133)) throw this.raise(p.ModuleAttributeInvalidValue, this.state.startLoc);
                    s.value = this.parseStringLiteral(this.state.value), t.push(this.finishNode(s, "ImportAttribute"));
                }while (this.eat(12));
                return t;
            }
            maybeParseImportAttributes(t) {
                let e, s = !1;
                if (this.match(76)) {
                    if (this.hasPrecedingLineBreak() && this.lookaheadCharCode() === 40) return;
                    this.next(), this.hasPlugin("moduleAttributes") ? e = this.parseModuleAttributes() : (this.expectImportAttributesPlugin(), e = this.parseImportAttributes()), s = !0;
                } else if (this.isContextual(94) && !this.hasPrecedingLineBreak()) this.hasPlugin("importAttributes") ? (this.getPluginOption("importAttributes", "deprecatedAssertSyntax") !== !0 && this.raise(p.ImportAttributesUseAssert, this.state.startLoc), this.addExtra(t, "deprecatedAssertSyntax", !0)) : this.expectOnePlugin([
                    "importAttributes",
                    "importAssertions"
                ]), this.next(), e = this.parseImportAttributes();
                else if (this.hasPlugin("importAttributes") || this.hasPlugin("importAssertions")) e = [];
                else if (this.hasPlugin("moduleAttributes")) e = [];
                else return;
                !s && this.hasPlugin("importAssertions") ? t.assertions = e : t.attributes = e;
            }
            maybeParseDefaultImportSpecifier(t, e) {
                if (e) {
                    let s = this.startNodeAtNode(e);
                    return s.local = e, t.specifiers.push(this.finishImportSpecifier(s, "ImportDefaultSpecifier")), !0;
                } else if (M(this.state.type)) return this.parseImportSpecifierLocal(t, this.startNode(), "ImportDefaultSpecifier"), !0;
                return !1;
            }
            maybeParseStarImportSpecifier(t) {
                if (this.match(55)) {
                    let e = this.startNode();
                    return this.next(), this.expectContextual(93), this.parseImportSpecifierLocal(t, e, "ImportNamespaceSpecifier"), !0;
                }
                return !1;
            }
            parseNamedImportSpecifiers(t) {
                let e = !0;
                for(this.expect(5); !this.eat(8);){
                    if (e) e = !1;
                    else {
                        if (this.eat(14)) throw this.raise(p.DestructureNamedImport, this.state.startLoc);
                        if (this.expect(12), this.eat(8)) break;
                    }
                    let s = this.startNode(), i = this.match(133), r = this.isContextual(130);
                    s.imported = this.parseModuleExportName();
                    let n = this.parseImportSpecifier(s, i, t.importKind === "type" || t.importKind === "typeof", r, void 0);
                    t.specifiers.push(n);
                }
            }
            parseImportSpecifier(t, e, s, i, r) {
                if (this.eatContextual(93)) t.local = this.parseIdentifier();
                else {
                    let { imported: n } = t;
                    if (e) throw this.raise(p.ImportBindingIsString, t, {
                        importName: n.value
                    });
                    this.checkReservedWord(n.name, t.loc.start, !0, !0), t.local || (t.local = V(n));
                }
                return this.finishImportSpecifier(t, "ImportSpecifier", r);
            }
            isThisParam(t) {
                return t.type === "Identifier" && t.name === "this";
            }
        }, Oe = class extends ft {
            constructor(t, e){
                t = lr(t), super(t, e), this.options = t, this.initializeScopes(), this.plugins = fr(this.options.plugins), this.filename = t.sourceFilename;
            }
            getScopeHandler() {
                return ye;
            }
            parse() {
                this.enterInitialScopes();
                let t = this.startNode(), e = this.startNode();
                return this.nextToken(), t.errors = null, this.parseTopLevel(t, e), t.errors = this.state.errors, t.comments.length = this.state.commentsLen, t;
            }
        };
        function fr(a) {
            let t = new Map;
            for (let e of a){
                let [s, i] = Array.isArray(e) ? e : [
                    e,
                    {}
                ];
                t.has(s) || t.set(s, i || {});
            }
            return t;
        }
        function dr(a, t) {
            var e;
            if (((e = t) == null ? void 0 : e.sourceType) === "unambiguous") {
                t = Object.assign({}, t);
                try {
                    t.sourceType = "module";
                    let s = ue(t, a), i = s.parse();
                    if (s.sawUnambiguousESM) return i;
                    if (s.ambiguousScriptDifferentAst) try {
                        return t.sourceType = "script", ue(t, a).parse();
                    } catch  {}
                    else i.program.sourceType = "script";
                    return i;
                } catch (s) {
                    try {
                        return t.sourceType = "script", ue(t, a).parse();
                    } catch  {}
                    throw s;
                }
            } else return ue(t, a).parse();
        }
        function mr(a, t) {
            let e = ue(t, a);
            return e.options.strictMode && (e.state.strict = !0), e.getExpression();
        }
        function yr(a) {
            let t = {};
            for (let e of Object.keys(a))t[e] = _(a[e]);
            return t;
        }
        var xr = yr(pi);
        function ue(a, t) {
            let e = Oe;
            return a != null && a.plugins && (or(a.plugins), e = Pr(a.plugins)), new e(a, t);
        }
        var Jt = {};
        function Pr(a) {
            let t = hr.filter((i)=>N(a, i)), e = t.join("/"), s = Jt[e];
            if (!s) {
                s = Oe;
                for (let i of t)s = ps[i](s);
                Jt[e] = s;
            }
            return s;
        }
        Pe.parse = dr;
        Pe.parseExpression = mr;
        Pe.tokTypes = xr;
    });
    var Ds = Lt((G)=>{
        "use strict";
        Object.defineProperty(G, "__esModule", {
            value: !0
        });
        G.extract = Vr;
        G.parse = zr;
        G.parseWithComments = Ls;
        G.print = Kr;
        G.strip = qr;
        var Rr = /\*\/$/, _r = /^\/\*\*?/, ks = /^\s*(\/\*\*?(.|\r?\n)*?\*\/)/, Ur = /(^|\s+)\/\/([^\r\n]*)/g, Es = /^(\r?\n)+/, jr = /(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g, Is = /(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g, $r = /(\r?\n|^) *\* ?/g, vs = [];
        function Vr(a) {
            let t = a.match(ks);
            return t ? t[0].trimLeft() : "";
        }
        function qr(a) {
            let t = a.match(ks);
            return t && t[0] ? a.substring(t[0].length) : a;
        }
        function zr(a) {
            return Ls(a).pragmas;
        }
        function Ls(a) {
            let t = `
`;
            a = a.replace(_r, "").replace(Rr, "").replace($r, "$1");
            let e = "";
            for(; e !== a;)e = a, a = a.replace(jr, `${t}$1 $2${t}`);
            a = a.replace(Es, "").trimRight();
            let s = Object.create(null), i = a.replace(Is, "").replace(Es, "").trimRight(), r;
            for(; r = Is.exec(a);){
                let n = r[2].replace(Ur, "");
                typeof s[r[1]] == "string" || Array.isArray(s[r[1]]) ? s[r[1]] = vs.concat(s[r[1]], n) : s[r[1]] = n;
            }
            return {
                comments: i,
                pragmas: s
            };
        }
        function Kr({ comments: a = "", pragmas: t = {} }) {
            let e = `
`, s = "/**", i = " *", r = " */", n = Object.keys(t), o = n.flatMap((l)=>Ns(l, t[l])).map((l)=>`${i} ${l}${e}`).join("");
            if (!a) {
                if (n.length === 0) return "";
                if (n.length === 1 && !Array.isArray(t[n[0]])) {
                    let l = t[n[0]];
                    return `${s} ${Ns(n[0], l)[0]}${r}`;
                }
            }
            let h = a.split(e).map((l)=>`${i} ${l}`).join(e) + e;
            return s + e + (a ? h : "") + (a && n.length ? i + e : "") + o + r;
        }
        function Ns(a, t) {
            return vs.concat(t).map((e)=>`@${a} ${e}`.trim());
        }
    });
    var na = {};
    Qs(na, {
        parsers: ()=>aa
    });
    var $e = Ve(wt(), 1);
    function Fe(a) {
        return (t, e, s)=>{
            let i = !!(s != null && s.backwards);
            if (e === !1) return !1;
            let { length: r } = t, n = e;
            for(; n >= 0 && n < r;){
                let o = t.charAt(n);
                if (a instanceof RegExp) {
                    if (!a.test(o)) return n;
                } else if (!a.includes(o)) return n;
                i ? n-- : n++;
            }
            return n === -1 || n === r ? n : !1;
        };
    }
    var ma = Fe(/\s/), us = Fe(" 	"), ya = Fe(",; 	"), fs = Fe(/[^\n\r]/);
    function gr(a, t) {
        if (t === !1) return !1;
        if (a.charAt(t) === "/" && a.charAt(t + 1) === "*") {
            for(let e = t + 2; e < a.length; ++e)if (a.charAt(e) === "*" && a.charAt(e + 1) === "/") return e + 2;
        }
        return t;
    }
    var ds = gr;
    function Tr(a, t, e) {
        let s = !!(e != null && e.backwards);
        if (t === !1) return !1;
        let i = a.charAt(t);
        if (s) {
            if (a.charAt(t - 1) === "\r" && i === `
`) return t - 2;
            if (i === `
` || i === "\r" || i === "\u2028" || i === "\u2029") return t - 1;
        } else {
            if (i === "\r" && a.charAt(t + 1) === `
`) return t + 2;
            if (i === `
` || i === "\r" || i === "\u2028" || i === "\u2029") return t + 1;
        }
        return t;
    }
    var ms = Tr;
    function br(a, t) {
        return t === !1 ? !1 : a.charAt(t) === "/" && a.charAt(t + 1) === "/" ? fs(a, t) : t;
    }
    var ys = br;
    function Ar(a, t) {
        let e = null, s = t;
        for(; s !== e;)e = s, s = us(a, s), s = ds(a, s), s = ys(a, s), s = ms(a, s);
        return s;
    }
    var xs = Ar;
    function Sr(a) {
        let t = [];
        for (let e of a)try {
            return e();
        } catch (s) {
            t.push(s);
        }
        throw Object.assign(new Error("All combinations failed"), {
            errors: t
        });
    }
    var Ps = Sr;
    function wr(a) {
        if (!a.startsWith("#!")) return "";
        let t = a.indexOf(`
`);
        return t === -1 ? a : a.slice(0, t);
    }
    var Be = wr;
    var Cr = (a, t, e)=>{
        if (!(a && t == null)) return Array.isArray(t) || typeof t == "string" ? t[e < 0 ? t.length + e : e] : t.at(e);
    }, Ct = Cr;
    function Er(a) {
        return Array.isArray(a) && a.length > 0;
    }
    var ge = Er;
    function D(a) {
        var s, i, r;
        let t = ((s = a.range) == null ? void 0 : s[0]) ?? a.start, e = (r = ((i = a.declaration) == null ? void 0 : i.decorators) ?? a.decorators) == null ? void 0 : r[0];
        return e ? Math.min(D(e), t) : t;
    }
    function B(a) {
        var t;
        return ((t = a.range) == null ? void 0 : t[1]) ?? a.end;
    }
    function Ir(a) {
        let t = new Set(a);
        return (e)=>t.has(e == null ? void 0 : e.type);
    }
    var gs = Ir;
    var Nr = gs([
        "Block",
        "CommentBlock",
        "MultiLine"
    ]), Te = Nr;
    function kr(a) {
        let t = `*${a.value}*`.split(`
`);
        return t.length > 1 && t.every((e)=>e.trimStart()[0] === "*");
    }
    var Et = kr;
    function vr(a) {
        return Te(a) && a.value[0] === "*" && /@(?:type|satisfies)\b/.test(a.value);
    }
    var Ts = vr;
    var be = null;
    function Ae(a) {
        if (be !== null && typeof be.property) {
            let t = be;
            return be = Ae.prototype = null, t;
        }
        return be = Ae.prototype = a ?? Object.create(null), new Ae;
    }
    var Lr = 10;
    for(let a = 0; a <= Lr; a++)Ae();
    function It(a) {
        return Ae(a);
    }
    function Dr(a, t = "type") {
        It(a);
        function e(s) {
            let i = s[t], r = a[i];
            if (!Array.isArray(r)) throw Object.assign(new Error(`Missing visitor keys for '${i}'.`), {
                node: s
            });
            return r;
        }
        return e;
    }
    var bs = Dr;
    var As = {
        ArrayExpression: [
            "elements"
        ],
        AssignmentExpression: [
            "left",
            "right"
        ],
        BinaryExpression: [
            "left",
            "right"
        ],
        InterpreterDirective: [],
        Directive: [
            "value"
        ],
        DirectiveLiteral: [],
        BlockStatement: [
            "directives",
            "body"
        ],
        BreakStatement: [
            "label"
        ],
        CallExpression: [
            "callee",
            "arguments",
            "typeParameters",
            "typeArguments"
        ],
        CatchClause: [
            "param",
            "body"
        ],
        ConditionalExpression: [
            "test",
            "consequent",
            "alternate"
        ],
        ContinueStatement: [
            "label"
        ],
        DebuggerStatement: [],
        DoWhileStatement: [
            "test",
            "body"
        ],
        EmptyStatement: [],
        ExpressionStatement: [
            "expression"
        ],
        File: [
            "program"
        ],
        ForInStatement: [
            "left",
            "right",
            "body"
        ],
        ForStatement: [
            "init",
            "test",
            "update",
            "body"
        ],
        FunctionDeclaration: [
            "id",
            "params",
            "body",
            "returnType",
            "typeParameters",
            "predicate"
        ],
        FunctionExpression: [
            "id",
            "params",
            "body",
            "returnType",
            "typeParameters"
        ],
        Identifier: [
            "typeAnnotation",
            "decorators"
        ],
        IfStatement: [
            "test",
            "consequent",
            "alternate"
        ],
        LabeledStatement: [
            "label",
            "body"
        ],
        StringLiteral: [],
        NumericLiteral: [],
        NullLiteral: [],
        BooleanLiteral: [],
        RegExpLiteral: [],
        LogicalExpression: [
            "left",
            "right"
        ],
        MemberExpression: [
            "object",
            "property"
        ],
        NewExpression: [
            "callee",
            "arguments",
            "typeParameters",
            "typeArguments"
        ],
        Program: [
            "directives",
            "body"
        ],
        ObjectExpression: [
            "properties"
        ],
        ObjectMethod: [
            "key",
            "params",
            "body",
            "decorators",
            "returnType",
            "typeParameters"
        ],
        ObjectProperty: [
            "key",
            "value",
            "decorators"
        ],
        RestElement: [
            "argument",
            "typeAnnotation",
            "decorators"
        ],
        ReturnStatement: [
            "argument"
        ],
        SequenceExpression: [
            "expressions"
        ],
        ParenthesizedExpression: [
            "expression"
        ],
        SwitchCase: [
            "test",
            "consequent"
        ],
        SwitchStatement: [
            "discriminant",
            "cases"
        ],
        ThisExpression: [],
        ThrowStatement: [
            "argument"
        ],
        TryStatement: [
            "block",
            "handler",
            "finalizer"
        ],
        UnaryExpression: [
            "argument"
        ],
        UpdateExpression: [
            "argument"
        ],
        VariableDeclaration: [
            "declarations"
        ],
        VariableDeclarator: [
            "id",
            "init"
        ],
        WhileStatement: [
            "test",
            "body"
        ],
        WithStatement: [
            "object",
            "body"
        ],
        AssignmentPattern: [
            "left",
            "right",
            "decorators",
            "typeAnnotation"
        ],
        ArrayPattern: [
            "elements",
            "typeAnnotation",
            "decorators"
        ],
        ArrowFunctionExpression: [
            "params",
            "body",
            "returnType",
            "typeParameters",
            "predicate"
        ],
        ClassBody: [
            "body"
        ],
        ClassExpression: [
            "id",
            "body",
            "superClass",
            "mixins",
            "typeParameters",
            "superTypeParameters",
            "implements",
            "decorators",
            "superTypeArguments"
        ],
        ClassDeclaration: [
            "id",
            "body",
            "superClass",
            "mixins",
            "typeParameters",
            "superTypeParameters",
            "implements",
            "decorators",
            "superTypeArguments"
        ],
        ExportAllDeclaration: [
            "source",
            "attributes",
            "exported"
        ],
        ExportDefaultDeclaration: [
            "declaration"
        ],
        ExportNamedDeclaration: [
            "declaration",
            "specifiers",
            "source",
            "attributes"
        ],
        ExportSpecifier: [
            "local",
            "exported"
        ],
        ForOfStatement: [
            "left",
            "right",
            "body"
        ],
        ImportDeclaration: [
            "specifiers",
            "source",
            "attributes"
        ],
        ImportDefaultSpecifier: [
            "local"
        ],
        ImportNamespaceSpecifier: [
            "local"
        ],
        ImportSpecifier: [
            "local",
            "imported"
        ],
        ImportExpression: [
            "source",
            "options",
            "attributes"
        ],
        MetaProperty: [
            "meta",
            "property"
        ],
        ClassMethod: [
            "key",
            "params",
            "body",
            "decorators",
            "returnType",
            "typeParameters"
        ],
        ObjectPattern: [
            "properties",
            "typeAnnotation",
            "decorators"
        ],
        SpreadElement: [
            "argument"
        ],
        Super: [],
        TaggedTemplateExpression: [
            "tag",
            "quasi",
            "typeParameters",
            "typeArguments"
        ],
        TemplateElement: [],
        TemplateLiteral: [
            "quasis",
            "expressions"
        ],
        YieldExpression: [
            "argument"
        ],
        AwaitExpression: [
            "argument"
        ],
        Import: [],
        BigIntLiteral: [],
        ExportNamespaceSpecifier: [
            "exported"
        ],
        OptionalMemberExpression: [
            "object",
            "property"
        ],
        OptionalCallExpression: [
            "callee",
            "arguments",
            "typeParameters",
            "typeArguments"
        ],
        ClassProperty: [
            "key",
            "value",
            "typeAnnotation",
            "decorators",
            "variance"
        ],
        ClassAccessorProperty: [
            "key",
            "value",
            "typeAnnotation",
            "decorators"
        ],
        ClassPrivateProperty: [
            "key",
            "value",
            "decorators",
            "typeAnnotation",
            "variance"
        ],
        ClassPrivateMethod: [
            "key",
            "params",
            "body",
            "decorators",
            "returnType",
            "typeParameters"
        ],
        PrivateName: [
            "id"
        ],
        StaticBlock: [
            "body"
        ],
        AnyTypeAnnotation: [],
        ArrayTypeAnnotation: [
            "elementType"
        ],
        BooleanTypeAnnotation: [],
        BooleanLiteralTypeAnnotation: [],
        NullLiteralTypeAnnotation: [],
        ClassImplements: [
            "id",
            "typeParameters"
        ],
        DeclareClass: [
            "id",
            "typeParameters",
            "extends",
            "mixins",
            "implements",
            "body"
        ],
        DeclareFunction: [
            "id",
            "predicate"
        ],
        DeclareInterface: [
            "id",
            "typeParameters",
            "extends",
            "body"
        ],
        DeclareModule: [
            "id",
            "body"
        ],
        DeclareModuleExports: [
            "typeAnnotation"
        ],
        DeclareTypeAlias: [
            "id",
            "typeParameters",
            "right"
        ],
        DeclareOpaqueType: [
            "id",
            "typeParameters",
            "supertype"
        ],
        DeclareVariable: [
            "id"
        ],
        DeclareExportDeclaration: [
            "declaration",
            "specifiers",
            "source"
        ],
        DeclareExportAllDeclaration: [
            "source"
        ],
        DeclaredPredicate: [
            "value"
        ],
        ExistsTypeAnnotation: [],
        FunctionTypeAnnotation: [
            "typeParameters",
            "params",
            "rest",
            "returnType",
            "this"
        ],
        FunctionTypeParam: [
            "name",
            "typeAnnotation"
        ],
        GenericTypeAnnotation: [
            "id",
            "typeParameters"
        ],
        InferredPredicate: [],
        InterfaceExtends: [
            "id",
            "typeParameters"
        ],
        InterfaceDeclaration: [
            "id",
            "typeParameters",
            "extends",
            "body"
        ],
        InterfaceTypeAnnotation: [
            "extends",
            "body"
        ],
        IntersectionTypeAnnotation: [
            "types"
        ],
        MixedTypeAnnotation: [],
        EmptyTypeAnnotation: [],
        NullableTypeAnnotation: [
            "typeAnnotation"
        ],
        NumberLiteralTypeAnnotation: [],
        NumberTypeAnnotation: [],
        ObjectTypeAnnotation: [
            "properties",
            "indexers",
            "callProperties",
            "internalSlots"
        ],
        ObjectTypeInternalSlot: [
            "id",
            "value",
            "optional",
            "static",
            "method"
        ],
        ObjectTypeCallProperty: [
            "value"
        ],
        ObjectTypeIndexer: [
            "id",
            "key",
            "value",
            "variance"
        ],
        ObjectTypeProperty: [
            "key",
            "value",
            "variance"
        ],
        ObjectTypeSpreadProperty: [
            "argument"
        ],
        OpaqueType: [
            "id",
            "typeParameters",
            "supertype",
            "impltype"
        ],
        QualifiedTypeIdentifier: [
            "id",
            "qualification"
        ],
        StringLiteralTypeAnnotation: [],
        StringTypeAnnotation: [],
        SymbolTypeAnnotation: [],
        ThisTypeAnnotation: [],
        TupleTypeAnnotation: [
            "types",
            "elementTypes"
        ],
        TypeofTypeAnnotation: [
            "argument",
            "typeArguments"
        ],
        TypeAlias: [
            "id",
            "typeParameters",
            "right"
        ],
        TypeAnnotation: [
            "typeAnnotation"
        ],
        TypeCastExpression: [
            "expression",
            "typeAnnotation"
        ],
        TypeParameter: [
            "bound",
            "default",
            "variance"
        ],
        TypeParameterDeclaration: [
            "params"
        ],
        TypeParameterInstantiation: [
            "params"
        ],
        UnionTypeAnnotation: [
            "types"
        ],
        Variance: [],
        VoidTypeAnnotation: [],
        EnumDeclaration: [
            "id",
            "body"
        ],
        EnumBooleanBody: [
            "members"
        ],
        EnumNumberBody: [
            "members"
        ],
        EnumStringBody: [
            "members"
        ],
        EnumSymbolBody: [
            "members"
        ],
        EnumBooleanMember: [
            "id",
            "init"
        ],
        EnumNumberMember: [
            "id",
            "init"
        ],
        EnumStringMember: [
            "id",
            "init"
        ],
        EnumDefaultedMember: [
            "id"
        ],
        IndexedAccessType: [
            "objectType",
            "indexType"
        ],
        OptionalIndexedAccessType: [
            "objectType",
            "indexType"
        ],
        JSXAttribute: [
            "name",
            "value"
        ],
        JSXClosingElement: [
            "name"
        ],
        JSXElement: [
            "openingElement",
            "children",
            "closingElement"
        ],
        JSXEmptyExpression: [],
        JSXExpressionContainer: [
            "expression"
        ],
        JSXSpreadChild: [
            "expression"
        ],
        JSXIdentifier: [],
        JSXMemberExpression: [
            "object",
            "property"
        ],
        JSXNamespacedName: [
            "namespace",
            "name"
        ],
        JSXOpeningElement: [
            "name",
            "attributes",
            "typeArguments",
            "typeParameters"
        ],
        JSXSpreadAttribute: [
            "argument"
        ],
        JSXText: [],
        JSXFragment: [
            "openingFragment",
            "children",
            "closingFragment"
        ],
        JSXOpeningFragment: [],
        JSXClosingFragment: [],
        Noop: [],
        Placeholder: [],
        V8IntrinsicIdentifier: [],
        ArgumentPlaceholder: [],
        BindExpression: [
            "object",
            "callee"
        ],
        ImportAttribute: [
            "key",
            "value"
        ],
        Decorator: [
            "expression"
        ],
        DoExpression: [
            "body"
        ],
        ExportDefaultSpecifier: [
            "exported"
        ],
        RecordExpression: [
            "properties"
        ],
        TupleExpression: [
            "elements"
        ],
        DecimalLiteral: [],
        ModuleExpression: [
            "body"
        ],
        TopicReference: [],
        PipelineTopicExpression: [
            "expression"
        ],
        PipelineBareFunction: [
            "callee"
        ],
        PipelinePrimaryTopicReference: [],
        TSParameterProperty: [
            "parameter",
            "decorators"
        ],
        TSDeclareFunction: [
            "id",
            "typeParameters",
            "params",
            "returnType",
            "body"
        ],
        TSDeclareMethod: [
            "decorators",
            "key",
            "typeParameters",
            "params",
            "returnType"
        ],
        TSQualifiedName: [
            "left",
            "right"
        ],
        TSCallSignatureDeclaration: [
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSConstructSignatureDeclaration: [
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSPropertySignature: [
            "key",
            "typeAnnotation"
        ],
        TSMethodSignature: [
            "key",
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSIndexSignature: [
            "parameters",
            "typeAnnotation"
        ],
        TSAnyKeyword: [],
        TSBooleanKeyword: [],
        TSBigIntKeyword: [],
        TSIntrinsicKeyword: [],
        TSNeverKeyword: [],
        TSNullKeyword: [],
        TSNumberKeyword: [],
        TSObjectKeyword: [],
        TSStringKeyword: [],
        TSSymbolKeyword: [],
        TSUndefinedKeyword: [],
        TSUnknownKeyword: [],
        TSVoidKeyword: [],
        TSThisType: [],
        TSFunctionType: [
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSConstructorType: [
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSTypeReference: [
            "typeName",
            "typeParameters",
            "typeArguments"
        ],
        TSTypePredicate: [
            "parameterName",
            "typeAnnotation"
        ],
        TSTypeQuery: [
            "exprName",
            "typeParameters",
            "typeArguments"
        ],
        TSTypeLiteral: [
            "members"
        ],
        TSArrayType: [
            "elementType"
        ],
        TSTupleType: [
            "elementTypes"
        ],
        TSOptionalType: [
            "typeAnnotation"
        ],
        TSRestType: [
            "typeAnnotation"
        ],
        TSNamedTupleMember: [
            "label",
            "elementType"
        ],
        TSUnionType: [
            "types"
        ],
        TSIntersectionType: [
            "types"
        ],
        TSConditionalType: [
            "checkType",
            "extendsType",
            "trueType",
            "falseType"
        ],
        TSInferType: [
            "typeParameter"
        ],
        TSParenthesizedType: [
            "typeAnnotation"
        ],
        TSTypeOperator: [
            "typeAnnotation"
        ],
        TSIndexedAccessType: [
            "objectType",
            "indexType"
        ],
        TSMappedType: [
            "typeParameter",
            "typeAnnotation",
            "nameType"
        ],
        TSLiteralType: [
            "literal"
        ],
        TSExpressionWithTypeArguments: [
            "expression",
            "typeParameters"
        ],
        TSInterfaceDeclaration: [
            "id",
            "typeParameters",
            "extends",
            "body"
        ],
        TSInterfaceBody: [
            "body"
        ],
        TSTypeAliasDeclaration: [
            "id",
            "typeParameters",
            "typeAnnotation"
        ],
        TSInstantiationExpression: [
            "expression",
            "typeParameters",
            "typeArguments"
        ],
        TSAsExpression: [
            "expression",
            "typeAnnotation"
        ],
        TSSatisfiesExpression: [
            "expression",
            "typeAnnotation"
        ],
        TSTypeAssertion: [
            "typeAnnotation",
            "expression"
        ],
        TSEnumDeclaration: [
            "id",
            "members"
        ],
        TSEnumMember: [
            "id",
            "initializer"
        ],
        TSModuleDeclaration: [
            "id",
            "body"
        ],
        TSModuleBlock: [
            "body"
        ],
        TSImportType: [
            "argument",
            "qualifier",
            "typeParameters",
            "typeArguments"
        ],
        TSImportEqualsDeclaration: [
            "id",
            "moduleReference"
        ],
        TSExternalModuleReference: [
            "expression"
        ],
        TSNonNullExpression: [
            "expression"
        ],
        TSExportAssignment: [
            "expression"
        ],
        TSNamespaceExportDeclaration: [
            "id"
        ],
        TSTypeAnnotation: [
            "typeAnnotation"
        ],
        TSTypeParameterInstantiation: [
            "params"
        ],
        TSTypeParameterDeclaration: [
            "params"
        ],
        TSTypeParameter: [
            "constraint",
            "default",
            "name"
        ],
        ChainExpression: [
            "expression"
        ],
        ExperimentalRestProperty: [
            "argument"
        ],
        ExperimentalSpreadProperty: [
            "argument"
        ],
        Literal: [],
        MethodDefinition: [
            "decorators",
            "key",
            "value"
        ],
        PrivateIdentifier: [],
        Property: [
            "key",
            "value"
        ],
        PropertyDefinition: [
            "decorators",
            "key",
            "typeAnnotation",
            "value",
            "variance"
        ],
        AccessorProperty: [
            "decorators",
            "key",
            "typeAnnotation",
            "value"
        ],
        TSAbstractAccessorProperty: [
            "decorators",
            "key",
            "typeAnnotation"
        ],
        TSAbstractKeyword: [],
        TSAbstractMethodDefinition: [
            "key",
            "value"
        ],
        TSAbstractPropertyDefinition: [
            "decorators",
            "key",
            "typeAnnotation"
        ],
        TSAsyncKeyword: [],
        TSClassImplements: [
            "expression",
            "typeArguments",
            "typeParameters"
        ],
        TSDeclareKeyword: [],
        TSEmptyBodyFunctionExpression: [
            "id",
            "typeParameters",
            "params",
            "returnType"
        ],
        TSExportKeyword: [],
        TSInterfaceHeritage: [
            "expression",
            "typeArguments",
            "typeParameters"
        ],
        TSPrivateKeyword: [],
        TSProtectedKeyword: [],
        TSPublicKeyword: [],
        TSReadonlyKeyword: [],
        TSStaticKeyword: [],
        TSTemplateLiteralType: [
            "quasis",
            "types"
        ],
        AsExpression: [
            "expression",
            "typeAnnotation"
        ],
        BigIntLiteralTypeAnnotation: [],
        BigIntTypeAnnotation: [],
        ConditionalTypeAnnotation: [
            "checkType",
            "extendsType",
            "trueType",
            "falseType"
        ],
        DeclareEnum: [
            "id",
            "body"
        ],
        InferTypeAnnotation: [
            "typeParameter"
        ],
        KeyofTypeAnnotation: [
            "argument"
        ],
        ObjectTypeMappedTypeProperty: [
            "keyTparam",
            "propType",
            "sourceType",
            "variance"
        ],
        QualifiedTypeofIdentifier: [
            "qualification",
            "id"
        ],
        TupleTypeLabeledElement: [
            "label",
            "elementType",
            "variance"
        ],
        TupleTypeSpreadElement: [
            "label",
            "typeAnnotation"
        ],
        TypeOperator: [
            "typeAnnotation"
        ],
        TypePredicate: [
            "parameterName",
            "typeAnnotation",
            "asserts"
        ],
        NGRoot: [
            "node"
        ],
        NGPipeExpression: [
            "left",
            "right",
            "arguments"
        ],
        NGChainedExpression: [
            "expressions"
        ],
        NGEmptyExpression: [],
        NGMicrosyntax: [
            "body"
        ],
        NGMicrosyntaxKey: [],
        NGMicrosyntaxExpression: [
            "expression",
            "alias"
        ],
        NGMicrosyntaxKeyedExpression: [
            "key",
            "expression"
        ],
        NGMicrosyntaxLet: [
            "key",
            "value"
        ],
        NGMicrosyntaxAs: [
            "key",
            "alias"
        ],
        JsExpressionRoot: [
            "node"
        ],
        JsonRoot: [
            "node"
        ],
        TSJSDocAllType: [],
        TSJSDocUnknownType: [],
        TSJSDocNullableType: [
            "typeAnnotation"
        ],
        TSJSDocNonNullableType: [
            "typeAnnotation"
        ],
        NeverTypeAnnotation: [],
        UndefinedTypeAnnotation: [],
        UnknownTypeAnnotation: [],
        AsConstExpression: [
            "expression"
        ],
        SatisfiesExpression: [
            "expression",
            "typeAnnotation"
        ]
    };
    var Mr = bs(As), Ss = Mr;
    function Nt(a, t) {
        if (!(a !== null && typeof a == "object")) return a;
        if (Array.isArray(a)) {
            for(let s = 0; s < a.length; s++)a[s] = Nt(a[s], t);
            return a;
        }
        let e = Ss(a);
        for(let s = 0; s < e.length; s++)a[e[s]] = Nt(a[e[s]], t);
        return t(a) || a;
    }
    var Re = Nt;
    function Or(a, t) {
        let { parser: e, text: s } = t;
        if (a.type === "File" && a.program.interpreter) {
            let { program: { interpreter: i }, comments: r } = a;
            delete a.program.interpreter, r.unshift(i);
        }
        if (e === "babel") {
            let i = new Set;
            a = Re(a, (r)=>{
                var n;
                (n = r.leadingComments) != null && n.some(Ts) && i.add(D(r));
            }), a = Re(a, (r)=>{
                if (r.type === "ParenthesizedExpression") {
                    let { expression: n } = r;
                    if (n.type === "TypeCastExpression") return n.range = [
                        ...r.range
                    ], n;
                    let o = D(r);
                    if (!i.has(o)) return n.extra = {
                        ...n.extra,
                        parenthesized: !0
                    }, n;
                }
            });
        }
        if (a = Re(a, (i)=>{
            var r;
            switch(i.type){
                case "LogicalExpression":
                    if (ws(i)) return kt(i);
                    break;
                case "VariableDeclaration":
                    {
                        let n = Ct(!1, i.declarations, -1);
                        n != null && n.init && s[B(n)] !== ";" && (i.range = [
                            D(i),
                            B(n)
                        ]);
                        break;
                    }
                case "TSParenthesizedType":
                    return i.typeAnnotation;
                case "TSTypeParameter":
                    if (typeof i.name == "string") {
                        let n = D(i);
                        i.name = {
                            type: "Identifier",
                            name: i.name,
                            range: [
                                n,
                                n + i.name.length
                            ]
                        };
                    }
                    break;
                case "TopicReference":
                    a.extra = {
                        ...a.extra,
                        __isUsingHackPipeline: !0
                    };
                    break;
                case "ExportAllDeclaration":
                    if (e === "meriyah" && ((r = i.exported) == null ? void 0 : r.type) === "Identifier") {
                        let { exported: n } = i, o = s.slice(D(n), B(n));
                        (o.startsWith('"') || o.startsWith("'")) && (i.exported = {
                            ...i.exported,
                            type: "Literal",
                            value: i.exported.name,
                            raw: o
                        });
                    }
                    break;
                case "TSUnionType":
                case "TSIntersectionType":
                    if (i.types.length === 1) return i.types[0];
                    break;
            }
        }), ge(a.comments)) {
            let i = Ct(!1, a.comments, -1);
            for(let r = a.comments.length - 2; r >= 0; r--){
                let n = a.comments[r];
                B(n) === D(i) && Te(n) && Te(i) && Et(n) && Et(i) && (a.comments.splice(r + 1, 1), n.value += "*//*" + i.value, n.range = [
                    D(n),
                    B(i)
                ]), i = n;
            }
        }
        return a.type === "Program" && (a.range = [
            0,
            s.length
        ]), a;
    }
    function ws(a) {
        return a.type === "LogicalExpression" && a.right.type === "LogicalExpression" && a.operator === a.right.operator;
    }
    function kt(a) {
        return ws(a) ? kt({
            type: "LogicalExpression",
            operator: a.operator,
            left: kt({
                type: "LogicalExpression",
                operator: a.operator,
                left: a.left,
                right: a.right.left,
                range: [
                    D(a.left),
                    B(a.right.left)
                ]
            }),
            right: a.right.right,
            range: [
                D(a),
                B(a)
            ]
        }) : a;
    }
    var Cs = Or;
    function Fr(a, t) {
        let e = new SyntaxError(a + " (" + t.loc.start.line + ":" + t.loc.start.column + ")");
        return Object.assign(e, t);
    }
    var _e = Fr;
    function Br(a) {
        let { message: t, loc: { line: e, column: s }, reasonCode: i } = a, r = a;
        (i === "MissingPlugin" || i === "MissingOneOfPlugins") && (t = "Unexpected token.", r = void 0);
        let n = ` (${e}:${s})`;
        return t.endsWith(n) && (t = t.slice(0, -n.length)), _e(t, {
            loc: {
                start: {
                    line: e,
                    column: s + 1
                }
            },
            cause: r
        });
    }
    var Ue = Br;
    var re = Ve(Ds(), 1);
    function Hr(a) {
        let t = Be(a);
        t && (a = a.slice(t.length + 1));
        let e = (0, re.extract)(a), { pragmas: s, comments: i } = (0, re.parseWithComments)(e);
        return {
            shebang: t,
            text: a,
            pragmas: s,
            comments: i
        };
    }
    function Ms(a) {
        let { pragmas: t } = Hr(a);
        return Object.prototype.hasOwnProperty.call(t, "prettier") || Object.prototype.hasOwnProperty.call(t, "format");
    }
    function Wr(a) {
        return a = typeof a == "function" ? {
            parse: a
        } : a, {
            astFormat: "estree",
            hasPragma: Ms,
            locStart: D,
            locEnd: B,
            ...a
        };
    }
    var Y = Wr;
    function Jr(a) {
        let { filepath: t } = a;
        if (t) {
            if (t = t.toLowerCase(), t.endsWith(".cjs")) return "script";
            if (t.endsWith(".mjs")) return "module";
        }
    }
    var Os = Jr;
    function Xr(a, t) {
        let { type: e = "JsExpressionRoot", rootMarker: s, text: i } = t, { tokens: r, comments: n } = a;
        return delete a.tokens, delete a.comments, {
            tokens: r,
            comments: n,
            type: e,
            node: a,
            range: [
                0,
                i.length
            ],
            rootMarker: s
        };
    }
    var je = Xr;
    var ae = (a)=>Y(ta(a)), Gr = {
        sourceType: "module",
        allowImportExportEverywhere: !0,
        allowReturnOutsideFunction: !0,
        allowNewTargetOutsideFunction: !0,
        allowSuperOutsideMethod: !0,
        allowUndeclaredExports: !0,
        errorRecovery: !0,
        createParenthesizedExpressions: !0,
        createImportExpressions: !0,
        plugins: [
            "doExpressions",
            "exportDefaultFrom",
            "functionBind",
            "functionSent",
            "throwExpressions",
            "partialApplication",
            "decorators",
            "decimal",
            "moduleBlocks",
            "asyncDoExpressions",
            "regexpUnicodeSets",
            "destructuringPrivate",
            "decoratorAutoAccessors",
            "importReflection",
            "explicitResourceManagement",
            [
                "importAttributes",
                {
                    deprecatedAssertSyntax: !0
                }
            ],
            "sourcePhaseImports",
            "deferredImportEvaluation",
            [
                "optionalChainingAssign",
                {
                    version: "2023-07"
                }
            ]
        ],
        tokens: !0,
        ranges: !0
    }, Yr = [
        "recordAndTuple",
        {
            syntaxType: "hash"
        }
    ], Fs = "v8intrinsic", Bs = [
        [
            "pipelineOperator",
            {
                proposal: "hack",
                topicToken: "%"
            }
        ],
        [
            "pipelineOperator",
            {
                proposal: "minimal"
            }
        ],
        [
            "pipelineOperator",
            {
                proposal: "fsharp"
            }
        ]
    ], R = (a, t = Gr)=>({
            ...t,
            plugins: [
                ...t.plugins,
                ...a
            ]
        }), Qr = /@(?:no)?flow\b/;
    function Zr(a, t) {
        var i;
        if ((i = t.filepath) != null && i.endsWith(".js.flow")) return !0;
        let e = Be(a);
        e && (a = a.slice(e.length));
        let s = xs(a, 0);
        return s !== !1 && (a = a.slice(0, s)), Qr.test(a);
    }
    function ea(a, t, e) {
        let s = a(t, e), i = s.errors.find((r)=>!sa.has(r.reasonCode));
        if (i) throw i;
        return s;
    }
    function ta({ isExpression: a = !1, optionsCombinations: t }) {
        return (e, s = {})=>{
            if ((s.parser === "babel" || s.parser === "__babel_estree") && Zr(e, s)) return s.parser = "babel-flow", Vs.parse(e, s);
            let i = t;
            (s.__babelSourceType ?? Os(s)) === "script" && (i = i.map((l)=>({
                    ...l,
                    sourceType: "script"
                }))), /#[[{]/.test(e) && (i = i.map((l)=>R([
                    Yr
                ], l)));
            let n = /%[A-Z]/.test(e);
            e.includes("|>") ? i = (n ? [
                ...Bs,
                Fs
            ] : Bs).flatMap((c)=>i.map((u)=>R([
                        c
                    ], u))) : n && (i = i.map((l)=>R([
                    Fs
                ], l)));
            let o = a ? $e.parseExpression : $e.parse, h;
            try {
                h = Ps(i.map((l)=>()=>ea(o, e, l)));
            } catch ({ errors: [l] }) {
                throw Ue(l);
            }
            return a && (h = je(h, {
                text: e,
                rootMarker: s.rootMarker
            })), Cs(h, {
                parser: "babel",
                text: e
            });
        };
    }
    var sa = new Set([
        "StrictNumericEscape",
        "StrictWith",
        "StrictOctalLiteral",
        "StrictDelete",
        "StrictEvalArguments",
        "StrictEvalArgumentsBinding",
        "StrictFunction",
        "EmptyTypeArguments",
        "EmptyTypeParameters",
        "ConstructorHasTypeParameters",
        "UnsupportedParameterPropertyKind",
        "DuplicateAccessibilityModifier",
        "DecoratorExportClass",
        "ParamDupe",
        "InvalidDecimal",
        "RestTrailingComma",
        "UnsupportedParameterDecorator",
        "UnterminatedJsxContent",
        "UnexpectedReservedWord",
        "ModuleAttributesWithDuplicateKeys",
        "LineTerminatorBeforeArrow",
        "InvalidEscapeSequenceTemplate",
        "NonAbstractClassHasAbstractMethod",
        "OptionalTypeBeforeRequired",
        "PatternIsOptional",
        "OptionalBindingPattern",
        "DeclareClassFieldHasInitializer",
        "TypeImportCannotSpecifyDefaultAndNamed",
        "DeclareFunctionHasImplementation",
        "ConstructorClassField",
        "VarRedeclaration",
        "InvalidPrivateFieldResolution",
        "DuplicateExport"
    ]), $s = [
        R([
            "jsx"
        ])
    ], Rs = ae({
        optionsCombinations: $s
    }), _s = ae({
        optionsCombinations: [
            R([
                "jsx",
                "typescript"
            ]),
            R([
                "typescript"
            ])
        ]
    }), Us = ae({
        isExpression: !0,
        optionsCombinations: [
            R([
                "jsx"
            ])
        ]
    }), js = ae({
        isExpression: !0,
        optionsCombinations: [
            R([
                "typescript"
            ])
        ]
    }), Vs = ae({
        optionsCombinations: [
            R([
                "jsx",
                [
                    "flow",
                    {
                        all: !0,
                        enums: !0
                    }
                ],
                "flowComments"
            ])
        ]
    }), ia = ae({
        optionsCombinations: $s.map((a)=>R([
                "estree"
            ], a))
    }), qs = {
        babel: Rs,
        "babel-flow": Vs,
        "babel-ts": _s,
        __js_expression: Us,
        __ts_expression: js,
        __vue_expression: Us,
        __vue_ts_expression: js,
        __vue_event_binding: Rs,
        __vue_ts_event_binding: _s,
        __babel_estree: ia
    };
    var zs = Ve(wt(), 1);
    function Ks(a = {}) {
        let { allowComments: t = !0 } = a;
        return function(s) {
            let i;
            try {
                i = (0, zs.parseExpression)(s, {
                    tokens: !0,
                    ranges: !0,
                    attachComment: !1
                });
            } catch (r) {
                throw Ue(r);
            }
            if (!t && ge(i.comments)) throw W(i.comments[0], "Comment");
            return ne(i), je(i, {
                type: "JsonRoot",
                text: s
            });
        };
    }
    function W(a, t) {
        let [e, s] = [
            a.loc.start,
            a.loc.end
        ].map(({ line: i, column: r })=>({
                line: i,
                column: r + 1
            }));
        return _e(`${t} is not allowed in JSON.`, {
            loc: {
                start: e,
                end: s
            }
        });
    }
    function ne(a) {
        switch(a.type){
            case "ArrayExpression":
                for (let t of a.elements)t !== null && ne(t);
                return;
            case "ObjectExpression":
                for (let t of a.properties)ne(t);
                return;
            case "ObjectProperty":
                if (a.computed) throw W(a.key, "Computed key");
                if (a.shorthand) throw W(a.key, "Shorthand property");
                a.key.type !== "Identifier" && ne(a.key), ne(a.value);
                return;
            case "UnaryExpression":
                {
                    let { operator: t, argument: e } = a;
                    if (t !== "+" && t !== "-") throw W(a, `Operator '${a.operator}'`);
                    if (e.type === "NumericLiteral" || e.type === "Identifier" && (e.name === "Infinity" || e.name === "NaN")) return;
                    throw W(e, `Operator '${t}' before '${e.type}'`);
                }
            case "Identifier":
                if (a.name !== "Infinity" && a.name !== "NaN" && a.name !== "undefined") throw W(a, `Identifier '${a.name}'`);
                return;
            case "TemplateLiteral":
                if (ge(a.expressions)) throw W(a.expressions[0], "'TemplateLiteral' with expression");
                for (let t of a.quasis)ne(t);
                return;
            case "NullLiteral":
            case "BooleanLiteral":
            case "NumericLiteral":
            case "StringLiteral":
            case "TemplateElement":
                return;
            default:
                throw W(a, `'${a.type}'`);
        }
    }
    var vt = Ks(), ra = {
        json: Y({
            parse: vt,
            hasPragma () {
                return !0;
            }
        }),
        json5: Y(vt),
        jsonc: Y(vt),
        "json-stringify": Y({
            parse: Ks({
                allowComments: !1
            }),
            astFormat: "estree-json"
        })
    }, Hs = ra;
    var aa = {
        ...qs,
        ...Hs
    };
    return Zs(na);
});

},{}],"eRcOu":[function(require,module,exports) {
(function(f) {
    function e() {
        var i = f();
        return i.default || i;
    }
    var t;
    module.exports = e();
})(function() {
    "use strict";
    var W5 = Object.create;
    var wf = Object.defineProperty;
    var V5 = Object.getOwnPropertyDescriptor;
    var H5 = Object.getOwnPropertyNames;
    var G5 = Object.getPrototypeOf, X5 = Object.prototype.hasOwnProperty;
    var E6 = (e, t)=>()=>(e && (t = e(e = 0)), t);
    var mt = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), $h = (e, t)=>{
        for(var n in t)wf(e, n, {
            get: t[n],
            enumerable: !0
        });
    }, C6 = (e, t, n, a)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let _ of H5(t))!X5.call(e, _) && _ !== n && wf(e, _, {
            get: ()=>t[_],
            enumerable: !(a = V5(t, _)) || a.enumerable
        });
        return e;
    };
    var Ot = (e, t, n)=>(n = e != null ? W5(G5(e)) : {}, C6(t || !e || !e.__esModule ? wf(n, "default", {
            value: e,
            enumerable: !0
        }) : n, e)), Ef = (e)=>C6(wf({}, "__esModule", {
            value: !0
        }), e);
    var Cf = {};
    $h(Cf, {
        default: ()=>Q5
    });
    var $5, Q5, Af = E6(()=>{
        $5 = ()=>()=>{}, Q5 = $5;
    });
    var lt = mt((Iz, D7)=>{
        var Y5 = Object.defineProperty, uv = Object.getOwnPropertyNames, It = (e, t)=>function() {
                return e && (t = (0, e[uv(e)[0]])(e = 0)), t;
            }, K5 = (e, t)=>function() {
                return t || (0, e[uv(e)[0]])((t = {
                    exports: {}
                }).exports, t), t.exports;
            }, _g = (e, t)=>{
            for(var n in t)Y5(e, n, {
                get: t[n],
                enumerable: !0
            });
        }, jd, Xf, ry, Z5 = It({
            "src/compiler/corePublic.ts" () {
                "use strict";
                jd = "5.3", Xf = "5.3.3", ry = ((e)=>(e[e.LessThan = -1] = "LessThan", e[e.EqualTo = 0] = "EqualTo", e[e.GreaterThan = 1] = "GreaterThan", e))(ry || {});
            }
        });
        function eo(e) {
            return e ? e.length : 0;
        }
        function wn(e, t) {
            if (e) for(let n = 0; n < e.length; n++){
                let a = t(e[n], n);
                if (a) return a;
            }
        }
        function e9(e, t) {
            if (e) for(let n = e.length - 1; n >= 0; n--){
                let a = t(e[n], n);
                if (a) return a;
            }
        }
        function cg(e, t) {
            if (e !== void 0) for(let n = 0; n < e.length; n++){
                let a = t(e[n], n);
                if (a !== void 0) return a;
            }
        }
        function t9(e, t) {
            for (let n of e){
                let a = t(n);
                if (a !== void 0) return a;
            }
        }
        function n9(e, t, n) {
            let a = n;
            if (e) {
                let _ = 0;
                for (let p of e)a = t(a, p, _), _++;
            }
            return a;
        }
        function iy(e, t, n) {
            let a = [];
            I.assertEqual(e.length, t.length);
            for(let _ = 0; _ < e.length; _++)a.push(n(e[_], t[_], _));
            return a;
        }
        function r9(e, t) {
            if (e.length <= 1) return e;
            let n = [];
            for(let a = 0, _ = e.length; a < _; a++)a && n.push(t), n.push(e[a]);
            return n;
        }
        function so(e, t) {
            if (e) {
                for(let n = 0; n < e.length; n++)if (!t(e[n], n)) return !1;
            }
            return !0;
        }
        function ir(e, t, n) {
            if (e !== void 0) for(let a = n ?? 0; a < e.length; a++){
                let _ = e[a];
                if (t(_, a)) return _;
            }
        }
        function lg(e, t, n) {
            if (e !== void 0) for(let a = n ?? e.length - 1; a >= 0; a--){
                let _ = e[a];
                if (t(_, a)) return _;
            }
        }
        function ul(e, t, n) {
            if (e === void 0) return -1;
            for(let a = n ?? 0; a < e.length; a++)if (t(e[a], a)) return a;
            return -1;
        }
        function i9(e, t, n) {
            if (e === void 0) return -1;
            for(let a = n ?? e.length - 1; a >= 0; a--)if (t(e[a], a)) return a;
            return -1;
        }
        function a9(e, t) {
            for(let n = 0; n < e.length; n++){
                let a = t(e[n], n);
                if (a) return a;
            }
            return I.fail();
        }
        function rs(e, t, n = _o) {
            if (e) {
                for (let a of e)if (n(a, t)) return !0;
            }
            return !1;
        }
        function pv(e, t, n = _o) {
            return e.length === t.length && e.every((a, _)=>n(a, t[_]));
        }
        function fv(e, t, n) {
            for(let a = n || 0; a < e.length; a++)if (rs(t, e.charCodeAt(a))) return a;
            return -1;
        }
        function o9(e, t) {
            let n = 0;
            if (e) for(let a = 0; a < e.length; a++){
                let _ = e[a];
                t(_, a) && n++;
            }
            return n;
        }
        function rr(e, t) {
            if (e) {
                let n = e.length, a = 0;
                for(; a < n && t(e[a]);)a++;
                if (a < n) {
                    let _ = e.slice(0, a);
                    for(a++; a < n;){
                        let p = e[a];
                        t(p) && _.push(p), a++;
                    }
                    return _;
                }
            }
            return e;
        }
        function s9(e, t) {
            let n = 0;
            for(let a = 0; a < e.length; a++)t(e[a], a, e) && (e[n] = e[a], n++);
            e.length = n;
        }
        function _9(e) {
            e.length = 0;
        }
        function xa(e, t) {
            let n;
            if (e) {
                n = [];
                for(let a = 0; a < e.length; a++)n.push(t(e[a], a));
            }
            return n;
        }
        function* c9(e, t) {
            for (let n of e)yield t(n);
        }
        function l9(e, t) {
            if (e) for(let n = 0; n < e.length; n++){
                let a = e[n], _ = t(a, n);
                if (a !== _) {
                    let p = e.slice(0, n);
                    for(p.push(_), n++; n < e.length; n++)p.push(t(e[n], n));
                    return p;
                }
            }
            return e;
        }
        function o_(e) {
            let t = [];
            for (let n of e)n && ($t(n) ? zn(t, n) : t.push(n));
            return t;
        }
        function zo(e, t) {
            let n;
            if (e) for(let a = 0; a < e.length; a++){
                let _ = t(e[a], a);
                _ && ($t(_) ? n = zn(n, _) : n = Et(n, _));
            }
            return n || Je;
        }
        function dv(e, t) {
            let n = [];
            if (e) for(let a = 0; a < e.length; a++){
                let _ = t(e[a], a);
                _ && ($t(_) ? zn(n, _) : n.push(_));
            }
            return n;
        }
        function* u9(e, t) {
            for (let n of e){
                let a = t(n);
                a && (yield* a);
            }
        }
        function mv(e, t) {
            let n;
            if (e) for(let a = 0; a < e.length; a++){
                let _ = e[a], p = t(_, a);
                (n || _ !== p || $t(p)) && (n || (n = e.slice(0, a)), $t(p) ? zn(n, p) : n.push(p));
            }
            return n || e;
        }
        function p9(e, t) {
            let n = [];
            for(let a = 0; a < e.length; a++){
                let _ = t(e[a], a);
                if (_ === void 0) return;
                n.push(_);
            }
            return n;
        }
        function wa(e, t) {
            let n = [];
            if (e) for(let a = 0; a < e.length; a++){
                let _ = t(e[a], a);
                _ !== void 0 && n.push(_);
            }
            return n;
        }
        function* f9(e, t) {
            for (let n of e){
                let a = t(n);
                a !== void 0 && (yield a);
            }
        }
        function d9(e, t) {
            if (!e) return;
            let n = new Map;
            return e.forEach((a, _)=>{
                let p = t(_, a);
                if (p !== void 0) {
                    let [m, y] = p;
                    m !== void 0 && y !== void 0 && n.set(m, y);
                }
            }), n;
        }
        function m9(e, t, n) {
            if (e.has(t)) return e.get(t);
            let a = n();
            return e.set(t, a), a;
        }
        function h9(e, t) {
            return e.has(t) ? !1 : (e.add(t), !0);
        }
        function* y9(e) {
            yield e;
        }
        function g9(e, t, n) {
            let a;
            if (e) {
                a = [];
                let _ = e.length, p, m, y = 0, u = 0;
                for(; y < _;){
                    for(; u < _;){
                        let x = e[u];
                        if (m = t(x, u), u === 0) p = m;
                        else if (m !== p) break;
                        u++;
                    }
                    if (y < u) {
                        let x = n(e.slice(y, u), p, y, u);
                        x && a.push(x), y = u;
                    }
                    p = m, u++;
                }
            }
            return a;
        }
        function b9(e, t) {
            if (!e) return;
            let n = new Map;
            return e.forEach((a, _)=>{
                let [p, m] = t(_, a);
                n.set(p, m);
            }), n;
        }
        function Ze(e, t) {
            if (e) {
                if (t) {
                    for (let n of e)if (t(n)) return !0;
                } else return e.length > 0;
            }
            return !1;
        }
        function v9(e, t, n) {
            let a;
            for(let _ = 0; _ < e.length; _++)t(e[_]) ? a = a === void 0 ? _ : a : a !== void 0 && (n(a, _), a = void 0);
            a !== void 0 && n(a, e.length);
        }
        function h_(e, t) {
            return Ze(t) ? Ze(e) ? [
                ...e,
                ...t
            ] : t : e;
        }
        function T9(e, t) {
            return t;
        }
        function ug(e) {
            return e.map(T9);
        }
        function S9(e, t, n) {
            let a = ug(e);
            bv(e, a, n);
            let _ = e[a[0]], p = [
                a[0]
            ];
            for(let m = 1; m < a.length; m++){
                let y = a[m], u = e[y];
                t(_, u) || (p.push(y), _ = u);
            }
            return p.sort(), p.map((m)=>e[m]);
        }
        function x9(e, t) {
            let n = [];
            for (let a of e)Ll(n, a, t);
            return n;
        }
        function hv(e, t, n) {
            return e.length === 0 ? [] : e.length === 1 ? e.slice() : n ? S9(e, t, n) : x9(e, t);
        }
        function w9(e, t) {
            if (e.length === 0) return Je;
            let n = e[0], a = [
                n
            ];
            for(let _ = 1; _ < e.length; _++){
                let p = e[_];
                switch(t(p, n)){
                    case !0:
                    case 0:
                        continue;
                    case -1:
                        return I.fail("Array is unsorted.");
                }
                a.push(n = p);
            }
            return a;
        }
        function E9() {
            return [];
        }
        function vl(e, t, n, a) {
            if (e.length === 0) return e.push(t), !0;
            let _ = Jl(e, t, bt, n);
            return _ < 0 ? (e.splice(~_, 0, t), !0) : a ? (e.splice(_, 0, t), !0) : !1;
        }
        function yv(e, t, n) {
            return w9($f(e, t), n || t || Ii);
        }
        function C9(e, t) {
            if (e.length < 2) return !0;
            for(let n = 1, a = e.length; n < a; n++)if (t(e[n - 1], e[n]) === 1) return !1;
            return !0;
        }
        function A9(e, t, n, a) {
            let _ = 3;
            if (e.length < 2) return _;
            let p = t(e[0]);
            for(let m = 1, y = e.length; m < y && _ !== 0; m++){
                let u = t(e[m]);
                _ & 1 && n(p, u) > 0 && (_ &= -2), _ & 2 && a(p, u) > 0 && (_ &= -3), p = u;
            }
            return _;
        }
        function k9(e, t, n = _o) {
            if (!e || !t) return e === t;
            if (e.length !== t.length) return !1;
            for(let a = 0; a < e.length; a++)if (!n(e[a], t[a], a)) return !1;
            return !0;
        }
        function D9(e) {
            let t;
            if (e) for(let n = 0; n < e.length; n++){
                let a = e[n];
                (t || !a) && (t || (t = e.slice(0, n)), a && t.push(a));
            }
            return t || e;
        }
        function P9(e, t, n) {
            if (!t || !e || t.length === 0 || e.length === 0) return t;
            let a = [];
            e: for(let _ = 0, p = 0; p < t.length; p++){
                p > 0 && I.assertGreaterThanOrEqual(n(t[p], t[p - 1]), 0);
                t: for(let m = _; _ < e.length; _++)switch(_ > m && I.assertGreaterThanOrEqual(n(e[_], e[_ - 1]), 0), n(t[p], e[_])){
                    case -1:
                        a.push(t[p]);
                        continue e;
                    case 0:
                        continue e;
                    case 1:
                        continue t;
                }
            }
            return a;
        }
        function Et(e, t) {
            return t === void 0 ? e : e === void 0 ? [
                t
            ] : (e.push(t), e);
        }
        function I9(e, t) {
            return e === void 0 ? t : t === void 0 ? e : $t(e) ? $t(t) ? h_(e, t) : Et(e, t) : $t(t) ? Et(t, e) : [
                e,
                t
            ];
        }
        function ay(e, t) {
            return t < 0 ? e.length + t : t;
        }
        function zn(e, t, n, a) {
            if (t === void 0 || t.length === 0) return e;
            if (e === void 0) return t.slice(n, a);
            n = n === void 0 ? 0 : ay(t, n), a = a === void 0 ? t.length : ay(t, a);
            for(let _ = n; _ < a && _ < t.length; _++)t[_] !== void 0 && e.push(t[_]);
            return e;
        }
        function Ll(e, t, n) {
            return rs(e, t, n) ? !1 : (e.push(t), !0);
        }
        function gv(e, t, n) {
            return e ? (Ll(e, t, n), e) : [
                t
            ];
        }
        function bv(e, t, n) {
            t.sort((a, _)=>n(e[a], e[_]) || Mn(a, _));
        }
        function $f(e, t) {
            return e.length === 0 ? e : e.slice().sort(t);
        }
        function* N9(e) {
            for(let t = e.length - 1; t >= 0; t--)yield e[t];
        }
        function vv(e, t) {
            let n = ug(e);
            return bv(e, n, t), n.map((a)=>e[a]);
        }
        function O9(e, t, n, a) {
            for(; n < a;){
                if (e[n] !== t[n]) return !1;
                n++;
            }
            return !0;
        }
        function y_(e) {
            return e === void 0 || e.length === 0 ? void 0 : e[0];
        }
        function M9(e) {
            if (e) for (let t of e)return t;
        }
        function pg(e) {
            return I.assert(e.length !== 0), e[0];
        }
        function L9(e) {
            for (let t of e)return t;
            I.fail("iterator is empty");
        }
        function Pi(e) {
            return e === void 0 || e.length === 0 ? void 0 : e[e.length - 1];
        }
        function Ea(e) {
            return I.assert(e.length !== 0), e[e.length - 1];
        }
        function Fd(e) {
            return e && e.length === 1 ? e[0] : void 0;
        }
        function J9(e) {
            return I.checkDefined(Fd(e));
        }
        function R9(e) {
            return e && e.length === 1 ? e[0] : e;
        }
        function j9(e, t, n) {
            let a = e.slice(0);
            return a[t] = n, a;
        }
        function Jl(e, t, n, a, _) {
            return Tv(e, n(t), n, a, _);
        }
        function Tv(e, t, n, a, _) {
            if (!Ze(e)) return -1;
            let p = _ || 0, m = e.length - 1;
            for(; p <= m;){
                let y = p + (m - p >> 1), u = n(e[y], y);
                switch(a(u, t)){
                    case -1:
                        p = y + 1;
                        break;
                    case 0:
                        return y;
                    case 1:
                        m = y - 1;
                        break;
                }
            }
            return ~p;
        }
        function Bd(e, t, n, a, _) {
            if (e && e.length > 0) {
                let p = e.length;
                if (p > 0) {
                    let m = a === void 0 || a < 0 ? 0 : a, y = _ === void 0 || m + _ > p - 1 ? p - 1 : m + _, u;
                    for(arguments.length <= 2 ? (u = e[m], m++) : u = n; m <= y;)u = t(u, e[m], m), m++;
                    return u;
                }
            }
            return n;
        }
        function Wn(e, t) {
            return Wr.call(e, t);
        }
        function Sv(e, t) {
            return Wr.call(e, t) ? e[t] : void 0;
        }
        function fg(e) {
            let t = [];
            for(let n in e)Wr.call(e, n) && t.push(n);
            return t;
        }
        function F9(e) {
            let t = [];
            do {
                let n = Object.getOwnPropertyNames(e);
                for (let a of n)Ll(t, a);
            }while (e = Object.getPrototypeOf(e));
            return t;
        }
        function B9(e) {
            let t = [];
            for(let n in e)Wr.call(e, n) && t.push(e[n]);
            return t;
        }
        function U9(e, t) {
            let n = new Array(e);
            for(let a = 0; a < e; a++)n[a] = t(a);
            return n;
        }
        function Ud(e, t) {
            let n = [];
            for (let a of e)n.push(t ? t(a) : a);
            return n;
        }
        function q9(e, ...t) {
            for (let n of t)if (n !== void 0) for(let a in n)Wn(n, a) && (e[a] = n[a]);
            return e;
        }
        function xv(e, t, n = _o) {
            if (e === t) return !0;
            if (!e || !t) return !1;
            for(let a in e)if (Wr.call(e, a) && (!Wr.call(t, a) || !n(e[a], t[a]))) return !1;
            for(let a in t)if (Wr.call(t, a) && !Wr.call(e, a)) return !1;
            return !0;
        }
        function z9(e, t, n = bt) {
            let a = new Map;
            for (let _ of e){
                let p = t(_);
                p !== void 0 && a.set(p, n(_));
            }
            return a;
        }
        function W9(e, t, n = bt) {
            let a = [];
            for (let _ of e)a[t(_)] = n(_);
            return a;
        }
        function wv(e, t, n = bt) {
            let a = qd();
            for (let _ of e)a.add(t(_), n(_));
            return a;
        }
        function V9(e, t, n = bt) {
            return Ud(wv(e, t).values(), n);
        }
        function H9(e, t) {
            let n = {};
            if (e) for (let a of e){
                let _ = `${t(a)}`;
                (n[_] ?? (n[_] = [])).push(a);
            }
            return n;
        }
        function G9(e) {
            let t = {};
            for(let n in e)Wr.call(e, n) && (t[n] = e[n]);
            return t;
        }
        function X9(e, t) {
            let n = {};
            for(let a in t)Wr.call(t, a) && (n[a] = t[a]);
            for(let a in e)Wr.call(e, a) && (n[a] = e[a]);
            return n;
        }
        function $9(e, t) {
            for(let n in t)Wr.call(t, n) && (e[n] = t[n]);
        }
        function sn(e, t) {
            return t ? t.bind(e) : void 0;
        }
        function qd() {
            let e = new Map;
            return e.add = Q9, e.remove = Y9, e;
        }
        function Q9(e, t) {
            let n = this.get(e);
            return n ? n.push(t) : this.set(e, n = [
                t
            ]), n;
        }
        function Y9(e, t) {
            let n = this.get(e);
            n && (Nv(n, t), n.length || this.delete(e));
        }
        function K9(e) {
            let t = (e == null ? void 0 : e.slice()) || [], n = 0;
            function a() {
                return n === t.length;
            }
            function _(...m) {
                t.push(...m);
            }
            function p() {
                if (a()) throw new Error("Queue is empty");
                let m = t[n];
                if (t[n] = void 0, n++, n > 100 && n > t.length >> 1) {
                    let y = t.length - n;
                    t.copyWithin(0, n), t.length = y, n = 0;
                }
                return m;
            }
            return {
                enqueue: _,
                dequeue: p,
                isEmpty: a
            };
        }
        function Z9(e, t) {
            let n = new Map, a = 0;
            function* _() {
                for (let m of n.values())$t(m) ? yield* m : yield m;
            }
            let p = {
                has (m) {
                    let y = e(m);
                    if (!n.has(y)) return !1;
                    let u = n.get(y);
                    if (!$t(u)) return t(u, m);
                    for (let x of u)if (t(x, m)) return !0;
                    return !1;
                },
                add (m) {
                    let y = e(m);
                    if (n.has(y)) {
                        let u = n.get(y);
                        if ($t(u)) rs(u, m, t) || (u.push(m), a++);
                        else {
                            let x = u;
                            t(x, m) || (n.set(y, [
                                x,
                                m
                            ]), a++);
                        }
                    } else n.set(y, m), a++;
                    return this;
                },
                delete (m) {
                    let y = e(m);
                    if (!n.has(y)) return !1;
                    let u = n.get(y);
                    if ($t(u)) {
                        for(let x = 0; x < u.length; x++)if (t(u[x], m)) return u.length === 1 ? n.delete(y) : u.length === 2 ? n.set(y, u[1 - x]) : mg(u, x), a--, !0;
                    } else if (t(u, m)) return n.delete(y), a--, !0;
                    return !1;
                },
                clear () {
                    n.clear(), a = 0;
                },
                get size () {
                    return a;
                },
                forEach (m) {
                    for (let y of Ud(n.values()))if ($t(y)) for (let u of y)m(u, u, p);
                    else {
                        let u = y;
                        m(u, u, p);
                    }
                },
                keys () {
                    return _();
                },
                values () {
                    return _();
                },
                *entries () {
                    for (let m of _())yield [
                        m,
                        m
                    ];
                },
                [Symbol.iterator]: ()=>_(),
                [Symbol.toStringTag]: n[Symbol.toStringTag]
            };
            return p;
        }
        function $t(e) {
            return Array.isArray(e);
        }
        function Nf(e) {
            return $t(e) ? e : [
                e
            ];
        }
        function g_(e) {
            return typeof e == "string";
        }
        function eE(e) {
            return typeof e == "number";
        }
        function Ur(e, t) {
            return e !== void 0 && t(e) ? e : void 0;
        }
        function wi(e, t) {
            return e !== void 0 && t(e) ? e : I.fail(`Invalid cast. The supplied value ${e} did not pass the test '${I.getFunctionName(t)}'.`);
        }
        function gr(e) {}
        function Qf() {
            return !1;
        }
        function Ev() {
            return !0;
        }
        function tE() {}
        function bt(e) {
            return e;
        }
        function Cv(e) {
            return e.toLowerCase();
        }
        function Av(e) {
            return sy.test(e) ? e.replace(sy, Cv) : e;
        }
        function nE() {
            throw new Error("Not implemented");
        }
        function Yf(e) {
            let t;
            return ()=>(e && (t = e(), e = void 0), t);
        }
        function Fr(e) {
            let t = new Map;
            return (n)=>{
                let a = `${typeof n}:${n}`, _ = t.get(a);
                return _ === void 0 && !t.has(a) && (_ = e(n), t.set(a, _)), _;
            };
        }
        function rE(e) {
            let t = new WeakMap;
            return (n)=>{
                let a = t.get(n);
                return a === void 0 && !t.has(n) && (a = e(n), t.set(n, a)), a;
            };
        }
        function iE(e, t) {
            return (...n)=>{
                let a = t.get(n);
                return a === void 0 && !t.has(n) && (a = e(...n), t.set(n, a)), a;
            };
        }
        function aE(e, t, n, a, _) {
            if (_) {
                let p = [];
                for(let m = 0; m < arguments.length; m++)p[m] = arguments[m];
                return (m)=>Bd(p, (y, u)=>u(y), m);
            } else return a ? (p)=>a(n(t(e(p)))) : n ? (p)=>n(t(e(p))) : t ? (p)=>t(e(p)) : e ? (p)=>e(p) : (p)=>p;
        }
        function _o(e, t) {
            return e === t;
        }
        function s_(e, t) {
            return e === t || e !== void 0 && t !== void 0 && e.toUpperCase() === t.toUpperCase();
        }
        function Rl(e, t) {
            return _o(e, t);
        }
        function kv(e, t) {
            return e === t ? 0 : e === void 0 ? -1 : t === void 0 ? 1 : e < t ? -1 : 1;
        }
        function Mn(e, t) {
            return kv(e, t);
        }
        function oE(e, t) {
            return Mn(e == null ? void 0 : e.start, t == null ? void 0 : t.start) || Mn(e == null ? void 0 : e.length, t == null ? void 0 : t.length);
        }
        function sE(e, t) {
            return Bd(e, (n, a)=>t(n, a) === -1 ? n : a);
        }
        function zd(e, t) {
            return e === t ? 0 : e === void 0 ? -1 : t === void 0 ? 1 : (e = e.toUpperCase(), t = t.toUpperCase(), e < t ? -1 : e > t ? 1 : 0);
        }
        function _E(e, t) {
            return e === t ? 0 : e === void 0 ? -1 : t === void 0 ? 1 : (e = e.toLowerCase(), t = t.toLowerCase(), e < t ? -1 : e > t ? 1 : 0);
        }
        function Ii(e, t) {
            return kv(e, t);
        }
        function dg(e) {
            return e ? zd : Ii;
        }
        function cE() {
            return Zf;
        }
        function Dv(e) {
            Zf !== e && (Zf = e, cy = void 0);
        }
        function lE(e, t) {
            return (cy || (cy = jv(Zf)))(e, t);
        }
        function uE(e, t, n, a) {
            return e === t ? 0 : e === void 0 ? -1 : t === void 0 ? 1 : a(e[n], t[n]);
        }
        function pE(e, t) {
            return Mn(e ? 1 : 0, t ? 1 : 0);
        }
        function Pv(e, t, n) {
            let a = Math.max(2, Math.floor(e.length * .34)), _ = Math.floor(e.length * .4) + 1, p;
            for (let m of t){
                let y = n(m);
                if (y !== void 0 && Math.abs(y.length - e.length) <= a) {
                    if (y === e || y.length < 3 && y.toLowerCase() !== e.toLowerCase()) continue;
                    let u = fE(e, y, _ - .1);
                    if (u === void 0) continue;
                    I.assert(u < _), _ = u, p = m;
                }
            }
            return p;
        }
        function fE(e, t, n) {
            let a = new Array(t.length + 1), _ = new Array(t.length + 1), p = n + .01;
            for(let y = 0; y <= t.length; y++)a[y] = y;
            for(let y = 1; y <= e.length; y++){
                let u = e.charCodeAt(y - 1), x = Math.ceil(y > n ? y - n : 1), d = Math.floor(t.length > n + y ? n + y : t.length);
                _[0] = y;
                let S = y;
                for(let A = 1; A < x; A++)_[A] = p;
                for(let A = x; A <= d; A++){
                    let N = e[y - 1].toLowerCase() === t[A - 1].toLowerCase() ? a[A - 1] + .1 : a[A - 1] + 2, q = u === t.charCodeAt(A - 1) ? a[A - 1] : Math.min(a[A] + 1, _[A - 1] + 1, N);
                    _[A] = q, S = Math.min(S, q);
                }
                for(let A = d + 1; A <= t.length; A++)_[A] = p;
                if (S > n) return;
                let T = a;
                a = _, _ = T;
            }
            let m = a[t.length];
            return m > n ? void 0 : m;
        }
        function is(e, t) {
            let n = e.length - t.length;
            return n >= 0 && e.indexOf(t, n) === n;
        }
        function dE(e, t) {
            return is(e, t) ? e.slice(0, e.length - t.length) : e;
        }
        function mE(e, t) {
            return is(e, t) ? e.slice(0, e.length - t.length) : void 0;
        }
        function hE(e) {
            let t = e.length;
            for(let n = t - 1; n > 0; n--){
                let a = e.charCodeAt(n);
                if (a >= 48 && a <= 57) do --n, a = e.charCodeAt(n);
                while (n > 0 && a >= 48 && a <= 57);
                else if (n > 4 && (a === 110 || a === 78)) {
                    if (--n, a = e.charCodeAt(n), a !== 105 && a !== 73 || (--n, a = e.charCodeAt(n), a !== 109 && a !== 77)) break;
                    --n, a = e.charCodeAt(n);
                } else break;
                if (a !== 45 && a !== 46) break;
                t = n;
            }
            return t === e.length ? e : e.slice(0, t);
        }
        function yE(e, t) {
            for(let n = 0; n < e.length; n++)if (e[n] === t) return Iv(e, n), !0;
            return !1;
        }
        function Iv(e, t) {
            for(let n = t; n < e.length - 1; n++)e[n] = e[n + 1];
            e.pop();
        }
        function mg(e, t) {
            e[t] = e[e.length - 1], e.pop();
        }
        function Nv(e, t) {
            return gE(e, (n)=>n === t);
        }
        function gE(e, t) {
            for(let n = 0; n < e.length; n++)if (t(e[n])) return mg(e, n), !0;
            return !1;
        }
        function Wd(e) {
            return e ? bt : Av;
        }
        function bE({ prefix: e, suffix: t }) {
            return `${e}*${t}`;
        }
        function vE(e, t) {
            return I.assert(hg(e, t)), t.substring(e.prefix.length, t.length - e.suffix.length);
        }
        function Ov(e, t, n) {
            let a, _ = -1;
            for (let p of e){
                let m = t(p);
                hg(m, n) && m.prefix.length > _ && (_ = m.prefix.length, a = p);
            }
            return a;
        }
        function Hn(e, t) {
            return e.lastIndexOf(t, 0) === 0;
        }
        function TE(e, t) {
            return Hn(e, t) ? e.substr(t.length) : e;
        }
        function Mv(e, t, n = bt) {
            return Hn(n(e), n(t)) ? e.substring(t.length) : void 0;
        }
        function hg({ prefix: e, suffix: t }, n) {
            return n.length >= e.length + t.length && Hn(n, e) && is(n, t);
        }
        function SE(e, t) {
            return (n)=>e(n) && t(n);
        }
        function yg(...e) {
            return (...t)=>{
                let n;
                for (let a of e)if (n = a(...t), n) return n;
                return n;
            };
        }
        function xE(e) {
            return (...t)=>!e(...t);
        }
        function wE(e) {}
        function Kf(e) {
            return e === void 0 ? void 0 : [
                e
            ];
        }
        function EE(e, t, n, a, _, p) {
            p = p || gr;
            let m = 0, y = 0, u = e.length, x = t.length, d = !1;
            for(; m < u && y < x;){
                let S = e[m], T = t[y], A = n(S, T);
                A === -1 ? (a(S), m++, d = !0) : A === 1 ? (_(T), y++, d = !0) : (p(T, S), m++, y++);
            }
            for(; m < u;)a(e[m++]), d = !0;
            for(; y < x;)_(t[y++]), d = !0;
            return d;
        }
        function CE(e) {
            let t = [];
            return Lv(e, t, void 0, 0), t;
        }
        function Lv(e, t, n, a) {
            for (let _ of e[a]){
                let p;
                n ? (p = n.slice(), p.push(_)) : p = [
                    _
                ], a === e.length - 1 ? t.push(p) : Lv(e, t, p, a + 1);
            }
        }
        function AE(e, t) {
            if (e) {
                let n = e.length, a = 0;
                for(; a < n && t(e[a]);)a++;
                return e.slice(0, a);
            }
        }
        function kE(e, t) {
            if (e) {
                let n = e.length, a = 0;
                for(; a < n && t(e[a]);)a++;
                return e.slice(a);
            }
        }
        function DE() {
            return !1;
        }
        var Je, gg, Jv, oy, Rv, Wr, sy, _y, jv, cy, Zf, PE = It({
            "src/compiler/core.ts" () {
                "use strict";
                En(), Je = [], gg = new Map, Jv = new Set, oy = ((e)=>(e[e.None = 0] = "None", e[e.CaseSensitive = 1] = "CaseSensitive", e[e.CaseInsensitive = 2] = "CaseInsensitive", e[e.Both = 3] = "Both", e))(oy || {}), Rv = Array.prototype.at ? (e, t)=>e == null ? void 0 : e.at(t) : (e, t)=>{
                    if (e && (t = ay(e, t), t < e.length)) return e[t];
                }, Wr = Object.prototype.hasOwnProperty, sy = /[^\u0130\u0131\u00DFa-z0-9\\/:\-_. ]+/g, _y = ((e)=>(e[e.None = 0] = "None", e[e.Normal = 1] = "Normal", e[e.Aggressive = 2] = "Aggressive", e[e.VeryAggressive = 3] = "VeryAggressive", e))(_y || {}), jv = (()=>{
                    return t;
                    function e(n, a, _) {
                        if (n === a) return 0;
                        if (n === void 0) return -1;
                        if (a === void 0) return 1;
                        let p = _(n, a);
                        return p < 0 ? -1 : p > 0 ? 1 : 0;
                    }
                    function t(n) {
                        let a = new Intl.Collator(n, {
                            usage: "sort",
                            sensitivity: "variant"
                        }).compare;
                        return (_, p)=>e(_, p, a);
                    }
                })();
            }
        }), ly, I, Fv = It({
            "src/compiler/debug.ts" () {
                "use strict";
                En(), En(), ly = ((e)=>(e[e.Off = 0] = "Off", e[e.Error = 1] = "Error", e[e.Warning = 2] = "Warning", e[e.Info = 3] = "Info", e[e.Verbose = 4] = "Verbose", e))(ly || {}), ((e)=>{
                    let t = 0;
                    e.currentLogLevel = 2, e.isDebugging = !1;
                    function n(U) {
                        return e.currentLogLevel <= U;
                    }
                    e.shouldLog = n;
                    function a(U, ie) {
                        e.loggingHost && n(U) && e.loggingHost.log(U, ie);
                    }
                    function _(U) {
                        a(3, U);
                    }
                    e.log = _, ((U)=>{
                        function ie($e) {
                            a(1, $e);
                        }
                        U.error = ie;
                        function ye($e) {
                            a(2, $e);
                        }
                        U.warn = ye;
                        function Te($e) {
                            a(3, $e);
                        }
                        U.log = Te;
                        function tt($e) {
                            a(4, $e);
                        }
                        U.trace = tt;
                    })(_ = e.log || (e.log = {}));
                    let p = {};
                    function m() {
                        return t;
                    }
                    e.getAssertionLevel = m;
                    function y(U) {
                        let ie = t;
                        if (t = U, U > ie) for (let ye of fg(p)){
                            let Te = p[ye];
                            Te !== void 0 && e[ye] !== Te.assertion && U >= Te.level && (e[ye] = Te, p[ye] = void 0);
                        }
                    }
                    e.setAssertionLevel = y;
                    function u(U) {
                        return t >= U;
                    }
                    e.shouldAssert = u;
                    function x(U, ie) {
                        return u(U) ? !0 : (p[ie] = {
                            level: U,
                            assertion: e[ie]
                        }, e[ie] = gr, !1);
                    }
                    function d(U, ie) {
                        debugger;
                        let ye = new Error(U ? `Debug Failure. ${U}` : "Debug Failure.");
                        throw Error.captureStackTrace && Error.captureStackTrace(ye, ie || d), ye;
                    }
                    e.fail = d;
                    function S(U, ie, ye) {
                        return d(`${ie || "Unexpected node."}\r
Node ${vt(U.kind)} was unexpected.`, ye || S);
                    }
                    e.failBadSyntaxKind = S;
                    function T(U, ie, ye, Te) {
                        U || (ie = ie ? `False expression: ${ie}` : "False expression.", ye && (ie += `\r
Verbose Debug Information: ` + (typeof ye == "string" ? ye : ye())), d(ie, Te || T));
                    }
                    e.assert = T;
                    function A(U, ie, ye, Te, tt) {
                        if (U !== ie) {
                            let $e = ye ? Te ? `${ye} ${Te}` : ye : "";
                            d(`Expected ${U} === ${ie}. ${$e}`, tt || A);
                        }
                    }
                    e.assertEqual = A;
                    function N(U, ie, ye, Te) {
                        U >= ie && d(`Expected ${U} < ${ie}. ${ye || ""}`, Te || N);
                    }
                    e.assertLessThan = N;
                    function q(U, ie, ye) {
                        U > ie && d(`Expected ${U} <= ${ie}`, ye || q);
                    }
                    e.assertLessThanOrEqual = q;
                    function Q(U, ie, ye) {
                        U < ie && d(`Expected ${U} >= ${ie}`, ye || Q);
                    }
                    e.assertGreaterThanOrEqual = Q;
                    function se(U, ie, ye) {
                        U == null && d(ie, ye || se);
                    }
                    e.assertIsDefined = se;
                    function fe(U, ie, ye) {
                        return se(U, ie, ye || fe), U;
                    }
                    e.checkDefined = fe;
                    function F(U, ie, ye) {
                        for (let Te of U)se(Te, ie, ye || F);
                    }
                    e.assertEachIsDefined = F;
                    function W(U, ie, ye) {
                        return F(U, ie, ye || W), U;
                    }
                    e.checkEachDefined = W;
                    function Se(U, ie = "Illegal value:", ye) {
                        let Te = typeof U == "object" && Wn(U, "kind") && Wn(U, "pos") ? "SyntaxKind: " + vt(U.kind) : JSON.stringify(U);
                        return d(`${ie} ${Te}`, ye || Se);
                    }
                    e.assertNever = Se;
                    function Qe(U, ie, ye, Te) {
                        x(1, "assertEachNode") && T(ie === void 0 || so(U, ie), ye || "Unexpected node.", ()=>`Node array did not pass test '${gn(ie)}'.`, Te || Qe);
                    }
                    e.assertEachNode = Qe;
                    function Be(U, ie, ye, Te) {
                        x(1, "assertNode") && T(U !== void 0 && (ie === void 0 || ie(U)), ye || "Unexpected node.", ()=>`Node ${vt(U == null ? void 0 : U.kind)} did not pass test '${gn(ie)}'.`, Te || Be);
                    }
                    e.assertNode = Be;
                    function st(U, ie, ye, Te) {
                        x(1, "assertNotNode") && T(U === void 0 || ie === void 0 || !ie(U), ye || "Unexpected node.", ()=>`Node ${vt(U.kind)} should not have passed test '${gn(ie)}'.`, Te || st);
                    }
                    e.assertNotNode = st;
                    function _t(U, ie, ye, Te) {
                        x(1, "assertOptionalNode") && T(ie === void 0 || U === void 0 || ie(U), ye || "Unexpected node.", ()=>`Node ${vt(U == null ? void 0 : U.kind)} did not pass test '${gn(ie)}'.`, Te || _t);
                    }
                    e.assertOptionalNode = _t;
                    function hn(U, ie, ye, Te) {
                        x(1, "assertOptionalToken") && T(ie === void 0 || U === void 0 || U.kind === ie, ye || "Unexpected node.", ()=>`Node ${vt(U == null ? void 0 : U.kind)} was not a '${vt(ie)}' token.`, Te || hn);
                    }
                    e.assertOptionalToken = hn;
                    function yn(U, ie, ye) {
                        x(1, "assertMissingNode") && T(U === void 0, ie || "Unexpected node.", ()=>`Node ${vt(U.kind)} was unexpected'.`, ye || yn);
                    }
                    e.assertMissingNode = yn;
                    function fi(U) {}
                    e.type = fi;
                    function gn(U) {
                        if (typeof U != "function") return "";
                        if (Wn(U, "name")) return U.name;
                        {
                            let ie = Function.prototype.toString.call(U), ye = /^function\s+([\w$]+)\s*\(/.exec(ie);
                            return ye ? ye[1] : "";
                        }
                    }
                    e.getFunctionName = gn;
                    function cr(U) {
                        return `{ name: ${Go(U.escapedName)}; flags: ${an(U.flags)}; declarations: ${xa(U.declarations, (ie)=>vt(ie.kind))} }`;
                    }
                    e.formatSymbol = cr;
                    function He(U = 0, ie, ye) {
                        let Te = Gr(ie);
                        if (U === 0) return Te.length > 0 && Te[0][0] === 0 ? Te[0][1] : "0";
                        if (ye) {
                            let tt = [], $e = U;
                            for (let [Ut, St] of Te){
                                if (Ut > U) break;
                                Ut !== 0 && Ut & U && (tt.push(St), $e &= ~Ut);
                            }
                            if ($e === 0) return tt.join("|");
                        } else for (let [tt, $e] of Te)if (tt === U) return $e;
                        return U.toString();
                    }
                    e.formatEnum = He;
                    let Qn = new Map;
                    function Gr(U) {
                        let ie = Qn.get(U);
                        if (ie) return ie;
                        let ye = [];
                        for(let tt in U){
                            let $e = U[tt];
                            typeof $e == "number" && ye.push([
                                $e,
                                tt
                            ]);
                        }
                        let Te = vv(ye, (tt, $e)=>Mn(tt[0], $e[0]));
                        return Qn.set(U, Te), Te;
                    }
                    function vt(U) {
                        return He(U, rd, !1);
                    }
                    e.formatSyntaxKind = vt;
                    function Jn(U) {
                        return He(U, md, !1);
                    }
                    e.formatSnippetKind = Jn;
                    function Ar(U) {
                        return He(U, fd, !1);
                    }
                    e.formatScriptKind = Ar;
                    function Ht(U) {
                        return He(U, id, !0);
                    }
                    e.formatNodeFlags = Ht;
                    function rn(U) {
                        return He(U, ad, !0);
                    }
                    e.formatModifierFlags = rn;
                    function at(U) {
                        return He(U, dd, !0);
                    }
                    e.formatTransformFlags = at;
                    function kr(U) {
                        return He(U, hd, !0);
                    }
                    e.formatEmitFlags = kr;
                    function an(U) {
                        return He(U, _d, !0);
                    }
                    e.formatSymbolFlags = an;
                    function xt(U) {
                        return He(U, cd, !0);
                    }
                    e.formatTypeFlags = xt;
                    function ut(U) {
                        return He(U, ud, !0);
                    }
                    e.formatSignatureFlags = ut;
                    function Gt(U) {
                        return He(U, ld, !0);
                    }
                    e.formatObjectFlags = Gt;
                    function cn(U) {
                        return He(U, Tl, !0);
                    }
                    e.formatFlowFlags = cn;
                    function ht(U) {
                        return He(U, od, !0);
                    }
                    e.formatRelationComparisonResult = ht;
                    function Dr(U) {
                        return He(U, CheckMode, !0);
                    }
                    e.formatCheckMode = Dr;
                    function Tt(U) {
                        return He(U, SignatureCheckMode, !0);
                    }
                    e.formatSignatureCheckMode = Tt;
                    function Rn(U) {
                        return He(U, TypeFacts, !0);
                    }
                    e.formatTypeFacts = Rn;
                    let yt = !1, jn;
                    function ct(U) {
                        "__debugFlowFlags" in U || Object.defineProperties(U, {
                            __tsDebuggerDisplay: {
                                value () {
                                    let ie = this.flags & 2 ? "FlowStart" : this.flags & 4 ? "FlowBranchLabel" : this.flags & 8 ? "FlowLoopLabel" : this.flags & 16 ? "FlowAssignment" : this.flags & 32 ? "FlowTrueCondition" : this.flags & 64 ? "FlowFalseCondition" : this.flags & 128 ? "FlowSwitchClause" : this.flags & 256 ? "FlowArrayMutation" : this.flags & 512 ? "FlowCall" : this.flags & 1024 ? "FlowReduceLabel" : this.flags & 1 ? "FlowUnreachable" : "UnknownFlow", ye = this.flags & -2048;
                                    return `${ie}${ye ? ` (${cn(ye)})` : ""}`;
                                }
                            },
                            __debugFlowFlags: {
                                get () {
                                    return He(this.flags, Tl, !0);
                                }
                            },
                            __debugToString: {
                                value () {
                                    return De(this);
                                }
                            }
                        });
                    }
                    function Kt(U) {
                        yt && (typeof Object.setPrototypeOf == "function" ? (jn || (jn = Object.create(Object.prototype), ct(jn)), Object.setPrototypeOf(U, jn)) : ct(U));
                    }
                    e.attachFlowNodeDebugInfo = Kt;
                    let Zt;
                    function lr(U) {
                        "__tsDebuggerDisplay" in U || Object.defineProperties(U, {
                            __tsDebuggerDisplay: {
                                value (ie) {
                                    return ie = String(ie).replace(/(?:,[\s\w\d_]+:[^,]+)+\]$/, "]"), `NodeArray ${ie}`;
                                }
                            }
                        });
                    }
                    function di(U) {
                        yt && (typeof Object.setPrototypeOf == "function" ? (Zt || (Zt = Object.create(Array.prototype), lr(Zt)), Object.setPrototypeOf(U, Zt)) : lr(U));
                    }
                    e.attachNodeArrayDebugInfo = di;
                    function Xr() {
                        if (yt) return;
                        let U = new WeakMap, ie = new WeakMap;
                        Object.defineProperties(Ct.getSymbolConstructor().prototype, {
                            __tsDebuggerDisplay: {
                                value () {
                                    let Te = this.flags & 33554432 ? "TransientSymbol" : "Symbol", tt = this.flags & -33554433;
                                    return `${Te} '${gd(this)}'${tt ? ` (${an(tt)})` : ""}`;
                                }
                            },
                            __debugFlags: {
                                get () {
                                    return an(this.flags);
                                }
                            }
                        }), Object.defineProperties(Ct.getTypeConstructor().prototype, {
                            __tsDebuggerDisplay: {
                                value () {
                                    let Te = this.flags & 67359327 ? `IntrinsicType ${this.intrinsicName}${this.debugIntrinsicName ? ` (${this.debugIntrinsicName})` : ""}` : this.flags & 98304 ? "NullableType" : this.flags & 384 ? `LiteralType ${JSON.stringify(this.value)}` : this.flags & 2048 ? `LiteralType ${this.value.negative ? "-" : ""}${this.value.base10Value}n` : this.flags & 8192 ? "UniqueESSymbolType" : this.flags & 32 ? "EnumType" : this.flags & 1048576 ? "UnionType" : this.flags & 2097152 ? "IntersectionType" : this.flags & 4194304 ? "IndexType" : this.flags & 8388608 ? "IndexedAccessType" : this.flags & 16777216 ? "ConditionalType" : this.flags & 33554432 ? "SubstitutionType" : this.flags & 262144 ? "TypeParameter" : this.flags & 524288 ? this.objectFlags & 3 ? "InterfaceType" : this.objectFlags & 4 ? "TypeReference" : this.objectFlags & 8 ? "TupleType" : this.objectFlags & 16 ? "AnonymousType" : this.objectFlags & 32 ? "MappedType" : this.objectFlags & 1024 ? "ReverseMappedType" : this.objectFlags & 256 ? "EvolvingArrayType" : "ObjectType" : "Type", tt = this.flags & 524288 ? this.objectFlags & -1344 : 0;
                                    return `${Te}${this.symbol ? ` '${gd(this.symbol)}'` : ""}${tt ? ` (${Gt(tt)})` : ""}`;
                                }
                            },
                            __debugFlags: {
                                get () {
                                    return xt(this.flags);
                                }
                            },
                            __debugObjectFlags: {
                                get () {
                                    return this.flags & 524288 ? Gt(this.objectFlags) : "";
                                }
                            },
                            __debugTypeToString: {
                                value () {
                                    let Te = U.get(this);
                                    return Te === void 0 && (Te = this.checker.typeToString(this), U.set(this, Te)), Te;
                                }
                            }
                        }), Object.defineProperties(Ct.getSignatureConstructor().prototype, {
                            __debugFlags: {
                                get () {
                                    return ut(this.flags);
                                }
                            },
                            __debugSignatureToString: {
                                value () {
                                    var Te;
                                    return (Te = this.checker) == null ? void 0 : Te.signatureToString(this);
                                }
                            }
                        });
                        let ye = [
                            Ct.getNodeConstructor(),
                            Ct.getIdentifierConstructor(),
                            Ct.getTokenConstructor(),
                            Ct.getSourceFileConstructor()
                        ];
                        for (let Te of ye)Wn(Te.prototype, "__debugKind") || Object.defineProperties(Te.prototype, {
                            __tsDebuggerDisplay: {
                                value () {
                                    return `${va(this) ? "GeneratedIdentifier" : Ae(this) ? `Identifier '${Lt(this)}'` : Vn(this) ? `PrivateIdentifier '${Lt(this)}'` : Tr(this) ? `StringLiteral ${JSON.stringify(this.text.length < 10 ? this.text : this.text.slice(10) + "...")}` : lo(this) ? `NumericLiteral ${this.text}` : db(this) ? `BigIntLiteral ${this.text}n` : Lo(this) ? "TypeParameterDeclaration" : Pa(this) ? "ParameterDeclaration" : L_(this) ? "ConstructorDeclaration" : d_(this) ? "GetAccessorDeclaration" : Zo(this) ? "SetAccessorDeclaration" : yb(this) ? "CallSignatureDeclaration" : qx(this) ? "ConstructSignatureDeclaration" : gb(this) ? "IndexSignatureDeclaration" : zx(this) ? "TypePredicateNode" : J_(this) ? "TypeReferenceNode" : tu(this) ? "FunctionTypeNode" : bb(this) ? "ConstructorTypeNode" : Wx(this) ? "TypeQueryNode" : Im(this) ? "TypeLiteralNode" : Vx(this) ? "ArrayTypeNode" : Hx(this) ? "TupleTypeNode" : Gx(this) ? "OptionalTypeNode" : Xx(this) ? "RestTypeNode" : $x(this) ? "UnionTypeNode" : Qx(this) ? "IntersectionTypeNode" : Yx(this) ? "ConditionalTypeNode" : Kx(this) ? "InferTypeNode" : Tb(this) ? "ParenthesizedTypeNode" : Sb(this) ? "ThisTypeNode" : Zx(this) ? "TypeOperatorNode" : e8(this) ? "IndexedAccessTypeNode" : t8(this) ? "MappedTypeNode" : xb(this) ? "LiteralTypeNode" : vb(this) ? "NamedTupleMember" : nu(this) ? "ImportTypeNode" : vt(this.kind)}${this.flags ? ` (${Ht(this.flags)})` : ""}`;
                                }
                            },
                            __debugKind: {
                                get () {
                                    return vt(this.kind);
                                }
                            },
                            __debugNodeFlags: {
                                get () {
                                    return Ht(this.flags);
                                }
                            },
                            __debugModifierFlags: {
                                get () {
                                    return rn(iS(this));
                                }
                            },
                            __debugTransformFlags: {
                                get () {
                                    return at(this.transformFlags);
                                }
                            },
                            __debugIsParseTreeNode: {
                                get () {
                                    return xl(this);
                                }
                            },
                            __debugEmitFlags: {
                                get () {
                                    return kr(ai(this));
                                }
                            },
                            __debugGetText: {
                                value (tt) {
                                    if (ya(this)) return "";
                                    let $e = ie.get(this);
                                    if ($e === void 0) {
                                        let Ut = Ul(this), St = Ut && oi(Ut);
                                        $e = St ? Qo(St, Ut, tt) : "", ie.set(this, $e);
                                    }
                                    return $e;
                                }
                            }
                        });
                        yt = !0;
                    }
                    e.enableDebugInfo = Xr;
                    function Yn(U) {
                        let ie = U & 7, ye = ie === 0 ? "in out" : ie === 3 ? "[bivariant]" : ie === 2 ? "in" : ie === 1 ? "out" : ie === 4 ? "[independent]" : "";
                        return U & 8 ? ye += " (unmeasurable)" : U & 16 && (ye += " (unreliable)"), ye;
                    }
                    e.formatVariance = Yn;
                    class Kn {
                        __debugToString() {
                            var ie;
                            switch(this.kind){
                                case 3:
                                    return ((ie = this.debugInfo) == null ? void 0 : ie.call(this)) || "(function mapper)";
                                case 0:
                                    return `${this.source.__debugTypeToString()} -> ${this.target.__debugTypeToString()}`;
                                case 1:
                                    return iy(this.sources, this.targets || xa(this.sources, ()=>"any"), (ye, Te)=>`${ye.__debugTypeToString()} -> ${typeof Te == "string" ? Te : Te.__debugTypeToString()}`).join(", ");
                                case 2:
                                    return iy(this.sources, this.targets, (ye, Te)=>`${ye.__debugTypeToString()} -> ${Te().__debugTypeToString()}`).join(", ");
                                case 5:
                                case 4:
                                    return `m1: ${this.mapper1.__debugToString().split(`
`).join(`
    `)}
m2: ${this.mapper2.__debugToString().split(`
`).join(`
    `)}`;
                                default:
                                    return Se(this);
                            }
                        }
                    }
                    e.DebugTypeMapper = Kn;
                    function Ji(U) {
                        return e.isDebugging ? Object.setPrototypeOf(U, Kn.prototype) : U;
                    }
                    e.attachDebugPrototypeIfDebug = Ji;
                    function Pr(U) {
                        return console.log(De(U));
                    }
                    e.printControlFlowGraph = Pr;
                    function De(U) {
                        let ie = -1;
                        function ye(w) {
                            return w.id || (w.id = ie, ie--), w.id;
                        }
                        let Te;
                        ((w)=>{
                            w.lr = "\u2500", w.ud = "\u2502", w.dr = "\u256D", w.dl = "\u256E", w.ul = "\u256F", w.ur = "\u2570", w.udr = "\u251C", w.udl = "\u2524", w.dlr = "\u252C", w.ulr = "\u2534", w.udlr = "\u256B";
                        })(Te || (Te = {}));
                        let tt;
                        ((w)=>{
                            w[w.None = 0] = "None", w[w.Up = 1] = "Up", w[w.Down = 2] = "Down", w[w.Left = 4] = "Left", w[w.Right = 8] = "Right", w[w.UpDown = 3] = "UpDown", w[w.LeftRight = 12] = "LeftRight", w[w.UpLeft = 5] = "UpLeft", w[w.UpRight = 9] = "UpRight", w[w.DownLeft = 6] = "DownLeft", w[w.DownRight = 10] = "DownRight", w[w.UpDownLeft = 7] = "UpDownLeft", w[w.UpDownRight = 11] = "UpDownRight", w[w.UpLeftRight = 13] = "UpLeftRight", w[w.DownLeftRight = 14] = "DownLeftRight", w[w.UpDownLeftRight = 15] = "UpDownLeftRight", w[w.NoChildren = 16] = "NoChildren";
                        })(tt || (tt = {}));
                        let $e = 2032, Ut = 882, St = Object.create(null), Jt = [], Rt = [], z = Zn(U, new Set);
                        for (let w of Jt)w.text = oa(w.flowNode, w.circular), er(w);
                        let K = Ri(z), te = aa(K);
                        return $r(z, 0), jt();
                        function Ee(w) {
                            return !!(w.flags & 128);
                        }
                        function je(w) {
                            return !!(w.flags & 12) && !!w.antecedents;
                        }
                        function pt(w) {
                            return !!(w.flags & $e);
                        }
                        function nt(w) {
                            return !!(w.flags & Ut);
                        }
                        function kt(w) {
                            let f = [];
                            for (let X of w.edges)X.source === w && f.push(X.target);
                            return f;
                        }
                        function qt(w) {
                            let f = [];
                            for (let X of w.edges)X.target === w && f.push(X.source);
                            return f;
                        }
                        function Zn(w, f) {
                            let X = ye(w), $ = St[X];
                            if ($ && f.has(w)) return $.circular = !0, $ = {
                                id: -1,
                                flowNode: w,
                                edges: [],
                                text: "",
                                lane: -1,
                                endLane: -1,
                                level: -1,
                                circular: "circularity"
                            }, Jt.push($), $;
                            if (f.add(w), !$) {
                                if (St[X] = $ = {
                                    id: X,
                                    flowNode: w,
                                    edges: [],
                                    text: "",
                                    lane: -1,
                                    endLane: -1,
                                    level: -1,
                                    circular: !1
                                }, Jt.push($), je(w)) for (let O of w.antecedents)kn($, O, f);
                                else pt(w) && kn($, w.antecedent, f);
                            }
                            return f.delete(w), $;
                        }
                        function kn(w, f, X) {
                            let $ = Zn(f, X), O = {
                                source: w,
                                target: $
                            };
                            Rt.push(O), w.edges.push(O), $.edges.push(O);
                        }
                        function er(w) {
                            if (w.level !== -1) return w.level;
                            let f = 0;
                            for (let X of qt(w))f = Math.max(f, er(X) + 1);
                            return w.level = f;
                        }
                        function Ri(w) {
                            let f = 0;
                            for (let X of kt(w))f = Math.max(f, Ri(X));
                            return f + 1;
                        }
                        function aa(w) {
                            let f = R(Array(w), 0);
                            for (let X of Jt)f[X.level] = Math.max(f[X.level], X.text.length);
                            return f;
                        }
                        function $r(w, f) {
                            if (w.lane === -1) {
                                w.lane = f, w.endLane = f;
                                let X = kt(w);
                                for(let $ = 0; $ < X.length; $++){
                                    $ > 0 && f++;
                                    let O = X[$];
                                    $r(O, f), O.endLane > w.endLane && (f = O.endLane);
                                }
                                w.endLane = f;
                            }
                        }
                        function Dn(w) {
                            if (w & 2) return "Start";
                            if (w & 4) return "Branch";
                            if (w & 8) return "Loop";
                            if (w & 16) return "Assignment";
                            if (w & 32) return "True";
                            if (w & 64) return "False";
                            if (w & 128) return "SwitchClause";
                            if (w & 256) return "ArrayMutation";
                            if (w & 512) return "Call";
                            if (w & 1024) return "ReduceLabel";
                            if (w & 1) return "Unreachable";
                            throw new Error;
                        }
                        function Ne(w) {
                            let f = oi(w);
                            return Qo(f, w, !1);
                        }
                        function oa(w, f) {
                            let X = Dn(w.flags);
                            if (f && (X = `${X}#${ye(w)}`), nt(w)) w.node && (X += ` (${Ne(w.node)})`);
                            else if (Ee(w)) {
                                let $ = [];
                                for(let O = w.clauseStart; O < w.clauseEnd; O++){
                                    let ue = w.switchStatement.caseBlock.clauses[O];
                                    p8(ue) ? $.push("default") : $.push(Ne(ue.expression));
                                }
                                X += ` (${$.join(", ")})`;
                            }
                            return f === "circularity" ? `Circular(${X})` : X;
                        }
                        function jt() {
                            let w = te.length, f = Jt.reduce((be, ge)=>Math.max(be, ge.lane), 0) + 1, X = R(Array(f), ""), $ = te.map(()=>Array(f)), O = te.map(()=>R(Array(f), 0));
                            for (let be of Jt){
                                $[be.level][be.lane] = be;
                                let ge = kt(be);
                                for(let xe = 0; xe < ge.length; xe++){
                                    let Ye = ge[xe], Ge = 8;
                                    Ye.lane === be.lane && (Ge |= 4), xe > 0 && (Ge |= 1), xe < ge.length - 1 && (Ge |= 2), O[be.level][Ye.lane] |= Ge;
                                }
                                ge.length === 0 && (O[be.level][be.lane] |= 16);
                                let Le = qt(be);
                                for(let xe = 0; xe < Le.length; xe++){
                                    let Ye = Le[xe], Ge = 4;
                                    xe > 0 && (Ge |= 1), xe < Le.length - 1 && (Ge |= 2), O[be.level - 1][Ye.lane] |= Ge;
                                }
                            }
                            for(let be = 0; be < w; be++)for(let ge = 0; ge < f; ge++){
                                let Le = be > 0 ? O[be - 1][ge] : 0, xe = ge > 0 ? O[be][ge - 1] : 0, Ye = O[be][ge];
                                Ye || (Le & 8 && (Ye |= 12), xe & 2 && (Ye |= 3), O[be][ge] = Ye);
                            }
                            for(let be = 0; be < w; be++)for(let ge = 0; ge < X.length; ge++){
                                let Le = O[be][ge], xe = Le & 4 ? "\u2500" : " ", Ye = $[be][ge];
                                Ye ? (ue(ge, Ye.text), be < w - 1 && (ue(ge, " "), ue(ge, v(xe, te[be] - Ye.text.length)))) : be < w - 1 && ue(ge, v(xe, te[be] + 1)), ue(ge, Fn(Le)), ue(ge, Le & 8 && be < w - 1 && !$[be + 1][ge] ? "\u2500" : " ");
                            }
                            return `
${X.join(`
`)}
`;
                            function ue(be, ge) {
                                X[be] += ge;
                            }
                        }
                        function Fn(w) {
                            switch(w){
                                case 3:
                                    return "\u2502";
                                case 12:
                                    return "\u2500";
                                case 5:
                                    return "\u256F";
                                case 9:
                                    return "\u2570";
                                case 6:
                                    return "\u256E";
                                case 10:
                                    return "\u256D";
                                case 7:
                                    return "\u2524";
                                case 11:
                                    return "\u251C";
                                case 13:
                                    return "\u2534";
                                case 14:
                                    return "\u252C";
                                case 15:
                                    return "\u256B";
                            }
                            return " ";
                        }
                        function R(w, f) {
                            if (w.fill) w.fill(f);
                            else for(let X = 0; X < w.length; X++)w[X] = f;
                            return w;
                        }
                        function v(w, f) {
                            if (w.repeat) return f > 0 ? w.repeat(f) : "";
                            let X = "";
                            for(; X.length < f;)X += w;
                            return X;
                        }
                    }
                    e.formatControlFlowGraph = De;
                })(I || (I = {}));
            }
        }), IE = ()=>{}, NE = ()=>{}, OE = ()=>{}, ga = Date.now, ME = ()=>{}, ed = new Proxy(()=>{}, {
            get: ()=>ed
        });
        function A6(e) {
            if (bg) {
                let t = uy.get(e) ?? 0;
                uy.set(e, t + 1), nd.set(e, ga()), td == null || td.mark(e), typeof onProfilerEvent == "function" && onProfilerEvent(e);
            }
        }
        function LE(e, t, n) {
            if (bg) {
                let a = (n !== void 0 ? nd.get(n) : void 0) ?? ga(), _ = (t !== void 0 ? nd.get(t) : void 0) ?? Bv, p = py.get(e) || 0;
                py.set(e, p + (a - _)), td == null || td.measure(e, t, n);
            }
        }
        var td, JE, bg, Bv, nd, uy, py, Pz = It({
            "src/compiler/performance.ts" () {
                "use strict";
                En(), JE = {
                    enter: gr,
                    exit: gr
                }, bg = !1, Bv = ga(), nd = new Map, uy = new Map, py = new Map;
            }
        }), Uv = ()=>{}, RE = ()=>{}, ba;
        function jE(e, t = !0) {
            let n = pd[e.category];
            return t ? n.toLowerCase() : n;
        }
        var rd, id, ad, fy, od, dy, my, Tl, hy, sd, yy, gy, by, vy, Ty, Sy, xy, wy, Ey, Cy, Ay, ky, Dy, Py, Iy, _d, Ny, Oy, My, Ly, cd, ld, Jy, Ry, jy, Fy, By, Uy, ud, qy, zy, Wy, Vy, Hy, Gy, pd, Xy, $y, Qy, Yy, Ky, Zy, e0, t0, n0, fd, r0, i0, a0, o0, s0, dd, md, hd, _0, c0, l0, u0, p0, f0, d0, m0, Vd, h0, qv = It({
            "src/compiler/types.ts" () {
                "use strict";
                rd = ((e)=>(e[e.Unknown = 0] = "Unknown", e[e.EndOfFileToken = 1] = "EndOfFileToken", e[e.SingleLineCommentTrivia = 2] = "SingleLineCommentTrivia", e[e.MultiLineCommentTrivia = 3] = "MultiLineCommentTrivia", e[e.NewLineTrivia = 4] = "NewLineTrivia", e[e.WhitespaceTrivia = 5] = "WhitespaceTrivia", e[e.ShebangTrivia = 6] = "ShebangTrivia", e[e.ConflictMarkerTrivia = 7] = "ConflictMarkerTrivia", e[e.NonTextFileMarkerTrivia = 8] = "NonTextFileMarkerTrivia", e[e.NumericLiteral = 9] = "NumericLiteral", e[e.BigIntLiteral = 10] = "BigIntLiteral", e[e.StringLiteral = 11] = "StringLiteral", e[e.JsxText = 12] = "JsxText", e[e.JsxTextAllWhiteSpaces = 13] = "JsxTextAllWhiteSpaces", e[e.RegularExpressionLiteral = 14] = "RegularExpressionLiteral", e[e.NoSubstitutionTemplateLiteral = 15] = "NoSubstitutionTemplateLiteral", e[e.TemplateHead = 16] = "TemplateHead", e[e.TemplateMiddle = 17] = "TemplateMiddle", e[e.TemplateTail = 18] = "TemplateTail", e[e.OpenBraceToken = 19] = "OpenBraceToken", e[e.CloseBraceToken = 20] = "CloseBraceToken", e[e.OpenParenToken = 21] = "OpenParenToken", e[e.CloseParenToken = 22] = "CloseParenToken", e[e.OpenBracketToken = 23] = "OpenBracketToken", e[e.CloseBracketToken = 24] = "CloseBracketToken", e[e.DotToken = 25] = "DotToken", e[e.DotDotDotToken = 26] = "DotDotDotToken", e[e.SemicolonToken = 27] = "SemicolonToken", e[e.CommaToken = 28] = "CommaToken", e[e.QuestionDotToken = 29] = "QuestionDotToken", e[e.LessThanToken = 30] = "LessThanToken", e[e.LessThanSlashToken = 31] = "LessThanSlashToken", e[e.GreaterThanToken = 32] = "GreaterThanToken", e[e.LessThanEqualsToken = 33] = "LessThanEqualsToken", e[e.GreaterThanEqualsToken = 34] = "GreaterThanEqualsToken", e[e.EqualsEqualsToken = 35] = "EqualsEqualsToken", e[e.ExclamationEqualsToken = 36] = "ExclamationEqualsToken", e[e.EqualsEqualsEqualsToken = 37] = "EqualsEqualsEqualsToken", e[e.ExclamationEqualsEqualsToken = 38] = "ExclamationEqualsEqualsToken", e[e.EqualsGreaterThanToken = 39] = "EqualsGreaterThanToken", e[e.PlusToken = 40] = "PlusToken", e[e.MinusToken = 41] = "MinusToken", e[e.AsteriskToken = 42] = "AsteriskToken", e[e.AsteriskAsteriskToken = 43] = "AsteriskAsteriskToken", e[e.SlashToken = 44] = "SlashToken", e[e.PercentToken = 45] = "PercentToken", e[e.PlusPlusToken = 46] = "PlusPlusToken", e[e.MinusMinusToken = 47] = "MinusMinusToken", e[e.LessThanLessThanToken = 48] = "LessThanLessThanToken", e[e.GreaterThanGreaterThanToken = 49] = "GreaterThanGreaterThanToken", e[e.GreaterThanGreaterThanGreaterThanToken = 50] = "GreaterThanGreaterThanGreaterThanToken", e[e.AmpersandToken = 51] = "AmpersandToken", e[e.BarToken = 52] = "BarToken", e[e.CaretToken = 53] = "CaretToken", e[e.ExclamationToken = 54] = "ExclamationToken", e[e.TildeToken = 55] = "TildeToken", e[e.AmpersandAmpersandToken = 56] = "AmpersandAmpersandToken", e[e.BarBarToken = 57] = "BarBarToken", e[e.QuestionToken = 58] = "QuestionToken", e[e.ColonToken = 59] = "ColonToken", e[e.AtToken = 60] = "AtToken", e[e.QuestionQuestionToken = 61] = "QuestionQuestionToken", e[e.BacktickToken = 62] = "BacktickToken", e[e.HashToken = 63] = "HashToken", e[e.EqualsToken = 64] = "EqualsToken", e[e.PlusEqualsToken = 65] = "PlusEqualsToken", e[e.MinusEqualsToken = 66] = "MinusEqualsToken", e[e.AsteriskEqualsToken = 67] = "AsteriskEqualsToken", e[e.AsteriskAsteriskEqualsToken = 68] = "AsteriskAsteriskEqualsToken", e[e.SlashEqualsToken = 69] = "SlashEqualsToken", e[e.PercentEqualsToken = 70] = "PercentEqualsToken", e[e.LessThanLessThanEqualsToken = 71] = "LessThanLessThanEqualsToken", e[e.GreaterThanGreaterThanEqualsToken = 72] = "GreaterThanGreaterThanEqualsToken", e[e.GreaterThanGreaterThanGreaterThanEqualsToken = 73] = "GreaterThanGreaterThanGreaterThanEqualsToken", e[e.AmpersandEqualsToken = 74] = "AmpersandEqualsToken", e[e.BarEqualsToken = 75] = "BarEqualsToken", e[e.BarBarEqualsToken = 76] = "BarBarEqualsToken", e[e.AmpersandAmpersandEqualsToken = 77] = "AmpersandAmpersandEqualsToken", e[e.QuestionQuestionEqualsToken = 78] = "QuestionQuestionEqualsToken", e[e.CaretEqualsToken = 79] = "CaretEqualsToken", e[e.Identifier = 80] = "Identifier", e[e.PrivateIdentifier = 81] = "PrivateIdentifier", e[e.JSDocCommentTextToken = 82] = "JSDocCommentTextToken", e[e.BreakKeyword = 83] = "BreakKeyword", e[e.CaseKeyword = 84] = "CaseKeyword", e[e.CatchKeyword = 85] = "CatchKeyword", e[e.ClassKeyword = 86] = "ClassKeyword", e[e.ConstKeyword = 87] = "ConstKeyword", e[e.ContinueKeyword = 88] = "ContinueKeyword", e[e.DebuggerKeyword = 89] = "DebuggerKeyword", e[e.DefaultKeyword = 90] = "DefaultKeyword", e[e.DeleteKeyword = 91] = "DeleteKeyword", e[e.DoKeyword = 92] = "DoKeyword", e[e.ElseKeyword = 93] = "ElseKeyword", e[e.EnumKeyword = 94] = "EnumKeyword", e[e.ExportKeyword = 95] = "ExportKeyword", e[e.ExtendsKeyword = 96] = "ExtendsKeyword", e[e.FalseKeyword = 97] = "FalseKeyword", e[e.FinallyKeyword = 98] = "FinallyKeyword", e[e.ForKeyword = 99] = "ForKeyword", e[e.FunctionKeyword = 100] = "FunctionKeyword", e[e.IfKeyword = 101] = "IfKeyword", e[e.ImportKeyword = 102] = "ImportKeyword", e[e.InKeyword = 103] = "InKeyword", e[e.InstanceOfKeyword = 104] = "InstanceOfKeyword", e[e.NewKeyword = 105] = "NewKeyword", e[e.NullKeyword = 106] = "NullKeyword", e[e.ReturnKeyword = 107] = "ReturnKeyword", e[e.SuperKeyword = 108] = "SuperKeyword", e[e.SwitchKeyword = 109] = "SwitchKeyword", e[e.ThisKeyword = 110] = "ThisKeyword", e[e.ThrowKeyword = 111] = "ThrowKeyword", e[e.TrueKeyword = 112] = "TrueKeyword", e[e.TryKeyword = 113] = "TryKeyword", e[e.TypeOfKeyword = 114] = "TypeOfKeyword", e[e.VarKeyword = 115] = "VarKeyword", e[e.VoidKeyword = 116] = "VoidKeyword", e[e.WhileKeyword = 117] = "WhileKeyword", e[e.WithKeyword = 118] = "WithKeyword", e[e.ImplementsKeyword = 119] = "ImplementsKeyword", e[e.InterfaceKeyword = 120] = "InterfaceKeyword", e[e.LetKeyword = 121] = "LetKeyword", e[e.PackageKeyword = 122] = "PackageKeyword", e[e.PrivateKeyword = 123] = "PrivateKeyword", e[e.ProtectedKeyword = 124] = "ProtectedKeyword", e[e.PublicKeyword = 125] = "PublicKeyword", e[e.StaticKeyword = 126] = "StaticKeyword", e[e.YieldKeyword = 127] = "YieldKeyword", e[e.AbstractKeyword = 128] = "AbstractKeyword", e[e.AccessorKeyword = 129] = "AccessorKeyword", e[e.AsKeyword = 130] = "AsKeyword", e[e.AssertsKeyword = 131] = "AssertsKeyword", e[e.AssertKeyword = 132] = "AssertKeyword", e[e.AnyKeyword = 133] = "AnyKeyword", e[e.AsyncKeyword = 134] = "AsyncKeyword", e[e.AwaitKeyword = 135] = "AwaitKeyword", e[e.BooleanKeyword = 136] = "BooleanKeyword", e[e.ConstructorKeyword = 137] = "ConstructorKeyword", e[e.DeclareKeyword = 138] = "DeclareKeyword", e[e.GetKeyword = 139] = "GetKeyword", e[e.InferKeyword = 140] = "InferKeyword", e[e.IntrinsicKeyword = 141] = "IntrinsicKeyword", e[e.IsKeyword = 142] = "IsKeyword", e[e.KeyOfKeyword = 143] = "KeyOfKeyword", e[e.ModuleKeyword = 144] = "ModuleKeyword", e[e.NamespaceKeyword = 145] = "NamespaceKeyword", e[e.NeverKeyword = 146] = "NeverKeyword", e[e.OutKeyword = 147] = "OutKeyword", e[e.ReadonlyKeyword = 148] = "ReadonlyKeyword", e[e.RequireKeyword = 149] = "RequireKeyword", e[e.NumberKeyword = 150] = "NumberKeyword", e[e.ObjectKeyword = 151] = "ObjectKeyword", e[e.SatisfiesKeyword = 152] = "SatisfiesKeyword", e[e.SetKeyword = 153] = "SetKeyword", e[e.StringKeyword = 154] = "StringKeyword", e[e.SymbolKeyword = 155] = "SymbolKeyword", e[e.TypeKeyword = 156] = "TypeKeyword", e[e.UndefinedKeyword = 157] = "UndefinedKeyword", e[e.UniqueKeyword = 158] = "UniqueKeyword", e[e.UnknownKeyword = 159] = "UnknownKeyword", e[e.UsingKeyword = 160] = "UsingKeyword", e[e.FromKeyword = 161] = "FromKeyword", e[e.GlobalKeyword = 162] = "GlobalKeyword", e[e.BigIntKeyword = 163] = "BigIntKeyword", e[e.OverrideKeyword = 164] = "OverrideKeyword", e[e.OfKeyword = 165] = "OfKeyword", e[e.QualifiedName = 166] = "QualifiedName", e[e.ComputedPropertyName = 167] = "ComputedPropertyName", e[e.TypeParameter = 168] = "TypeParameter", e[e.Parameter = 169] = "Parameter", e[e.Decorator = 170] = "Decorator", e[e.PropertySignature = 171] = "PropertySignature", e[e.PropertyDeclaration = 172] = "PropertyDeclaration", e[e.MethodSignature = 173] = "MethodSignature", e[e.MethodDeclaration = 174] = "MethodDeclaration", e[e.ClassStaticBlockDeclaration = 175] = "ClassStaticBlockDeclaration", e[e.Constructor = 176] = "Constructor", e[e.GetAccessor = 177] = "GetAccessor", e[e.SetAccessor = 178] = "SetAccessor", e[e.CallSignature = 179] = "CallSignature", e[e.ConstructSignature = 180] = "ConstructSignature", e[e.IndexSignature = 181] = "IndexSignature", e[e.TypePredicate = 182] = "TypePredicate", e[e.TypeReference = 183] = "TypeReference", e[e.FunctionType = 184] = "FunctionType", e[e.ConstructorType = 185] = "ConstructorType", e[e.TypeQuery = 186] = "TypeQuery", e[e.TypeLiteral = 187] = "TypeLiteral", e[e.ArrayType = 188] = "ArrayType", e[e.TupleType = 189] = "TupleType", e[e.OptionalType = 190] = "OptionalType", e[e.RestType = 191] = "RestType", e[e.UnionType = 192] = "UnionType", e[e.IntersectionType = 193] = "IntersectionType", e[e.ConditionalType = 194] = "ConditionalType", e[e.InferType = 195] = "InferType", e[e.ParenthesizedType = 196] = "ParenthesizedType", e[e.ThisType = 197] = "ThisType", e[e.TypeOperator = 198] = "TypeOperator", e[e.IndexedAccessType = 199] = "IndexedAccessType", e[e.MappedType = 200] = "MappedType", e[e.LiteralType = 201] = "LiteralType", e[e.NamedTupleMember = 202] = "NamedTupleMember", e[e.TemplateLiteralType = 203] = "TemplateLiteralType", e[e.TemplateLiteralTypeSpan = 204] = "TemplateLiteralTypeSpan", e[e.ImportType = 205] = "ImportType", e[e.ObjectBindingPattern = 206] = "ObjectBindingPattern", e[e.ArrayBindingPattern = 207] = "ArrayBindingPattern", e[e.BindingElement = 208] = "BindingElement", e[e.ArrayLiteralExpression = 209] = "ArrayLiteralExpression", e[e.ObjectLiteralExpression = 210] = "ObjectLiteralExpression", e[e.PropertyAccessExpression = 211] = "PropertyAccessExpression", e[e.ElementAccessExpression = 212] = "ElementAccessExpression", e[e.CallExpression = 213] = "CallExpression", e[e.NewExpression = 214] = "NewExpression", e[e.TaggedTemplateExpression = 215] = "TaggedTemplateExpression", e[e.TypeAssertionExpression = 216] = "TypeAssertionExpression", e[e.ParenthesizedExpression = 217] = "ParenthesizedExpression", e[e.FunctionExpression = 218] = "FunctionExpression", e[e.ArrowFunction = 219] = "ArrowFunction", e[e.DeleteExpression = 220] = "DeleteExpression", e[e.TypeOfExpression = 221] = "TypeOfExpression", e[e.VoidExpression = 222] = "VoidExpression", e[e.AwaitExpression = 223] = "AwaitExpression", e[e.PrefixUnaryExpression = 224] = "PrefixUnaryExpression", e[e.PostfixUnaryExpression = 225] = "PostfixUnaryExpression", e[e.BinaryExpression = 226] = "BinaryExpression", e[e.ConditionalExpression = 227] = "ConditionalExpression", e[e.TemplateExpression = 228] = "TemplateExpression", e[e.YieldExpression = 229] = "YieldExpression", e[e.SpreadElement = 230] = "SpreadElement", e[e.ClassExpression = 231] = "ClassExpression", e[e.OmittedExpression = 232] = "OmittedExpression", e[e.ExpressionWithTypeArguments = 233] = "ExpressionWithTypeArguments", e[e.AsExpression = 234] = "AsExpression", e[e.NonNullExpression = 235] = "NonNullExpression", e[e.MetaProperty = 236] = "MetaProperty", e[e.SyntheticExpression = 237] = "SyntheticExpression", e[e.SatisfiesExpression = 238] = "SatisfiesExpression", e[e.TemplateSpan = 239] = "TemplateSpan", e[e.SemicolonClassElement = 240] = "SemicolonClassElement", e[e.Block = 241] = "Block", e[e.EmptyStatement = 242] = "EmptyStatement", e[e.VariableStatement = 243] = "VariableStatement", e[e.ExpressionStatement = 244] = "ExpressionStatement", e[e.IfStatement = 245] = "IfStatement", e[e.DoStatement = 246] = "DoStatement", e[e.WhileStatement = 247] = "WhileStatement", e[e.ForStatement = 248] = "ForStatement", e[e.ForInStatement = 249] = "ForInStatement", e[e.ForOfStatement = 250] = "ForOfStatement", e[e.ContinueStatement = 251] = "ContinueStatement", e[e.BreakStatement = 252] = "BreakStatement", e[e.ReturnStatement = 253] = "ReturnStatement", e[e.WithStatement = 254] = "WithStatement", e[e.SwitchStatement = 255] = "SwitchStatement", e[e.LabeledStatement = 256] = "LabeledStatement", e[e.ThrowStatement = 257] = "ThrowStatement", e[e.TryStatement = 258] = "TryStatement", e[e.DebuggerStatement = 259] = "DebuggerStatement", e[e.VariableDeclaration = 260] = "VariableDeclaration", e[e.VariableDeclarationList = 261] = "VariableDeclarationList", e[e.FunctionDeclaration = 262] = "FunctionDeclaration", e[e.ClassDeclaration = 263] = "ClassDeclaration", e[e.InterfaceDeclaration = 264] = "InterfaceDeclaration", e[e.TypeAliasDeclaration = 265] = "TypeAliasDeclaration", e[e.EnumDeclaration = 266] = "EnumDeclaration", e[e.ModuleDeclaration = 267] = "ModuleDeclaration", e[e.ModuleBlock = 268] = "ModuleBlock", e[e.CaseBlock = 269] = "CaseBlock", e[e.NamespaceExportDeclaration = 270] = "NamespaceExportDeclaration", e[e.ImportEqualsDeclaration = 271] = "ImportEqualsDeclaration", e[e.ImportDeclaration = 272] = "ImportDeclaration", e[e.ImportClause = 273] = "ImportClause", e[e.NamespaceImport = 274] = "NamespaceImport", e[e.NamedImports = 275] = "NamedImports", e[e.ImportSpecifier = 276] = "ImportSpecifier", e[e.ExportAssignment = 277] = "ExportAssignment", e[e.ExportDeclaration = 278] = "ExportDeclaration", e[e.NamedExports = 279] = "NamedExports", e[e.NamespaceExport = 280] = "NamespaceExport", e[e.ExportSpecifier = 281] = "ExportSpecifier", e[e.MissingDeclaration = 282] = "MissingDeclaration", e[e.ExternalModuleReference = 283] = "ExternalModuleReference", e[e.JsxElement = 284] = "JsxElement", e[e.JsxSelfClosingElement = 285] = "JsxSelfClosingElement", e[e.JsxOpeningElement = 286] = "JsxOpeningElement", e[e.JsxClosingElement = 287] = "JsxClosingElement", e[e.JsxFragment = 288] = "JsxFragment", e[e.JsxOpeningFragment = 289] = "JsxOpeningFragment", e[e.JsxClosingFragment = 290] = "JsxClosingFragment", e[e.JsxAttribute = 291] = "JsxAttribute", e[e.JsxAttributes = 292] = "JsxAttributes", e[e.JsxSpreadAttribute = 293] = "JsxSpreadAttribute", e[e.JsxExpression = 294] = "JsxExpression", e[e.JsxNamespacedName = 295] = "JsxNamespacedName", e[e.CaseClause = 296] = "CaseClause", e[e.DefaultClause = 297] = "DefaultClause", e[e.HeritageClause = 298] = "HeritageClause", e[e.CatchClause = 299] = "CatchClause", e[e.ImportAttributes = 300] = "ImportAttributes", e[e.ImportAttribute = 301] = "ImportAttribute", e[e.AssertClause = 300] = "AssertClause", e[e.AssertEntry = 301] = "AssertEntry", e[e.ImportTypeAssertionContainer = 302] = "ImportTypeAssertionContainer", e[e.PropertyAssignment = 303] = "PropertyAssignment", e[e.ShorthandPropertyAssignment = 304] = "ShorthandPropertyAssignment", e[e.SpreadAssignment = 305] = "SpreadAssignment", e[e.EnumMember = 306] = "EnumMember", e[e.UnparsedPrologue = 307] = "UnparsedPrologue", e[e.UnparsedPrepend = 308] = "UnparsedPrepend", e[e.UnparsedText = 309] = "UnparsedText", e[e.UnparsedInternalText = 310] = "UnparsedInternalText", e[e.UnparsedSyntheticReference = 311] = "UnparsedSyntheticReference", e[e.SourceFile = 312] = "SourceFile", e[e.Bundle = 313] = "Bundle", e[e.UnparsedSource = 314] = "UnparsedSource", e[e.InputFiles = 315] = "InputFiles", e[e.JSDocTypeExpression = 316] = "JSDocTypeExpression", e[e.JSDocNameReference = 317] = "JSDocNameReference", e[e.JSDocMemberName = 318] = "JSDocMemberName", e[e.JSDocAllType = 319] = "JSDocAllType", e[e.JSDocUnknownType = 320] = "JSDocUnknownType", e[e.JSDocNullableType = 321] = "JSDocNullableType", e[e.JSDocNonNullableType = 322] = "JSDocNonNullableType", e[e.JSDocOptionalType = 323] = "JSDocOptionalType", e[e.JSDocFunctionType = 324] = "JSDocFunctionType", e[e.JSDocVariadicType = 325] = "JSDocVariadicType", e[e.JSDocNamepathType = 326] = "JSDocNamepathType", e[e.JSDoc = 327] = "JSDoc", e[e.JSDocComment = 327] = "JSDocComment", e[e.JSDocText = 328] = "JSDocText", e[e.JSDocTypeLiteral = 329] = "JSDocTypeLiteral", e[e.JSDocSignature = 330] = "JSDocSignature", e[e.JSDocLink = 331] = "JSDocLink", e[e.JSDocLinkCode = 332] = "JSDocLinkCode", e[e.JSDocLinkPlain = 333] = "JSDocLinkPlain", e[e.JSDocTag = 334] = "JSDocTag", e[e.JSDocAugmentsTag = 335] = "JSDocAugmentsTag", e[e.JSDocImplementsTag = 336] = "JSDocImplementsTag", e[e.JSDocAuthorTag = 337] = "JSDocAuthorTag", e[e.JSDocDeprecatedTag = 338] = "JSDocDeprecatedTag", e[e.JSDocClassTag = 339] = "JSDocClassTag", e[e.JSDocPublicTag = 340] = "JSDocPublicTag", e[e.JSDocPrivateTag = 341] = "JSDocPrivateTag", e[e.JSDocProtectedTag = 342] = "JSDocProtectedTag", e[e.JSDocReadonlyTag = 343] = "JSDocReadonlyTag", e[e.JSDocOverrideTag = 344] = "JSDocOverrideTag", e[e.JSDocCallbackTag = 345] = "JSDocCallbackTag", e[e.JSDocOverloadTag = 346] = "JSDocOverloadTag", e[e.JSDocEnumTag = 347] = "JSDocEnumTag", e[e.JSDocParameterTag = 348] = "JSDocParameterTag", e[e.JSDocReturnTag = 349] = "JSDocReturnTag", e[e.JSDocThisTag = 350] = "JSDocThisTag", e[e.JSDocTypeTag = 351] = "JSDocTypeTag", e[e.JSDocTemplateTag = 352] = "JSDocTemplateTag", e[e.JSDocTypedefTag = 353] = "JSDocTypedefTag", e[e.JSDocSeeTag = 354] = "JSDocSeeTag", e[e.JSDocPropertyTag = 355] = "JSDocPropertyTag", e[e.JSDocThrowsTag = 356] = "JSDocThrowsTag", e[e.JSDocSatisfiesTag = 357] = "JSDocSatisfiesTag", e[e.SyntaxList = 358] = "SyntaxList", e[e.NotEmittedStatement = 359] = "NotEmittedStatement", e[e.PartiallyEmittedExpression = 360] = "PartiallyEmittedExpression", e[e.CommaListExpression = 361] = "CommaListExpression", e[e.SyntheticReferenceExpression = 362] = "SyntheticReferenceExpression", e[e.Count = 363] = "Count", e[e.FirstAssignment = 64] = "FirstAssignment", e[e.LastAssignment = 79] = "LastAssignment", e[e.FirstCompoundAssignment = 65] = "FirstCompoundAssignment", e[e.LastCompoundAssignment = 79] = "LastCompoundAssignment", e[e.FirstReservedWord = 83] = "FirstReservedWord", e[e.LastReservedWord = 118] = "LastReservedWord", e[e.FirstKeyword = 83] = "FirstKeyword", e[e.LastKeyword = 165] = "LastKeyword", e[e.FirstFutureReservedWord = 119] = "FirstFutureReservedWord", e[e.LastFutureReservedWord = 127] = "LastFutureReservedWord", e[e.FirstTypeNode = 182] = "FirstTypeNode", e[e.LastTypeNode = 205] = "LastTypeNode", e[e.FirstPunctuation = 19] = "FirstPunctuation", e[e.LastPunctuation = 79] = "LastPunctuation", e[e.FirstToken = 0] = "FirstToken", e[e.LastToken = 165] = "LastToken", e[e.FirstTriviaToken = 2] = "FirstTriviaToken", e[e.LastTriviaToken = 7] = "LastTriviaToken", e[e.FirstLiteralToken = 9] = "FirstLiteralToken", e[e.LastLiteralToken = 15] = "LastLiteralToken", e[e.FirstTemplateToken = 15] = "FirstTemplateToken", e[e.LastTemplateToken = 18] = "LastTemplateToken", e[e.FirstBinaryOperator = 30] = "FirstBinaryOperator", e[e.LastBinaryOperator = 79] = "LastBinaryOperator", e[e.FirstStatement = 243] = "FirstStatement", e[e.LastStatement = 259] = "LastStatement", e[e.FirstNode = 166] = "FirstNode", e[e.FirstJSDocNode = 316] = "FirstJSDocNode", e[e.LastJSDocNode = 357] = "LastJSDocNode", e[e.FirstJSDocTagNode = 334] = "FirstJSDocTagNode", e[e.LastJSDocTagNode = 357] = "LastJSDocTagNode", e[e.FirstContextualKeyword = 128] = "FirstContextualKeyword", e[e.LastContextualKeyword = 165] = "LastContextualKeyword", e))(rd || {}), id = ((e)=>(e[e.None = 0] = "None", e[e.Let = 1] = "Let", e[e.Const = 2] = "Const", e[e.Using = 4] = "Using", e[e.AwaitUsing = 6] = "AwaitUsing", e[e.NestedNamespace = 8] = "NestedNamespace", e[e.Synthesized = 16] = "Synthesized", e[e.Namespace = 32] = "Namespace", e[e.OptionalChain = 64] = "OptionalChain", e[e.ExportContext = 128] = "ExportContext", e[e.ContainsThis = 256] = "ContainsThis", e[e.HasImplicitReturn = 512] = "HasImplicitReturn", e[e.HasExplicitReturn = 1024] = "HasExplicitReturn", e[e.GlobalAugmentation = 2048] = "GlobalAugmentation", e[e.HasAsyncFunctions = 4096] = "HasAsyncFunctions", e[e.DisallowInContext = 8192] = "DisallowInContext", e[e.YieldContext = 16384] = "YieldContext", e[e.DecoratorContext = 32768] = "DecoratorContext", e[e.AwaitContext = 65536] = "AwaitContext", e[e.DisallowConditionalTypesContext = 131072] = "DisallowConditionalTypesContext", e[e.ThisNodeHasError = 262144] = "ThisNodeHasError", e[e.JavaScriptFile = 524288] = "JavaScriptFile", e[e.ThisNodeOrAnySubNodesHasError = 1048576] = "ThisNodeOrAnySubNodesHasError", e[e.HasAggregatedChildData = 2097152] = "HasAggregatedChildData", e[e.PossiblyContainsDynamicImport = 4194304] = "PossiblyContainsDynamicImport", e[e.PossiblyContainsImportMeta = 8388608] = "PossiblyContainsImportMeta", e[e.JSDoc = 16777216] = "JSDoc", e[e.Ambient = 33554432] = "Ambient", e[e.InWithStatement = 67108864] = "InWithStatement", e[e.JsonFile = 134217728] = "JsonFile", e[e.TypeCached = 268435456] = "TypeCached", e[e.Deprecated = 536870912] = "Deprecated", e[e.BlockScoped = 7] = "BlockScoped", e[e.Constant = 6] = "Constant", e[e.ReachabilityCheckFlags = 1536] = "ReachabilityCheckFlags", e[e.ReachabilityAndEmitFlags = 5632] = "ReachabilityAndEmitFlags", e[e.ContextFlags = 101441536] = "ContextFlags", e[e.TypeExcludesFlags = 81920] = "TypeExcludesFlags", e[e.PermanentlySetIncrementalFlags = 12582912] = "PermanentlySetIncrementalFlags", e[e.IdentifierHasExtendedUnicodeEscape = 256] = "IdentifierHasExtendedUnicodeEscape", e[e.IdentifierIsInJSDocNamespace = 4096] = "IdentifierIsInJSDocNamespace", e))(id || {}), ad = ((e)=>(e[e.None = 0] = "None", e[e.Public = 1] = "Public", e[e.Private = 2] = "Private", e[e.Protected = 4] = "Protected", e[e.Readonly = 8] = "Readonly", e[e.Override = 16] = "Override", e[e.Export = 32] = "Export", e[e.Abstract = 64] = "Abstract", e[e.Ambient = 128] = "Ambient", e[e.Static = 256] = "Static", e[e.Accessor = 512] = "Accessor", e[e.Async = 1024] = "Async", e[e.Default = 2048] = "Default", e[e.Const = 4096] = "Const", e[e.In = 8192] = "In", e[e.Out = 16384] = "Out", e[e.Decorator = 32768] = "Decorator", e[e.Deprecated = 65536] = "Deprecated", e[e.JSDocPublic = 8388608] = "JSDocPublic", e[e.JSDocPrivate = 16777216] = "JSDocPrivate", e[e.JSDocProtected = 33554432] = "JSDocProtected", e[e.JSDocReadonly = 67108864] = "JSDocReadonly", e[e.JSDocOverride = 134217728] = "JSDocOverride", e[e.SyntacticOrJSDocModifiers = 31] = "SyntacticOrJSDocModifiers", e[e.SyntacticOnlyModifiers = 65504] = "SyntacticOnlyModifiers", e[e.SyntacticModifiers = 65535] = "SyntacticModifiers", e[e.JSDocCacheOnlyModifiers = 260046848] = "JSDocCacheOnlyModifiers", e[e.JSDocOnlyModifiers = 65536] = "JSDocOnlyModifiers", e[e.NonCacheOnlyModifiers = 131071] = "NonCacheOnlyModifiers", e[e.HasComputedJSDocModifiers = 268435456] = "HasComputedJSDocModifiers", e[e.HasComputedFlags = 536870912] = "HasComputedFlags", e[e.AccessibilityModifier = 7] = "AccessibilityModifier", e[e.ParameterPropertyModifier = 31] = "ParameterPropertyModifier", e[e.NonPublicAccessibilityModifier = 6] = "NonPublicAccessibilityModifier", e[e.TypeScriptModifier = 28895] = "TypeScriptModifier", e[e.ExportDefault = 2080] = "ExportDefault", e[e.All = 131071] = "All", e[e.Modifier = 98303] = "Modifier", e))(ad || {}), fy = ((e)=>(e[e.None = 0] = "None", e[e.IntrinsicNamedElement = 1] = "IntrinsicNamedElement", e[e.IntrinsicIndexedElement = 2] = "IntrinsicIndexedElement", e[e.IntrinsicElement = 3] = "IntrinsicElement", e))(fy || {}), od = ((e)=>(e[e.Succeeded = 1] = "Succeeded", e[e.Failed = 2] = "Failed", e[e.Reported = 4] = "Reported", e[e.ReportsUnmeasurable = 8] = "ReportsUnmeasurable", e[e.ReportsUnreliable = 16] = "ReportsUnreliable", e[e.ReportsMask = 24] = "ReportsMask", e))(od || {}), dy = ((e)=>(e[e.None = 0] = "None", e[e.Auto = 1] = "Auto", e[e.Loop = 2] = "Loop", e[e.Unique = 3] = "Unique", e[e.Node = 4] = "Node", e[e.KindMask = 7] = "KindMask", e[e.ReservedInNestedScopes = 8] = "ReservedInNestedScopes", e[e.Optimistic = 16] = "Optimistic", e[e.FileLevel = 32] = "FileLevel", e[e.AllowNameSubstitution = 64] = "AllowNameSubstitution", e))(dy || {}), my = ((e)=>(e[e.None = 0] = "None", e[e.PrecedingLineBreak = 1] = "PrecedingLineBreak", e[e.PrecedingJSDocComment = 2] = "PrecedingJSDocComment", e[e.Unterminated = 4] = "Unterminated", e[e.ExtendedUnicodeEscape = 8] = "ExtendedUnicodeEscape", e[e.Scientific = 16] = "Scientific", e[e.Octal = 32] = "Octal", e[e.HexSpecifier = 64] = "HexSpecifier", e[e.BinarySpecifier = 128] = "BinarySpecifier", e[e.OctalSpecifier = 256] = "OctalSpecifier", e[e.ContainsSeparator = 512] = "ContainsSeparator", e[e.UnicodeEscape = 1024] = "UnicodeEscape", e[e.ContainsInvalidEscape = 2048] = "ContainsInvalidEscape", e[e.HexEscape = 4096] = "HexEscape", e[e.ContainsLeadingZero = 8192] = "ContainsLeadingZero", e[e.ContainsInvalidSeparator = 16384] = "ContainsInvalidSeparator", e[e.BinaryOrOctalSpecifier = 384] = "BinaryOrOctalSpecifier", e[e.WithSpecifier = 448] = "WithSpecifier", e[e.StringLiteralFlags = 7176] = "StringLiteralFlags", e[e.NumericLiteralFlags = 25584] = "NumericLiteralFlags", e[e.TemplateLiteralLikeFlags = 7176] = "TemplateLiteralLikeFlags", e[e.IsInvalid = 26656] = "IsInvalid", e))(my || {}), Tl = ((e)=>(e[e.Unreachable = 1] = "Unreachable", e[e.Start = 2] = "Start", e[e.BranchLabel = 4] = "BranchLabel", e[e.LoopLabel = 8] = "LoopLabel", e[e.Assignment = 16] = "Assignment", e[e.TrueCondition = 32] = "TrueCondition", e[e.FalseCondition = 64] = "FalseCondition", e[e.SwitchClause = 128] = "SwitchClause", e[e.ArrayMutation = 256] = "ArrayMutation", e[e.Call = 512] = "Call", e[e.ReduceLabel = 1024] = "ReduceLabel", e[e.Referenced = 2048] = "Referenced", e[e.Shared = 4096] = "Shared", e[e.Label = 12] = "Label", e[e.Condition = 96] = "Condition", e))(Tl || {}), hy = ((e)=>(e[e.ExpectError = 0] = "ExpectError", e[e.Ignore = 1] = "Ignore", e))(hy || {}), sd = class {
                }, yy = ((e)=>(e[e.RootFile = 0] = "RootFile", e[e.SourceFromProjectReference = 1] = "SourceFromProjectReference", e[e.OutputFromProjectReference = 2] = "OutputFromProjectReference", e[e.Import = 3] = "Import", e[e.ReferenceFile = 4] = "ReferenceFile", e[e.TypeReferenceDirective = 5] = "TypeReferenceDirective", e[e.LibFile = 6] = "LibFile", e[e.LibReferenceDirective = 7] = "LibReferenceDirective", e[e.AutomaticTypeDirectiveFile = 8] = "AutomaticTypeDirectiveFile", e))(yy || {}), gy = ((e)=>(e[e.FilePreprocessingReferencedDiagnostic = 0] = "FilePreprocessingReferencedDiagnostic", e[e.FilePreprocessingFileExplainingDiagnostic = 1] = "FilePreprocessingFileExplainingDiagnostic", e[e.ResolutionDiagnostics = 2] = "ResolutionDiagnostics", e))(gy || {}), by = ((e)=>(e[e.Js = 0] = "Js", e[e.Dts = 1] = "Dts", e))(by || {}), vy = ((e)=>(e[e.Not = 0] = "Not", e[e.SafeModules = 1] = "SafeModules", e[e.Completely = 2] = "Completely", e))(vy || {}), Ty = ((e)=>(e[e.Success = 0] = "Success", e[e.DiagnosticsPresent_OutputsSkipped = 1] = "DiagnosticsPresent_OutputsSkipped", e[e.DiagnosticsPresent_OutputsGenerated = 2] = "DiagnosticsPresent_OutputsGenerated", e[e.InvalidProject_OutputsSkipped = 3] = "InvalidProject_OutputsSkipped", e[e.ProjectReferenceCycle_OutputsSkipped = 4] = "ProjectReferenceCycle_OutputsSkipped", e))(Ty || {}), Sy = ((e)=>(e[e.Ok = 0] = "Ok", e[e.NeedsOverride = 1] = "NeedsOverride", e[e.HasInvalidOverride = 2] = "HasInvalidOverride", e))(Sy || {}), xy = ((e)=>(e[e.None = 0] = "None", e[e.Literal = 1] = "Literal", e[e.Subtype = 2] = "Subtype", e))(xy || {}), wy = ((e)=>(e[e.None = 0] = "None", e[e.Signature = 1] = "Signature", e[e.NoConstraints = 2] = "NoConstraints", e[e.Completions = 4] = "Completions", e[e.SkipBindingPatterns = 8] = "SkipBindingPatterns", e))(wy || {}), Ey = ((e)=>(e[e.None = 0] = "None", e[e.NoTruncation = 1] = "NoTruncation", e[e.WriteArrayAsGenericType = 2] = "WriteArrayAsGenericType", e[e.GenerateNamesForShadowedTypeParams = 4] = "GenerateNamesForShadowedTypeParams", e[e.UseStructuralFallback = 8] = "UseStructuralFallback", e[e.ForbidIndexedAccessSymbolReferences = 16] = "ForbidIndexedAccessSymbolReferences", e[e.WriteTypeArgumentsOfSignature = 32] = "WriteTypeArgumentsOfSignature", e[e.UseFullyQualifiedType = 64] = "UseFullyQualifiedType", e[e.UseOnlyExternalAliasing = 128] = "UseOnlyExternalAliasing", e[e.SuppressAnyReturnType = 256] = "SuppressAnyReturnType", e[e.WriteTypeParametersInQualifiedName = 512] = "WriteTypeParametersInQualifiedName", e[e.MultilineObjectLiterals = 1024] = "MultilineObjectLiterals", e[e.WriteClassExpressionAsTypeLiteral = 2048] = "WriteClassExpressionAsTypeLiteral", e[e.UseTypeOfFunction = 4096] = "UseTypeOfFunction", e[e.OmitParameterModifiers = 8192] = "OmitParameterModifiers", e[e.UseAliasDefinedOutsideCurrentScope = 16384] = "UseAliasDefinedOutsideCurrentScope", e[e.UseSingleQuotesForStringLiteralType = 268435456] = "UseSingleQuotesForStringLiteralType", e[e.NoTypeReduction = 536870912] = "NoTypeReduction", e[e.OmitThisParameter = 33554432] = "OmitThisParameter", e[e.AllowThisInObjectLiteral = 32768] = "AllowThisInObjectLiteral", e[e.AllowQualifiedNameInPlaceOfIdentifier = 65536] = "AllowQualifiedNameInPlaceOfIdentifier", e[e.AllowAnonymousIdentifier = 131072] = "AllowAnonymousIdentifier", e[e.AllowEmptyUnionOrIntersection = 262144] = "AllowEmptyUnionOrIntersection", e[e.AllowEmptyTuple = 524288] = "AllowEmptyTuple", e[e.AllowUniqueESSymbolType = 1048576] = "AllowUniqueESSymbolType", e[e.AllowEmptyIndexInfoType = 2097152] = "AllowEmptyIndexInfoType", e[e.WriteComputedProps = 1073741824] = "WriteComputedProps", e[e.AllowNodeModulesRelativePaths = 67108864] = "AllowNodeModulesRelativePaths", e[e.DoNotIncludeSymbolChain = 134217728] = "DoNotIncludeSymbolChain", e[e.IgnoreErrors = 70221824] = "IgnoreErrors", e[e.InObjectTypeLiteral = 4194304] = "InObjectTypeLiteral", e[e.InTypeAlias = 8388608] = "InTypeAlias", e[e.InInitialEntityName = 16777216] = "InInitialEntityName", e))(Ey || {}), Cy = ((e)=>(e[e.None = 0] = "None", e[e.NoTruncation = 1] = "NoTruncation", e[e.WriteArrayAsGenericType = 2] = "WriteArrayAsGenericType", e[e.UseStructuralFallback = 8] = "UseStructuralFallback", e[e.WriteTypeArgumentsOfSignature = 32] = "WriteTypeArgumentsOfSignature", e[e.UseFullyQualifiedType = 64] = "UseFullyQualifiedType", e[e.SuppressAnyReturnType = 256] = "SuppressAnyReturnType", e[e.MultilineObjectLiterals = 1024] = "MultilineObjectLiterals", e[e.WriteClassExpressionAsTypeLiteral = 2048] = "WriteClassExpressionAsTypeLiteral", e[e.UseTypeOfFunction = 4096] = "UseTypeOfFunction", e[e.OmitParameterModifiers = 8192] = "OmitParameterModifiers", e[e.UseAliasDefinedOutsideCurrentScope = 16384] = "UseAliasDefinedOutsideCurrentScope", e[e.UseSingleQuotesForStringLiteralType = 268435456] = "UseSingleQuotesForStringLiteralType", e[e.NoTypeReduction = 536870912] = "NoTypeReduction", e[e.OmitThisParameter = 33554432] = "OmitThisParameter", e[e.AllowUniqueESSymbolType = 1048576] = "AllowUniqueESSymbolType", e[e.AddUndefined = 131072] = "AddUndefined", e[e.WriteArrowStyleSignature = 262144] = "WriteArrowStyleSignature", e[e.InArrayType = 524288] = "InArrayType", e[e.InElementType = 2097152] = "InElementType", e[e.InFirstTypeArgument = 4194304] = "InFirstTypeArgument", e[e.InTypeAlias = 8388608] = "InTypeAlias", e[e.NodeBuilderFlagsMask = 848330091] = "NodeBuilderFlagsMask", e))(Cy || {}), Ay = ((e)=>(e[e.None = 0] = "None", e[e.WriteTypeParametersOrArguments = 1] = "WriteTypeParametersOrArguments", e[e.UseOnlyExternalAliasing = 2] = "UseOnlyExternalAliasing", e[e.AllowAnyNodeKind = 4] = "AllowAnyNodeKind", e[e.UseAliasDefinedOutsideCurrentScope = 8] = "UseAliasDefinedOutsideCurrentScope", e[e.WriteComputedProps = 16] = "WriteComputedProps", e[e.DoNotIncludeSymbolChain = 32] = "DoNotIncludeSymbolChain", e))(Ay || {}), ky = ((e)=>(e[e.Accessible = 0] = "Accessible", e[e.NotAccessible = 1] = "NotAccessible", e[e.CannotBeNamed = 2] = "CannotBeNamed", e))(ky || {}), Dy = ((e)=>(e[e.UnionOrIntersection = 0] = "UnionOrIntersection", e[e.Spread = 1] = "Spread", e))(Dy || {}), Py = ((e)=>(e[e.This = 0] = "This", e[e.Identifier = 1] = "Identifier", e[e.AssertsThis = 2] = "AssertsThis", e[e.AssertsIdentifier = 3] = "AssertsIdentifier", e))(Py || {}), Iy = ((e)=>(e[e.Unknown = 0] = "Unknown", e[e.TypeWithConstructSignatureAndValue = 1] = "TypeWithConstructSignatureAndValue", e[e.VoidNullableOrNeverType = 2] = "VoidNullableOrNeverType", e[e.NumberLikeType = 3] = "NumberLikeType", e[e.BigIntLikeType = 4] = "BigIntLikeType", e[e.StringLikeType = 5] = "StringLikeType", e[e.BooleanType = 6] = "BooleanType", e[e.ArrayLikeType = 7] = "ArrayLikeType", e[e.ESSymbolType = 8] = "ESSymbolType", e[e.Promise = 9] = "Promise", e[e.TypeWithCallSignature = 10] = "TypeWithCallSignature", e[e.ObjectType = 11] = "ObjectType", e))(Iy || {}), _d = ((e)=>(e[e.None = 0] = "None", e[e.FunctionScopedVariable = 1] = "FunctionScopedVariable", e[e.BlockScopedVariable = 2] = "BlockScopedVariable", e[e.Property = 4] = "Property", e[e.EnumMember = 8] = "EnumMember", e[e.Function = 16] = "Function", e[e.Class = 32] = "Class", e[e.Interface = 64] = "Interface", e[e.ConstEnum = 128] = "ConstEnum", e[e.RegularEnum = 256] = "RegularEnum", e[e.ValueModule = 512] = "ValueModule", e[e.NamespaceModule = 1024] = "NamespaceModule", e[e.TypeLiteral = 2048] = "TypeLiteral", e[e.ObjectLiteral = 4096] = "ObjectLiteral", e[e.Method = 8192] = "Method", e[e.Constructor = 16384] = "Constructor", e[e.GetAccessor = 32768] = "GetAccessor", e[e.SetAccessor = 65536] = "SetAccessor", e[e.Signature = 131072] = "Signature", e[e.TypeParameter = 262144] = "TypeParameter", e[e.TypeAlias = 524288] = "TypeAlias", e[e.ExportValue = 1048576] = "ExportValue", e[e.Alias = 2097152] = "Alias", e[e.Prototype = 4194304] = "Prototype", e[e.ExportStar = 8388608] = "ExportStar", e[e.Optional = 16777216] = "Optional", e[e.Transient = 33554432] = "Transient", e[e.Assignment = 67108864] = "Assignment", e[e.ModuleExports = 134217728] = "ModuleExports", e[e.All = 67108863] = "All", e[e.Enum = 384] = "Enum", e[e.Variable = 3] = "Variable", e[e.Value = 111551] = "Value", e[e.Type = 788968] = "Type", e[e.Namespace = 1920] = "Namespace", e[e.Module = 1536] = "Module", e[e.Accessor = 98304] = "Accessor", e[e.FunctionScopedVariableExcludes = 111550] = "FunctionScopedVariableExcludes", e[e.BlockScopedVariableExcludes = 111551] = "BlockScopedVariableExcludes", e[e.ParameterExcludes = 111551] = "ParameterExcludes", e[e.PropertyExcludes = 0] = "PropertyExcludes", e[e.EnumMemberExcludes = 900095] = "EnumMemberExcludes", e[e.FunctionExcludes = 110991] = "FunctionExcludes", e[e.ClassExcludes = 899503] = "ClassExcludes", e[e.InterfaceExcludes = 788872] = "InterfaceExcludes", e[e.RegularEnumExcludes = 899327] = "RegularEnumExcludes", e[e.ConstEnumExcludes = 899967] = "ConstEnumExcludes", e[e.ValueModuleExcludes = 110735] = "ValueModuleExcludes", e[e.NamespaceModuleExcludes = 0] = "NamespaceModuleExcludes", e[e.MethodExcludes = 103359] = "MethodExcludes", e[e.GetAccessorExcludes = 46015] = "GetAccessorExcludes", e[e.SetAccessorExcludes = 78783] = "SetAccessorExcludes", e[e.AccessorExcludes = 13247] = "AccessorExcludes", e[e.TypeParameterExcludes = 526824] = "TypeParameterExcludes", e[e.TypeAliasExcludes = 788968] = "TypeAliasExcludes", e[e.AliasExcludes = 2097152] = "AliasExcludes", e[e.ModuleMember = 2623475] = "ModuleMember", e[e.ExportHasLocal = 944] = "ExportHasLocal", e[e.BlockScoped = 418] = "BlockScoped", e[e.PropertyOrAccessor = 98308] = "PropertyOrAccessor", e[e.ClassMember = 106500] = "ClassMember", e[e.ExportSupportsDefaultModifier = 112] = "ExportSupportsDefaultModifier", e[e.ExportDoesNotSupportDefaultModifier = -113] = "ExportDoesNotSupportDefaultModifier", e[e.Classifiable = 2885600] = "Classifiable", e[e.LateBindingContainer = 6256] = "LateBindingContainer", e))(_d || {}), Ny = ((e)=>(e[e.Numeric = 0] = "Numeric", e[e.Literal = 1] = "Literal", e))(Ny || {}), Oy = ((e)=>(e[e.None = 0] = "None", e[e.Instantiated = 1] = "Instantiated", e[e.SyntheticProperty = 2] = "SyntheticProperty", e[e.SyntheticMethod = 4] = "SyntheticMethod", e[e.Readonly = 8] = "Readonly", e[e.ReadPartial = 16] = "ReadPartial", e[e.WritePartial = 32] = "WritePartial", e[e.HasNonUniformType = 64] = "HasNonUniformType", e[e.HasLiteralType = 128] = "HasLiteralType", e[e.ContainsPublic = 256] = "ContainsPublic", e[e.ContainsProtected = 512] = "ContainsProtected", e[e.ContainsPrivate = 1024] = "ContainsPrivate", e[e.ContainsStatic = 2048] = "ContainsStatic", e[e.Late = 4096] = "Late", e[e.ReverseMapped = 8192] = "ReverseMapped", e[e.OptionalParameter = 16384] = "OptionalParameter", e[e.RestParameter = 32768] = "RestParameter", e[e.DeferredType = 65536] = "DeferredType", e[e.HasNeverType = 131072] = "HasNeverType", e[e.Mapped = 262144] = "Mapped", e[e.StripOptional = 524288] = "StripOptional", e[e.Unresolved = 1048576] = "Unresolved", e[e.Synthetic = 6] = "Synthetic", e[e.Discriminant = 192] = "Discriminant", e[e.Partial = 48] = "Partial", e))(Oy || {}), My = ((e)=>(e.Call = "__call", e.Constructor = "__constructor", e.New = "__new", e.Index = "__index", e.ExportStar = "__export", e.Global = "__global", e.Missing = "__missing", e.Type = "__type", e.Object = "__object", e.JSXAttributes = "__jsxAttributes", e.Class = "__class", e.Function = "__function", e.Computed = "__computed", e.Resolving = "__resolving__", e.ExportEquals = "export=", e.Default = "default", e.This = "this", e))(My || {}), Ly = ((e)=>(e[e.None = 0] = "None", e[e.TypeChecked = 1] = "TypeChecked", e[e.LexicalThis = 2] = "LexicalThis", e[e.CaptureThis = 4] = "CaptureThis", e[e.CaptureNewTarget = 8] = "CaptureNewTarget", e[e.SuperInstance = 16] = "SuperInstance", e[e.SuperStatic = 32] = "SuperStatic", e[e.ContextChecked = 64] = "ContextChecked", e[e.MethodWithSuperPropertyAccessInAsync = 128] = "MethodWithSuperPropertyAccessInAsync", e[e.MethodWithSuperPropertyAssignmentInAsync = 256] = "MethodWithSuperPropertyAssignmentInAsync", e[e.CaptureArguments = 512] = "CaptureArguments", e[e.EnumValuesComputed = 1024] = "EnumValuesComputed", e[e.LexicalModuleMergesWithClass = 2048] = "LexicalModuleMergesWithClass", e[e.LoopWithCapturedBlockScopedBinding = 4096] = "LoopWithCapturedBlockScopedBinding", e[e.ContainsCapturedBlockScopeBinding = 8192] = "ContainsCapturedBlockScopeBinding", e[e.CapturedBlockScopedBinding = 16384] = "CapturedBlockScopedBinding", e[e.BlockScopedBindingInLoop = 32768] = "BlockScopedBindingInLoop", e[e.NeedsLoopOutParameter = 65536] = "NeedsLoopOutParameter", e[e.AssignmentsMarked = 131072] = "AssignmentsMarked", e[e.ContainsConstructorReference = 262144] = "ContainsConstructorReference", e[e.ConstructorReference = 536870912] = "ConstructorReference", e[e.ContainsClassWithPrivateIdentifiers = 1048576] = "ContainsClassWithPrivateIdentifiers", e[e.ContainsSuperPropertyInStaticInitializer = 2097152] = "ContainsSuperPropertyInStaticInitializer", e[e.InCheckIdentifier = 4194304] = "InCheckIdentifier", e))(Ly || {}), cd = ((e)=>(e[e.Any = 1] = "Any", e[e.Unknown = 2] = "Unknown", e[e.String = 4] = "String", e[e.Number = 8] = "Number", e[e.Boolean = 16] = "Boolean", e[e.Enum = 32] = "Enum", e[e.BigInt = 64] = "BigInt", e[e.StringLiteral = 128] = "StringLiteral", e[e.NumberLiteral = 256] = "NumberLiteral", e[e.BooleanLiteral = 512] = "BooleanLiteral", e[e.EnumLiteral = 1024] = "EnumLiteral", e[e.BigIntLiteral = 2048] = "BigIntLiteral", e[e.ESSymbol = 4096] = "ESSymbol", e[e.UniqueESSymbol = 8192] = "UniqueESSymbol", e[e.Void = 16384] = "Void", e[e.Undefined = 32768] = "Undefined", e[e.Null = 65536] = "Null", e[e.Never = 131072] = "Never", e[e.TypeParameter = 262144] = "TypeParameter", e[e.Object = 524288] = "Object", e[e.Union = 1048576] = "Union", e[e.Intersection = 2097152] = "Intersection", e[e.Index = 4194304] = "Index", e[e.IndexedAccess = 8388608] = "IndexedAccess", e[e.Conditional = 16777216] = "Conditional", e[e.Substitution = 33554432] = "Substitution", e[e.NonPrimitive = 67108864] = "NonPrimitive", e[e.TemplateLiteral = 134217728] = "TemplateLiteral", e[e.StringMapping = 268435456] = "StringMapping", e[e.AnyOrUnknown = 3] = "AnyOrUnknown", e[e.Nullable = 98304] = "Nullable", e[e.Literal = 2944] = "Literal", e[e.Unit = 109472] = "Unit", e[e.Freshable = 2976] = "Freshable", e[e.StringOrNumberLiteral = 384] = "StringOrNumberLiteral", e[e.StringOrNumberLiteralOrUnique = 8576] = "StringOrNumberLiteralOrUnique", e[e.DefinitelyFalsy = 117632] = "DefinitelyFalsy", e[e.PossiblyFalsy = 117724] = "PossiblyFalsy", e[e.Intrinsic = 67359327] = "Intrinsic", e[e.StringLike = 402653316] = "StringLike", e[e.NumberLike = 296] = "NumberLike", e[e.BigIntLike = 2112] = "BigIntLike", e[e.BooleanLike = 528] = "BooleanLike", e[e.EnumLike = 1056] = "EnumLike", e[e.ESSymbolLike = 12288] = "ESSymbolLike", e[e.VoidLike = 49152] = "VoidLike", e[e.Primitive = 402784252] = "Primitive", e[e.DefinitelyNonNullable = 470302716] = "DefinitelyNonNullable", e[e.DisjointDomains = 469892092] = "DisjointDomains", e[e.UnionOrIntersection = 3145728] = "UnionOrIntersection", e[e.StructuredType = 3670016] = "StructuredType", e[e.TypeVariable = 8650752] = "TypeVariable", e[e.InstantiableNonPrimitive = 58982400] = "InstantiableNonPrimitive", e[e.InstantiablePrimitive = 406847488] = "InstantiablePrimitive", e[e.Instantiable = 465829888] = "Instantiable", e[e.StructuredOrInstantiable = 469499904] = "StructuredOrInstantiable", e[e.ObjectFlagsType = 3899393] = "ObjectFlagsType", e[e.Simplifiable = 25165824] = "Simplifiable", e[e.Singleton = 67358815] = "Singleton", e[e.Narrowable = 536624127] = "Narrowable", e[e.IncludesMask = 473694207] = "IncludesMask", e[e.IncludesMissingType = 262144] = "IncludesMissingType", e[e.IncludesNonWideningType = 4194304] = "IncludesNonWideningType", e[e.IncludesWildcard = 8388608] = "IncludesWildcard", e[e.IncludesEmptyObject = 16777216] = "IncludesEmptyObject", e[e.IncludesInstantiable = 33554432] = "IncludesInstantiable", e[e.NotPrimitiveUnion = 36323331] = "NotPrimitiveUnion", e))(cd || {}), ld = ((e)=>(e[e.None = 0] = "None", e[e.Class = 1] = "Class", e[e.Interface = 2] = "Interface", e[e.Reference = 4] = "Reference", e[e.Tuple = 8] = "Tuple", e[e.Anonymous = 16] = "Anonymous", e[e.Mapped = 32] = "Mapped", e[e.Instantiated = 64] = "Instantiated", e[e.ObjectLiteral = 128] = "ObjectLiteral", e[e.EvolvingArray = 256] = "EvolvingArray", e[e.ObjectLiteralPatternWithComputedProperties = 512] = "ObjectLiteralPatternWithComputedProperties", e[e.ReverseMapped = 1024] = "ReverseMapped", e[e.JsxAttributes = 2048] = "JsxAttributes", e[e.JSLiteral = 4096] = "JSLiteral", e[e.FreshLiteral = 8192] = "FreshLiteral", e[e.ArrayLiteral = 16384] = "ArrayLiteral", e[e.PrimitiveUnion = 32768] = "PrimitiveUnion", e[e.ContainsWideningType = 65536] = "ContainsWideningType", e[e.ContainsObjectOrArrayLiteral = 131072] = "ContainsObjectOrArrayLiteral", e[e.NonInferrableType = 262144] = "NonInferrableType", e[e.CouldContainTypeVariablesComputed = 524288] = "CouldContainTypeVariablesComputed", e[e.CouldContainTypeVariables = 1048576] = "CouldContainTypeVariables", e[e.ClassOrInterface = 3] = "ClassOrInterface", e[e.RequiresWidening = 196608] = "RequiresWidening", e[e.PropagatingFlags = 458752] = "PropagatingFlags", e[e.InstantiatedMapped = 96] = "InstantiatedMapped", e[e.ObjectTypeKindMask = 1343] = "ObjectTypeKindMask", e[e.ContainsSpread = 2097152] = "ContainsSpread", e[e.ObjectRestType = 4194304] = "ObjectRestType", e[e.InstantiationExpressionType = 8388608] = "InstantiationExpressionType", e[e.IsClassInstanceClone = 16777216] = "IsClassInstanceClone", e[e.IdenticalBaseTypeCalculated = 33554432] = "IdenticalBaseTypeCalculated", e[e.IdenticalBaseTypeExists = 67108864] = "IdenticalBaseTypeExists", e[e.IsGenericTypeComputed = 2097152] = "IsGenericTypeComputed", e[e.IsGenericObjectType = 4194304] = "IsGenericObjectType", e[e.IsGenericIndexType = 8388608] = "IsGenericIndexType", e[e.IsGenericType = 12582912] = "IsGenericType", e[e.ContainsIntersections = 16777216] = "ContainsIntersections", e[e.IsUnknownLikeUnionComputed = 33554432] = "IsUnknownLikeUnionComputed", e[e.IsUnknownLikeUnion = 67108864] = "IsUnknownLikeUnion", e[e.IsNeverIntersectionComputed = 16777216] = "IsNeverIntersectionComputed", e[e.IsNeverIntersection = 33554432] = "IsNeverIntersection", e))(ld || {}), Jy = ((e)=>(e[e.Invariant = 0] = "Invariant", e[e.Covariant = 1] = "Covariant", e[e.Contravariant = 2] = "Contravariant", e[e.Bivariant = 3] = "Bivariant", e[e.Independent = 4] = "Independent", e[e.VarianceMask = 7] = "VarianceMask", e[e.Unmeasurable = 8] = "Unmeasurable", e[e.Unreliable = 16] = "Unreliable", e[e.AllowsStructuralFallback = 24] = "AllowsStructuralFallback", e))(Jy || {}), Ry = ((e)=>(e[e.Required = 1] = "Required", e[e.Optional = 2] = "Optional", e[e.Rest = 4] = "Rest", e[e.Variadic = 8] = "Variadic", e[e.Fixed = 3] = "Fixed", e[e.Variable = 12] = "Variable", e[e.NonRequired = 14] = "NonRequired", e[e.NonRest = 11] = "NonRest", e))(Ry || {}), jy = ((e)=>(e[e.None = 0] = "None", e[e.IncludeUndefined = 1] = "IncludeUndefined", e[e.NoIndexSignatures = 2] = "NoIndexSignatures", e[e.Writing = 4] = "Writing", e[e.CacheSymbol = 8] = "CacheSymbol", e[e.NoTupleBoundsCheck = 16] = "NoTupleBoundsCheck", e[e.ExpressionPosition = 32] = "ExpressionPosition", e[e.ReportDeprecated = 64] = "ReportDeprecated", e[e.SuppressNoImplicitAnyError = 128] = "SuppressNoImplicitAnyError", e[e.Contextual = 256] = "Contextual", e[e.Persistent = 1] = "Persistent", e))(jy || {}), Fy = ((e)=>(e[e.None = 0] = "None", e[e.StringsOnly = 1] = "StringsOnly", e[e.NoIndexSignatures = 2] = "NoIndexSignatures", e[e.NoReducibleCheck = 4] = "NoReducibleCheck", e))(Fy || {}), By = ((e)=>(e[e.Component = 0] = "Component", e[e.Function = 1] = "Function", e[e.Mixed = 2] = "Mixed", e))(By || {}), Uy = ((e)=>(e[e.Call = 0] = "Call", e[e.Construct = 1] = "Construct", e))(Uy || {}), ud = ((e)=>(e[e.None = 0] = "None", e[e.HasRestParameter = 1] = "HasRestParameter", e[e.HasLiteralTypes = 2] = "HasLiteralTypes", e[e.Abstract = 4] = "Abstract", e[e.IsInnerCallChain = 8] = "IsInnerCallChain", e[e.IsOuterCallChain = 16] = "IsOuterCallChain", e[e.IsUntypedSignatureInJSFile = 32] = "IsUntypedSignatureInJSFile", e[e.IsNonInferrable = 64] = "IsNonInferrable", e[e.IsSignatureCandidateForOverloadFailure = 128] = "IsSignatureCandidateForOverloadFailure", e[e.PropagatingFlags = 167] = "PropagatingFlags", e[e.CallChainFlags = 24] = "CallChainFlags", e))(ud || {}), qy = ((e)=>(e[e.String = 0] = "String", e[e.Number = 1] = "Number", e))(qy || {}), zy = ((e)=>(e[e.Simple = 0] = "Simple", e[e.Array = 1] = "Array", e[e.Deferred = 2] = "Deferred", e[e.Function = 3] = "Function", e[e.Composite = 4] = "Composite", e[e.Merged = 5] = "Merged", e))(zy || {}), Wy = ((e)=>(e[e.None = 0] = "None", e[e.NakedTypeVariable = 1] = "NakedTypeVariable", e[e.SpeculativeTuple = 2] = "SpeculativeTuple", e[e.SubstituteSource = 4] = "SubstituteSource", e[e.HomomorphicMappedType = 8] = "HomomorphicMappedType", e[e.PartialHomomorphicMappedType = 16] = "PartialHomomorphicMappedType", e[e.MappedTypeConstraint = 32] = "MappedTypeConstraint", e[e.ContravariantConditional = 64] = "ContravariantConditional", e[e.ReturnType = 128] = "ReturnType", e[e.LiteralKeyof = 256] = "LiteralKeyof", e[e.NoConstraints = 512] = "NoConstraints", e[e.AlwaysStrict = 1024] = "AlwaysStrict", e[e.MaxValue = 2048] = "MaxValue", e[e.PriorityImpliesCombination = 416] = "PriorityImpliesCombination", e[e.Circularity = -1] = "Circularity", e))(Wy || {}), Vy = ((e)=>(e[e.None = 0] = "None", e[e.NoDefault = 1] = "NoDefault", e[e.AnyDefault = 2] = "AnyDefault", e[e.SkippedGenericFunction = 4] = "SkippedGenericFunction", e))(Vy || {}), Hy = ((e)=>(e[e.False = 0] = "False", e[e.Unknown = 1] = "Unknown", e[e.Maybe = 3] = "Maybe", e[e.True = -1] = "True", e))(Hy || {}), Gy = ((e)=>(e[e.None = 0] = "None", e[e.ExportsProperty = 1] = "ExportsProperty", e[e.ModuleExports = 2] = "ModuleExports", e[e.PrototypeProperty = 3] = "PrototypeProperty", e[e.ThisProperty = 4] = "ThisProperty", e[e.Property = 5] = "Property", e[e.Prototype = 6] = "Prototype", e[e.ObjectDefinePropertyValue = 7] = "ObjectDefinePropertyValue", e[e.ObjectDefinePropertyExports = 8] = "ObjectDefinePropertyExports", e[e.ObjectDefinePrototypeProperty = 9] = "ObjectDefinePrototypeProperty", e))(Gy || {}), pd = ((e)=>(e[e.Warning = 0] = "Warning", e[e.Error = 1] = "Error", e[e.Suggestion = 2] = "Suggestion", e[e.Message = 3] = "Message", e))(pd || {}), Xy = ((e)=>(e[e.Classic = 1] = "Classic", e[e.NodeJs = 2] = "NodeJs", e[e.Node10 = 2] = "Node10", e[e.Node16 = 3] = "Node16", e[e.NodeNext = 99] = "NodeNext", e[e.Bundler = 100] = "Bundler", e))(Xy || {}), $y = ((e)=>(e[e.Legacy = 1] = "Legacy", e[e.Auto = 2] = "Auto", e[e.Force = 3] = "Force", e))($y || {}), Qy = ((e)=>(e[e.FixedPollingInterval = 0] = "FixedPollingInterval", e[e.PriorityPollingInterval = 1] = "PriorityPollingInterval", e[e.DynamicPriorityPolling = 2] = "DynamicPriorityPolling", e[e.FixedChunkSizePolling = 3] = "FixedChunkSizePolling", e[e.UseFsEvents = 4] = "UseFsEvents", e[e.UseFsEventsOnParentDirectory = 5] = "UseFsEventsOnParentDirectory", e))(Qy || {}), Yy = ((e)=>(e[e.UseFsEvents = 0] = "UseFsEvents", e[e.FixedPollingInterval = 1] = "FixedPollingInterval", e[e.DynamicPriorityPolling = 2] = "DynamicPriorityPolling", e[e.FixedChunkSizePolling = 3] = "FixedChunkSizePolling", e))(Yy || {}), Ky = ((e)=>(e[e.FixedInterval = 0] = "FixedInterval", e[e.PriorityInterval = 1] = "PriorityInterval", e[e.DynamicPriority = 2] = "DynamicPriority", e[e.FixedChunkSize = 3] = "FixedChunkSize", e))(Ky || {}), Zy = ((e)=>(e[e.None = 0] = "None", e[e.CommonJS = 1] = "CommonJS", e[e.AMD = 2] = "AMD", e[e.UMD = 3] = "UMD", e[e.System = 4] = "System", e[e.ES2015 = 5] = "ES2015", e[e.ES2020 = 6] = "ES2020", e[e.ES2022 = 7] = "ES2022", e[e.ESNext = 99] = "ESNext", e[e.Node16 = 100] = "Node16", e[e.NodeNext = 199] = "NodeNext", e))(Zy || {}), e0 = ((e)=>(e[e.None = 0] = "None", e[e.Preserve = 1] = "Preserve", e[e.React = 2] = "React", e[e.ReactNative = 3] = "ReactNative", e[e.ReactJSX = 4] = "ReactJSX", e[e.ReactJSXDev = 5] = "ReactJSXDev", e))(e0 || {}), t0 = ((e)=>(e[e.Remove = 0] = "Remove", e[e.Preserve = 1] = "Preserve", e[e.Error = 2] = "Error", e))(t0 || {}), n0 = ((e)=>(e[e.CarriageReturnLineFeed = 0] = "CarriageReturnLineFeed", e[e.LineFeed = 1] = "LineFeed", e))(n0 || {}), fd = ((e)=>(e[e.Unknown = 0] = "Unknown", e[e.JS = 1] = "JS", e[e.JSX = 2] = "JSX", e[e.TS = 3] = "TS", e[e.TSX = 4] = "TSX", e[e.External = 5] = "External", e[e.JSON = 6] = "JSON", e[e.Deferred = 7] = "Deferred", e))(fd || {}), r0 = ((e)=>(e[e.ES3 = 0] = "ES3", e[e.ES5 = 1] = "ES5", e[e.ES2015 = 2] = "ES2015", e[e.ES2016 = 3] = "ES2016", e[e.ES2017 = 4] = "ES2017", e[e.ES2018 = 5] = "ES2018", e[e.ES2019 = 6] = "ES2019", e[e.ES2020 = 7] = "ES2020", e[e.ES2021 = 8] = "ES2021", e[e.ES2022 = 9] = "ES2022", e[e.ESNext = 99] = "ESNext", e[e.JSON = 100] = "JSON", e[e.Latest = 99] = "Latest", e))(r0 || {}), i0 = ((e)=>(e[e.Standard = 0] = "Standard", e[e.JSX = 1] = "JSX", e))(i0 || {}), a0 = ((e)=>(e[e.None = 0] = "None", e[e.Recursive = 1] = "Recursive", e))(a0 || {}), o0 = ((e)=>(e[e.nullCharacter = 0] = "nullCharacter", e[e.maxAsciiCharacter = 127] = "maxAsciiCharacter", e[e.lineFeed = 10] = "lineFeed", e[e.carriageReturn = 13] = "carriageReturn", e[e.lineSeparator = 8232] = "lineSeparator", e[e.paragraphSeparator = 8233] = "paragraphSeparator", e[e.nextLine = 133] = "nextLine", e[e.space = 32] = "space", e[e.nonBreakingSpace = 160] = "nonBreakingSpace", e[e.enQuad = 8192] = "enQuad", e[e.emQuad = 8193] = "emQuad", e[e.enSpace = 8194] = "enSpace", e[e.emSpace = 8195] = "emSpace", e[e.threePerEmSpace = 8196] = "threePerEmSpace", e[e.fourPerEmSpace = 8197] = "fourPerEmSpace", e[e.sixPerEmSpace = 8198] = "sixPerEmSpace", e[e.figureSpace = 8199] = "figureSpace", e[e.punctuationSpace = 8200] = "punctuationSpace", e[e.thinSpace = 8201] = "thinSpace", e[e.hairSpace = 8202] = "hairSpace", e[e.zeroWidthSpace = 8203] = "zeroWidthSpace", e[e.narrowNoBreakSpace = 8239] = "narrowNoBreakSpace", e[e.ideographicSpace = 12288] = "ideographicSpace", e[e.mathematicalSpace = 8287] = "mathematicalSpace", e[e.ogham = 5760] = "ogham", e[e.replacementCharacter = 65533] = "replacementCharacter", e[e._ = 95] = "_", e[e.$ = 36] = "$", e[e._0 = 48] = "_0", e[e._1 = 49] = "_1", e[e._2 = 50] = "_2", e[e._3 = 51] = "_3", e[e._4 = 52] = "_4", e[e._5 = 53] = "_5", e[e._6 = 54] = "_6", e[e._7 = 55] = "_7", e[e._8 = 56] = "_8", e[e._9 = 57] = "_9", e[e.a = 97] = "a", e[e.b = 98] = "b", e[e.c = 99] = "c", e[e.d = 100] = "d", e[e.e = 101] = "e", e[e.f = 102] = "f", e[e.g = 103] = "g", e[e.h = 104] = "h", e[e.i = 105] = "i", e[e.j = 106] = "j", e[e.k = 107] = "k", e[e.l = 108] = "l", e[e.m = 109] = "m", e[e.n = 110] = "n", e[e.o = 111] = "o", e[e.p = 112] = "p", e[e.q = 113] = "q", e[e.r = 114] = "r", e[e.s = 115] = "s", e[e.t = 116] = "t", e[e.u = 117] = "u", e[e.v = 118] = "v", e[e.w = 119] = "w", e[e.x = 120] = "x", e[e.y = 121] = "y", e[e.z = 122] = "z", e[e.A = 65] = "A", e[e.B = 66] = "B", e[e.C = 67] = "C", e[e.D = 68] = "D", e[e.E = 69] = "E", e[e.F = 70] = "F", e[e.G = 71] = "G", e[e.H = 72] = "H", e[e.I = 73] = "I", e[e.J = 74] = "J", e[e.K = 75] = "K", e[e.L = 76] = "L", e[e.M = 77] = "M", e[e.N = 78] = "N", e[e.O = 79] = "O", e[e.P = 80] = "P", e[e.Q = 81] = "Q", e[e.R = 82] = "R", e[e.S = 83] = "S", e[e.T = 84] = "T", e[e.U = 85] = "U", e[e.V = 86] = "V", e[e.W = 87] = "W", e[e.X = 88] = "X", e[e.Y = 89] = "Y", e[e.Z = 90] = "Z", e[e.ampersand = 38] = "ampersand", e[e.asterisk = 42] = "asterisk", e[e.at = 64] = "at", e[e.backslash = 92] = "backslash", e[e.backtick = 96] = "backtick", e[e.bar = 124] = "bar", e[e.caret = 94] = "caret", e[e.closeBrace = 125] = "closeBrace", e[e.closeBracket = 93] = "closeBracket", e[e.closeParen = 41] = "closeParen", e[e.colon = 58] = "colon", e[e.comma = 44] = "comma", e[e.dot = 46] = "dot", e[e.doubleQuote = 34] = "doubleQuote", e[e.equals = 61] = "equals", e[e.exclamation = 33] = "exclamation", e[e.greaterThan = 62] = "greaterThan", e[e.hash = 35] = "hash", e[e.lessThan = 60] = "lessThan", e[e.minus = 45] = "minus", e[e.openBrace = 123] = "openBrace", e[e.openBracket = 91] = "openBracket", e[e.openParen = 40] = "openParen", e[e.percent = 37] = "percent", e[e.plus = 43] = "plus", e[e.question = 63] = "question", e[e.semicolon = 59] = "semicolon", e[e.singleQuote = 39] = "singleQuote", e[e.slash = 47] = "slash", e[e.tilde = 126] = "tilde", e[e.backspace = 8] = "backspace", e[e.formFeed = 12] = "formFeed", e[e.byteOrderMark = 65279] = "byteOrderMark", e[e.tab = 9] = "tab", e[e.verticalTab = 11] = "verticalTab", e))(o0 || {}), s0 = ((e)=>(e.Ts = ".ts", e.Tsx = ".tsx", e.Dts = ".d.ts", e.Js = ".js", e.Jsx = ".jsx", e.Json = ".json", e.TsBuildInfo = ".tsbuildinfo", e.Mjs = ".mjs", e.Mts = ".mts", e.Dmts = ".d.mts", e.Cjs = ".cjs", e.Cts = ".cts", e.Dcts = ".d.cts", e))(s0 || {}), dd = ((e)=>(e[e.None = 0] = "None", e[e.ContainsTypeScript = 1] = "ContainsTypeScript", e[e.ContainsJsx = 2] = "ContainsJsx", e[e.ContainsESNext = 4] = "ContainsESNext", e[e.ContainsES2022 = 8] = "ContainsES2022", e[e.ContainsES2021 = 16] = "ContainsES2021", e[e.ContainsES2020 = 32] = "ContainsES2020", e[e.ContainsES2019 = 64] = "ContainsES2019", e[e.ContainsES2018 = 128] = "ContainsES2018", e[e.ContainsES2017 = 256] = "ContainsES2017", e[e.ContainsES2016 = 512] = "ContainsES2016", e[e.ContainsES2015 = 1024] = "ContainsES2015", e[e.ContainsGenerator = 2048] = "ContainsGenerator", e[e.ContainsDestructuringAssignment = 4096] = "ContainsDestructuringAssignment", e[e.ContainsTypeScriptClassSyntax = 8192] = "ContainsTypeScriptClassSyntax", e[e.ContainsLexicalThis = 16384] = "ContainsLexicalThis", e[e.ContainsRestOrSpread = 32768] = "ContainsRestOrSpread", e[e.ContainsObjectRestOrSpread = 65536] = "ContainsObjectRestOrSpread", e[e.ContainsComputedPropertyName = 131072] = "ContainsComputedPropertyName", e[e.ContainsBlockScopedBinding = 262144] = "ContainsBlockScopedBinding", e[e.ContainsBindingPattern = 524288] = "ContainsBindingPattern", e[e.ContainsYield = 1048576] = "ContainsYield", e[e.ContainsAwait = 2097152] = "ContainsAwait", e[e.ContainsHoistedDeclarationOrCompletion = 4194304] = "ContainsHoistedDeclarationOrCompletion", e[e.ContainsDynamicImport = 8388608] = "ContainsDynamicImport", e[e.ContainsClassFields = 16777216] = "ContainsClassFields", e[e.ContainsDecorators = 33554432] = "ContainsDecorators", e[e.ContainsPossibleTopLevelAwait = 67108864] = "ContainsPossibleTopLevelAwait", e[e.ContainsLexicalSuper = 134217728] = "ContainsLexicalSuper", e[e.ContainsUpdateExpressionForIdentifier = 268435456] = "ContainsUpdateExpressionForIdentifier", e[e.ContainsPrivateIdentifierInExpression = 536870912] = "ContainsPrivateIdentifierInExpression", e[e.HasComputedFlags = -2147483648] = "HasComputedFlags", e[e.AssertTypeScript = 1] = "AssertTypeScript", e[e.AssertJsx = 2] = "AssertJsx", e[e.AssertESNext = 4] = "AssertESNext", e[e.AssertES2022 = 8] = "AssertES2022", e[e.AssertES2021 = 16] = "AssertES2021", e[e.AssertES2020 = 32] = "AssertES2020", e[e.AssertES2019 = 64] = "AssertES2019", e[e.AssertES2018 = 128] = "AssertES2018", e[e.AssertES2017 = 256] = "AssertES2017", e[e.AssertES2016 = 512] = "AssertES2016", e[e.AssertES2015 = 1024] = "AssertES2015", e[e.AssertGenerator = 2048] = "AssertGenerator", e[e.AssertDestructuringAssignment = 4096] = "AssertDestructuringAssignment", e[e.OuterExpressionExcludes = -2147483648] = "OuterExpressionExcludes", e[e.PropertyAccessExcludes = -2147483648] = "PropertyAccessExcludes", e[e.NodeExcludes = -2147483648] = "NodeExcludes", e[e.ArrowFunctionExcludes = -2072174592] = "ArrowFunctionExcludes", e[e.FunctionExcludes = -1937940480] = "FunctionExcludes", e[e.ConstructorExcludes = -1937948672] = "ConstructorExcludes", e[e.MethodOrAccessorExcludes = -2005057536] = "MethodOrAccessorExcludes", e[e.PropertyExcludes = -2013249536] = "PropertyExcludes", e[e.ClassExcludes = -2147344384] = "ClassExcludes", e[e.ModuleExcludes = -1941676032] = "ModuleExcludes", e[e.TypeExcludes = -2] = "TypeExcludes", e[e.ObjectLiteralExcludes = -2147278848] = "ObjectLiteralExcludes", e[e.ArrayLiteralOrCallOrNewExcludes = -2147450880] = "ArrayLiteralOrCallOrNewExcludes", e[e.VariableDeclarationListExcludes = -2146893824] = "VariableDeclarationListExcludes", e[e.ParameterExcludes = -2147483648] = "ParameterExcludes", e[e.CatchClauseExcludes = -2147418112] = "CatchClauseExcludes", e[e.BindingPatternExcludes = -2147450880] = "BindingPatternExcludes", e[e.ContainsLexicalThisOrSuper = 134234112] = "ContainsLexicalThisOrSuper", e[e.PropertyNamePropagatingFlags = 134234112] = "PropertyNamePropagatingFlags", e))(dd || {}), md = ((e)=>(e[e.TabStop = 0] = "TabStop", e[e.Placeholder = 1] = "Placeholder", e[e.Choice = 2] = "Choice", e[e.Variable = 3] = "Variable", e))(md || {}), hd = ((e)=>(e[e.None = 0] = "None", e[e.SingleLine = 1] = "SingleLine", e[e.MultiLine = 2] = "MultiLine", e[e.AdviseOnEmitNode = 4] = "AdviseOnEmitNode", e[e.NoSubstitution = 8] = "NoSubstitution", e[e.CapturesThis = 16] = "CapturesThis", e[e.NoLeadingSourceMap = 32] = "NoLeadingSourceMap", e[e.NoTrailingSourceMap = 64] = "NoTrailingSourceMap", e[e.NoSourceMap = 96] = "NoSourceMap", e[e.NoNestedSourceMaps = 128] = "NoNestedSourceMaps", e[e.NoTokenLeadingSourceMaps = 256] = "NoTokenLeadingSourceMaps", e[e.NoTokenTrailingSourceMaps = 512] = "NoTokenTrailingSourceMaps", e[e.NoTokenSourceMaps = 768] = "NoTokenSourceMaps", e[e.NoLeadingComments = 1024] = "NoLeadingComments", e[e.NoTrailingComments = 2048] = "NoTrailingComments", e[e.NoComments = 3072] = "NoComments", e[e.NoNestedComments = 4096] = "NoNestedComments", e[e.HelperName = 8192] = "HelperName", e[e.ExportName = 16384] = "ExportName", e[e.LocalName = 32768] = "LocalName", e[e.InternalName = 65536] = "InternalName", e[e.Indented = 131072] = "Indented", e[e.NoIndentation = 262144] = "NoIndentation", e[e.AsyncFunctionBody = 524288] = "AsyncFunctionBody", e[e.ReuseTempVariableScope = 1048576] = "ReuseTempVariableScope", e[e.CustomPrologue = 2097152] = "CustomPrologue", e[e.NoHoisting = 4194304] = "NoHoisting", e[e.Iterator = 8388608] = "Iterator", e[e.NoAsciiEscaping = 16777216] = "NoAsciiEscaping", e))(hd || {}), _0 = ((e)=>(e[e.None = 0] = "None", e[e.TypeScriptClassWrapper = 1] = "TypeScriptClassWrapper", e[e.NeverApplyImportHelper = 2] = "NeverApplyImportHelper", e[e.IgnoreSourceNewlines = 4] = "IgnoreSourceNewlines", e[e.Immutable = 8] = "Immutable", e[e.IndirectCall = 16] = "IndirectCall", e[e.TransformPrivateStaticElements = 32] = "TransformPrivateStaticElements", e))(_0 || {}), c0 = ((e)=>(e[e.Extends = 1] = "Extends", e[e.Assign = 2] = "Assign", e[e.Rest = 4] = "Rest", e[e.Decorate = 8] = "Decorate", e[e.ESDecorateAndRunInitializers = 8] = "ESDecorateAndRunInitializers", e[e.Metadata = 16] = "Metadata", e[e.Param = 32] = "Param", e[e.Awaiter = 64] = "Awaiter", e[e.Generator = 128] = "Generator", e[e.Values = 256] = "Values", e[e.Read = 512] = "Read", e[e.SpreadArray = 1024] = "SpreadArray", e[e.Await = 2048] = "Await", e[e.AsyncGenerator = 4096] = "AsyncGenerator", e[e.AsyncDelegator = 8192] = "AsyncDelegator", e[e.AsyncValues = 16384] = "AsyncValues", e[e.ExportStar = 32768] = "ExportStar", e[e.ImportStar = 65536] = "ImportStar", e[e.ImportDefault = 131072] = "ImportDefault", e[e.MakeTemplateObject = 262144] = "MakeTemplateObject", e[e.ClassPrivateFieldGet = 524288] = "ClassPrivateFieldGet", e[e.ClassPrivateFieldSet = 1048576] = "ClassPrivateFieldSet", e[e.ClassPrivateFieldIn = 2097152] = "ClassPrivateFieldIn", e[e.CreateBinding = 4194304] = "CreateBinding", e[e.SetFunctionName = 8388608] = "SetFunctionName", e[e.PropKey = 16777216] = "PropKey", e[e.AddDisposableResourceAndDisposeResources = 33554432] = "AddDisposableResourceAndDisposeResources", e[e.FirstEmitHelper = 1] = "FirstEmitHelper", e[e.LastEmitHelper = 33554432] = "LastEmitHelper", e[e.ForOfIncludes = 256] = "ForOfIncludes", e[e.ForAwaitOfIncludes = 16384] = "ForAwaitOfIncludes", e[e.AsyncGeneratorIncludes = 6144] = "AsyncGeneratorIncludes", e[e.AsyncDelegatorIncludes = 26624] = "AsyncDelegatorIncludes", e[e.SpreadIncludes = 1536] = "SpreadIncludes", e))(c0 || {}), l0 = ((e)=>(e[e.SourceFile = 0] = "SourceFile", e[e.Expression = 1] = "Expression", e[e.IdentifierName = 2] = "IdentifierName", e[e.MappedTypeParameter = 3] = "MappedTypeParameter", e[e.Unspecified = 4] = "Unspecified", e[e.EmbeddedStatement = 5] = "EmbeddedStatement", e[e.JsxAttributeValue = 6] = "JsxAttributeValue", e))(l0 || {}), u0 = ((e)=>(e[e.Parentheses = 1] = "Parentheses", e[e.TypeAssertions = 2] = "TypeAssertions", e[e.NonNullAssertions = 4] = "NonNullAssertions", e[e.PartiallyEmittedExpressions = 8] = "PartiallyEmittedExpressions", e[e.Assertions = 6] = "Assertions", e[e.All = 15] = "All", e[e.ExcludeJSDocTypeAssertion = 16] = "ExcludeJSDocTypeAssertion", e))(u0 || {}), p0 = ((e)=>(e[e.None = 0] = "None", e[e.InParameters = 1] = "InParameters", e[e.VariablesHoistedInParameters = 2] = "VariablesHoistedInParameters", e))(p0 || {}), f0 = ((e)=>(e.Prologue = "prologue", e.EmitHelpers = "emitHelpers", e.NoDefaultLib = "no-default-lib", e.Reference = "reference", e.Type = "type", e.TypeResolutionModeRequire = "type-require", e.TypeResolutionModeImport = "type-import", e.Lib = "lib", e.Prepend = "prepend", e.Text = "text", e.Internal = "internal", e))(f0 || {}), d0 = ((e)=>(e[e.None = 0] = "None", e[e.SingleLine = 0] = "SingleLine", e[e.MultiLine = 1] = "MultiLine", e[e.PreserveLines = 2] = "PreserveLines", e[e.LinesMask = 3] = "LinesMask", e[e.NotDelimited = 0] = "NotDelimited", e[e.BarDelimited = 4] = "BarDelimited", e[e.AmpersandDelimited = 8] = "AmpersandDelimited", e[e.CommaDelimited = 16] = "CommaDelimited", e[e.AsteriskDelimited = 32] = "AsteriskDelimited", e[e.DelimitersMask = 60] = "DelimitersMask", e[e.AllowTrailingComma = 64] = "AllowTrailingComma", e[e.Indented = 128] = "Indented", e[e.SpaceBetweenBraces = 256] = "SpaceBetweenBraces", e[e.SpaceBetweenSiblings = 512] = "SpaceBetweenSiblings", e[e.Braces = 1024] = "Braces", e[e.Parenthesis = 2048] = "Parenthesis", e[e.AngleBrackets = 4096] = "AngleBrackets", e[e.SquareBrackets = 8192] = "SquareBrackets", e[e.BracketsMask = 15360] = "BracketsMask", e[e.OptionalIfUndefined = 16384] = "OptionalIfUndefined", e[e.OptionalIfEmpty = 32768] = "OptionalIfEmpty", e[e.Optional = 49152] = "Optional", e[e.PreferNewLine = 65536] = "PreferNewLine", e[e.NoTrailingNewLine = 131072] = "NoTrailingNewLine", e[e.NoInterveningComments = 262144] = "NoInterveningComments", e[e.NoSpaceIfEmpty = 524288] = "NoSpaceIfEmpty", e[e.SingleElement = 1048576] = "SingleElement", e[e.SpaceAfterList = 2097152] = "SpaceAfterList", e[e.Modifiers = 2359808] = "Modifiers", e[e.HeritageClauses = 512] = "HeritageClauses", e[e.SingleLineTypeLiteralMembers = 768] = "SingleLineTypeLiteralMembers", e[e.MultiLineTypeLiteralMembers = 32897] = "MultiLineTypeLiteralMembers", e[e.SingleLineTupleTypeElements = 528] = "SingleLineTupleTypeElements", e[e.MultiLineTupleTypeElements = 657] = "MultiLineTupleTypeElements", e[e.UnionTypeConstituents = 516] = "UnionTypeConstituents", e[e.IntersectionTypeConstituents = 520] = "IntersectionTypeConstituents", e[e.ObjectBindingPatternElements = 525136] = "ObjectBindingPatternElements", e[e.ArrayBindingPatternElements = 524880] = "ArrayBindingPatternElements", e[e.ObjectLiteralExpressionProperties = 526226] = "ObjectLiteralExpressionProperties", e[e.ImportAttributes = 526226] = "ImportAttributes", e[e.ImportClauseEntries = 526226] = "ImportClauseEntries", e[e.ArrayLiteralExpressionElements = 8914] = "ArrayLiteralExpressionElements", e[e.CommaListElements = 528] = "CommaListElements", e[e.CallExpressionArguments = 2576] = "CallExpressionArguments", e[e.NewExpressionArguments = 18960] = "NewExpressionArguments", e[e.TemplateExpressionSpans = 262144] = "TemplateExpressionSpans", e[e.SingleLineBlockStatements = 768] = "SingleLineBlockStatements", e[e.MultiLineBlockStatements = 129] = "MultiLineBlockStatements", e[e.VariableDeclarationList = 528] = "VariableDeclarationList", e[e.SingleLineFunctionBodyStatements = 768] = "SingleLineFunctionBodyStatements", e[e.MultiLineFunctionBodyStatements = 1] = "MultiLineFunctionBodyStatements", e[e.ClassHeritageClauses = 0] = "ClassHeritageClauses", e[e.ClassMembers = 129] = "ClassMembers", e[e.InterfaceMembers = 129] = "InterfaceMembers", e[e.EnumMembers = 145] = "EnumMembers", e[e.CaseBlockClauses = 129] = "CaseBlockClauses", e[e.NamedImportsOrExportsElements = 525136] = "NamedImportsOrExportsElements", e[e.JsxElementOrFragmentChildren = 262144] = "JsxElementOrFragmentChildren", e[e.JsxElementAttributes = 262656] = "JsxElementAttributes", e[e.CaseOrDefaultClauseStatements = 163969] = "CaseOrDefaultClauseStatements", e[e.HeritageClauseTypes = 528] = "HeritageClauseTypes", e[e.SourceFileStatements = 131073] = "SourceFileStatements", e[e.Decorators = 2146305] = "Decorators", e[e.TypeArguments = 53776] = "TypeArguments", e[e.TypeParameters = 53776] = "TypeParameters", e[e.Parameters = 2576] = "Parameters", e[e.IndexSignatureParameters = 8848] = "IndexSignatureParameters", e[e.JSDocComment = 33] = "JSDocComment", e))(d0 || {}), m0 = ((e)=>(e[e.None = 0] = "None", e[e.TripleSlashXML = 1] = "TripleSlashXML", e[e.SingleLine = 2] = "SingleLine", e[e.MultiLine = 4] = "MultiLine", e[e.All = 7] = "All", e[e.Default = 7] = "Default", e))(m0 || {}), Vd = {
                    reference: {
                        args: [
                            {
                                name: "types",
                                optional: !0,
                                captureSpan: !0
                            },
                            {
                                name: "lib",
                                optional: !0,
                                captureSpan: !0
                            },
                            {
                                name: "path",
                                optional: !0,
                                captureSpan: !0
                            },
                            {
                                name: "no-default-lib",
                                optional: !0
                            },
                            {
                                name: "resolution-mode",
                                optional: !0
                            }
                        ],
                        kind: 1
                    },
                    "amd-dependency": {
                        args: [
                            {
                                name: "path"
                            },
                            {
                                name: "name",
                                optional: !0
                            }
                        ],
                        kind: 1
                    },
                    "amd-module": {
                        args: [
                            {
                                name: "name"
                            }
                        ],
                        kind: 1
                    },
                    "ts-check": {
                        kind: 2
                    },
                    "ts-nocheck": {
                        kind: 2
                    },
                    jsx: {
                        args: [
                            {
                                name: "factory"
                            }
                        ],
                        kind: 4
                    },
                    jsxfrag: {
                        args: [
                            {
                                name: "factory"
                            }
                        ],
                        kind: 4
                    },
                    jsximportsource: {
                        args: [
                            {
                                name: "factory"
                            }
                        ],
                        kind: 4
                    },
                    jsxruntime: {
                        args: [
                            {
                                name: "factory"
                            }
                        ],
                        kind: 4
                    }
                }, h0 = ((e)=>(e[e.ParseAll = 0] = "ParseAll", e[e.ParseNone = 1] = "ParseNone", e[e.ParseForTypeErrors = 2] = "ParseForTypeErrors", e[e.ParseForTypeInfo = 3] = "ParseForTypeInfo", e))(h0 || {});
            }
        }), FE = ()=>{}, y0;
        function vg(e) {
            return e === 47 || e === 92;
        }
        function BE(e) {
            return jl(e) < 0;
        }
        function b_(e) {
            return jl(e) > 0;
        }
        function UE(e) {
            let t = jl(e);
            return t > 0 && t === e.length;
        }
        function Tg(e) {
            return jl(e) !== 0;
        }
        function as(e) {
            return /^\.\.?($|[\\/])/.test(e);
        }
        function qE(e) {
            return !Tg(e) && !as(e);
        }
        function zv(e) {
            return os(e).includes(".");
        }
        function Na(e, t) {
            return e.length > t.length && is(e, t);
        }
        function ii(e, t) {
            for (let n of t)if (Na(e, n)) return !0;
            return !1;
        }
        function Hd(e) {
            return e.length > 0 && vg(e.charCodeAt(e.length - 1));
        }
        function k6(e) {
            return e >= 97 && e <= 122 || e >= 65 && e <= 90;
        }
        function zE(e, t) {
            let n = e.charCodeAt(t);
            if (n === 58) return t + 1;
            if (n === 37 && e.charCodeAt(t + 1) === 51) {
                let a = e.charCodeAt(t + 2);
                if (a === 97 || a === 65) return t + 3;
            }
            return -1;
        }
        function jl(e) {
            if (!e) return 0;
            let t = e.charCodeAt(0);
            if (t === 47 || t === 92) {
                if (e.charCodeAt(1) !== t) return 1;
                let a = e.indexOf(t === 47 ? vr : Cg, 2);
                return a < 0 ? e.length : a + 1;
            }
            if (k6(t) && e.charCodeAt(1) === 58) {
                let a = e.charCodeAt(2);
                if (a === 47 || a === 92) return 3;
                if (e.length === 2) return 2;
            }
            let n = e.indexOf(b0);
            if (n !== -1) {
                let a = n + b0.length, _ = e.indexOf(vr, a);
                if (_ !== -1) {
                    let p = e.slice(0, n), m = e.slice(a, _);
                    if (p === "file" && (m === "" || m === "localhost") && k6(e.charCodeAt(_ + 1))) {
                        let y = zE(e, _ + 2);
                        if (y !== -1) {
                            if (e.charCodeAt(y) === 47) return ~(y + 1);
                            if (y === e.length) return ~y;
                        }
                    }
                    return ~(_ + 1);
                }
                return ~e.length;
            }
            return 0;
        }
        function Ni(e) {
            let t = jl(e);
            return t < 0 ? ~t : t;
        }
        function Mi(e) {
            e = Vo(e);
            let t = Ni(e);
            return t === e.length ? e : (e = v_(e), e.slice(0, Math.max(t, e.lastIndexOf(vr))));
        }
        function os(e, t, n) {
            if (e = Vo(e), Ni(e) === e.length) return "";
            e = v_(e);
            let _ = e.slice(Math.max(Ni(e), e.lastIndexOf(vr) + 1)), p = t !== void 0 && n !== void 0 ? yd(_, t, n) : void 0;
            return p ? _.slice(0, _.length - p.length) : _;
        }
        function D6(e, t, n) {
            if (Hn(t, ".") || (t = "." + t), e.length >= t.length && e.charCodeAt(e.length - t.length) === 46) {
                let a = e.slice(e.length - t.length);
                if (n(a, t)) return a;
            }
        }
        function WE(e, t, n) {
            if (typeof t == "string") return D6(e, t, n) || "";
            for (let a of t){
                let _ = D6(e, a, n);
                if (_) return _;
            }
            return "";
        }
        function yd(e, t, n) {
            if (t) return WE(v_(e), t, n ? s_ : Rl);
            let a = os(e), _ = a.lastIndexOf(".");
            return _ >= 0 ? a.substring(_) : "";
        }
        function VE(e, t) {
            let n = e.substring(0, t), a = e.substring(t).split(vr);
            return a.length && !Pi(a) && a.pop(), [
                n,
                ...a
            ];
        }
        function Oi(e, t = "") {
            return e = Qt(t, e), VE(e, Ni(e));
        }
        function Wo(e, t) {
            return e.length === 0 ? "" : (e[0] && to(e[0])) + e.slice(1, t).join(vr);
        }
        function Vo(e) {
            return e.includes("\\") ? e.replace($v, vr) : e;
        }
        function Ca(e) {
            if (!Ze(e)) return [];
            let t = [
                e[0]
            ];
            for(let n = 1; n < e.length; n++){
                let a = e[n];
                if (a && a !== ".") {
                    if (a === "..") {
                        if (t.length > 1) {
                            if (t[t.length - 1] !== "..") {
                                t.pop();
                                continue;
                            }
                        } else if (t[0]) continue;
                    }
                    t.push(a);
                }
            }
            return t;
        }
        function Qt(e, ...t) {
            e && (e = Vo(e));
            for (let n of t)n && (n = Vo(n), !e || Ni(n) !== 0 ? e = n : e = to(e) + n);
            return e;
        }
        function g0(e, ...t) {
            return br(Ze(t) ? Qt(e, ...t) : Vo(e));
        }
        function Gd(e, t) {
            return Ca(Oi(e, t));
        }
        function Gi(e, t) {
            return Wo(Gd(e, t));
        }
        function br(e) {
            if (e = Vo(e), !Sl.test(e)) return e;
            let t = e.replace(/\/\.\//g, "/").replace(/^\.\//, "");
            if (t !== e && (e = t, !Sl.test(e))) return e;
            let n = Wo(Ca(Oi(e)));
            return n && Hd(e) ? to(n) : n;
        }
        function HE(e) {
            return e.length === 0 ? "" : e.slice(1).join(vr);
        }
        function GE(e, t) {
            return HE(Gd(e, t));
        }
        function Di(e, t, n) {
            let a = b_(e) ? br(e) : Gi(e, t);
            return n(a);
        }
        function v_(e) {
            return Hd(e) ? e.substr(0, e.length - 1) : e;
        }
        function to(e) {
            return Hd(e) ? e : e + vr;
        }
        function Sg(e) {
            return !Tg(e) && !as(e) ? "./" + e : e;
        }
        function Wv(e, t, n, a) {
            let _ = n !== void 0 && a !== void 0 ? yd(e, n, a) : yd(e);
            return _ ? e.slice(0, e.length - _.length) + (Hn(t, ".") ? t : "." + t) : e;
        }
        function xg(e, t, n) {
            if (e === t) return 0;
            if (e === void 0) return -1;
            if (t === void 0) return 1;
            let a = e.substring(0, Ni(e)), _ = t.substring(0, Ni(t)), p = zd(a, _);
            if (p !== 0) return p;
            let m = e.substring(a.length), y = t.substring(_.length);
            if (!Sl.test(m) && !Sl.test(y)) return n(m, y);
            let u = Ca(Oi(e)), x = Ca(Oi(t)), d = Math.min(u.length, x.length);
            for(let S = 1; S < d; S++){
                let T = n(u[S], x[S]);
                if (T !== 0) return T;
            }
            return Mn(u.length, x.length);
        }
        function XE(e, t) {
            return xg(e, t, Ii);
        }
        function $E(e, t) {
            return xg(e, t, zd);
        }
        function Vv(e, t, n, a) {
            return typeof n == "string" ? (e = Qt(n, e), t = Qt(n, t)) : typeof n == "boolean" && (a = n), xg(e, t, dg(a));
        }
        function Hv(e, t, n, a) {
            if (typeof n == "string" ? (e = Qt(n, e), t = Qt(n, t)) : typeof n == "boolean" && (a = n), e === void 0 || t === void 0) return !1;
            if (e === t) return !0;
            let _ = Ca(Oi(e)), p = Ca(Oi(t));
            if (p.length < _.length) return !1;
            let m = a ? s_ : Rl;
            for(let y = 0; y < _.length; y++)if (!(y === 0 ? s_ : m)(_[y], p[y])) return !1;
            return !0;
        }
        function QE(e, t, n) {
            let a = n(e), _ = n(t);
            return Hn(a, _ + "/") || Hn(a, _ + "\\");
        }
        function wg(e, t, n, a) {
            let _ = Ca(Oi(e)), p = Ca(Oi(t)), m;
            for(m = 0; m < _.length && m < p.length; m++){
                let x = a(_[m]), d = a(p[m]);
                if (!(m === 0 ? s_ : n)(x, d)) break;
            }
            if (m === 0) return p;
            let y = p.slice(m), u = [];
            for(; m < _.length; m++)u.push("..");
            return [
                "",
                ...u,
                ...y
            ];
        }
        function Gv(e, t, n) {
            I.assert(Ni(e) > 0 == Ni(t) > 0, "Paths must either both be absolute or both be relative");
            let p = wg(e, t, (typeof n == "boolean" ? n : !1) ? s_ : Rl, typeof n == "function" ? n : bt);
            return Wo(p);
        }
        function YE(e, t, n) {
            return b_(e) ? Eg(t, e, t, n, !1) : e;
        }
        function KE(e, t, n) {
            return Sg(Gv(Mi(e), t, n));
        }
        function Eg(e, t, n, a, _) {
            let p = wg(g0(n, e), g0(n, t), Rl, a), m = p[0];
            if (_ && b_(m)) {
                let y = m.charAt(0) === vr ? "file://" : "file:///";
                p[0] = y + m;
            }
            return Wo(p);
        }
        function Xv(e, t) {
            for(;;){
                let n = t(e);
                if (n !== void 0) return n;
                let a = Mi(e);
                if (a === e) return;
                e = a;
            }
        }
        function ZE(e) {
            return is(e, "/node_modules");
        }
        var vr, Cg, b0, $v, Sl, eC = It({
            "src/compiler/path.ts" () {
                "use strict";
                En(), vr = "/", Cg = "\\", b0 = "://", $v = /\\/g, Sl = /(?:\/\/)|(?:^|\/)\.\.?(?:$|\/)/;
            }
        });
        function i(e, t, n, a, _, p, m) {
            return {
                code: e,
                category: t,
                key: n,
                message: a,
                reportsUnnecessary: _,
                elidedInCompatabilityPyramid: p,
                reportsDeprecated: m
            };
        }
        var B, tC = It({
            "src/compiler/diagnosticInformationMap.generated.ts" () {
                "use strict";
                qv(), B = {
                    Unterminated_string_literal: i(1002, 1, "Unterminated_string_literal_1002", "Unterminated string literal."),
                    Identifier_expected: i(1003, 1, "Identifier_expected_1003", "Identifier expected."),
                    _0_expected: i(1005, 1, "_0_expected_1005", "'{0}' expected."),
                    A_file_cannot_have_a_reference_to_itself: i(1006, 1, "A_file_cannot_have_a_reference_to_itself_1006", "A file cannot have a reference to itself."),
                    The_parser_expected_to_find_a_1_to_match_the_0_token_here: i(1007, 1, "The_parser_expected_to_find_a_1_to_match_the_0_token_here_1007", "The parser expected to find a '{1}' to match the '{0}' token here."),
                    Trailing_comma_not_allowed: i(1009, 1, "Trailing_comma_not_allowed_1009", "Trailing comma not allowed."),
                    Asterisk_Slash_expected: i(1010, 1, "Asterisk_Slash_expected_1010", "'*/' expected."),
                    An_element_access_expression_should_take_an_argument: i(1011, 1, "An_element_access_expression_should_take_an_argument_1011", "An element access expression should take an argument."),
                    Unexpected_token: i(1012, 1, "Unexpected_token_1012", "Unexpected token."),
                    A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma: i(1013, 1, "A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma_1013", "A rest parameter or binding pattern may not have a trailing comma."),
                    A_rest_parameter_must_be_last_in_a_parameter_list: i(1014, 1, "A_rest_parameter_must_be_last_in_a_parameter_list_1014", "A rest parameter must be last in a parameter list."),
                    Parameter_cannot_have_question_mark_and_initializer: i(1015, 1, "Parameter_cannot_have_question_mark_and_initializer_1015", "Parameter cannot have question mark and initializer."),
                    A_required_parameter_cannot_follow_an_optional_parameter: i(1016, 1, "A_required_parameter_cannot_follow_an_optional_parameter_1016", "A required parameter cannot follow an optional parameter."),
                    An_index_signature_cannot_have_a_rest_parameter: i(1017, 1, "An_index_signature_cannot_have_a_rest_parameter_1017", "An index signature cannot have a rest parameter."),
                    An_index_signature_parameter_cannot_have_an_accessibility_modifier: i(1018, 1, "An_index_signature_parameter_cannot_have_an_accessibility_modifier_1018", "An index signature parameter cannot have an accessibility modifier."),
                    An_index_signature_parameter_cannot_have_a_question_mark: i(1019, 1, "An_index_signature_parameter_cannot_have_a_question_mark_1019", "An index signature parameter cannot have a question mark."),
                    An_index_signature_parameter_cannot_have_an_initializer: i(1020, 1, "An_index_signature_parameter_cannot_have_an_initializer_1020", "An index signature parameter cannot have an initializer."),
                    An_index_signature_must_have_a_type_annotation: i(1021, 1, "An_index_signature_must_have_a_type_annotation_1021", "An index signature must have a type annotation."),
                    An_index_signature_parameter_must_have_a_type_annotation: i(1022, 1, "An_index_signature_parameter_must_have_a_type_annotation_1022", "An index signature parameter must have a type annotation."),
                    readonly_modifier_can_only_appear_on_a_property_declaration_or_index_signature: i(1024, 1, "readonly_modifier_can_only_appear_on_a_property_declaration_or_index_signature_1024", "'readonly' modifier can only appear on a property declaration or index signature."),
                    An_index_signature_cannot_have_a_trailing_comma: i(1025, 1, "An_index_signature_cannot_have_a_trailing_comma_1025", "An index signature cannot have a trailing comma."),
                    Accessibility_modifier_already_seen: i(1028, 1, "Accessibility_modifier_already_seen_1028", "Accessibility modifier already seen."),
                    _0_modifier_must_precede_1_modifier: i(1029, 1, "_0_modifier_must_precede_1_modifier_1029", "'{0}' modifier must precede '{1}' modifier."),
                    _0_modifier_already_seen: i(1030, 1, "_0_modifier_already_seen_1030", "'{0}' modifier already seen."),
                    _0_modifier_cannot_appear_on_class_elements_of_this_kind: i(1031, 1, "_0_modifier_cannot_appear_on_class_elements_of_this_kind_1031", "'{0}' modifier cannot appear on class elements of this kind."),
                    super_must_be_followed_by_an_argument_list_or_member_access: i(1034, 1, "super_must_be_followed_by_an_argument_list_or_member_access_1034", "'super' must be followed by an argument list or member access."),
                    Only_ambient_modules_can_use_quoted_names: i(1035, 1, "Only_ambient_modules_can_use_quoted_names_1035", "Only ambient modules can use quoted names."),
                    Statements_are_not_allowed_in_ambient_contexts: i(1036, 1, "Statements_are_not_allowed_in_ambient_contexts_1036", "Statements are not allowed in ambient contexts."),
                    A_declare_modifier_cannot_be_used_in_an_already_ambient_context: i(1038, 1, "A_declare_modifier_cannot_be_used_in_an_already_ambient_context_1038", "A 'declare' modifier cannot be used in an already ambient context."),
                    Initializers_are_not_allowed_in_ambient_contexts: i(1039, 1, "Initializers_are_not_allowed_in_ambient_contexts_1039", "Initializers are not allowed in ambient contexts."),
                    _0_modifier_cannot_be_used_in_an_ambient_context: i(1040, 1, "_0_modifier_cannot_be_used_in_an_ambient_context_1040", "'{0}' modifier cannot be used in an ambient context."),
                    _0_modifier_cannot_be_used_here: i(1042, 1, "_0_modifier_cannot_be_used_here_1042", "'{0}' modifier cannot be used here."),
                    _0_modifier_cannot_appear_on_a_module_or_namespace_element: i(1044, 1, "_0_modifier_cannot_appear_on_a_module_or_namespace_element_1044", "'{0}' modifier cannot appear on a module or namespace element."),
                    Top_level_declarations_in_d_ts_files_must_start_with_either_a_declare_or_export_modifier: i(1046, 1, "Top_level_declarations_in_d_ts_files_must_start_with_either_a_declare_or_export_modifier_1046", "Top-level declarations in .d.ts files must start with either a 'declare' or 'export' modifier."),
                    A_rest_parameter_cannot_be_optional: i(1047, 1, "A_rest_parameter_cannot_be_optional_1047", "A rest parameter cannot be optional."),
                    A_rest_parameter_cannot_have_an_initializer: i(1048, 1, "A_rest_parameter_cannot_have_an_initializer_1048", "A rest parameter cannot have an initializer."),
                    A_set_accessor_must_have_exactly_one_parameter: i(1049, 1, "A_set_accessor_must_have_exactly_one_parameter_1049", "A 'set' accessor must have exactly one parameter."),
                    A_set_accessor_cannot_have_an_optional_parameter: i(1051, 1, "A_set_accessor_cannot_have_an_optional_parameter_1051", "A 'set' accessor cannot have an optional parameter."),
                    A_set_accessor_parameter_cannot_have_an_initializer: i(1052, 1, "A_set_accessor_parameter_cannot_have_an_initializer_1052", "A 'set' accessor parameter cannot have an initializer."),
                    A_set_accessor_cannot_have_rest_parameter: i(1053, 1, "A_set_accessor_cannot_have_rest_parameter_1053", "A 'set' accessor cannot have rest parameter."),
                    A_get_accessor_cannot_have_parameters: i(1054, 1, "A_get_accessor_cannot_have_parameters_1054", "A 'get' accessor cannot have parameters."),
                    Type_0_is_not_a_valid_async_function_return_type_in_ES5_SlashES3_because_it_does_not_refer_to_a_Promise_compatible_constructor_value: i(1055, 1, "Type_0_is_not_a_valid_async_function_return_type_in_ES5_SlashES3_because_it_does_not_refer_to_a_Prom_1055", "Type '{0}' is not a valid async function return type in ES5/ES3 because it does not refer to a Promise-compatible constructor value."),
                    Accessors_are_only_available_when_targeting_ECMAScript_5_and_higher: i(1056, 1, "Accessors_are_only_available_when_targeting_ECMAScript_5_and_higher_1056", "Accessors are only available when targeting ECMAScript 5 and higher."),
                    The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: i(1058, 1, "The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_t_1058", "The return type of an async function must either be a valid promise or must not contain a callable 'then' member."),
                    A_promise_must_have_a_then_method: i(1059, 1, "A_promise_must_have_a_then_method_1059", "A promise must have a 'then' method."),
                    The_first_parameter_of_the_then_method_of_a_promise_must_be_a_callback: i(1060, 1, "The_first_parameter_of_the_then_method_of_a_promise_must_be_a_callback_1060", "The first parameter of the 'then' method of a promise must be a callback."),
                    Enum_member_must_have_initializer: i(1061, 1, "Enum_member_must_have_initializer_1061", "Enum member must have initializer."),
                    Type_is_referenced_directly_or_indirectly_in_the_fulfillment_callback_of_its_own_then_method: i(1062, 1, "Type_is_referenced_directly_or_indirectly_in_the_fulfillment_callback_of_its_own_then_method_1062", "Type is referenced directly or indirectly in the fulfillment callback of its own 'then' method."),
                    An_export_assignment_cannot_be_used_in_a_namespace: i(1063, 1, "An_export_assignment_cannot_be_used_in_a_namespace_1063", "An export assignment cannot be used in a namespace."),
                    The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type_Did_you_mean_to_write_Promise_0: i(1064, 1, "The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type_Did_you_mean_to_wri_1064", "The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<{0}>'?"),
                    The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type: i(1065, 1, "The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type_1065", "The return type of an async function or method must be the global Promise<T> type."),
                    In_ambient_enum_declarations_member_initializer_must_be_constant_expression: i(1066, 1, "In_ambient_enum_declarations_member_initializer_must_be_constant_expression_1066", "In ambient enum declarations member initializer must be constant expression."),
                    Unexpected_token_A_constructor_method_accessor_or_property_was_expected: i(1068, 1, "Unexpected_token_A_constructor_method_accessor_or_property_was_expected_1068", "Unexpected token. A constructor, method, accessor, or property was expected."),
                    Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces: i(1069, 1, "Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces_1069", "Unexpected token. A type parameter name was expected without curly braces."),
                    _0_modifier_cannot_appear_on_a_type_member: i(1070, 1, "_0_modifier_cannot_appear_on_a_type_member_1070", "'{0}' modifier cannot appear on a type member."),
                    _0_modifier_cannot_appear_on_an_index_signature: i(1071, 1, "_0_modifier_cannot_appear_on_an_index_signature_1071", "'{0}' modifier cannot appear on an index signature."),
                    A_0_modifier_cannot_be_used_with_an_import_declaration: i(1079, 1, "A_0_modifier_cannot_be_used_with_an_import_declaration_1079", "A '{0}' modifier cannot be used with an import declaration."),
                    Invalid_reference_directive_syntax: i(1084, 1, "Invalid_reference_directive_syntax_1084", "Invalid 'reference' directive syntax."),
                    _0_modifier_cannot_appear_on_a_constructor_declaration: i(1089, 1, "_0_modifier_cannot_appear_on_a_constructor_declaration_1089", "'{0}' modifier cannot appear on a constructor declaration."),
                    _0_modifier_cannot_appear_on_a_parameter: i(1090, 1, "_0_modifier_cannot_appear_on_a_parameter_1090", "'{0}' modifier cannot appear on a parameter."),
                    Only_a_single_variable_declaration_is_allowed_in_a_for_in_statement: i(1091, 1, "Only_a_single_variable_declaration_is_allowed_in_a_for_in_statement_1091", "Only a single variable declaration is allowed in a 'for...in' statement."),
                    Type_parameters_cannot_appear_on_a_constructor_declaration: i(1092, 1, "Type_parameters_cannot_appear_on_a_constructor_declaration_1092", "Type parameters cannot appear on a constructor declaration."),
                    Type_annotation_cannot_appear_on_a_constructor_declaration: i(1093, 1, "Type_annotation_cannot_appear_on_a_constructor_declaration_1093", "Type annotation cannot appear on a constructor declaration."),
                    An_accessor_cannot_have_type_parameters: i(1094, 1, "An_accessor_cannot_have_type_parameters_1094", "An accessor cannot have type parameters."),
                    A_set_accessor_cannot_have_a_return_type_annotation: i(1095, 1, "A_set_accessor_cannot_have_a_return_type_annotation_1095", "A 'set' accessor cannot have a return type annotation."),
                    An_index_signature_must_have_exactly_one_parameter: i(1096, 1, "An_index_signature_must_have_exactly_one_parameter_1096", "An index signature must have exactly one parameter."),
                    _0_list_cannot_be_empty: i(1097, 1, "_0_list_cannot_be_empty_1097", "'{0}' list cannot be empty."),
                    Type_parameter_list_cannot_be_empty: i(1098, 1, "Type_parameter_list_cannot_be_empty_1098", "Type parameter list cannot be empty."),
                    Type_argument_list_cannot_be_empty: i(1099, 1, "Type_argument_list_cannot_be_empty_1099", "Type argument list cannot be empty."),
                    Invalid_use_of_0_in_strict_mode: i(1100, 1, "Invalid_use_of_0_in_strict_mode_1100", "Invalid use of '{0}' in strict mode."),
                    with_statements_are_not_allowed_in_strict_mode: i(1101, 1, "with_statements_are_not_allowed_in_strict_mode_1101", "'with' statements are not allowed in strict mode."),
                    delete_cannot_be_called_on_an_identifier_in_strict_mode: i(1102, 1, "delete_cannot_be_called_on_an_identifier_in_strict_mode_1102", "'delete' cannot be called on an identifier in strict mode."),
                    for_await_loops_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules: i(1103, 1, "for_await_loops_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules_1103", "'for await' loops are only allowed within async functions and at the top levels of modules."),
                    A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement: i(1104, 1, "A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement_1104", "A 'continue' statement can only be used within an enclosing iteration statement."),
                    A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement: i(1105, 1, "A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement_1105", "A 'break' statement can only be used within an enclosing iteration or switch statement."),
                    The_left_hand_side_of_a_for_of_statement_may_not_be_async: i(1106, 1, "The_left_hand_side_of_a_for_of_statement_may_not_be_async_1106", "The left-hand side of a 'for...of' statement may not be 'async'."),
                    Jump_target_cannot_cross_function_boundary: i(1107, 1, "Jump_target_cannot_cross_function_boundary_1107", "Jump target cannot cross function boundary."),
                    A_return_statement_can_only_be_used_within_a_function_body: i(1108, 1, "A_return_statement_can_only_be_used_within_a_function_body_1108", "A 'return' statement can only be used within a function body."),
                    Expression_expected: i(1109, 1, "Expression_expected_1109", "Expression expected."),
                    Type_expected: i(1110, 1, "Type_expected_1110", "Type expected."),
                    Private_field_0_must_be_declared_in_an_enclosing_class: i(1111, 1, "Private_field_0_must_be_declared_in_an_enclosing_class_1111", "Private field '{0}' must be declared in an enclosing class."),
                    A_default_clause_cannot_appear_more_than_once_in_a_switch_statement: i(1113, 1, "A_default_clause_cannot_appear_more_than_once_in_a_switch_statement_1113", "A 'default' clause cannot appear more than once in a 'switch' statement."),
                    Duplicate_label_0: i(1114, 1, "Duplicate_label_0_1114", "Duplicate label '{0}'."),
                    A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement: i(1115, 1, "A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement_1115", "A 'continue' statement can only jump to a label of an enclosing iteration statement."),
                    A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement: i(1116, 1, "A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement_1116", "A 'break' statement can only jump to a label of an enclosing statement."),
                    An_object_literal_cannot_have_multiple_properties_with_the_same_name: i(1117, 1, "An_object_literal_cannot_have_multiple_properties_with_the_same_name_1117", "An object literal cannot have multiple properties with the same name."),
                    An_object_literal_cannot_have_multiple_get_Slashset_accessors_with_the_same_name: i(1118, 1, "An_object_literal_cannot_have_multiple_get_Slashset_accessors_with_the_same_name_1118", "An object literal cannot have multiple get/set accessors with the same name."),
                    An_object_literal_cannot_have_property_and_accessor_with_the_same_name: i(1119, 1, "An_object_literal_cannot_have_property_and_accessor_with_the_same_name_1119", "An object literal cannot have property and accessor with the same name."),
                    An_export_assignment_cannot_have_modifiers: i(1120, 1, "An_export_assignment_cannot_have_modifiers_1120", "An export assignment cannot have modifiers."),
                    Octal_literals_are_not_allowed_Use_the_syntax_0: i(1121, 1, "Octal_literals_are_not_allowed_Use_the_syntax_0_1121", "Octal literals are not allowed. Use the syntax '{0}'."),
                    Variable_declaration_list_cannot_be_empty: i(1123, 1, "Variable_declaration_list_cannot_be_empty_1123", "Variable declaration list cannot be empty."),
                    Digit_expected: i(1124, 1, "Digit_expected_1124", "Digit expected."),
                    Hexadecimal_digit_expected: i(1125, 1, "Hexadecimal_digit_expected_1125", "Hexadecimal digit expected."),
                    Unexpected_end_of_text: i(1126, 1, "Unexpected_end_of_text_1126", "Unexpected end of text."),
                    Invalid_character: i(1127, 1, "Invalid_character_1127", "Invalid character."),
                    Declaration_or_statement_expected: i(1128, 1, "Declaration_or_statement_expected_1128", "Declaration or statement expected."),
                    Statement_expected: i(1129, 1, "Statement_expected_1129", "Statement expected."),
                    case_or_default_expected: i(1130, 1, "case_or_default_expected_1130", "'case' or 'default' expected."),
                    Property_or_signature_expected: i(1131, 1, "Property_or_signature_expected_1131", "Property or signature expected."),
                    Enum_member_expected: i(1132, 1, "Enum_member_expected_1132", "Enum member expected."),
                    Variable_declaration_expected: i(1134, 1, "Variable_declaration_expected_1134", "Variable declaration expected."),
                    Argument_expression_expected: i(1135, 1, "Argument_expression_expected_1135", "Argument expression expected."),
                    Property_assignment_expected: i(1136, 1, "Property_assignment_expected_1136", "Property assignment expected."),
                    Expression_or_comma_expected: i(1137, 1, "Expression_or_comma_expected_1137", "Expression or comma expected."),
                    Parameter_declaration_expected: i(1138, 1, "Parameter_declaration_expected_1138", "Parameter declaration expected."),
                    Type_parameter_declaration_expected: i(1139, 1, "Type_parameter_declaration_expected_1139", "Type parameter declaration expected."),
                    Type_argument_expected: i(1140, 1, "Type_argument_expected_1140", "Type argument expected."),
                    String_literal_expected: i(1141, 1, "String_literal_expected_1141", "String literal expected."),
                    Line_break_not_permitted_here: i(1142, 1, "Line_break_not_permitted_here_1142", "Line break not permitted here."),
                    or_expected: i(1144, 1, "or_expected_1144", "'{' or ';' expected."),
                    or_JSX_element_expected: i(1145, 1, "or_JSX_element_expected_1145", "'{' or JSX element expected."),
                    Declaration_expected: i(1146, 1, "Declaration_expected_1146", "Declaration expected."),
                    Import_declarations_in_a_namespace_cannot_reference_a_module: i(1147, 1, "Import_declarations_in_a_namespace_cannot_reference_a_module_1147", "Import declarations in a namespace cannot reference a module."),
                    Cannot_use_imports_exports_or_module_augmentations_when_module_is_none: i(1148, 1, "Cannot_use_imports_exports_or_module_augmentations_when_module_is_none_1148", "Cannot use imports, exports, or module augmentations when '--module' is 'none'."),
                    File_name_0_differs_from_already_included_file_name_1_only_in_casing: i(1149, 1, "File_name_0_differs_from_already_included_file_name_1_only_in_casing_1149", "File name '{0}' differs from already included file name '{1}' only in casing."),
                    _0_declarations_must_be_initialized: i(1155, 1, "_0_declarations_must_be_initialized_1155", "'{0}' declarations must be initialized."),
                    _0_declarations_can_only_be_declared_inside_a_block: i(1156, 1, "_0_declarations_can_only_be_declared_inside_a_block_1156", "'{0}' declarations can only be declared inside a block."),
                    Unterminated_template_literal: i(1160, 1, "Unterminated_template_literal_1160", "Unterminated template literal."),
                    Unterminated_regular_expression_literal: i(1161, 1, "Unterminated_regular_expression_literal_1161", "Unterminated regular expression literal."),
                    An_object_member_cannot_be_declared_optional: i(1162, 1, "An_object_member_cannot_be_declared_optional_1162", "An object member cannot be declared optional."),
                    A_yield_expression_is_only_allowed_in_a_generator_body: i(1163, 1, "A_yield_expression_is_only_allowed_in_a_generator_body_1163", "A 'yield' expression is only allowed in a generator body."),
                    Computed_property_names_are_not_allowed_in_enums: i(1164, 1, "Computed_property_names_are_not_allowed_in_enums_1164", "Computed property names are not allowed in enums."),
                    A_computed_property_name_in_an_ambient_context_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: i(1165, 1, "A_computed_property_name_in_an_ambient_context_must_refer_to_an_expression_whose_type_is_a_literal_t_1165", "A computed property name in an ambient context must refer to an expression whose type is a literal type or a 'unique symbol' type."),
                    A_computed_property_name_in_a_class_property_declaration_must_have_a_simple_literal_type_or_a_unique_symbol_type: i(1166, 1, "A_computed_property_name_in_a_class_property_declaration_must_have_a_simple_literal_type_or_a_unique_1166", "A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type."),
                    A_computed_property_name_in_a_method_overload_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: i(1168, 1, "A_computed_property_name_in_a_method_overload_must_refer_to_an_expression_whose_type_is_a_literal_ty_1168", "A computed property name in a method overload must refer to an expression whose type is a literal type or a 'unique symbol' type."),
                    A_computed_property_name_in_an_interface_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: i(1169, 1, "A_computed_property_name_in_an_interface_must_refer_to_an_expression_whose_type_is_a_literal_type_or_1169", "A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type."),
                    A_computed_property_name_in_a_type_literal_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: i(1170, 1, "A_computed_property_name_in_a_type_literal_must_refer_to_an_expression_whose_type_is_a_literal_type__1170", "A computed property name in a type literal must refer to an expression whose type is a literal type or a 'unique symbol' type."),
                    A_comma_expression_is_not_allowed_in_a_computed_property_name: i(1171, 1, "A_comma_expression_is_not_allowed_in_a_computed_property_name_1171", "A comma expression is not allowed in a computed property name."),
                    extends_clause_already_seen: i(1172, 1, "extends_clause_already_seen_1172", "'extends' clause already seen."),
                    extends_clause_must_precede_implements_clause: i(1173, 1, "extends_clause_must_precede_implements_clause_1173", "'extends' clause must precede 'implements' clause."),
                    Classes_can_only_extend_a_single_class: i(1174, 1, "Classes_can_only_extend_a_single_class_1174", "Classes can only extend a single class."),
                    implements_clause_already_seen: i(1175, 1, "implements_clause_already_seen_1175", "'implements' clause already seen."),
                    Interface_declaration_cannot_have_implements_clause: i(1176, 1, "Interface_declaration_cannot_have_implements_clause_1176", "Interface declaration cannot have 'implements' clause."),
                    Binary_digit_expected: i(1177, 1, "Binary_digit_expected_1177", "Binary digit expected."),
                    Octal_digit_expected: i(1178, 1, "Octal_digit_expected_1178", "Octal digit expected."),
                    Unexpected_token_expected: i(1179, 1, "Unexpected_token_expected_1179", "Unexpected token. '{' expected."),
                    Property_destructuring_pattern_expected: i(1180, 1, "Property_destructuring_pattern_expected_1180", "Property destructuring pattern expected."),
                    Array_element_destructuring_pattern_expected: i(1181, 1, "Array_element_destructuring_pattern_expected_1181", "Array element destructuring pattern expected."),
                    A_destructuring_declaration_must_have_an_initializer: i(1182, 1, "A_destructuring_declaration_must_have_an_initializer_1182", "A destructuring declaration must have an initializer."),
                    An_implementation_cannot_be_declared_in_ambient_contexts: i(1183, 1, "An_implementation_cannot_be_declared_in_ambient_contexts_1183", "An implementation cannot be declared in ambient contexts."),
                    Modifiers_cannot_appear_here: i(1184, 1, "Modifiers_cannot_appear_here_1184", "Modifiers cannot appear here."),
                    Merge_conflict_marker_encountered: i(1185, 1, "Merge_conflict_marker_encountered_1185", "Merge conflict marker encountered."),
                    A_rest_element_cannot_have_an_initializer: i(1186, 1, "A_rest_element_cannot_have_an_initializer_1186", "A rest element cannot have an initializer."),
                    A_parameter_property_may_not_be_declared_using_a_binding_pattern: i(1187, 1, "A_parameter_property_may_not_be_declared_using_a_binding_pattern_1187", "A parameter property may not be declared using a binding pattern."),
                    Only_a_single_variable_declaration_is_allowed_in_a_for_of_statement: i(1188, 1, "Only_a_single_variable_declaration_is_allowed_in_a_for_of_statement_1188", "Only a single variable declaration is allowed in a 'for...of' statement."),
                    The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer: i(1189, 1, "The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer_1189", "The variable declaration of a 'for...in' statement cannot have an initializer."),
                    The_variable_declaration_of_a_for_of_statement_cannot_have_an_initializer: i(1190, 1, "The_variable_declaration_of_a_for_of_statement_cannot_have_an_initializer_1190", "The variable declaration of a 'for...of' statement cannot have an initializer."),
                    An_import_declaration_cannot_have_modifiers: i(1191, 1, "An_import_declaration_cannot_have_modifiers_1191", "An import declaration cannot have modifiers."),
                    Module_0_has_no_default_export: i(1192, 1, "Module_0_has_no_default_export_1192", "Module '{0}' has no default export."),
                    An_export_declaration_cannot_have_modifiers: i(1193, 1, "An_export_declaration_cannot_have_modifiers_1193", "An export declaration cannot have modifiers."),
                    Export_declarations_are_not_permitted_in_a_namespace: i(1194, 1, "Export_declarations_are_not_permitted_in_a_namespace_1194", "Export declarations are not permitted in a namespace."),
                    export_Asterisk_does_not_re_export_a_default: i(1195, 1, "export_Asterisk_does_not_re_export_a_default_1195", "'export *' does not re-export a default."),
                    Catch_clause_variable_type_annotation_must_be_any_or_unknown_if_specified: i(1196, 1, "Catch_clause_variable_type_annotation_must_be_any_or_unknown_if_specified_1196", "Catch clause variable type annotation must be 'any' or 'unknown' if specified."),
                    Catch_clause_variable_cannot_have_an_initializer: i(1197, 1, "Catch_clause_variable_cannot_have_an_initializer_1197", "Catch clause variable cannot have an initializer."),
                    An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive: i(1198, 1, "An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive_1198", "An extended Unicode escape value must be between 0x0 and 0x10FFFF inclusive."),
                    Unterminated_Unicode_escape_sequence: i(1199, 1, "Unterminated_Unicode_escape_sequence_1199", "Unterminated Unicode escape sequence."),
                    Line_terminator_not_permitted_before_arrow: i(1200, 1, "Line_terminator_not_permitted_before_arrow_1200", "Line terminator not permitted before arrow."),
                    Import_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_import_Asterisk_as_ns_from_mod_import_a_from_mod_import_d_from_mod_or_another_module_format_instead: i(1202, 1, "Import_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_import_Asterisk_as_1202", `Import assignment cannot be used when targeting ECMAScript modules. Consider using 'import * as ns from "mod"', 'import {a} from "mod"', 'import d from "mod"', or another module format instead.`),
                    Export_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_export_default_or_another_module_format_instead: i(1203, 1, "Export_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_export_default_or__1203", "Export assignment cannot be used when targeting ECMAScript modules. Consider using 'export default' or another module format instead."),
                    Re_exporting_a_type_when_0_is_enabled_requires_using_export_type: i(1205, 1, "Re_exporting_a_type_when_0_is_enabled_requires_using_export_type_1205", "Re-exporting a type when '{0}' is enabled requires using 'export type'."),
                    Decorators_are_not_valid_here: i(1206, 1, "Decorators_are_not_valid_here_1206", "Decorators are not valid here."),
                    Decorators_cannot_be_applied_to_multiple_get_Slashset_accessors_of_the_same_name: i(1207, 1, "Decorators_cannot_be_applied_to_multiple_get_Slashset_accessors_of_the_same_name_1207", "Decorators cannot be applied to multiple get/set accessors of the same name."),
                    Invalid_optional_chain_from_new_expression_Did_you_mean_to_call_0: i(1209, 1, "Invalid_optional_chain_from_new_expression_Did_you_mean_to_call_0_1209", "Invalid optional chain from new expression. Did you mean to call '{0}()'?"),
                    Code_contained_in_a_class_is_evaluated_in_JavaScript_s_strict_mode_which_does_not_allow_this_use_of_0_For_more_information_see_https_Colon_Slash_Slashdeveloper_mozilla_org_Slashen_US_Slashdocs_SlashWeb_SlashJavaScript_SlashReference_SlashStrict_mode: i(1210, 1, "Code_contained_in_a_class_is_evaluated_in_JavaScript_s_strict_mode_which_does_not_allow_this_use_of__1210", "Code contained in a class is evaluated in JavaScript's strict mode which does not allow this use of '{0}'. For more information, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode."),
                    A_class_declaration_without_the_default_modifier_must_have_a_name: i(1211, 1, "A_class_declaration_without_the_default_modifier_must_have_a_name_1211", "A class declaration without the 'default' modifier must have a name."),
                    Identifier_expected_0_is_a_reserved_word_in_strict_mode: i(1212, 1, "Identifier_expected_0_is_a_reserved_word_in_strict_mode_1212", "Identifier expected. '{0}' is a reserved word in strict mode."),
                    Identifier_expected_0_is_a_reserved_word_in_strict_mode_Class_definitions_are_automatically_in_strict_mode: i(1213, 1, "Identifier_expected_0_is_a_reserved_word_in_strict_mode_Class_definitions_are_automatically_in_stric_1213", "Identifier expected. '{0}' is a reserved word in strict mode. Class definitions are automatically in strict mode."),
                    Identifier_expected_0_is_a_reserved_word_in_strict_mode_Modules_are_automatically_in_strict_mode: i(1214, 1, "Identifier_expected_0_is_a_reserved_word_in_strict_mode_Modules_are_automatically_in_strict_mode_1214", "Identifier expected. '{0}' is a reserved word in strict mode. Modules are automatically in strict mode."),
                    Invalid_use_of_0_Modules_are_automatically_in_strict_mode: i(1215, 1, "Invalid_use_of_0_Modules_are_automatically_in_strict_mode_1215", "Invalid use of '{0}'. Modules are automatically in strict mode."),
                    Identifier_expected_esModule_is_reserved_as_an_exported_marker_when_transforming_ECMAScript_modules: i(1216, 1, "Identifier_expected_esModule_is_reserved_as_an_exported_marker_when_transforming_ECMAScript_modules_1216", "Identifier expected. '__esModule' is reserved as an exported marker when transforming ECMAScript modules."),
                    Export_assignment_is_not_supported_when_module_flag_is_system: i(1218, 1, "Export_assignment_is_not_supported_when_module_flag_is_system_1218", "Export assignment is not supported when '--module' flag is 'system'."),
                    Generators_are_not_allowed_in_an_ambient_context: i(1221, 1, "Generators_are_not_allowed_in_an_ambient_context_1221", "Generators are not allowed in an ambient context."),
                    An_overload_signature_cannot_be_declared_as_a_generator: i(1222, 1, "An_overload_signature_cannot_be_declared_as_a_generator_1222", "An overload signature cannot be declared as a generator."),
                    _0_tag_already_specified: i(1223, 1, "_0_tag_already_specified_1223", "'{0}' tag already specified."),
                    Signature_0_must_be_a_type_predicate: i(1224, 1, "Signature_0_must_be_a_type_predicate_1224", "Signature '{0}' must be a type predicate."),
                    Cannot_find_parameter_0: i(1225, 1, "Cannot_find_parameter_0_1225", "Cannot find parameter '{0}'."),
                    Type_predicate_0_is_not_assignable_to_1: i(1226, 1, "Type_predicate_0_is_not_assignable_to_1_1226", "Type predicate '{0}' is not assignable to '{1}'."),
                    Parameter_0_is_not_in_the_same_position_as_parameter_1: i(1227, 1, "Parameter_0_is_not_in_the_same_position_as_parameter_1_1227", "Parameter '{0}' is not in the same position as parameter '{1}'."),
                    A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods: i(1228, 1, "A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods_1228", "A type predicate is only allowed in return type position for functions and methods."),
                    A_type_predicate_cannot_reference_a_rest_parameter: i(1229, 1, "A_type_predicate_cannot_reference_a_rest_parameter_1229", "A type predicate cannot reference a rest parameter."),
                    A_type_predicate_cannot_reference_element_0_in_a_binding_pattern: i(1230, 1, "A_type_predicate_cannot_reference_element_0_in_a_binding_pattern_1230", "A type predicate cannot reference element '{0}' in a binding pattern."),
                    An_export_assignment_must_be_at_the_top_level_of_a_file_or_module_declaration: i(1231, 1, "An_export_assignment_must_be_at_the_top_level_of_a_file_or_module_declaration_1231", "An export assignment must be at the top level of a file or module declaration."),
                    An_import_declaration_can_only_be_used_at_the_top_level_of_a_namespace_or_module: i(1232, 1, "An_import_declaration_can_only_be_used_at_the_top_level_of_a_namespace_or_module_1232", "An import declaration can only be used at the top level of a namespace or module."),
                    An_export_declaration_can_only_be_used_at_the_top_level_of_a_namespace_or_module: i(1233, 1, "An_export_declaration_can_only_be_used_at_the_top_level_of_a_namespace_or_module_1233", "An export declaration can only be used at the top level of a namespace or module."),
                    An_ambient_module_declaration_is_only_allowed_at_the_top_level_in_a_file: i(1234, 1, "An_ambient_module_declaration_is_only_allowed_at_the_top_level_in_a_file_1234", "An ambient module declaration is only allowed at the top level in a file."),
                    A_namespace_declaration_is_only_allowed_at_the_top_level_of_a_namespace_or_module: i(1235, 1, "A_namespace_declaration_is_only_allowed_at_the_top_level_of_a_namespace_or_module_1235", "A namespace declaration is only allowed at the top level of a namespace or module."),
                    The_return_type_of_a_property_decorator_function_must_be_either_void_or_any: i(1236, 1, "The_return_type_of_a_property_decorator_function_must_be_either_void_or_any_1236", "The return type of a property decorator function must be either 'void' or 'any'."),
                    The_return_type_of_a_parameter_decorator_function_must_be_either_void_or_any: i(1237, 1, "The_return_type_of_a_parameter_decorator_function_must_be_either_void_or_any_1237", "The return type of a parameter decorator function must be either 'void' or 'any'."),
                    Unable_to_resolve_signature_of_class_decorator_when_called_as_an_expression: i(1238, 1, "Unable_to_resolve_signature_of_class_decorator_when_called_as_an_expression_1238", "Unable to resolve signature of class decorator when called as an expression."),
                    Unable_to_resolve_signature_of_parameter_decorator_when_called_as_an_expression: i(1239, 1, "Unable_to_resolve_signature_of_parameter_decorator_when_called_as_an_expression_1239", "Unable to resolve signature of parameter decorator when called as an expression."),
                    Unable_to_resolve_signature_of_property_decorator_when_called_as_an_expression: i(1240, 1, "Unable_to_resolve_signature_of_property_decorator_when_called_as_an_expression_1240", "Unable to resolve signature of property decorator when called as an expression."),
                    Unable_to_resolve_signature_of_method_decorator_when_called_as_an_expression: i(1241, 1, "Unable_to_resolve_signature_of_method_decorator_when_called_as_an_expression_1241", "Unable to resolve signature of method decorator when called as an expression."),
                    abstract_modifier_can_only_appear_on_a_class_method_or_property_declaration: i(1242, 1, "abstract_modifier_can_only_appear_on_a_class_method_or_property_declaration_1242", "'abstract' modifier can only appear on a class, method, or property declaration."),
                    _0_modifier_cannot_be_used_with_1_modifier: i(1243, 1, "_0_modifier_cannot_be_used_with_1_modifier_1243", "'{0}' modifier cannot be used with '{1}' modifier."),
                    Abstract_methods_can_only_appear_within_an_abstract_class: i(1244, 1, "Abstract_methods_can_only_appear_within_an_abstract_class_1244", "Abstract methods can only appear within an abstract class."),
                    Method_0_cannot_have_an_implementation_because_it_is_marked_abstract: i(1245, 1, "Method_0_cannot_have_an_implementation_because_it_is_marked_abstract_1245", "Method '{0}' cannot have an implementation because it is marked abstract."),
                    An_interface_property_cannot_have_an_initializer: i(1246, 1, "An_interface_property_cannot_have_an_initializer_1246", "An interface property cannot have an initializer."),
                    A_type_literal_property_cannot_have_an_initializer: i(1247, 1, "A_type_literal_property_cannot_have_an_initializer_1247", "A type literal property cannot have an initializer."),
                    A_class_member_cannot_have_the_0_keyword: i(1248, 1, "A_class_member_cannot_have_the_0_keyword_1248", "A class member cannot have the '{0}' keyword."),
                    A_decorator_can_only_decorate_a_method_implementation_not_an_overload: i(1249, 1, "A_decorator_can_only_decorate_a_method_implementation_not_an_overload_1249", "A decorator can only decorate a method implementation, not an overload."),
                    Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5: i(1250, 1, "Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_1250", "Function declarations are not allowed inside blocks in strict mode when targeting 'ES3' or 'ES5'."),
                    Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Class_definitions_are_automatically_in_strict_mode: i(1251, 1, "Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Class_d_1251", "Function declarations are not allowed inside blocks in strict mode when targeting 'ES3' or 'ES5'. Class definitions are automatically in strict mode."),
                    Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Modules_are_automatically_in_strict_mode: i(1252, 1, "Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES3_or_ES5_Modules_1252", "Function declarations are not allowed inside blocks in strict mode when targeting 'ES3' or 'ES5'. Modules are automatically in strict mode."),
                    Abstract_properties_can_only_appear_within_an_abstract_class: i(1253, 1, "Abstract_properties_can_only_appear_within_an_abstract_class_1253", "Abstract properties can only appear within an abstract class."),
                    A_const_initializer_in_an_ambient_context_must_be_a_string_or_numeric_literal_or_literal_enum_reference: i(1254, 1, "A_const_initializer_in_an_ambient_context_must_be_a_string_or_numeric_literal_or_literal_enum_refere_1254", "A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference."),
                    A_definite_assignment_assertion_is_not_permitted_in_this_context: i(1255, 1, "A_definite_assignment_assertion_is_not_permitted_in_this_context_1255", "A definite assignment assertion '!' is not permitted in this context."),
                    A_required_element_cannot_follow_an_optional_element: i(1257, 1, "A_required_element_cannot_follow_an_optional_element_1257", "A required element cannot follow an optional element."),
                    A_default_export_must_be_at_the_top_level_of_a_file_or_module_declaration: i(1258, 1, "A_default_export_must_be_at_the_top_level_of_a_file_or_module_declaration_1258", "A default export must be at the top level of a file or module declaration."),
                    Module_0_can_only_be_default_imported_using_the_1_flag: i(1259, 1, "Module_0_can_only_be_default_imported_using_the_1_flag_1259", "Module '{0}' can only be default-imported using the '{1}' flag"),
                    Keywords_cannot_contain_escape_characters: i(1260, 1, "Keywords_cannot_contain_escape_characters_1260", "Keywords cannot contain escape characters."),
                    Already_included_file_name_0_differs_from_file_name_1_only_in_casing: i(1261, 1, "Already_included_file_name_0_differs_from_file_name_1_only_in_casing_1261", "Already included file name '{0}' differs from file name '{1}' only in casing."),
                    Identifier_expected_0_is_a_reserved_word_at_the_top_level_of_a_module: i(1262, 1, "Identifier_expected_0_is_a_reserved_word_at_the_top_level_of_a_module_1262", "Identifier expected. '{0}' is a reserved word at the top-level of a module."),
                    Declarations_with_initializers_cannot_also_have_definite_assignment_assertions: i(1263, 1, "Declarations_with_initializers_cannot_also_have_definite_assignment_assertions_1263", "Declarations with initializers cannot also have definite assignment assertions."),
                    Declarations_with_definite_assignment_assertions_must_also_have_type_annotations: i(1264, 1, "Declarations_with_definite_assignment_assertions_must_also_have_type_annotations_1264", "Declarations with definite assignment assertions must also have type annotations."),
                    A_rest_element_cannot_follow_another_rest_element: i(1265, 1, "A_rest_element_cannot_follow_another_rest_element_1265", "A rest element cannot follow another rest element."),
                    An_optional_element_cannot_follow_a_rest_element: i(1266, 1, "An_optional_element_cannot_follow_a_rest_element_1266", "An optional element cannot follow a rest element."),
                    Property_0_cannot_have_an_initializer_because_it_is_marked_abstract: i(1267, 1, "Property_0_cannot_have_an_initializer_because_it_is_marked_abstract_1267", "Property '{0}' cannot have an initializer because it is marked abstract."),
                    An_index_signature_parameter_type_must_be_string_number_symbol_or_a_template_literal_type: i(1268, 1, "An_index_signature_parameter_type_must_be_string_number_symbol_or_a_template_literal_type_1268", "An index signature parameter type must be 'string', 'number', 'symbol', or a template literal type."),
                    Cannot_use_export_import_on_a_type_or_type_only_namespace_when_0_is_enabled: i(1269, 1, "Cannot_use_export_import_on_a_type_or_type_only_namespace_when_0_is_enabled_1269", "Cannot use 'export import' on a type or type-only namespace when '{0}' is enabled."),
                    Decorator_function_return_type_0_is_not_assignable_to_type_1: i(1270, 1, "Decorator_function_return_type_0_is_not_assignable_to_type_1_1270", "Decorator function return type '{0}' is not assignable to type '{1}'."),
                    Decorator_function_return_type_is_0_but_is_expected_to_be_void_or_any: i(1271, 1, "Decorator_function_return_type_is_0_but_is_expected_to_be_void_or_any_1271", "Decorator function return type is '{0}' but is expected to be 'void' or 'any'."),
                    A_type_referenced_in_a_decorated_signature_must_be_imported_with_import_type_or_a_namespace_import_when_isolatedModules_and_emitDecoratorMetadata_are_enabled: i(1272, 1, "A_type_referenced_in_a_decorated_signature_must_be_imported_with_import_type_or_a_namespace_import_w_1272", "A type referenced in a decorated signature must be imported with 'import type' or a namespace import when 'isolatedModules' and 'emitDecoratorMetadata' are enabled."),
                    _0_modifier_cannot_appear_on_a_type_parameter: i(1273, 1, "_0_modifier_cannot_appear_on_a_type_parameter_1273", "'{0}' modifier cannot appear on a type parameter"),
                    _0_modifier_can_only_appear_on_a_type_parameter_of_a_class_interface_or_type_alias: i(1274, 1, "_0_modifier_can_only_appear_on_a_type_parameter_of_a_class_interface_or_type_alias_1274", "'{0}' modifier can only appear on a type parameter of a class, interface or type alias"),
                    accessor_modifier_can_only_appear_on_a_property_declaration: i(1275, 1, "accessor_modifier_can_only_appear_on_a_property_declaration_1275", "'accessor' modifier can only appear on a property declaration."),
                    An_accessor_property_cannot_be_declared_optional: i(1276, 1, "An_accessor_property_cannot_be_declared_optional_1276", "An 'accessor' property cannot be declared optional."),
                    _0_modifier_can_only_appear_on_a_type_parameter_of_a_function_method_or_class: i(1277, 1, "_0_modifier_can_only_appear_on_a_type_parameter_of_a_function_method_or_class_1277", "'{0}' modifier can only appear on a type parameter of a function, method or class"),
                    The_runtime_will_invoke_the_decorator_with_1_arguments_but_the_decorator_expects_0: i(1278, 1, "The_runtime_will_invoke_the_decorator_with_1_arguments_but_the_decorator_expects_0_1278", "The runtime will invoke the decorator with {1} arguments, but the decorator expects {0}."),
                    The_runtime_will_invoke_the_decorator_with_1_arguments_but_the_decorator_expects_at_least_0: i(1279, 1, "The_runtime_will_invoke_the_decorator_with_1_arguments_but_the_decorator_expects_at_least_0_1279", "The runtime will invoke the decorator with {1} arguments, but the decorator expects at least {0}."),
                    Namespaces_are_not_allowed_in_global_script_files_when_0_is_enabled_If_this_file_is_not_intended_to_be_a_global_script_set_moduleDetection_to_force_or_add_an_empty_export_statement: i(1280, 1, "Namespaces_are_not_allowed_in_global_script_files_when_0_is_enabled_If_this_file_is_not_intended_to__1280", "Namespaces are not allowed in global script files when '{0}' is enabled. If this file is not intended to be a global script, set 'moduleDetection' to 'force' or add an empty 'export {}' statement."),
                    Cannot_access_0_from_another_file_without_qualification_when_1_is_enabled_Use_2_instead: i(1281, 1, "Cannot_access_0_from_another_file_without_qualification_when_1_is_enabled_Use_2_instead_1281", "Cannot access '{0}' from another file without qualification when '{1}' is enabled. Use '{2}' instead."),
                    An_export_declaration_must_reference_a_value_when_verbatimModuleSyntax_is_enabled_but_0_only_refers_to_a_type: i(1282, 1, "An_export_declaration_must_reference_a_value_when_verbatimModuleSyntax_is_enabled_but_0_only_refers__1282", "An 'export =' declaration must reference a value when 'verbatimModuleSyntax' is enabled, but '{0}' only refers to a type."),
                    An_export_declaration_must_reference_a_real_value_when_verbatimModuleSyntax_is_enabled_but_0_resolves_to_a_type_only_declaration: i(1283, 1, "An_export_declaration_must_reference_a_real_value_when_verbatimModuleSyntax_is_enabled_but_0_resolve_1283", "An 'export =' declaration must reference a real value when 'verbatimModuleSyntax' is enabled, but '{0}' resolves to a type-only declaration."),
                    An_export_default_must_reference_a_value_when_verbatimModuleSyntax_is_enabled_but_0_only_refers_to_a_type: i(1284, 1, "An_export_default_must_reference_a_value_when_verbatimModuleSyntax_is_enabled_but_0_only_refers_to_a_1284", "An 'export default' must reference a value when 'verbatimModuleSyntax' is enabled, but '{0}' only refers to a type."),
                    An_export_default_must_reference_a_real_value_when_verbatimModuleSyntax_is_enabled_but_0_resolves_to_a_type_only_declaration: i(1285, 1, "An_export_default_must_reference_a_real_value_when_verbatimModuleSyntax_is_enabled_but_0_resolves_to_1285", "An 'export default' must reference a real value when 'verbatimModuleSyntax' is enabled, but '{0}' resolves to a type-only declaration."),
                    ESM_syntax_is_not_allowed_in_a_CommonJS_module_when_verbatimModuleSyntax_is_enabled: i(1286, 1, "ESM_syntax_is_not_allowed_in_a_CommonJS_module_when_verbatimModuleSyntax_is_enabled_1286", "ESM syntax is not allowed in a CommonJS module when 'verbatimModuleSyntax' is enabled."),
                    A_top_level_export_modifier_cannot_be_used_on_value_declarations_in_a_CommonJS_module_when_verbatimModuleSyntax_is_enabled: i(1287, 1, "A_top_level_export_modifier_cannot_be_used_on_value_declarations_in_a_CommonJS_module_when_verbatimM_1287", "A top-level 'export' modifier cannot be used on value declarations in a CommonJS module when 'verbatimModuleSyntax' is enabled."),
                    An_import_alias_cannot_resolve_to_a_type_or_type_only_declaration_when_verbatimModuleSyntax_is_enabled: i(1288, 1, "An_import_alias_cannot_resolve_to_a_type_or_type_only_declaration_when_verbatimModuleSyntax_is_enabl_1288", "An import alias cannot resolve to a type or type-only declaration when 'verbatimModuleSyntax' is enabled."),
                    with_statements_are_not_allowed_in_an_async_function_block: i(1300, 1, "with_statements_are_not_allowed_in_an_async_function_block_1300", "'with' statements are not allowed in an async function block."),
                    await_expressions_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules: i(1308, 1, "await_expressions_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules_1308", "'await' expressions are only allowed within async functions and at the top levels of modules."),
                    The_current_file_is_a_CommonJS_module_and_cannot_use_await_at_the_top_level: i(1309, 1, "The_current_file_is_a_CommonJS_module_and_cannot_use_await_at_the_top_level_1309", "The current file is a CommonJS module and cannot use 'await' at the top level."),
                    Did_you_mean_to_use_a_Colon_An_can_only_follow_a_property_name_when_the_containing_object_literal_is_part_of_a_destructuring_pattern: i(1312, 1, "Did_you_mean_to_use_a_Colon_An_can_only_follow_a_property_name_when_the_containing_object_literal_is_1312", "Did you mean to use a ':'? An '=' can only follow a property name when the containing object literal is part of a destructuring pattern."),
                    The_body_of_an_if_statement_cannot_be_the_empty_statement: i(1313, 1, "The_body_of_an_if_statement_cannot_be_the_empty_statement_1313", "The body of an 'if' statement cannot be the empty statement."),
                    Global_module_exports_may_only_appear_in_module_files: i(1314, 1, "Global_module_exports_may_only_appear_in_module_files_1314", "Global module exports may only appear in module files."),
                    Global_module_exports_may_only_appear_in_declaration_files: i(1315, 1, "Global_module_exports_may_only_appear_in_declaration_files_1315", "Global module exports may only appear in declaration files."),
                    Global_module_exports_may_only_appear_at_top_level: i(1316, 1, "Global_module_exports_may_only_appear_at_top_level_1316", "Global module exports may only appear at top level."),
                    A_parameter_property_cannot_be_declared_using_a_rest_parameter: i(1317, 1, "A_parameter_property_cannot_be_declared_using_a_rest_parameter_1317", "A parameter property cannot be declared using a rest parameter."),
                    An_abstract_accessor_cannot_have_an_implementation: i(1318, 1, "An_abstract_accessor_cannot_have_an_implementation_1318", "An abstract accessor cannot have an implementation."),
                    A_default_export_can_only_be_used_in_an_ECMAScript_style_module: i(1319, 1, "A_default_export_can_only_be_used_in_an_ECMAScript_style_module_1319", "A default export can only be used in an ECMAScript-style module."),
                    Type_of_await_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: i(1320, 1, "Type_of_await_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member_1320", "Type of 'await' operand must either be a valid promise or must not contain a callable 'then' member."),
                    Type_of_yield_operand_in_an_async_generator_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: i(1321, 1, "Type_of_yield_operand_in_an_async_generator_must_either_be_a_valid_promise_or_must_not_contain_a_cal_1321", "Type of 'yield' operand in an async generator must either be a valid promise or must not contain a callable 'then' member."),
                    Type_of_iterated_elements_of_a_yield_Asterisk_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: i(1322, 1, "Type_of_iterated_elements_of_a_yield_Asterisk_operand_must_either_be_a_valid_promise_or_must_not_con_1322", "Type of iterated elements of a 'yield*' operand must either be a valid promise or must not contain a callable 'then' member."),
                    Dynamic_imports_are_only_supported_when_the_module_flag_is_set_to_es2020_es2022_esnext_commonjs_amd_system_umd_node16_or_nodenext: i(1323, 1, "Dynamic_imports_are_only_supported_when_the_module_flag_is_set_to_es2020_es2022_esnext_commonjs_amd__1323", "Dynamic imports are only supported when the '--module' flag is set to 'es2020', 'es2022', 'esnext', 'commonjs', 'amd', 'system', 'umd', 'node16', or 'nodenext'."),
                    Dynamic_imports_only_support_a_second_argument_when_the_module_option_is_set_to_esnext_node16_or_nodenext: i(1324, 1, "Dynamic_imports_only_support_a_second_argument_when_the_module_option_is_set_to_esnext_node16_or_nod_1324", "Dynamic imports only support a second argument when the '--module' option is set to 'esnext', 'node16', or 'nodenext'."),
                    Argument_of_dynamic_import_cannot_be_spread_element: i(1325, 1, "Argument_of_dynamic_import_cannot_be_spread_element_1325", "Argument of dynamic import cannot be spread element."),
                    This_use_of_import_is_invalid_import_calls_can_be_written_but_they_must_have_parentheses_and_cannot_have_type_arguments: i(1326, 1, "This_use_of_import_is_invalid_import_calls_can_be_written_but_they_must_have_parentheses_and_cannot__1326", "This use of 'import' is invalid. 'import()' calls can be written, but they must have parentheses and cannot have type arguments."),
                    String_literal_with_double_quotes_expected: i(1327, 1, "String_literal_with_double_quotes_expected_1327", "String literal with double quotes expected."),
                    Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_literal: i(1328, 1, "Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_li_1328", "Property value can only be string literal, numeric literal, 'true', 'false', 'null', object literal or array literal."),
                    _0_accepts_too_few_arguments_to_be_used_as_a_decorator_here_Did_you_mean_to_call_it_first_and_write_0: i(1329, 1, "_0_accepts_too_few_arguments_to_be_used_as_a_decorator_here_Did_you_mean_to_call_it_first_and_write__1329", "'{0}' accepts too few arguments to be used as a decorator here. Did you mean to call it first and write '@{0}()'?"),
                    A_property_of_an_interface_or_type_literal_whose_type_is_a_unique_symbol_type_must_be_readonly: i(1330, 1, "A_property_of_an_interface_or_type_literal_whose_type_is_a_unique_symbol_type_must_be_readonly_1330", "A property of an interface or type literal whose type is a 'unique symbol' type must be 'readonly'."),
                    A_property_of_a_class_whose_type_is_a_unique_symbol_type_must_be_both_static_and_readonly: i(1331, 1, "A_property_of_a_class_whose_type_is_a_unique_symbol_type_must_be_both_static_and_readonly_1331", "A property of a class whose type is a 'unique symbol' type must be both 'static' and 'readonly'."),
                    A_variable_whose_type_is_a_unique_symbol_type_must_be_const: i(1332, 1, "A_variable_whose_type_is_a_unique_symbol_type_must_be_const_1332", "A variable whose type is a 'unique symbol' type must be 'const'."),
                    unique_symbol_types_may_not_be_used_on_a_variable_declaration_with_a_binding_name: i(1333, 1, "unique_symbol_types_may_not_be_used_on_a_variable_declaration_with_a_binding_name_1333", "'unique symbol' types may not be used on a variable declaration with a binding name."),
                    unique_symbol_types_are_only_allowed_on_variables_in_a_variable_statement: i(1334, 1, "unique_symbol_types_are_only_allowed_on_variables_in_a_variable_statement_1334", "'unique symbol' types are only allowed on variables in a variable statement."),
                    unique_symbol_types_are_not_allowed_here: i(1335, 1, "unique_symbol_types_are_not_allowed_here_1335", "'unique symbol' types are not allowed here."),
                    An_index_signature_parameter_type_cannot_be_a_literal_type_or_generic_type_Consider_using_a_mapped_object_type_instead: i(1337, 1, "An_index_signature_parameter_type_cannot_be_a_literal_type_or_generic_type_Consider_using_a_mapped_o_1337", "An index signature parameter type cannot be a literal type or generic type. Consider using a mapped object type instead."),
                    infer_declarations_are_only_permitted_in_the_extends_clause_of_a_conditional_type: i(1338, 1, "infer_declarations_are_only_permitted_in_the_extends_clause_of_a_conditional_type_1338", "'infer' declarations are only permitted in the 'extends' clause of a conditional type."),
                    Module_0_does_not_refer_to_a_value_but_is_used_as_a_value_here: i(1339, 1, "Module_0_does_not_refer_to_a_value_but_is_used_as_a_value_here_1339", "Module '{0}' does not refer to a value, but is used as a value here."),
                    Module_0_does_not_refer_to_a_type_but_is_used_as_a_type_here_Did_you_mean_typeof_import_0: i(1340, 1, "Module_0_does_not_refer_to_a_type_but_is_used_as_a_type_here_Did_you_mean_typeof_import_0_1340", "Module '{0}' does not refer to a type, but is used as a type here. Did you mean 'typeof import('{0}')'?"),
                    Class_constructor_may_not_be_an_accessor: i(1341, 1, "Class_constructor_may_not_be_an_accessor_1341", "Class constructor may not be an accessor."),
                    The_import_meta_meta_property_is_only_allowed_when_the_module_option_is_es2020_es2022_esnext_system_node16_or_nodenext: i(1343, 1, "The_import_meta_meta_property_is_only_allowed_when_the_module_option_is_es2020_es2022_esnext_system__1343", "The 'import.meta' meta-property is only allowed when the '--module' option is 'es2020', 'es2022', 'esnext', 'system', 'node16', or 'nodenext'."),
                    A_label_is_not_allowed_here: i(1344, 1, "A_label_is_not_allowed_here_1344", "'A label is not allowed here."),
                    An_expression_of_type_void_cannot_be_tested_for_truthiness: i(1345, 1, "An_expression_of_type_void_cannot_be_tested_for_truthiness_1345", "An expression of type 'void' cannot be tested for truthiness."),
                    This_parameter_is_not_allowed_with_use_strict_directive: i(1346, 1, "This_parameter_is_not_allowed_with_use_strict_directive_1346", "This parameter is not allowed with 'use strict' directive."),
                    use_strict_directive_cannot_be_used_with_non_simple_parameter_list: i(1347, 1, "use_strict_directive_cannot_be_used_with_non_simple_parameter_list_1347", "'use strict' directive cannot be used with non-simple parameter list."),
                    Non_simple_parameter_declared_here: i(1348, 1, "Non_simple_parameter_declared_here_1348", "Non-simple parameter declared here."),
                    use_strict_directive_used_here: i(1349, 1, "use_strict_directive_used_here_1349", "'use strict' directive used here."),
                    Print_the_final_configuration_instead_of_building: i(1350, 3, "Print_the_final_configuration_instead_of_building_1350", "Print the final configuration instead of building."),
                    An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal: i(1351, 1, "An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal_1351", "An identifier or keyword cannot immediately follow a numeric literal."),
                    A_bigint_literal_cannot_use_exponential_notation: i(1352, 1, "A_bigint_literal_cannot_use_exponential_notation_1352", "A bigint literal cannot use exponential notation."),
                    A_bigint_literal_must_be_an_integer: i(1353, 1, "A_bigint_literal_must_be_an_integer_1353", "A bigint literal must be an integer."),
                    readonly_type_modifier_is_only_permitted_on_array_and_tuple_literal_types: i(1354, 1, "readonly_type_modifier_is_only_permitted_on_array_and_tuple_literal_types_1354", "'readonly' type modifier is only permitted on array and tuple literal types."),
                    A_const_assertions_can_only_be_applied_to_references_to_enum_members_or_string_number_boolean_array_or_object_literals: i(1355, 1, "A_const_assertions_can_only_be_applied_to_references_to_enum_members_or_string_number_boolean_array__1355", "A 'const' assertions can only be applied to references to enum members, or string, number, boolean, array, or object literals."),
                    Did_you_mean_to_mark_this_function_as_async: i(1356, 1, "Did_you_mean_to_mark_this_function_as_async_1356", "Did you mean to mark this function as 'async'?"),
                    An_enum_member_name_must_be_followed_by_a_or: i(1357, 1, "An_enum_member_name_must_be_followed_by_a_or_1357", "An enum member name must be followed by a ',', '=', or '}'."),
                    Tagged_template_expressions_are_not_permitted_in_an_optional_chain: i(1358, 1, "Tagged_template_expressions_are_not_permitted_in_an_optional_chain_1358", "Tagged template expressions are not permitted in an optional chain."),
                    Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here: i(1359, 1, "Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here_1359", "Identifier expected. '{0}' is a reserved word that cannot be used here."),
                    Type_0_does_not_satisfy_the_expected_type_1: i(1360, 1, "Type_0_does_not_satisfy_the_expected_type_1_1360", "Type '{0}' does not satisfy the expected type '{1}'."),
                    _0_cannot_be_used_as_a_value_because_it_was_imported_using_import_type: i(1361, 1, "_0_cannot_be_used_as_a_value_because_it_was_imported_using_import_type_1361", "'{0}' cannot be used as a value because it was imported using 'import type'."),
                    _0_cannot_be_used_as_a_value_because_it_was_exported_using_export_type: i(1362, 1, "_0_cannot_be_used_as_a_value_because_it_was_exported_using_export_type_1362", "'{0}' cannot be used as a value because it was exported using 'export type'."),
                    A_type_only_import_can_specify_a_default_import_or_named_bindings_but_not_both: i(1363, 1, "A_type_only_import_can_specify_a_default_import_or_named_bindings_but_not_both_1363", "A type-only import can specify a default import or named bindings, but not both."),
                    Convert_to_type_only_export: i(1364, 3, "Convert_to_type_only_export_1364", "Convert to type-only export"),
                    Convert_all_re_exported_types_to_type_only_exports: i(1365, 3, "Convert_all_re_exported_types_to_type_only_exports_1365", "Convert all re-exported types to type-only exports"),
                    Split_into_two_separate_import_declarations: i(1366, 3, "Split_into_two_separate_import_declarations_1366", "Split into two separate import declarations"),
                    Split_all_invalid_type_only_imports: i(1367, 3, "Split_all_invalid_type_only_imports_1367", "Split all invalid type-only imports"),
                    Class_constructor_may_not_be_a_generator: i(1368, 1, "Class_constructor_may_not_be_a_generator_1368", "Class constructor may not be a generator."),
                    Did_you_mean_0: i(1369, 3, "Did_you_mean_0_1369", "Did you mean '{0}'?"),
                    This_import_is_never_used_as_a_value_and_must_use_import_type_because_importsNotUsedAsValues_is_set_to_error: i(1371, 1, "This_import_is_never_used_as_a_value_and_must_use_import_type_because_importsNotUsedAsValues_is_set__1371", "This import is never used as a value and must use 'import type' because 'importsNotUsedAsValues' is set to 'error'."),
                    await_expressions_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_file_has_no_imports_or_exports_Consider_adding_an_empty_export_to_make_this_file_a_module: i(1375, 1, "await_expressions_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_fi_1375", "'await' expressions are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module."),
                    _0_was_imported_here: i(1376, 3, "_0_was_imported_here_1376", "'{0}' was imported here."),
                    _0_was_exported_here: i(1377, 3, "_0_was_exported_here_1377", "'{0}' was exported here."),
                    Top_level_await_expressions_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_node16_or_nodenext_and_the_target_option_is_set_to_es2017_or_higher: i(1378, 1, "Top_level_await_expressions_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_n_1378", "Top-level 'await' expressions are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', or 'nodenext', and the 'target' option is set to 'es2017' or higher."),
                    An_import_alias_cannot_reference_a_declaration_that_was_exported_using_export_type: i(1379, 1, "An_import_alias_cannot_reference_a_declaration_that_was_exported_using_export_type_1379", "An import alias cannot reference a declaration that was exported using 'export type'."),
                    An_import_alias_cannot_reference_a_declaration_that_was_imported_using_import_type: i(1380, 1, "An_import_alias_cannot_reference_a_declaration_that_was_imported_using_import_type_1380", "An import alias cannot reference a declaration that was imported using 'import type'."),
                    Unexpected_token_Did_you_mean_or_rbrace: i(1381, 1, "Unexpected_token_Did_you_mean_or_rbrace_1381", "Unexpected token. Did you mean `{'}'}` or `&rbrace;`?"),
                    Unexpected_token_Did_you_mean_or_gt: i(1382, 1, "Unexpected_token_Did_you_mean_or_gt_1382", "Unexpected token. Did you mean `{'>'}` or `&gt;`?"),
                    Function_type_notation_must_be_parenthesized_when_used_in_a_union_type: i(1385, 1, "Function_type_notation_must_be_parenthesized_when_used_in_a_union_type_1385", "Function type notation must be parenthesized when used in a union type."),
                    Constructor_type_notation_must_be_parenthesized_when_used_in_a_union_type: i(1386, 1, "Constructor_type_notation_must_be_parenthesized_when_used_in_a_union_type_1386", "Constructor type notation must be parenthesized when used in a union type."),
                    Function_type_notation_must_be_parenthesized_when_used_in_an_intersection_type: i(1387, 1, "Function_type_notation_must_be_parenthesized_when_used_in_an_intersection_type_1387", "Function type notation must be parenthesized when used in an intersection type."),
                    Constructor_type_notation_must_be_parenthesized_when_used_in_an_intersection_type: i(1388, 1, "Constructor_type_notation_must_be_parenthesized_when_used_in_an_intersection_type_1388", "Constructor type notation must be parenthesized when used in an intersection type."),
                    _0_is_not_allowed_as_a_variable_declaration_name: i(1389, 1, "_0_is_not_allowed_as_a_variable_declaration_name_1389", "'{0}' is not allowed as a variable declaration name."),
                    _0_is_not_allowed_as_a_parameter_name: i(1390, 1, "_0_is_not_allowed_as_a_parameter_name_1390", "'{0}' is not allowed as a parameter name."),
                    An_import_alias_cannot_use_import_type: i(1392, 1, "An_import_alias_cannot_use_import_type_1392", "An import alias cannot use 'import type'"),
                    Imported_via_0_from_file_1: i(1393, 3, "Imported_via_0_from_file_1_1393", "Imported via {0} from file '{1}'"),
                    Imported_via_0_from_file_1_with_packageId_2: i(1394, 3, "Imported_via_0_from_file_1_with_packageId_2_1394", "Imported via {0} from file '{1}' with packageId '{2}'"),
                    Imported_via_0_from_file_1_to_import_importHelpers_as_specified_in_compilerOptions: i(1395, 3, "Imported_via_0_from_file_1_to_import_importHelpers_as_specified_in_compilerOptions_1395", "Imported via {0} from file '{1}' to import 'importHelpers' as specified in compilerOptions"),
                    Imported_via_0_from_file_1_with_packageId_2_to_import_importHelpers_as_specified_in_compilerOptions: i(1396, 3, "Imported_via_0_from_file_1_with_packageId_2_to_import_importHelpers_as_specified_in_compilerOptions_1396", "Imported via {0} from file '{1}' with packageId '{2}' to import 'importHelpers' as specified in compilerOptions"),
                    Imported_via_0_from_file_1_to_import_jsx_and_jsxs_factory_functions: i(1397, 3, "Imported_via_0_from_file_1_to_import_jsx_and_jsxs_factory_functions_1397", "Imported via {0} from file '{1}' to import 'jsx' and 'jsxs' factory functions"),
                    Imported_via_0_from_file_1_with_packageId_2_to_import_jsx_and_jsxs_factory_functions: i(1398, 3, "Imported_via_0_from_file_1_with_packageId_2_to_import_jsx_and_jsxs_factory_functions_1398", "Imported via {0} from file '{1}' with packageId '{2}' to import 'jsx' and 'jsxs' factory functions"),
                    File_is_included_via_import_here: i(1399, 3, "File_is_included_via_import_here_1399", "File is included via import here."),
                    Referenced_via_0_from_file_1: i(1400, 3, "Referenced_via_0_from_file_1_1400", "Referenced via '{0}' from file '{1}'"),
                    File_is_included_via_reference_here: i(1401, 3, "File_is_included_via_reference_here_1401", "File is included via reference here."),
                    Type_library_referenced_via_0_from_file_1: i(1402, 3, "Type_library_referenced_via_0_from_file_1_1402", "Type library referenced via '{0}' from file '{1}'"),
                    Type_library_referenced_via_0_from_file_1_with_packageId_2: i(1403, 3, "Type_library_referenced_via_0_from_file_1_with_packageId_2_1403", "Type library referenced via '{0}' from file '{1}' with packageId '{2}'"),
                    File_is_included_via_type_library_reference_here: i(1404, 3, "File_is_included_via_type_library_reference_here_1404", "File is included via type library reference here."),
                    Library_referenced_via_0_from_file_1: i(1405, 3, "Library_referenced_via_0_from_file_1_1405", "Library referenced via '{0}' from file '{1}'"),
                    File_is_included_via_library_reference_here: i(1406, 3, "File_is_included_via_library_reference_here_1406", "File is included via library reference here."),
                    Matched_by_include_pattern_0_in_1: i(1407, 3, "Matched_by_include_pattern_0_in_1_1407", "Matched by include pattern '{0}' in '{1}'"),
                    File_is_matched_by_include_pattern_specified_here: i(1408, 3, "File_is_matched_by_include_pattern_specified_here_1408", "File is matched by include pattern specified here."),
                    Part_of_files_list_in_tsconfig_json: i(1409, 3, "Part_of_files_list_in_tsconfig_json_1409", "Part of 'files' list in tsconfig.json"),
                    File_is_matched_by_files_list_specified_here: i(1410, 3, "File_is_matched_by_files_list_specified_here_1410", "File is matched by 'files' list specified here."),
                    Output_from_referenced_project_0_included_because_1_specified: i(1411, 3, "Output_from_referenced_project_0_included_because_1_specified_1411", "Output from referenced project '{0}' included because '{1}' specified"),
                    Output_from_referenced_project_0_included_because_module_is_specified_as_none: i(1412, 3, "Output_from_referenced_project_0_included_because_module_is_specified_as_none_1412", "Output from referenced project '{0}' included because '--module' is specified as 'none'"),
                    File_is_output_from_referenced_project_specified_here: i(1413, 3, "File_is_output_from_referenced_project_specified_here_1413", "File is output from referenced project specified here."),
                    Source_from_referenced_project_0_included_because_1_specified: i(1414, 3, "Source_from_referenced_project_0_included_because_1_specified_1414", "Source from referenced project '{0}' included because '{1}' specified"),
                    Source_from_referenced_project_0_included_because_module_is_specified_as_none: i(1415, 3, "Source_from_referenced_project_0_included_because_module_is_specified_as_none_1415", "Source from referenced project '{0}' included because '--module' is specified as 'none'"),
                    File_is_source_from_referenced_project_specified_here: i(1416, 3, "File_is_source_from_referenced_project_specified_here_1416", "File is source from referenced project specified here."),
                    Entry_point_of_type_library_0_specified_in_compilerOptions: i(1417, 3, "Entry_point_of_type_library_0_specified_in_compilerOptions_1417", "Entry point of type library '{0}' specified in compilerOptions"),
                    Entry_point_of_type_library_0_specified_in_compilerOptions_with_packageId_1: i(1418, 3, "Entry_point_of_type_library_0_specified_in_compilerOptions_with_packageId_1_1418", "Entry point of type library '{0}' specified in compilerOptions with packageId '{1}'"),
                    File_is_entry_point_of_type_library_specified_here: i(1419, 3, "File_is_entry_point_of_type_library_specified_here_1419", "File is entry point of type library specified here."),
                    Entry_point_for_implicit_type_library_0: i(1420, 3, "Entry_point_for_implicit_type_library_0_1420", "Entry point for implicit type library '{0}'"),
                    Entry_point_for_implicit_type_library_0_with_packageId_1: i(1421, 3, "Entry_point_for_implicit_type_library_0_with_packageId_1_1421", "Entry point for implicit type library '{0}' with packageId '{1}'"),
                    Library_0_specified_in_compilerOptions: i(1422, 3, "Library_0_specified_in_compilerOptions_1422", "Library '{0}' specified in compilerOptions"),
                    File_is_library_specified_here: i(1423, 3, "File_is_library_specified_here_1423", "File is library specified here."),
                    Default_library: i(1424, 3, "Default_library_1424", "Default library"),
                    Default_library_for_target_0: i(1425, 3, "Default_library_for_target_0_1425", "Default library for target '{0}'"),
                    File_is_default_library_for_target_specified_here: i(1426, 3, "File_is_default_library_for_target_specified_here_1426", "File is default library for target specified here."),
                    Root_file_specified_for_compilation: i(1427, 3, "Root_file_specified_for_compilation_1427", "Root file specified for compilation"),
                    File_is_output_of_project_reference_source_0: i(1428, 3, "File_is_output_of_project_reference_source_0_1428", "File is output of project reference source '{0}'"),
                    File_redirects_to_file_0: i(1429, 3, "File_redirects_to_file_0_1429", "File redirects to file '{0}'"),
                    The_file_is_in_the_program_because_Colon: i(1430, 3, "The_file_is_in_the_program_because_Colon_1430", "The file is in the program because:"),
                    for_await_loops_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_file_has_no_imports_or_exports_Consider_adding_an_empty_export_to_make_this_file_a_module: i(1431, 1, "for_await_loops_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_file_1431", "'for await' loops are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module."),
                    Top_level_for_await_loops_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_node16_or_nodenext_and_the_target_option_is_set_to_es2017_or_higher: i(1432, 1, "Top_level_for_await_loops_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_nod_1432", "Top-level 'for await' loops are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', or 'nodenext', and the 'target' option is set to 'es2017' or higher."),
                    Neither_decorators_nor_modifiers_may_be_applied_to_this_parameters: i(1433, 1, "Neither_decorators_nor_modifiers_may_be_applied_to_this_parameters_1433", "Neither decorators nor modifiers may be applied to 'this' parameters."),
                    Unexpected_keyword_or_identifier: i(1434, 1, "Unexpected_keyword_or_identifier_1434", "Unexpected keyword or identifier."),
                    Unknown_keyword_or_identifier_Did_you_mean_0: i(1435, 1, "Unknown_keyword_or_identifier_Did_you_mean_0_1435", "Unknown keyword or identifier. Did you mean '{0}'?"),
                    Decorators_must_precede_the_name_and_all_keywords_of_property_declarations: i(1436, 1, "Decorators_must_precede_the_name_and_all_keywords_of_property_declarations_1436", "Decorators must precede the name and all keywords of property declarations."),
                    Namespace_must_be_given_a_name: i(1437, 1, "Namespace_must_be_given_a_name_1437", "Namespace must be given a name."),
                    Interface_must_be_given_a_name: i(1438, 1, "Interface_must_be_given_a_name_1438", "Interface must be given a name."),
                    Type_alias_must_be_given_a_name: i(1439, 1, "Type_alias_must_be_given_a_name_1439", "Type alias must be given a name."),
                    Variable_declaration_not_allowed_at_this_location: i(1440, 1, "Variable_declaration_not_allowed_at_this_location_1440", "Variable declaration not allowed at this location."),
                    Cannot_start_a_function_call_in_a_type_annotation: i(1441, 1, "Cannot_start_a_function_call_in_a_type_annotation_1441", "Cannot start a function call in a type annotation."),
                    Expected_for_property_initializer: i(1442, 1, "Expected_for_property_initializer_1442", "Expected '=' for property initializer."),
                    Module_declaration_names_may_only_use_or_quoted_strings: i(1443, 1, "Module_declaration_names_may_only_use_or_quoted_strings_1443", `Module declaration names may only use ' or " quoted strings.`),
                    _0_is_a_type_and_must_be_imported_using_a_type_only_import_when_preserveValueImports_and_isolatedModules_are_both_enabled: i(1444, 1, "_0_is_a_type_and_must_be_imported_using_a_type_only_import_when_preserveValueImports_and_isolatedMod_1444", "'{0}' is a type and must be imported using a type-only import when 'preserveValueImports' and 'isolatedModules' are both enabled."),
                    _0_resolves_to_a_type_only_declaration_and_must_be_imported_using_a_type_only_import_when_preserveValueImports_and_isolatedModules_are_both_enabled: i(1446, 1, "_0_resolves_to_a_type_only_declaration_and_must_be_imported_using_a_type_only_import_when_preserveVa_1446", "'{0}' resolves to a type-only declaration and must be imported using a type-only import when 'preserveValueImports' and 'isolatedModules' are both enabled."),
                    _0_resolves_to_a_type_only_declaration_and_must_be_re_exported_using_a_type_only_re_export_when_1_is_enabled: i(1448, 1, "_0_resolves_to_a_type_only_declaration_and_must_be_re_exported_using_a_type_only_re_export_when_1_is_1448", "'{0}' resolves to a type-only declaration and must be re-exported using a type-only re-export when '{1}' is enabled."),
                    Preserve_unused_imported_values_in_the_JavaScript_output_that_would_otherwise_be_removed: i(1449, 3, "Preserve_unused_imported_values_in_the_JavaScript_output_that_would_otherwise_be_removed_1449", "Preserve unused imported values in the JavaScript output that would otherwise be removed."),
                    Dynamic_imports_can_only_accept_a_module_specifier_and_an_optional_set_of_attributes_as_arguments: i(1450, 3, "Dynamic_imports_can_only_accept_a_module_specifier_and_an_optional_set_of_attributes_as_arguments_1450", "Dynamic imports can only accept a module specifier and an optional set of attributes as arguments"),
                    Private_identifiers_are_only_allowed_in_class_bodies_and_may_only_be_used_as_part_of_a_class_member_declaration_property_access_or_on_the_left_hand_side_of_an_in_expression: i(1451, 1, "Private_identifiers_are_only_allowed_in_class_bodies_and_may_only_be_used_as_part_of_a_class_member__1451", "Private identifiers are only allowed in class bodies and may only be used as part of a class member declaration, property access, or on the left-hand-side of an 'in' expression"),
                    resolution_mode_should_be_either_require_or_import: i(1453, 1, "resolution_mode_should_be_either_require_or_import_1453", "`resolution-mode` should be either `require` or `import`."),
                    resolution_mode_can_only_be_set_for_type_only_imports: i(1454, 1, "resolution_mode_can_only_be_set_for_type_only_imports_1454", "`resolution-mode` can only be set for type-only imports."),
                    resolution_mode_is_the_only_valid_key_for_type_import_assertions: i(1455, 1, "resolution_mode_is_the_only_valid_key_for_type_import_assertions_1455", "`resolution-mode` is the only valid key for type import assertions."),
                    Type_import_assertions_should_have_exactly_one_key_resolution_mode_with_value_import_or_require: i(1456, 1, "Type_import_assertions_should_have_exactly_one_key_resolution_mode_with_value_import_or_require_1456", "Type import assertions should have exactly one key - `resolution-mode` - with value `import` or `require`."),
                    Matched_by_default_include_pattern_Asterisk_Asterisk_Slash_Asterisk: i(1457, 3, "Matched_by_default_include_pattern_Asterisk_Asterisk_Slash_Asterisk_1457", "Matched by default include pattern '**/*'"),
                    File_is_ECMAScript_module_because_0_has_field_type_with_value_module: i(1458, 3, "File_is_ECMAScript_module_because_0_has_field_type_with_value_module_1458", `File is ECMAScript module because '{0}' has field "type" with value "module"`),
                    File_is_CommonJS_module_because_0_has_field_type_whose_value_is_not_module: i(1459, 3, "File_is_CommonJS_module_because_0_has_field_type_whose_value_is_not_module_1459", `File is CommonJS module because '{0}' has field "type" whose value is not "module"`),
                    File_is_CommonJS_module_because_0_does_not_have_field_type: i(1460, 3, "File_is_CommonJS_module_because_0_does_not_have_field_type_1460", `File is CommonJS module because '{0}' does not have field "type"`),
                    File_is_CommonJS_module_because_package_json_was_not_found: i(1461, 3, "File_is_CommonJS_module_because_package_json_was_not_found_1461", "File is CommonJS module because 'package.json' was not found"),
                    resolution_mode_is_the_only_valid_key_for_type_import_attributes: i(1463, 1, "resolution_mode_is_the_only_valid_key_for_type_import_attributes_1463", "'resolution-mode' is the only valid key for type import attributes."),
                    Type_import_attributes_should_have_exactly_one_key_resolution_mode_with_value_import_or_require: i(1464, 1, "Type_import_attributes_should_have_exactly_one_key_resolution_mode_with_value_import_or_require_1464", "Type import attributes should have exactly one key - 'resolution-mode' - with value 'import' or 'require'."),
                    The_import_meta_meta_property_is_not_allowed_in_files_which_will_build_into_CommonJS_output: i(1470, 1, "The_import_meta_meta_property_is_not_allowed_in_files_which_will_build_into_CommonJS_output_1470", "The 'import.meta' meta-property is not allowed in files which will build into CommonJS output."),
                    Module_0_cannot_be_imported_using_this_construct_The_specifier_only_resolves_to_an_ES_module_which_cannot_be_imported_with_require_Use_an_ECMAScript_import_instead: i(1471, 1, "Module_0_cannot_be_imported_using_this_construct_The_specifier_only_resolves_to_an_ES_module_which_c_1471", "Module '{0}' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead."),
                    catch_or_finally_expected: i(1472, 1, "catch_or_finally_expected_1472", "'catch' or 'finally' expected."),
                    An_import_declaration_can_only_be_used_at_the_top_level_of_a_module: i(1473, 1, "An_import_declaration_can_only_be_used_at_the_top_level_of_a_module_1473", "An import declaration can only be used at the top level of a module."),
                    An_export_declaration_can_only_be_used_at_the_top_level_of_a_module: i(1474, 1, "An_export_declaration_can_only_be_used_at_the_top_level_of_a_module_1474", "An export declaration can only be used at the top level of a module."),
                    Control_what_method_is_used_to_detect_module_format_JS_files: i(1475, 3, "Control_what_method_is_used_to_detect_module_format_JS_files_1475", "Control what method is used to detect module-format JS files."),
                    auto_Colon_Treat_files_with_imports_exports_import_meta_jsx_with_jsx_Colon_react_jsx_or_esm_format_with_module_Colon_node16_as_modules: i(1476, 3, "auto_Colon_Treat_files_with_imports_exports_import_meta_jsx_with_jsx_Colon_react_jsx_or_esm_format_w_1476", '"auto": Treat files with imports, exports, import.meta, jsx (with jsx: react-jsx), or esm format (with module: node16+) as modules.'),
                    An_instantiation_expression_cannot_be_followed_by_a_property_access: i(1477, 1, "An_instantiation_expression_cannot_be_followed_by_a_property_access_1477", "An instantiation expression cannot be followed by a property access."),
                    Identifier_or_string_literal_expected: i(1478, 1, "Identifier_or_string_literal_expected_1478", "Identifier or string literal expected."),
                    The_current_file_is_a_CommonJS_module_whose_imports_will_produce_require_calls_however_the_referenced_file_is_an_ECMAScript_module_and_cannot_be_imported_with_require_Consider_writing_a_dynamic_import_0_call_instead: i(1479, 1, "The_current_file_is_a_CommonJS_module_whose_imports_will_produce_require_calls_however_the_reference_1479", `The current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("{0}")' call instead.`),
                    To_convert_this_file_to_an_ECMAScript_module_change_its_file_extension_to_0_or_create_a_local_package_json_file_with_type_Colon_module: i(1480, 3, "To_convert_this_file_to_an_ECMAScript_module_change_its_file_extension_to_0_or_create_a_local_packag_1480", 'To convert this file to an ECMAScript module, change its file extension to \'{0}\' or create a local package.json file with `{ "type": "module" }`.'),
                    To_convert_this_file_to_an_ECMAScript_module_change_its_file_extension_to_0_or_add_the_field_type_Colon_module_to_1: i(1481, 3, "To_convert_this_file_to_an_ECMAScript_module_change_its_file_extension_to_0_or_add_the_field_type_Co_1481", `To convert this file to an ECMAScript module, change its file extension to '{0}', or add the field \`"type": "module"\` to '{1}'.`),
                    To_convert_this_file_to_an_ECMAScript_module_add_the_field_type_Colon_module_to_0: i(1482, 3, "To_convert_this_file_to_an_ECMAScript_module_add_the_field_type_Colon_module_to_0_1482", 'To convert this file to an ECMAScript module, add the field `"type": "module"` to \'{0}\'.'),
                    To_convert_this_file_to_an_ECMAScript_module_create_a_local_package_json_file_with_type_Colon_module: i(1483, 3, "To_convert_this_file_to_an_ECMAScript_module_create_a_local_package_json_file_with_type_Colon_module_1483", 'To convert this file to an ECMAScript module, create a local package.json file with `{ "type": "module" }`.'),
                    _0_is_a_type_and_must_be_imported_using_a_type_only_import_when_verbatimModuleSyntax_is_enabled: i(1484, 1, "_0_is_a_type_and_must_be_imported_using_a_type_only_import_when_verbatimModuleSyntax_is_enabled_1484", "'{0}' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled."),
                    _0_resolves_to_a_type_only_declaration_and_must_be_imported_using_a_type_only_import_when_verbatimModuleSyntax_is_enabled: i(1485, 1, "_0_resolves_to_a_type_only_declaration_and_must_be_imported_using_a_type_only_import_when_verbatimMo_1485", "'{0}' resolves to a type-only declaration and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled."),
                    Decorator_used_before_export_here: i(1486, 1, "Decorator_used_before_export_here_1486", "Decorator used before 'export' here."),
                    Octal_escape_sequences_are_not_allowed_Use_the_syntax_0: i(1487, 1, "Octal_escape_sequences_are_not_allowed_Use_the_syntax_0_1487", "Octal escape sequences are not allowed. Use the syntax '{0}'."),
                    Escape_sequence_0_is_not_allowed: i(1488, 1, "Escape_sequence_0_is_not_allowed_1488", "Escape sequence '{0}' is not allowed."),
                    Decimals_with_leading_zeros_are_not_allowed: i(1489, 1, "Decimals_with_leading_zeros_are_not_allowed_1489", "Decimals with leading zeros are not allowed."),
                    File_appears_to_be_binary: i(1490, 1, "File_appears_to_be_binary_1490", "File appears to be binary."),
                    _0_modifier_cannot_appear_on_a_using_declaration: i(1491, 1, "_0_modifier_cannot_appear_on_a_using_declaration_1491", "'{0}' modifier cannot appear on a 'using' declaration."),
                    _0_declarations_may_not_have_binding_patterns: i(1492, 1, "_0_declarations_may_not_have_binding_patterns_1492", "'{0}' declarations may not have binding patterns."),
                    The_left_hand_side_of_a_for_in_statement_cannot_be_a_using_declaration: i(1493, 1, "The_left_hand_side_of_a_for_in_statement_cannot_be_a_using_declaration_1493", "The left-hand side of a 'for...in' statement cannot be a 'using' declaration."),
                    The_left_hand_side_of_a_for_in_statement_cannot_be_an_await_using_declaration: i(1494, 1, "The_left_hand_side_of_a_for_in_statement_cannot_be_an_await_using_declaration_1494", "The left-hand side of a 'for...in' statement cannot be an 'await using' declaration."),
                    _0_modifier_cannot_appear_on_an_await_using_declaration: i(1495, 1, "_0_modifier_cannot_appear_on_an_await_using_declaration_1495", "'{0}' modifier cannot appear on an 'await using' declaration."),
                    Identifier_string_literal_or_number_literal_expected: i(1496, 1, "Identifier_string_literal_or_number_literal_expected_1496", "Identifier, string literal, or number literal expected."),
                    The_types_of_0_are_incompatible_between_these_types: i(2200, 1, "The_types_of_0_are_incompatible_between_these_types_2200", "The types of '{0}' are incompatible between these types."),
                    The_types_returned_by_0_are_incompatible_between_these_types: i(2201, 1, "The_types_returned_by_0_are_incompatible_between_these_types_2201", "The types returned by '{0}' are incompatible between these types."),
                    Call_signature_return_types_0_and_1_are_incompatible: i(2202, 1, "Call_signature_return_types_0_and_1_are_incompatible_2202", "Call signature return types '{0}' and '{1}' are incompatible.", void 0, !0),
                    Construct_signature_return_types_0_and_1_are_incompatible: i(2203, 1, "Construct_signature_return_types_0_and_1_are_incompatible_2203", "Construct signature return types '{0}' and '{1}' are incompatible.", void 0, !0),
                    Call_signatures_with_no_arguments_have_incompatible_return_types_0_and_1: i(2204, 1, "Call_signatures_with_no_arguments_have_incompatible_return_types_0_and_1_2204", "Call signatures with no arguments have incompatible return types '{0}' and '{1}'.", void 0, !0),
                    Construct_signatures_with_no_arguments_have_incompatible_return_types_0_and_1: i(2205, 1, "Construct_signatures_with_no_arguments_have_incompatible_return_types_0_and_1_2205", "Construct signatures with no arguments have incompatible return types '{0}' and '{1}'.", void 0, !0),
                    The_type_modifier_cannot_be_used_on_a_named_import_when_import_type_is_used_on_its_import_statement: i(2206, 1, "The_type_modifier_cannot_be_used_on_a_named_import_when_import_type_is_used_on_its_import_statement_2206", "The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement."),
                    The_type_modifier_cannot_be_used_on_a_named_export_when_export_type_is_used_on_its_export_statement: i(2207, 1, "The_type_modifier_cannot_be_used_on_a_named_export_when_export_type_is_used_on_its_export_statement_2207", "The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement."),
                    This_type_parameter_might_need_an_extends_0_constraint: i(2208, 1, "This_type_parameter_might_need_an_extends_0_constraint_2208", "This type parameter might need an `extends {0}` constraint."),
                    The_project_root_is_ambiguous_but_is_required_to_resolve_export_map_entry_0_in_file_1_Supply_the_rootDir_compiler_option_to_disambiguate: i(2209, 1, "The_project_root_is_ambiguous_but_is_required_to_resolve_export_map_entry_0_in_file_1_Supply_the_roo_2209", "The project root is ambiguous, but is required to resolve export map entry '{0}' in file '{1}'. Supply the `rootDir` compiler option to disambiguate."),
                    The_project_root_is_ambiguous_but_is_required_to_resolve_import_map_entry_0_in_file_1_Supply_the_rootDir_compiler_option_to_disambiguate: i(2210, 1, "The_project_root_is_ambiguous_but_is_required_to_resolve_import_map_entry_0_in_file_1_Supply_the_roo_2210", "The project root is ambiguous, but is required to resolve import map entry '{0}' in file '{1}'. Supply the `rootDir` compiler option to disambiguate."),
                    Add_extends_constraint: i(2211, 3, "Add_extends_constraint_2211", "Add `extends` constraint."),
                    Add_extends_constraint_to_all_type_parameters: i(2212, 3, "Add_extends_constraint_to_all_type_parameters_2212", "Add `extends` constraint to all type parameters"),
                    Duplicate_identifier_0: i(2300, 1, "Duplicate_identifier_0_2300", "Duplicate identifier '{0}'."),
                    Initializer_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor: i(2301, 1, "Initializer_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor_2301", "Initializer of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor."),
                    Static_members_cannot_reference_class_type_parameters: i(2302, 1, "Static_members_cannot_reference_class_type_parameters_2302", "Static members cannot reference class type parameters."),
                    Circular_definition_of_import_alias_0: i(2303, 1, "Circular_definition_of_import_alias_0_2303", "Circular definition of import alias '{0}'."),
                    Cannot_find_name_0: i(2304, 1, "Cannot_find_name_0_2304", "Cannot find name '{0}'."),
                    Module_0_has_no_exported_member_1: i(2305, 1, "Module_0_has_no_exported_member_1_2305", "Module '{0}' has no exported member '{1}'."),
                    File_0_is_not_a_module: i(2306, 1, "File_0_is_not_a_module_2306", "File '{0}' is not a module."),
                    Cannot_find_module_0_or_its_corresponding_type_declarations: i(2307, 1, "Cannot_find_module_0_or_its_corresponding_type_declarations_2307", "Cannot find module '{0}' or its corresponding type declarations."),
                    Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambiguity: i(2308, 1, "Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambig_2308", "Module {0} has already exported a member named '{1}'. Consider explicitly re-exporting to resolve the ambiguity."),
                    An_export_assignment_cannot_be_used_in_a_module_with_other_exported_elements: i(2309, 1, "An_export_assignment_cannot_be_used_in_a_module_with_other_exported_elements_2309", "An export assignment cannot be used in a module with other exported elements."),
                    Type_0_recursively_references_itself_as_a_base_type: i(2310, 1, "Type_0_recursively_references_itself_as_a_base_type_2310", "Type '{0}' recursively references itself as a base type."),
                    Cannot_find_name_0_Did_you_mean_to_write_this_in_an_async_function: i(2311, 1, "Cannot_find_name_0_Did_you_mean_to_write_this_in_an_async_function_2311", "Cannot find name '{0}'. Did you mean to write this in an async function?"),
                    An_interface_can_only_extend_an_object_type_or_intersection_of_object_types_with_statically_known_members: i(2312, 1, "An_interface_can_only_extend_an_object_type_or_intersection_of_object_types_with_statically_known_me_2312", "An interface can only extend an object type or intersection of object types with statically known members."),
                    Type_parameter_0_has_a_circular_constraint: i(2313, 1, "Type_parameter_0_has_a_circular_constraint_2313", "Type parameter '{0}' has a circular constraint."),
                    Generic_type_0_requires_1_type_argument_s: i(2314, 1, "Generic_type_0_requires_1_type_argument_s_2314", "Generic type '{0}' requires {1} type argument(s)."),
                    Type_0_is_not_generic: i(2315, 1, "Type_0_is_not_generic_2315", "Type '{0}' is not generic."),
                    Global_type_0_must_be_a_class_or_interface_type: i(2316, 1, "Global_type_0_must_be_a_class_or_interface_type_2316", "Global type '{0}' must be a class or interface type."),
                    Global_type_0_must_have_1_type_parameter_s: i(2317, 1, "Global_type_0_must_have_1_type_parameter_s_2317", "Global type '{0}' must have {1} type parameter(s)."),
                    Cannot_find_global_type_0: i(2318, 1, "Cannot_find_global_type_0_2318", "Cannot find global type '{0}'."),
                    Named_property_0_of_types_1_and_2_are_not_identical: i(2319, 1, "Named_property_0_of_types_1_and_2_are_not_identical_2319", "Named property '{0}' of types '{1}' and '{2}' are not identical."),
                    Interface_0_cannot_simultaneously_extend_types_1_and_2: i(2320, 1, "Interface_0_cannot_simultaneously_extend_types_1_and_2_2320", "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'."),
                    Excessive_stack_depth_comparing_types_0_and_1: i(2321, 1, "Excessive_stack_depth_comparing_types_0_and_1_2321", "Excessive stack depth comparing types '{0}' and '{1}'."),
                    Type_0_is_not_assignable_to_type_1: i(2322, 1, "Type_0_is_not_assignable_to_type_1_2322", "Type '{0}' is not assignable to type '{1}'."),
                    Cannot_redeclare_exported_variable_0: i(2323, 1, "Cannot_redeclare_exported_variable_0_2323", "Cannot redeclare exported variable '{0}'."),
                    Property_0_is_missing_in_type_1: i(2324, 1, "Property_0_is_missing_in_type_1_2324", "Property '{0}' is missing in type '{1}'."),
                    Property_0_is_private_in_type_1_but_not_in_type_2: i(2325, 1, "Property_0_is_private_in_type_1_but_not_in_type_2_2325", "Property '{0}' is private in type '{1}' but not in type '{2}'."),
                    Types_of_property_0_are_incompatible: i(2326, 1, "Types_of_property_0_are_incompatible_2326", "Types of property '{0}' are incompatible."),
                    Property_0_is_optional_in_type_1_but_required_in_type_2: i(2327, 1, "Property_0_is_optional_in_type_1_but_required_in_type_2_2327", "Property '{0}' is optional in type '{1}' but required in type '{2}'."),
                    Types_of_parameters_0_and_1_are_incompatible: i(2328, 1, "Types_of_parameters_0_and_1_are_incompatible_2328", "Types of parameters '{0}' and '{1}' are incompatible."),
                    Index_signature_for_type_0_is_missing_in_type_1: i(2329, 1, "Index_signature_for_type_0_is_missing_in_type_1_2329", "Index signature for type '{0}' is missing in type '{1}'."),
                    _0_and_1_index_signatures_are_incompatible: i(2330, 1, "_0_and_1_index_signatures_are_incompatible_2330", "'{0}' and '{1}' index signatures are incompatible."),
                    this_cannot_be_referenced_in_a_module_or_namespace_body: i(2331, 1, "this_cannot_be_referenced_in_a_module_or_namespace_body_2331", "'this' cannot be referenced in a module or namespace body."),
                    this_cannot_be_referenced_in_current_location: i(2332, 1, "this_cannot_be_referenced_in_current_location_2332", "'this' cannot be referenced in current location."),
                    this_cannot_be_referenced_in_constructor_arguments: i(2333, 1, "this_cannot_be_referenced_in_constructor_arguments_2333", "'this' cannot be referenced in constructor arguments."),
                    this_cannot_be_referenced_in_a_static_property_initializer: i(2334, 1, "this_cannot_be_referenced_in_a_static_property_initializer_2334", "'this' cannot be referenced in a static property initializer."),
                    super_can_only_be_referenced_in_a_derived_class: i(2335, 1, "super_can_only_be_referenced_in_a_derived_class_2335", "'super' can only be referenced in a derived class."),
                    super_cannot_be_referenced_in_constructor_arguments: i(2336, 1, "super_cannot_be_referenced_in_constructor_arguments_2336", "'super' cannot be referenced in constructor arguments."),
                    Super_calls_are_not_permitted_outside_constructors_or_in_nested_functions_inside_constructors: i(2337, 1, "Super_calls_are_not_permitted_outside_constructors_or_in_nested_functions_inside_constructors_2337", "Super calls are not permitted outside constructors or in nested functions inside constructors."),
                    super_property_access_is_permitted_only_in_a_constructor_member_function_or_member_accessor_of_a_derived_class: i(2338, 1, "super_property_access_is_permitted_only_in_a_constructor_member_function_or_member_accessor_of_a_der_2338", "'super' property access is permitted only in a constructor, member function, or member accessor of a derived class."),
                    Property_0_does_not_exist_on_type_1: i(2339, 1, "Property_0_does_not_exist_on_type_1_2339", "Property '{0}' does not exist on type '{1}'."),
                    Only_public_and_protected_methods_of_the_base_class_are_accessible_via_the_super_keyword: i(2340, 1, "Only_public_and_protected_methods_of_the_base_class_are_accessible_via_the_super_keyword_2340", "Only public and protected methods of the base class are accessible via the 'super' keyword."),
                    Property_0_is_private_and_only_accessible_within_class_1: i(2341, 1, "Property_0_is_private_and_only_accessible_within_class_1_2341", "Property '{0}' is private and only accessible within class '{1}'."),
                    This_syntax_requires_an_imported_helper_named_1_which_does_not_exist_in_0_Consider_upgrading_your_version_of_0: i(2343, 1, "This_syntax_requires_an_imported_helper_named_1_which_does_not_exist_in_0_Consider_upgrading_your_ve_2343", "This syntax requires an imported helper named '{1}' which does not exist in '{0}'. Consider upgrading your version of '{0}'."),
                    Type_0_does_not_satisfy_the_constraint_1: i(2344, 1, "Type_0_does_not_satisfy_the_constraint_1_2344", "Type '{0}' does not satisfy the constraint '{1}'."),
                    Argument_of_type_0_is_not_assignable_to_parameter_of_type_1: i(2345, 1, "Argument_of_type_0_is_not_assignable_to_parameter_of_type_1_2345", "Argument of type '{0}' is not assignable to parameter of type '{1}'."),
                    Untyped_function_calls_may_not_accept_type_arguments: i(2347, 1, "Untyped_function_calls_may_not_accept_type_arguments_2347", "Untyped function calls may not accept type arguments."),
                    Value_of_type_0_is_not_callable_Did_you_mean_to_include_new: i(2348, 1, "Value_of_type_0_is_not_callable_Did_you_mean_to_include_new_2348", "Value of type '{0}' is not callable. Did you mean to include 'new'?"),
                    This_expression_is_not_callable: i(2349, 1, "This_expression_is_not_callable_2349", "This expression is not callable."),
                    Only_a_void_function_can_be_called_with_the_new_keyword: i(2350, 1, "Only_a_void_function_can_be_called_with_the_new_keyword_2350", "Only a void function can be called with the 'new' keyword."),
                    This_expression_is_not_constructable: i(2351, 1, "This_expression_is_not_constructable_2351", "This expression is not constructable."),
                    Conversion_of_type_0_to_type_1_may_be_a_mistake_because_neither_type_sufficiently_overlaps_with_the_other_If_this_was_intentional_convert_the_expression_to_unknown_first: i(2352, 1, "Conversion_of_type_0_to_type_1_may_be_a_mistake_because_neither_type_sufficiently_overlaps_with_the__2352", "Conversion of type '{0}' to type '{1}' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first."),
                    Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1: i(2353, 1, "Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1_2353", "Object literal may only specify known properties, and '{0}' does not exist in type '{1}'."),
                    This_syntax_requires_an_imported_helper_but_module_0_cannot_be_found: i(2354, 1, "This_syntax_requires_an_imported_helper_but_module_0_cannot_be_found_2354", "This syntax requires an imported helper but module '{0}' cannot be found."),
                    A_function_whose_declared_type_is_neither_undefined_void_nor_any_must_return_a_value: i(2355, 1, "A_function_whose_declared_type_is_neither_undefined_void_nor_any_must_return_a_value_2355", "A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value."),
                    An_arithmetic_operand_must_be_of_type_any_number_bigint_or_an_enum_type: i(2356, 1, "An_arithmetic_operand_must_be_of_type_any_number_bigint_or_an_enum_type_2356", "An arithmetic operand must be of type 'any', 'number', 'bigint' or an enum type."),
                    The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access: i(2357, 1, "The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access_2357", "The operand of an increment or decrement operator must be a variable or a property access."),
                    The_left_hand_side_of_an_instanceof_expression_must_be_of_type_any_an_object_type_or_a_type_parameter: i(2358, 1, "The_left_hand_side_of_an_instanceof_expression_must_be_of_type_any_an_object_type_or_a_type_paramete_2358", "The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter."),
                    The_right_hand_side_of_an_instanceof_expression_must_be_either_of_type_any_a_class_function_or_other_type_assignable_to_the_Function_interface_type_or_an_object_type_with_a_Symbol_hasInstance_method: i(2359, 1, "The_right_hand_side_of_an_instanceof_expression_must_be_either_of_type_any_a_class_function_or_other_2359", "The right-hand side of an 'instanceof' expression must be either of type 'any', a class, function, or other type assignable to the 'Function' interface type, or an object type with a 'Symbol.hasInstance' method."),
                    The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type: i(2362, 1, "The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type_2362", "The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type."),
                    The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type: i(2363, 1, "The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type_2363", "The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type."),
                    The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access: i(2364, 1, "The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access_2364", "The left-hand side of an assignment expression must be a variable or a property access."),
                    Operator_0_cannot_be_applied_to_types_1_and_2: i(2365, 1, "Operator_0_cannot_be_applied_to_types_1_and_2_2365", "Operator '{0}' cannot be applied to types '{1}' and '{2}'."),
                    Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined: i(2366, 1, "Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined_2366", "Function lacks ending return statement and return type does not include 'undefined'."),
                    This_comparison_appears_to_be_unintentional_because_the_types_0_and_1_have_no_overlap: i(2367, 1, "This_comparison_appears_to_be_unintentional_because_the_types_0_and_1_have_no_overlap_2367", "This comparison appears to be unintentional because the types '{0}' and '{1}' have no overlap."),
                    Type_parameter_name_cannot_be_0: i(2368, 1, "Type_parameter_name_cannot_be_0_2368", "Type parameter name cannot be '{0}'."),
                    A_parameter_property_is_only_allowed_in_a_constructor_implementation: i(2369, 1, "A_parameter_property_is_only_allowed_in_a_constructor_implementation_2369", "A parameter property is only allowed in a constructor implementation."),
                    A_rest_parameter_must_be_of_an_array_type: i(2370, 1, "A_rest_parameter_must_be_of_an_array_type_2370", "A rest parameter must be of an array type."),
                    A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation: i(2371, 1, "A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation_2371", "A parameter initializer is only allowed in a function or constructor implementation."),
                    Parameter_0_cannot_reference_itself: i(2372, 1, "Parameter_0_cannot_reference_itself_2372", "Parameter '{0}' cannot reference itself."),
                    Parameter_0_cannot_reference_identifier_1_declared_after_it: i(2373, 1, "Parameter_0_cannot_reference_identifier_1_declared_after_it_2373", "Parameter '{0}' cannot reference identifier '{1}' declared after it."),
                    Duplicate_index_signature_for_type_0: i(2374, 1, "Duplicate_index_signature_for_type_0_2374", "Duplicate index signature for type '{0}'."),
                    Type_0_is_not_assignable_to_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefined_to_the_types_of_the_target_s_properties: i(2375, 1, "Type_0_is_not_assignable_to_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefi_2375", "Type '{0}' is not assignable to type '{1}' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties."),
                    A_super_call_must_be_the_first_statement_in_the_constructor_to_refer_to_super_or_this_when_a_derived_class_contains_initialized_properties_parameter_properties_or_private_identifiers: i(2376, 1, "A_super_call_must_be_the_first_statement_in_the_constructor_to_refer_to_super_or_this_when_a_derived_2376", "A 'super' call must be the first statement in the constructor to refer to 'super' or 'this' when a derived class contains initialized properties, parameter properties, or private identifiers."),
                    Constructors_for_derived_classes_must_contain_a_super_call: i(2377, 1, "Constructors_for_derived_classes_must_contain_a_super_call_2377", "Constructors for derived classes must contain a 'super' call."),
                    A_get_accessor_must_return_a_value: i(2378, 1, "A_get_accessor_must_return_a_value_2378", "A 'get' accessor must return a value."),
                    Argument_of_type_0_is_not_assignable_to_parameter_of_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefined_to_the_types_of_the_target_s_properties: i(2379, 1, "Argument_of_type_0_is_not_assignable_to_parameter_of_type_1_with_exactOptionalPropertyTypes_Colon_tr_2379", "Argument of type '{0}' is not assignable to parameter of type '{1}' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties."),
                    Overload_signatures_must_all_be_exported_or_non_exported: i(2383, 1, "Overload_signatures_must_all_be_exported_or_non_exported_2383", "Overload signatures must all be exported or non-exported."),
                    Overload_signatures_must_all_be_ambient_or_non_ambient: i(2384, 1, "Overload_signatures_must_all_be_ambient_or_non_ambient_2384", "Overload signatures must all be ambient or non-ambient."),
                    Overload_signatures_must_all_be_public_private_or_protected: i(2385, 1, "Overload_signatures_must_all_be_public_private_or_protected_2385", "Overload signatures must all be public, private or protected."),
                    Overload_signatures_must_all_be_optional_or_required: i(2386, 1, "Overload_signatures_must_all_be_optional_or_required_2386", "Overload signatures must all be optional or required."),
                    Function_overload_must_be_static: i(2387, 1, "Function_overload_must_be_static_2387", "Function overload must be static."),
                    Function_overload_must_not_be_static: i(2388, 1, "Function_overload_must_not_be_static_2388", "Function overload must not be static."),
                    Function_implementation_name_must_be_0: i(2389, 1, "Function_implementation_name_must_be_0_2389", "Function implementation name must be '{0}'."),
                    Constructor_implementation_is_missing: i(2390, 1, "Constructor_implementation_is_missing_2390", "Constructor implementation is missing."),
                    Function_implementation_is_missing_or_not_immediately_following_the_declaration: i(2391, 1, "Function_implementation_is_missing_or_not_immediately_following_the_declaration_2391", "Function implementation is missing or not immediately following the declaration."),
                    Multiple_constructor_implementations_are_not_allowed: i(2392, 1, "Multiple_constructor_implementations_are_not_allowed_2392", "Multiple constructor implementations are not allowed."),
                    Duplicate_function_implementation: i(2393, 1, "Duplicate_function_implementation_2393", "Duplicate function implementation."),
                    This_overload_signature_is_not_compatible_with_its_implementation_signature: i(2394, 1, "This_overload_signature_is_not_compatible_with_its_implementation_signature_2394", "This overload signature is not compatible with its implementation signature."),
                    Individual_declarations_in_merged_declaration_0_must_be_all_exported_or_all_local: i(2395, 1, "Individual_declarations_in_merged_declaration_0_must_be_all_exported_or_all_local_2395", "Individual declarations in merged declaration '{0}' must be all exported or all local."),
                    Duplicate_identifier_arguments_Compiler_uses_arguments_to_initialize_rest_parameters: i(2396, 1, "Duplicate_identifier_arguments_Compiler_uses_arguments_to_initialize_rest_parameters_2396", "Duplicate identifier 'arguments'. Compiler uses 'arguments' to initialize rest parameters."),
                    Declaration_name_conflicts_with_built_in_global_identifier_0: i(2397, 1, "Declaration_name_conflicts_with_built_in_global_identifier_0_2397", "Declaration name conflicts with built-in global identifier '{0}'."),
                    constructor_cannot_be_used_as_a_parameter_property_name: i(2398, 1, "constructor_cannot_be_used_as_a_parameter_property_name_2398", "'constructor' cannot be used as a parameter property name."),
                    Duplicate_identifier_this_Compiler_uses_variable_declaration_this_to_capture_this_reference: i(2399, 1, "Duplicate_identifier_this_Compiler_uses_variable_declaration_this_to_capture_this_reference_2399", "Duplicate identifier '_this'. Compiler uses variable declaration '_this' to capture 'this' reference."),
                    Expression_resolves_to_variable_declaration_this_that_compiler_uses_to_capture_this_reference: i(2400, 1, "Expression_resolves_to_variable_declaration_this_that_compiler_uses_to_capture_this_reference_2400", "Expression resolves to variable declaration '_this' that compiler uses to capture 'this' reference."),
                    A_super_call_must_be_a_root_level_statement_within_a_constructor_of_a_derived_class_that_contains_initialized_properties_parameter_properties_or_private_identifiers: i(2401, 1, "A_super_call_must_be_a_root_level_statement_within_a_constructor_of_a_derived_class_that_contains_in_2401", "A 'super' call must be a root-level statement within a constructor of a derived class that contains initialized properties, parameter properties, or private identifiers."),
                    Expression_resolves_to_super_that_compiler_uses_to_capture_base_class_reference: i(2402, 1, "Expression_resolves_to_super_that_compiler_uses_to_capture_base_class_reference_2402", "Expression resolves to '_super' that compiler uses to capture base class reference."),
                    Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_type_2: i(2403, 1, "Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_t_2403", "Subsequent variable declarations must have the same type.  Variable '{0}' must be of type '{1}', but here has type '{2}'."),
                    The_left_hand_side_of_a_for_in_statement_cannot_use_a_type_annotation: i(2404, 1, "The_left_hand_side_of_a_for_in_statement_cannot_use_a_type_annotation_2404", "The left-hand side of a 'for...in' statement cannot use a type annotation."),
                    The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any: i(2405, 1, "The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any_2405", "The left-hand side of a 'for...in' statement must be of type 'string' or 'any'."),
                    The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access: i(2406, 1, "The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access_2406", "The left-hand side of a 'for...in' statement must be a variable or a property access."),
                    The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_here_has_type_0: i(2407, 1, "The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_2407", "The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter, but here has type '{0}'."),
                    Setters_cannot_return_a_value: i(2408, 1, "Setters_cannot_return_a_value_2408", "Setters cannot return a value."),
                    Return_type_of_constructor_signature_must_be_assignable_to_the_instance_type_of_the_class: i(2409, 1, "Return_type_of_constructor_signature_must_be_assignable_to_the_instance_type_of_the_class_2409", "Return type of constructor signature must be assignable to the instance type of the class."),
                    The_with_statement_is_not_supported_All_symbols_in_a_with_block_will_have_type_any: i(2410, 1, "The_with_statement_is_not_supported_All_symbols_in_a_with_block_will_have_type_any_2410", "The 'with' statement is not supported. All symbols in a 'with' block will have type 'any'."),
                    Type_0_is_not_assignable_to_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefined_to_the_type_of_the_target: i(2412, 1, "Type_0_is_not_assignable_to_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefi_2412", "Type '{0}' is not assignable to type '{1}' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target."),
                    Property_0_of_type_1_is_not_assignable_to_2_index_type_3: i(2411, 1, "Property_0_of_type_1_is_not_assignable_to_2_index_type_3_2411", "Property '{0}' of type '{1}' is not assignable to '{2}' index type '{3}'."),
                    _0_index_type_1_is_not_assignable_to_2_index_type_3: i(2413, 1, "_0_index_type_1_is_not_assignable_to_2_index_type_3_2413", "'{0}' index type '{1}' is not assignable to '{2}' index type '{3}'."),
                    Class_name_cannot_be_0: i(2414, 1, "Class_name_cannot_be_0_2414", "Class name cannot be '{0}'."),
                    Class_0_incorrectly_extends_base_class_1: i(2415, 1, "Class_0_incorrectly_extends_base_class_1_2415", "Class '{0}' incorrectly extends base class '{1}'."),
                    Property_0_in_type_1_is_not_assignable_to_the_same_property_in_base_type_2: i(2416, 1, "Property_0_in_type_1_is_not_assignable_to_the_same_property_in_base_type_2_2416", "Property '{0}' in type '{1}' is not assignable to the same property in base type '{2}'."),
                    Class_static_side_0_incorrectly_extends_base_class_static_side_1: i(2417, 1, "Class_static_side_0_incorrectly_extends_base_class_static_side_1_2417", "Class static side '{0}' incorrectly extends base class static side '{1}'."),
                    Type_of_computed_property_s_value_is_0_which_is_not_assignable_to_type_1: i(2418, 1, "Type_of_computed_property_s_value_is_0_which_is_not_assignable_to_type_1_2418", "Type of computed property's value is '{0}', which is not assignable to type '{1}'."),
                    Types_of_construct_signatures_are_incompatible: i(2419, 1, "Types_of_construct_signatures_are_incompatible_2419", "Types of construct signatures are incompatible."),
                    Class_0_incorrectly_implements_interface_1: i(2420, 1, "Class_0_incorrectly_implements_interface_1_2420", "Class '{0}' incorrectly implements interface '{1}'."),
                    A_class_can_only_implement_an_object_type_or_intersection_of_object_types_with_statically_known_members: i(2422, 1, "A_class_can_only_implement_an_object_type_or_intersection_of_object_types_with_statically_known_memb_2422", "A class can only implement an object type or intersection of object types with statically known members."),
                    Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_accessor: i(2423, 1, "Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_access_2423", "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member accessor."),
                    Class_0_defines_instance_member_property_1_but_extended_class_2_defines_it_as_instance_member_function: i(2425, 1, "Class_0_defines_instance_member_property_1_but_extended_class_2_defines_it_as_instance_member_functi_2425", "Class '{0}' defines instance member property '{1}', but extended class '{2}' defines it as instance member function."),
                    Class_0_defines_instance_member_accessor_1_but_extended_class_2_defines_it_as_instance_member_function: i(2426, 1, "Class_0_defines_instance_member_accessor_1_but_extended_class_2_defines_it_as_instance_member_functi_2426", "Class '{0}' defines instance member accessor '{1}', but extended class '{2}' defines it as instance member function."),
                    Interface_name_cannot_be_0: i(2427, 1, "Interface_name_cannot_be_0_2427", "Interface name cannot be '{0}'."),
                    All_declarations_of_0_must_have_identical_type_parameters: i(2428, 1, "All_declarations_of_0_must_have_identical_type_parameters_2428", "All declarations of '{0}' must have identical type parameters."),
                    Interface_0_incorrectly_extends_interface_1: i(2430, 1, "Interface_0_incorrectly_extends_interface_1_2430", "Interface '{0}' incorrectly extends interface '{1}'."),
                    Enum_name_cannot_be_0: i(2431, 1, "Enum_name_cannot_be_0_2431", "Enum name cannot be '{0}'."),
                    In_an_enum_with_multiple_declarations_only_one_declaration_can_omit_an_initializer_for_its_first_enum_element: i(2432, 1, "In_an_enum_with_multiple_declarations_only_one_declaration_can_omit_an_initializer_for_its_first_enu_2432", "In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element."),
                    A_namespace_declaration_cannot_be_in_a_different_file_from_a_class_or_function_with_which_it_is_merged: i(2433, 1, "A_namespace_declaration_cannot_be_in_a_different_file_from_a_class_or_function_with_which_it_is_merg_2433", "A namespace declaration cannot be in a different file from a class or function with which it is merged."),
                    A_namespace_declaration_cannot_be_located_prior_to_a_class_or_function_with_which_it_is_merged: i(2434, 1, "A_namespace_declaration_cannot_be_located_prior_to_a_class_or_function_with_which_it_is_merged_2434", "A namespace declaration cannot be located prior to a class or function with which it is merged."),
                    Ambient_modules_cannot_be_nested_in_other_modules_or_namespaces: i(2435, 1, "Ambient_modules_cannot_be_nested_in_other_modules_or_namespaces_2435", "Ambient modules cannot be nested in other modules or namespaces."),
                    Ambient_module_declaration_cannot_specify_relative_module_name: i(2436, 1, "Ambient_module_declaration_cannot_specify_relative_module_name_2436", "Ambient module declaration cannot specify relative module name."),
                    Module_0_is_hidden_by_a_local_declaration_with_the_same_name: i(2437, 1, "Module_0_is_hidden_by_a_local_declaration_with_the_same_name_2437", "Module '{0}' is hidden by a local declaration with the same name."),
                    Import_name_cannot_be_0: i(2438, 1, "Import_name_cannot_be_0_2438", "Import name cannot be '{0}'."),
                    Import_or_export_declaration_in_an_ambient_module_declaration_cannot_reference_module_through_relative_module_name: i(2439, 1, "Import_or_export_declaration_in_an_ambient_module_declaration_cannot_reference_module_through_relati_2439", "Import or export declaration in an ambient module declaration cannot reference module through relative module name."),
                    Import_declaration_conflicts_with_local_declaration_of_0: i(2440, 1, "Import_declaration_conflicts_with_local_declaration_of_0_2440", "Import declaration conflicts with local declaration of '{0}'."),
                    Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module: i(2441, 1, "Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_2441", "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module."),
                    Types_have_separate_declarations_of_a_private_property_0: i(2442, 1, "Types_have_separate_declarations_of_a_private_property_0_2442", "Types have separate declarations of a private property '{0}'."),
                    Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2: i(2443, 1, "Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2_2443", "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'."),
                    Property_0_is_protected_in_type_1_but_public_in_type_2: i(2444, 1, "Property_0_is_protected_in_type_1_but_public_in_type_2_2444", "Property '{0}' is protected in type '{1}' but public in type '{2}'."),
                    Property_0_is_protected_and_only_accessible_within_class_1_and_its_subclasses: i(2445, 1, "Property_0_is_protected_and_only_accessible_within_class_1_and_its_subclasses_2445", "Property '{0}' is protected and only accessible within class '{1}' and its subclasses."),
                    Property_0_is_protected_and_only_accessible_through_an_instance_of_class_1_This_is_an_instance_of_class_2: i(2446, 1, "Property_0_is_protected_and_only_accessible_through_an_instance_of_class_1_This_is_an_instance_of_cl_2446", "Property '{0}' is protected and only accessible through an instance of class '{1}'. This is an instance of class '{2}'."),
                    The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead: i(2447, 1, "The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead_2447", "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead."),
                    Block_scoped_variable_0_used_before_its_declaration: i(2448, 1, "Block_scoped_variable_0_used_before_its_declaration_2448", "Block-scoped variable '{0}' used before its declaration."),
                    Class_0_used_before_its_declaration: i(2449, 1, "Class_0_used_before_its_declaration_2449", "Class '{0}' used before its declaration."),
                    Enum_0_used_before_its_declaration: i(2450, 1, "Enum_0_used_before_its_declaration_2450", "Enum '{0}' used before its declaration."),
                    Cannot_redeclare_block_scoped_variable_0: i(2451, 1, "Cannot_redeclare_block_scoped_variable_0_2451", "Cannot redeclare block-scoped variable '{0}'."),
                    An_enum_member_cannot_have_a_numeric_name: i(2452, 1, "An_enum_member_cannot_have_a_numeric_name_2452", "An enum member cannot have a numeric name."),
                    Variable_0_is_used_before_being_assigned: i(2454, 1, "Variable_0_is_used_before_being_assigned_2454", "Variable '{0}' is used before being assigned."),
                    Type_alias_0_circularly_references_itself: i(2456, 1, "Type_alias_0_circularly_references_itself_2456", "Type alias '{0}' circularly references itself."),
                    Type_alias_name_cannot_be_0: i(2457, 1, "Type_alias_name_cannot_be_0_2457", "Type alias name cannot be '{0}'."),
                    An_AMD_module_cannot_have_multiple_name_assignments: i(2458, 1, "An_AMD_module_cannot_have_multiple_name_assignments_2458", "An AMD module cannot have multiple name assignments."),
                    Module_0_declares_1_locally_but_it_is_not_exported: i(2459, 1, "Module_0_declares_1_locally_but_it_is_not_exported_2459", "Module '{0}' declares '{1}' locally, but it is not exported."),
                    Module_0_declares_1_locally_but_it_is_exported_as_2: i(2460, 1, "Module_0_declares_1_locally_but_it_is_exported_as_2_2460", "Module '{0}' declares '{1}' locally, but it is exported as '{2}'."),
                    Type_0_is_not_an_array_type: i(2461, 1, "Type_0_is_not_an_array_type_2461", "Type '{0}' is not an array type."),
                    A_rest_element_must_be_last_in_a_destructuring_pattern: i(2462, 1, "A_rest_element_must_be_last_in_a_destructuring_pattern_2462", "A rest element must be last in a destructuring pattern."),
                    A_binding_pattern_parameter_cannot_be_optional_in_an_implementation_signature: i(2463, 1, "A_binding_pattern_parameter_cannot_be_optional_in_an_implementation_signature_2463", "A binding pattern parameter cannot be optional in an implementation signature."),
                    A_computed_property_name_must_be_of_type_string_number_symbol_or_any: i(2464, 1, "A_computed_property_name_must_be_of_type_string_number_symbol_or_any_2464", "A computed property name must be of type 'string', 'number', 'symbol', or 'any'."),
                    this_cannot_be_referenced_in_a_computed_property_name: i(2465, 1, "this_cannot_be_referenced_in_a_computed_property_name_2465", "'this' cannot be referenced in a computed property name."),
                    super_cannot_be_referenced_in_a_computed_property_name: i(2466, 1, "super_cannot_be_referenced_in_a_computed_property_name_2466", "'super' cannot be referenced in a computed property name."),
                    A_computed_property_name_cannot_reference_a_type_parameter_from_its_containing_type: i(2467, 1, "A_computed_property_name_cannot_reference_a_type_parameter_from_its_containing_type_2467", "A computed property name cannot reference a type parameter from its containing type."),
                    Cannot_find_global_value_0: i(2468, 1, "Cannot_find_global_value_0_2468", "Cannot find global value '{0}'."),
                    The_0_operator_cannot_be_applied_to_type_symbol: i(2469, 1, "The_0_operator_cannot_be_applied_to_type_symbol_2469", "The '{0}' operator cannot be applied to type 'symbol'."),
                    Spread_operator_in_new_expressions_is_only_available_when_targeting_ECMAScript_5_and_higher: i(2472, 1, "Spread_operator_in_new_expressions_is_only_available_when_targeting_ECMAScript_5_and_higher_2472", "Spread operator in 'new' expressions is only available when targeting ECMAScript 5 and higher."),
                    Enum_declarations_must_all_be_const_or_non_const: i(2473, 1, "Enum_declarations_must_all_be_const_or_non_const_2473", "Enum declarations must all be const or non-const."),
                    const_enum_member_initializers_must_be_constant_expressions: i(2474, 1, "const_enum_member_initializers_must_be_constant_expressions_2474", "const enum member initializers must be constant expressions."),
                    const_enums_can_only_be_used_in_property_or_index_access_expressions_or_the_right_hand_side_of_an_import_declaration_or_export_assignment_or_type_query: i(2475, 1, "const_enums_can_only_be_used_in_property_or_index_access_expressions_or_the_right_hand_side_of_an_im_2475", "'const' enums can only be used in property or index access expressions or the right hand side of an import declaration or export assignment or type query."),
                    A_const_enum_member_can_only_be_accessed_using_a_string_literal: i(2476, 1, "A_const_enum_member_can_only_be_accessed_using_a_string_literal_2476", "A const enum member can only be accessed using a string literal."),
                    const_enum_member_initializer_was_evaluated_to_a_non_finite_value: i(2477, 1, "const_enum_member_initializer_was_evaluated_to_a_non_finite_value_2477", "'const' enum member initializer was evaluated to a non-finite value."),
                    const_enum_member_initializer_was_evaluated_to_disallowed_value_NaN: i(2478, 1, "const_enum_member_initializer_was_evaluated_to_disallowed_value_NaN_2478", "'const' enum member initializer was evaluated to disallowed value 'NaN'."),
                    let_is_not_allowed_to_be_used_as_a_name_in_let_or_const_declarations: i(2480, 1, "let_is_not_allowed_to_be_used_as_a_name_in_let_or_const_declarations_2480", "'let' is not allowed to be used as a name in 'let' or 'const' declarations."),
                    Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1: i(2481, 1, "Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1_2481", "Cannot initialize outer scoped variable '{0}' in the same scope as block scoped declaration '{1}'."),
                    The_left_hand_side_of_a_for_of_statement_cannot_use_a_type_annotation: i(2483, 1, "The_left_hand_side_of_a_for_of_statement_cannot_use_a_type_annotation_2483", "The left-hand side of a 'for...of' statement cannot use a type annotation."),
                    Export_declaration_conflicts_with_exported_declaration_of_0: i(2484, 1, "Export_declaration_conflicts_with_exported_declaration_of_0_2484", "Export declaration conflicts with exported declaration of '{0}'."),
                    The_left_hand_side_of_a_for_of_statement_must_be_a_variable_or_a_property_access: i(2487, 1, "The_left_hand_side_of_a_for_of_statement_must_be_a_variable_or_a_property_access_2487", "The left-hand side of a 'for...of' statement must be a variable or a property access."),
                    Type_0_must_have_a_Symbol_iterator_method_that_returns_an_iterator: i(2488, 1, "Type_0_must_have_a_Symbol_iterator_method_that_returns_an_iterator_2488", "Type '{0}' must have a '[Symbol.iterator]()' method that returns an iterator."),
                    An_iterator_must_have_a_next_method: i(2489, 1, "An_iterator_must_have_a_next_method_2489", "An iterator must have a 'next()' method."),
                    The_type_returned_by_the_0_method_of_an_iterator_must_have_a_value_property: i(2490, 1, "The_type_returned_by_the_0_method_of_an_iterator_must_have_a_value_property_2490", "The type returned by the '{0}()' method of an iterator must have a 'value' property."),
                    The_left_hand_side_of_a_for_in_statement_cannot_be_a_destructuring_pattern: i(2491, 1, "The_left_hand_side_of_a_for_in_statement_cannot_be_a_destructuring_pattern_2491", "The left-hand side of a 'for...in' statement cannot be a destructuring pattern."),
                    Cannot_redeclare_identifier_0_in_catch_clause: i(2492, 1, "Cannot_redeclare_identifier_0_in_catch_clause_2492", "Cannot redeclare identifier '{0}' in catch clause."),
                    Tuple_type_0_of_length_1_has_no_element_at_index_2: i(2493, 1, "Tuple_type_0_of_length_1_has_no_element_at_index_2_2493", "Tuple type '{0}' of length '{1}' has no element at index '{2}'."),
                    Using_a_string_in_a_for_of_statement_is_only_supported_in_ECMAScript_5_and_higher: i(2494, 1, "Using_a_string_in_a_for_of_statement_is_only_supported_in_ECMAScript_5_and_higher_2494", "Using a string in a 'for...of' statement is only supported in ECMAScript 5 and higher."),
                    Type_0_is_not_an_array_type_or_a_string_type: i(2495, 1, "Type_0_is_not_an_array_type_or_a_string_type_2495", "Type '{0}' is not an array type or a string type."),
                    The_arguments_object_cannot_be_referenced_in_an_arrow_function_in_ES3_and_ES5_Consider_using_a_standard_function_expression: i(2496, 1, "The_arguments_object_cannot_be_referenced_in_an_arrow_function_in_ES3_and_ES5_Consider_using_a_stand_2496", "The 'arguments' object cannot be referenced in an arrow function in ES3 and ES5. Consider using a standard function expression."),
                    This_module_can_only_be_referenced_with_ECMAScript_imports_Slashexports_by_turning_on_the_0_flag_and_referencing_its_default_export: i(2497, 1, "This_module_can_only_be_referenced_with_ECMAScript_imports_Slashexports_by_turning_on_the_0_flag_and_2497", "This module can only be referenced with ECMAScript imports/exports by turning on the '{0}' flag and referencing its default export."),
                    Module_0_uses_export_and_cannot_be_used_with_export_Asterisk: i(2498, 1, "Module_0_uses_export_and_cannot_be_used_with_export_Asterisk_2498", "Module '{0}' uses 'export =' and cannot be used with 'export *'."),
                    An_interface_can_only_extend_an_identifier_Slashqualified_name_with_optional_type_arguments: i(2499, 1, "An_interface_can_only_extend_an_identifier_Slashqualified_name_with_optional_type_arguments_2499", "An interface can only extend an identifier/qualified-name with optional type arguments."),
                    A_class_can_only_implement_an_identifier_Slashqualified_name_with_optional_type_arguments: i(2500, 1, "A_class_can_only_implement_an_identifier_Slashqualified_name_with_optional_type_arguments_2500", "A class can only implement an identifier/qualified-name with optional type arguments."),
                    A_rest_element_cannot_contain_a_binding_pattern: i(2501, 1, "A_rest_element_cannot_contain_a_binding_pattern_2501", "A rest element cannot contain a binding pattern."),
                    _0_is_referenced_directly_or_indirectly_in_its_own_type_annotation: i(2502, 1, "_0_is_referenced_directly_or_indirectly_in_its_own_type_annotation_2502", "'{0}' is referenced directly or indirectly in its own type annotation."),
                    Cannot_find_namespace_0: i(2503, 1, "Cannot_find_namespace_0_2503", "Cannot find namespace '{0}'."),
                    Type_0_must_have_a_Symbol_asyncIterator_method_that_returns_an_async_iterator: i(2504, 1, "Type_0_must_have_a_Symbol_asyncIterator_method_that_returns_an_async_iterator_2504", "Type '{0}' must have a '[Symbol.asyncIterator]()' method that returns an async iterator."),
                    A_generator_cannot_have_a_void_type_annotation: i(2505, 1, "A_generator_cannot_have_a_void_type_annotation_2505", "A generator cannot have a 'void' type annotation."),
                    _0_is_referenced_directly_or_indirectly_in_its_own_base_expression: i(2506, 1, "_0_is_referenced_directly_or_indirectly_in_its_own_base_expression_2506", "'{0}' is referenced directly or indirectly in its own base expression."),
                    Type_0_is_not_a_constructor_function_type: i(2507, 1, "Type_0_is_not_a_constructor_function_type_2507", "Type '{0}' is not a constructor function type."),
                    No_base_constructor_has_the_specified_number_of_type_arguments: i(2508, 1, "No_base_constructor_has_the_specified_number_of_type_arguments_2508", "No base constructor has the specified number of type arguments."),
                    Base_constructor_return_type_0_is_not_an_object_type_or_intersection_of_object_types_with_statically_known_members: i(2509, 1, "Base_constructor_return_type_0_is_not_an_object_type_or_intersection_of_object_types_with_statically_2509", "Base constructor return type '{0}' is not an object type or intersection of object types with statically known members."),
                    Base_constructors_must_all_have_the_same_return_type: i(2510, 1, "Base_constructors_must_all_have_the_same_return_type_2510", "Base constructors must all have the same return type."),
                    Cannot_create_an_instance_of_an_abstract_class: i(2511, 1, "Cannot_create_an_instance_of_an_abstract_class_2511", "Cannot create an instance of an abstract class."),
                    Overload_signatures_must_all_be_abstract_or_non_abstract: i(2512, 1, "Overload_signatures_must_all_be_abstract_or_non_abstract_2512", "Overload signatures must all be abstract or non-abstract."),
                    Abstract_method_0_in_class_1_cannot_be_accessed_via_super_expression: i(2513, 1, "Abstract_method_0_in_class_1_cannot_be_accessed_via_super_expression_2513", "Abstract method '{0}' in class '{1}' cannot be accessed via super expression."),
                    A_tuple_type_cannot_be_indexed_with_a_negative_value: i(2514, 1, "A_tuple_type_cannot_be_indexed_with_a_negative_value_2514", "A tuple type cannot be indexed with a negative value."),
                    Non_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_class_2: i(2515, 1, "Non_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_class_2_2515", "Non-abstract class '{0}' does not implement inherited abstract member '{1}' from class '{2}'."),
                    All_declarations_of_an_abstract_method_must_be_consecutive: i(2516, 1, "All_declarations_of_an_abstract_method_must_be_consecutive_2516", "All declarations of an abstract method must be consecutive."),
                    Cannot_assign_an_abstract_constructor_type_to_a_non_abstract_constructor_type: i(2517, 1, "Cannot_assign_an_abstract_constructor_type_to_a_non_abstract_constructor_type_2517", "Cannot assign an abstract constructor type to a non-abstract constructor type."),
                    A_this_based_type_guard_is_not_compatible_with_a_parameter_based_type_guard: i(2518, 1, "A_this_based_type_guard_is_not_compatible_with_a_parameter_based_type_guard_2518", "A 'this'-based type guard is not compatible with a parameter-based type guard."),
                    An_async_iterator_must_have_a_next_method: i(2519, 1, "An_async_iterator_must_have_a_next_method_2519", "An async iterator must have a 'next()' method."),
                    Duplicate_identifier_0_Compiler_uses_declaration_1_to_support_async_functions: i(2520, 1, "Duplicate_identifier_0_Compiler_uses_declaration_1_to_support_async_functions_2520", "Duplicate identifier '{0}'. Compiler uses declaration '{1}' to support async functions."),
                    The_arguments_object_cannot_be_referenced_in_an_async_function_or_method_in_ES3_and_ES5_Consider_using_a_standard_function_or_method: i(2522, 1, "The_arguments_object_cannot_be_referenced_in_an_async_function_or_method_in_ES3_and_ES5_Consider_usi_2522", "The 'arguments' object cannot be referenced in an async function or method in ES3 and ES5. Consider using a standard function or method."),
                    yield_expressions_cannot_be_used_in_a_parameter_initializer: i(2523, 1, "yield_expressions_cannot_be_used_in_a_parameter_initializer_2523", "'yield' expressions cannot be used in a parameter initializer."),
                    await_expressions_cannot_be_used_in_a_parameter_initializer: i(2524, 1, "await_expressions_cannot_be_used_in_a_parameter_initializer_2524", "'await' expressions cannot be used in a parameter initializer."),
                    Initializer_provides_no_value_for_this_binding_element_and_the_binding_element_has_no_default_value: i(2525, 1, "Initializer_provides_no_value_for_this_binding_element_and_the_binding_element_has_no_default_value_2525", "Initializer provides no value for this binding element and the binding element has no default value."),
                    A_this_type_is_available_only_in_a_non_static_member_of_a_class_or_interface: i(2526, 1, "A_this_type_is_available_only_in_a_non_static_member_of_a_class_or_interface_2526", "A 'this' type is available only in a non-static member of a class or interface."),
                    The_inferred_type_of_0_references_an_inaccessible_1_type_A_type_annotation_is_necessary: i(2527, 1, "The_inferred_type_of_0_references_an_inaccessible_1_type_A_type_annotation_is_necessary_2527", "The inferred type of '{0}' references an inaccessible '{1}' type. A type annotation is necessary."),
                    A_module_cannot_have_multiple_default_exports: i(2528, 1, "A_module_cannot_have_multiple_default_exports_2528", "A module cannot have multiple default exports."),
                    Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_containing_async_functions: i(2529, 1, "Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_containing_async_func_2529", "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module containing async functions."),
                    Property_0_is_incompatible_with_index_signature: i(2530, 1, "Property_0_is_incompatible_with_index_signature_2530", "Property '{0}' is incompatible with index signature."),
                    Object_is_possibly_null: i(2531, 1, "Object_is_possibly_null_2531", "Object is possibly 'null'."),
                    Object_is_possibly_undefined: i(2532, 1, "Object_is_possibly_undefined_2532", "Object is possibly 'undefined'."),
                    Object_is_possibly_null_or_undefined: i(2533, 1, "Object_is_possibly_null_or_undefined_2533", "Object is possibly 'null' or 'undefined'."),
                    A_function_returning_never_cannot_have_a_reachable_end_point: i(2534, 1, "A_function_returning_never_cannot_have_a_reachable_end_point_2534", "A function returning 'never' cannot have a reachable end point."),
                    Type_0_cannot_be_used_to_index_type_1: i(2536, 1, "Type_0_cannot_be_used_to_index_type_1_2536", "Type '{0}' cannot be used to index type '{1}'."),
                    Type_0_has_no_matching_index_signature_for_type_1: i(2537, 1, "Type_0_has_no_matching_index_signature_for_type_1_2537", "Type '{0}' has no matching index signature for type '{1}'."),
                    Type_0_cannot_be_used_as_an_index_type: i(2538, 1, "Type_0_cannot_be_used_as_an_index_type_2538", "Type '{0}' cannot be used as an index type."),
                    Cannot_assign_to_0_because_it_is_not_a_variable: i(2539, 1, "Cannot_assign_to_0_because_it_is_not_a_variable_2539", "Cannot assign to '{0}' because it is not a variable."),
                    Cannot_assign_to_0_because_it_is_a_read_only_property: i(2540, 1, "Cannot_assign_to_0_because_it_is_a_read_only_property_2540", "Cannot assign to '{0}' because it is a read-only property."),
                    Index_signature_in_type_0_only_permits_reading: i(2542, 1, "Index_signature_in_type_0_only_permits_reading_2542", "Index signature in type '{0}' only permits reading."),
                    Duplicate_identifier_newTarget_Compiler_uses_variable_declaration_newTarget_to_capture_new_target_meta_property_reference: i(2543, 1, "Duplicate_identifier_newTarget_Compiler_uses_variable_declaration_newTarget_to_capture_new_target_me_2543", "Duplicate identifier '_newTarget'. Compiler uses variable declaration '_newTarget' to capture 'new.target' meta-property reference."),
                    Expression_resolves_to_variable_declaration_newTarget_that_compiler_uses_to_capture_new_target_meta_property_reference: i(2544, 1, "Expression_resolves_to_variable_declaration_newTarget_that_compiler_uses_to_capture_new_target_meta__2544", "Expression resolves to variable declaration '_newTarget' that compiler uses to capture 'new.target' meta-property reference."),
                    A_mixin_class_must_have_a_constructor_with_a_single_rest_parameter_of_type_any: i(2545, 1, "A_mixin_class_must_have_a_constructor_with_a_single_rest_parameter_of_type_any_2545", "A mixin class must have a constructor with a single rest parameter of type 'any[]'."),
                    The_type_returned_by_the_0_method_of_an_async_iterator_must_be_a_promise_for_a_type_with_a_value_property: i(2547, 1, "The_type_returned_by_the_0_method_of_an_async_iterator_must_be_a_promise_for_a_type_with_a_value_pro_2547", "The type returned by the '{0}()' method of an async iterator must be a promise for a type with a 'value' property."),
                    Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator: i(2548, 1, "Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator_2548", "Type '{0}' is not an array type or does not have a '[Symbol.iterator]()' method that returns an iterator."),
                    Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator: i(2549, 1, "Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns__2549", "Type '{0}' is not an array type or a string type or does not have a '[Symbol.iterator]()' method that returns an iterator."),
                    Property_0_does_not_exist_on_type_1_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_2_or_later: i(2550, 1, "Property_0_does_not_exist_on_type_1_Do_you_need_to_change_your_target_library_Try_changing_the_lib_c_2550", "Property '{0}' does not exist on type '{1}'. Do you need to change your target library? Try changing the 'lib' compiler option to '{2}' or later."),
                    Property_0_does_not_exist_on_type_1_Did_you_mean_2: i(2551, 1, "Property_0_does_not_exist_on_type_1_Did_you_mean_2_2551", "Property '{0}' does not exist on type '{1}'. Did you mean '{2}'?"),
                    Cannot_find_name_0_Did_you_mean_1: i(2552, 1, "Cannot_find_name_0_Did_you_mean_1_2552", "Cannot find name '{0}'. Did you mean '{1}'?"),
                    Computed_values_are_not_permitted_in_an_enum_with_string_valued_members: i(2553, 1, "Computed_values_are_not_permitted_in_an_enum_with_string_valued_members_2553", "Computed values are not permitted in an enum with string valued members."),
                    Expected_0_arguments_but_got_1: i(2554, 1, "Expected_0_arguments_but_got_1_2554", "Expected {0} arguments, but got {1}."),
                    Expected_at_least_0_arguments_but_got_1: i(2555, 1, "Expected_at_least_0_arguments_but_got_1_2555", "Expected at least {0} arguments, but got {1}."),
                    A_spread_argument_must_either_have_a_tuple_type_or_be_passed_to_a_rest_parameter: i(2556, 1, "A_spread_argument_must_either_have_a_tuple_type_or_be_passed_to_a_rest_parameter_2556", "A spread argument must either have a tuple type or be passed to a rest parameter."),
                    Expected_0_type_arguments_but_got_1: i(2558, 1, "Expected_0_type_arguments_but_got_1_2558", "Expected {0} type arguments, but got {1}."),
                    Type_0_has_no_properties_in_common_with_type_1: i(2559, 1, "Type_0_has_no_properties_in_common_with_type_1_2559", "Type '{0}' has no properties in common with type '{1}'."),
                    Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it: i(2560, 1, "Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it_2560", "Value of type '{0}' has no properties in common with type '{1}'. Did you mean to call it?"),
                    Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_write_2: i(2561, 1, "Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_writ_2561", "Object literal may only specify known properties, but '{0}' does not exist in type '{1}'. Did you mean to write '{2}'?"),
                    Base_class_expressions_cannot_reference_class_type_parameters: i(2562, 1, "Base_class_expressions_cannot_reference_class_type_parameters_2562", "Base class expressions cannot reference class type parameters."),
                    The_containing_function_or_module_body_is_too_large_for_control_flow_analysis: i(2563, 1, "The_containing_function_or_module_body_is_too_large_for_control_flow_analysis_2563", "The containing function or module body is too large for control flow analysis."),
                    Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor: i(2564, 1, "Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor_2564", "Property '{0}' has no initializer and is not definitely assigned in the constructor."),
                    Property_0_is_used_before_being_assigned: i(2565, 1, "Property_0_is_used_before_being_assigned_2565", "Property '{0}' is used before being assigned."),
                    A_rest_element_cannot_have_a_property_name: i(2566, 1, "A_rest_element_cannot_have_a_property_name_2566", "A rest element cannot have a property name."),
                    Enum_declarations_can_only_merge_with_namespace_or_other_enum_declarations: i(2567, 1, "Enum_declarations_can_only_merge_with_namespace_or_other_enum_declarations_2567", "Enum declarations can only merge with namespace or other enum declarations."),
                    Property_0_may_not_exist_on_type_1_Did_you_mean_2: i(2568, 1, "Property_0_may_not_exist_on_type_1_Did_you_mean_2_2568", "Property '{0}' may not exist on type '{1}'. Did you mean '{2}'?"),
                    Could_not_find_name_0_Did_you_mean_1: i(2570, 1, "Could_not_find_name_0_Did_you_mean_1_2570", "Could not find name '{0}'. Did you mean '{1}'?"),
                    Object_is_of_type_unknown: i(2571, 1, "Object_is_of_type_unknown_2571", "Object is of type 'unknown'."),
                    A_rest_element_type_must_be_an_array_type: i(2574, 1, "A_rest_element_type_must_be_an_array_type_2574", "A rest element type must be an array type."),
                    No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments: i(2575, 1, "No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments_2575", "No overload expects {0} arguments, but overloads do exist that expect either {1} or {2} arguments."),
                    Property_0_does_not_exist_on_type_1_Did_you_mean_to_access_the_static_member_2_instead: i(2576, 1, "Property_0_does_not_exist_on_type_1_Did_you_mean_to_access_the_static_member_2_instead_2576", "Property '{0}' does not exist on type '{1}'. Did you mean to access the static member '{2}' instead?"),
                    Return_type_annotation_circularly_references_itself: i(2577, 1, "Return_type_annotation_circularly_references_itself_2577", "Return type annotation circularly references itself."),
                    Unused_ts_expect_error_directive: i(2578, 1, "Unused_ts_expect_error_directive_2578", "Unused '@ts-expect-error' directive."),
                    Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_node_Try_npm_i_save_dev_types_Slashnode: i(2580, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_node_Try_npm_i_save_dev_types_Slashno_2580", "Cannot find name '{0}'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`."),
                    Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_jQuery_Try_npm_i_save_dev_types_Slashjquery: i(2581, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_jQuery_Try_npm_i_save_dev_types_Slash_2581", "Cannot find name '{0}'. Do you need to install type definitions for jQuery? Try `npm i --save-dev @types/jquery`."),
                    Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_a_test_runner_Try_npm_i_save_dev_types_Slashjest_or_npm_i_save_dev_types_Slashmocha: i(2582, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_a_test_runner_Try_npm_i_save_dev_type_2582", "Cannot find name '{0}'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha`."),
                    Cannot_find_name_0_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_1_or_later: i(2583, 1, "Cannot_find_name_0_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_2583", "Cannot find name '{0}'. Do you need to change your target library? Try changing the 'lib' compiler option to '{1}' or later."),
                    Cannot_find_name_0_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_include_dom: i(2584, 1, "Cannot_find_name_0_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_2584", "Cannot find name '{0}'. Do you need to change your target library? Try changing the 'lib' compiler option to include 'dom'."),
                    _0_only_refers_to_a_type_but_is_being_used_as_a_value_here_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_es2015_or_later: i(2585, 1, "_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_Do_you_need_to_change_your_target_library_2585", "'{0}' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later."),
                    Cannot_assign_to_0_because_it_is_a_constant: i(2588, 1, "Cannot_assign_to_0_because_it_is_a_constant_2588", "Cannot assign to '{0}' because it is a constant."),
                    Type_instantiation_is_excessively_deep_and_possibly_infinite: i(2589, 1, "Type_instantiation_is_excessively_deep_and_possibly_infinite_2589", "Type instantiation is excessively deep and possibly infinite."),
                    Expression_produces_a_union_type_that_is_too_complex_to_represent: i(2590, 1, "Expression_produces_a_union_type_that_is_too_complex_to_represent_2590", "Expression produces a union type that is too complex to represent."),
                    Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_node_Try_npm_i_save_dev_types_Slashnode_and_then_add_node_to_the_types_field_in_your_tsconfig: i(2591, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_node_Try_npm_i_save_dev_types_Slashno_2591", "Cannot find name '{0}'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node` and then add 'node' to the types field in your tsconfig."),
                    Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_jQuery_Try_npm_i_save_dev_types_Slashjquery_and_then_add_jquery_to_the_types_field_in_your_tsconfig: i(2592, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_jQuery_Try_npm_i_save_dev_types_Slash_2592", "Cannot find name '{0}'. Do you need to install type definitions for jQuery? Try `npm i --save-dev @types/jquery` and then add 'jquery' to the types field in your tsconfig."),
                    Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_a_test_runner_Try_npm_i_save_dev_types_Slashjest_or_npm_i_save_dev_types_Slashmocha_and_then_add_jest_or_mocha_to_the_types_field_in_your_tsconfig: i(2593, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_a_test_runner_Try_npm_i_save_dev_type_2593", "Cannot find name '{0}'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig."),
                    This_module_is_declared_with_export_and_can_only_be_used_with_a_default_import_when_using_the_0_flag: i(2594, 1, "This_module_is_declared_with_export_and_can_only_be_used_with_a_default_import_when_using_the_0_flag_2594", "This module is declared with 'export =', and can only be used with a default import when using the '{0}' flag."),
                    _0_can_only_be_imported_by_using_a_default_import: i(2595, 1, "_0_can_only_be_imported_by_using_a_default_import_2595", "'{0}' can only be imported by using a default import."),
                    _0_can_only_be_imported_by_turning_on_the_esModuleInterop_flag_and_using_a_default_import: i(2596, 1, "_0_can_only_be_imported_by_turning_on_the_esModuleInterop_flag_and_using_a_default_import_2596", "'{0}' can only be imported by turning on the 'esModuleInterop' flag and using a default import."),
                    _0_can_only_be_imported_by_using_a_require_call_or_by_using_a_default_import: i(2597, 1, "_0_can_only_be_imported_by_using_a_require_call_or_by_using_a_default_import_2597", "'{0}' can only be imported by using a 'require' call or by using a default import."),
                    _0_can_only_be_imported_by_using_a_require_call_or_by_turning_on_the_esModuleInterop_flag_and_using_a_default_import: i(2598, 1, "_0_can_only_be_imported_by_using_a_require_call_or_by_turning_on_the_esModuleInterop_flag_and_using__2598", "'{0}' can only be imported by using a 'require' call or by turning on the 'esModuleInterop' flag and using a default import."),
                    JSX_element_implicitly_has_type_any_because_the_global_type_JSX_Element_does_not_exist: i(2602, 1, "JSX_element_implicitly_has_type_any_because_the_global_type_JSX_Element_does_not_exist_2602", "JSX element implicitly has type 'any' because the global type 'JSX.Element' does not exist."),
                    Property_0_in_type_1_is_not_assignable_to_type_2: i(2603, 1, "Property_0_in_type_1_is_not_assignable_to_type_2_2603", "Property '{0}' in type '{1}' is not assignable to type '{2}'."),
                    JSX_element_type_0_does_not_have_any_construct_or_call_signatures: i(2604, 1, "JSX_element_type_0_does_not_have_any_construct_or_call_signatures_2604", "JSX element type '{0}' does not have any construct or call signatures."),
                    Property_0_of_JSX_spread_attribute_is_not_assignable_to_target_property: i(2606, 1, "Property_0_of_JSX_spread_attribute_is_not_assignable_to_target_property_2606", "Property '{0}' of JSX spread attribute is not assignable to target property."),
                    JSX_element_class_does_not_support_attributes_because_it_does_not_have_a_0_property: i(2607, 1, "JSX_element_class_does_not_support_attributes_because_it_does_not_have_a_0_property_2607", "JSX element class does not support attributes because it does not have a '{0}' property."),
                    The_global_type_JSX_0_may_not_have_more_than_one_property: i(2608, 1, "The_global_type_JSX_0_may_not_have_more_than_one_property_2608", "The global type 'JSX.{0}' may not have more than one property."),
                    JSX_spread_child_must_be_an_array_type: i(2609, 1, "JSX_spread_child_must_be_an_array_type_2609", "JSX spread child must be an array type."),
                    _0_is_defined_as_an_accessor_in_class_1_but_is_overridden_here_in_2_as_an_instance_property: i(2610, 1, "_0_is_defined_as_an_accessor_in_class_1_but_is_overridden_here_in_2_as_an_instance_property_2610", "'{0}' is defined as an accessor in class '{1}', but is overridden here in '{2}' as an instance property."),
                    _0_is_defined_as_a_property_in_class_1_but_is_overridden_here_in_2_as_an_accessor: i(2611, 1, "_0_is_defined_as_a_property_in_class_1_but_is_overridden_here_in_2_as_an_accessor_2611", "'{0}' is defined as a property in class '{1}', but is overridden here in '{2}' as an accessor."),
                    Property_0_will_overwrite_the_base_property_in_1_If_this_is_intentional_add_an_initializer_Otherwise_add_a_declare_modifier_or_remove_the_redundant_declaration: i(2612, 1, "Property_0_will_overwrite_the_base_property_in_1_If_this_is_intentional_add_an_initializer_Otherwise_2612", "Property '{0}' will overwrite the base property in '{1}'. If this is intentional, add an initializer. Otherwise, add a 'declare' modifier or remove the redundant declaration."),
                    Module_0_has_no_default_export_Did_you_mean_to_use_import_1_from_0_instead: i(2613, 1, "Module_0_has_no_default_export_Did_you_mean_to_use_import_1_from_0_instead_2613", "Module '{0}' has no default export. Did you mean to use 'import { {1} } from {0}' instead?"),
                    Module_0_has_no_exported_member_1_Did_you_mean_to_use_import_1_from_0_instead: i(2614, 1, "Module_0_has_no_exported_member_1_Did_you_mean_to_use_import_1_from_0_instead_2614", "Module '{0}' has no exported member '{1}'. Did you mean to use 'import {1} from {0}' instead?"),
                    Type_of_property_0_circularly_references_itself_in_mapped_type_1: i(2615, 1, "Type_of_property_0_circularly_references_itself_in_mapped_type_1_2615", "Type of property '{0}' circularly references itself in mapped type '{1}'."),
                    _0_can_only_be_imported_by_using_import_1_require_2_or_a_default_import: i(2616, 1, "_0_can_only_be_imported_by_using_import_1_require_2_or_a_default_import_2616", "'{0}' can only be imported by using 'import {1} = require({2})' or a default import."),
                    _0_can_only_be_imported_by_using_import_1_require_2_or_by_turning_on_the_esModuleInterop_flag_and_using_a_default_import: i(2617, 1, "_0_can_only_be_imported_by_using_import_1_require_2_or_by_turning_on_the_esModuleInterop_flag_and_us_2617", "'{0}' can only be imported by using 'import {1} = require({2})' or by turning on the 'esModuleInterop' flag and using a default import."),
                    Source_has_0_element_s_but_target_requires_1: i(2618, 1, "Source_has_0_element_s_but_target_requires_1_2618", "Source has {0} element(s) but target requires {1}."),
                    Source_has_0_element_s_but_target_allows_only_1: i(2619, 1, "Source_has_0_element_s_but_target_allows_only_1_2619", "Source has {0} element(s) but target allows only {1}."),
                    Target_requires_0_element_s_but_source_may_have_fewer: i(2620, 1, "Target_requires_0_element_s_but_source_may_have_fewer_2620", "Target requires {0} element(s) but source may have fewer."),
                    Target_allows_only_0_element_s_but_source_may_have_more: i(2621, 1, "Target_allows_only_0_element_s_but_source_may_have_more_2621", "Target allows only {0} element(s) but source may have more."),
                    Source_provides_no_match_for_required_element_at_position_0_in_target: i(2623, 1, "Source_provides_no_match_for_required_element_at_position_0_in_target_2623", "Source provides no match for required element at position {0} in target."),
                    Source_provides_no_match_for_variadic_element_at_position_0_in_target: i(2624, 1, "Source_provides_no_match_for_variadic_element_at_position_0_in_target_2624", "Source provides no match for variadic element at position {0} in target."),
                    Variadic_element_at_position_0_in_source_does_not_match_element_at_position_1_in_target: i(2625, 1, "Variadic_element_at_position_0_in_source_does_not_match_element_at_position_1_in_target_2625", "Variadic element at position {0} in source does not match element at position {1} in target."),
                    Type_at_position_0_in_source_is_not_compatible_with_type_at_position_1_in_target: i(2626, 1, "Type_at_position_0_in_source_is_not_compatible_with_type_at_position_1_in_target_2626", "Type at position {0} in source is not compatible with type at position {1} in target."),
                    Type_at_positions_0_through_1_in_source_is_not_compatible_with_type_at_position_2_in_target: i(2627, 1, "Type_at_positions_0_through_1_in_source_is_not_compatible_with_type_at_position_2_in_target_2627", "Type at positions {0} through {1} in source is not compatible with type at position {2} in target."),
                    Cannot_assign_to_0_because_it_is_an_enum: i(2628, 1, "Cannot_assign_to_0_because_it_is_an_enum_2628", "Cannot assign to '{0}' because it is an enum."),
                    Cannot_assign_to_0_because_it_is_a_class: i(2629, 1, "Cannot_assign_to_0_because_it_is_a_class_2629", "Cannot assign to '{0}' because it is a class."),
                    Cannot_assign_to_0_because_it_is_a_function: i(2630, 1, "Cannot_assign_to_0_because_it_is_a_function_2630", "Cannot assign to '{0}' because it is a function."),
                    Cannot_assign_to_0_because_it_is_a_namespace: i(2631, 1, "Cannot_assign_to_0_because_it_is_a_namespace_2631", "Cannot assign to '{0}' because it is a namespace."),
                    Cannot_assign_to_0_because_it_is_an_import: i(2632, 1, "Cannot_assign_to_0_because_it_is_an_import_2632", "Cannot assign to '{0}' because it is an import."),
                    JSX_property_access_expressions_cannot_include_JSX_namespace_names: i(2633, 1, "JSX_property_access_expressions_cannot_include_JSX_namespace_names_2633", "JSX property access expressions cannot include JSX namespace names"),
                    _0_index_signatures_are_incompatible: i(2634, 1, "_0_index_signatures_are_incompatible_2634", "'{0}' index signatures are incompatible."),
                    Type_0_has_no_signatures_for_which_the_type_argument_list_is_applicable: i(2635, 1, "Type_0_has_no_signatures_for_which_the_type_argument_list_is_applicable_2635", "Type '{0}' has no signatures for which the type argument list is applicable."),
                    Type_0_is_not_assignable_to_type_1_as_implied_by_variance_annotation: i(2636, 1, "Type_0_is_not_assignable_to_type_1_as_implied_by_variance_annotation_2636", "Type '{0}' is not assignable to type '{1}' as implied by variance annotation."),
                    Variance_annotations_are_only_supported_in_type_aliases_for_object_function_constructor_and_mapped_types: i(2637, 1, "Variance_annotations_are_only_supported_in_type_aliases_for_object_function_constructor_and_mapped_t_2637", "Variance annotations are only supported in type aliases for object, function, constructor, and mapped types."),
                    Type_0_may_represent_a_primitive_value_which_is_not_permitted_as_the_right_operand_of_the_in_operator: i(2638, 1, "Type_0_may_represent_a_primitive_value_which_is_not_permitted_as_the_right_operand_of_the_in_operato_2638", "Type '{0}' may represent a primitive value, which is not permitted as the right operand of the 'in' operator."),
                    React_components_cannot_include_JSX_namespace_names: i(2639, 1, "React_components_cannot_include_JSX_namespace_names_2639", "React components cannot include JSX namespace names"),
                    Cannot_augment_module_0_with_value_exports_because_it_resolves_to_a_non_module_entity: i(2649, 1, "Cannot_augment_module_0_with_value_exports_because_it_resolves_to_a_non_module_entity_2649", "Cannot augment module '{0}' with value exports because it resolves to a non-module entity."),
                    A_member_initializer_in_a_enum_declaration_cannot_reference_members_declared_after_it_including_members_defined_in_other_enums: i(2651, 1, "A_member_initializer_in_a_enum_declaration_cannot_reference_members_declared_after_it_including_memb_2651", "A member initializer in a enum declaration cannot reference members declared after it, including members defined in other enums."),
                    Merged_declaration_0_cannot_include_a_default_export_declaration_Consider_adding_a_separate_export_default_0_declaration_instead: i(2652, 1, "Merged_declaration_0_cannot_include_a_default_export_declaration_Consider_adding_a_separate_export_d_2652", "Merged declaration '{0}' cannot include a default export declaration. Consider adding a separate 'export default {0}' declaration instead."),
                    Non_abstract_class_expression_does_not_implement_inherited_abstract_member_0_from_class_1: i(2653, 1, "Non_abstract_class_expression_does_not_implement_inherited_abstract_member_0_from_class_1_2653", "Non-abstract class expression does not implement inherited abstract member '{0}' from class '{1}'."),
                    JSX_expressions_must_have_one_parent_element: i(2657, 1, "JSX_expressions_must_have_one_parent_element_2657", "JSX expressions must have one parent element."),
                    Type_0_provides_no_match_for_the_signature_1: i(2658, 1, "Type_0_provides_no_match_for_the_signature_1_2658", "Type '{0}' provides no match for the signature '{1}'."),
                    super_is_only_allowed_in_members_of_object_literal_expressions_when_option_target_is_ES2015_or_higher: i(2659, 1, "super_is_only_allowed_in_members_of_object_literal_expressions_when_option_target_is_ES2015_or_highe_2659", "'super' is only allowed in members of object literal expressions when option 'target' is 'ES2015' or higher."),
                    super_can_only_be_referenced_in_members_of_derived_classes_or_object_literal_expressions: i(2660, 1, "super_can_only_be_referenced_in_members_of_derived_classes_or_object_literal_expressions_2660", "'super' can only be referenced in members of derived classes or object literal expressions."),
                    Cannot_export_0_Only_local_declarations_can_be_exported_from_a_module: i(2661, 1, "Cannot_export_0_Only_local_declarations_can_be_exported_from_a_module_2661", "Cannot export '{0}'. Only local declarations can be exported from a module."),
                    Cannot_find_name_0_Did_you_mean_the_static_member_1_0: i(2662, 1, "Cannot_find_name_0_Did_you_mean_the_static_member_1_0_2662", "Cannot find name '{0}'. Did you mean the static member '{1}.{0}'?"),
                    Cannot_find_name_0_Did_you_mean_the_instance_member_this_0: i(2663, 1, "Cannot_find_name_0_Did_you_mean_the_instance_member_this_0_2663", "Cannot find name '{0}'. Did you mean the instance member 'this.{0}'?"),
                    Invalid_module_name_in_augmentation_module_0_cannot_be_found: i(2664, 1, "Invalid_module_name_in_augmentation_module_0_cannot_be_found_2664", "Invalid module name in augmentation, module '{0}' cannot be found."),
                    Invalid_module_name_in_augmentation_Module_0_resolves_to_an_untyped_module_at_1_which_cannot_be_augmented: i(2665, 1, "Invalid_module_name_in_augmentation_Module_0_resolves_to_an_untyped_module_at_1_which_cannot_be_augm_2665", "Invalid module name in augmentation. Module '{0}' resolves to an untyped module at '{1}', which cannot be augmented."),
                    Exports_and_export_assignments_are_not_permitted_in_module_augmentations: i(2666, 1, "Exports_and_export_assignments_are_not_permitted_in_module_augmentations_2666", "Exports and export assignments are not permitted in module augmentations."),
                    Imports_are_not_permitted_in_module_augmentations_Consider_moving_them_to_the_enclosing_external_module: i(2667, 1, "Imports_are_not_permitted_in_module_augmentations_Consider_moving_them_to_the_enclosing_external_mod_2667", "Imports are not permitted in module augmentations. Consider moving them to the enclosing external module."),
                    export_modifier_cannot_be_applied_to_ambient_modules_and_module_augmentations_since_they_are_always_visible: i(2668, 1, "export_modifier_cannot_be_applied_to_ambient_modules_and_module_augmentations_since_they_are_always__2668", "'export' modifier cannot be applied to ambient modules and module augmentations since they are always visible."),
                    Augmentations_for_the_global_scope_can_only_be_directly_nested_in_external_modules_or_ambient_module_declarations: i(2669, 1, "Augmentations_for_the_global_scope_can_only_be_directly_nested_in_external_modules_or_ambient_module_2669", "Augmentations for the global scope can only be directly nested in external modules or ambient module declarations."),
                    Augmentations_for_the_global_scope_should_have_declare_modifier_unless_they_appear_in_already_ambient_context: i(2670, 1, "Augmentations_for_the_global_scope_should_have_declare_modifier_unless_they_appear_in_already_ambien_2670", "Augmentations for the global scope should have 'declare' modifier unless they appear in already ambient context."),
                    Cannot_augment_module_0_because_it_resolves_to_a_non_module_entity: i(2671, 1, "Cannot_augment_module_0_because_it_resolves_to_a_non_module_entity_2671", "Cannot augment module '{0}' because it resolves to a non-module entity."),
                    Cannot_assign_a_0_constructor_type_to_a_1_constructor_type: i(2672, 1, "Cannot_assign_a_0_constructor_type_to_a_1_constructor_type_2672", "Cannot assign a '{0}' constructor type to a '{1}' constructor type."),
                    Constructor_of_class_0_is_private_and_only_accessible_within_the_class_declaration: i(2673, 1, "Constructor_of_class_0_is_private_and_only_accessible_within_the_class_declaration_2673", "Constructor of class '{0}' is private and only accessible within the class declaration."),
                    Constructor_of_class_0_is_protected_and_only_accessible_within_the_class_declaration: i(2674, 1, "Constructor_of_class_0_is_protected_and_only_accessible_within_the_class_declaration_2674", "Constructor of class '{0}' is protected and only accessible within the class declaration."),
                    Cannot_extend_a_class_0_Class_constructor_is_marked_as_private: i(2675, 1, "Cannot_extend_a_class_0_Class_constructor_is_marked_as_private_2675", "Cannot extend a class '{0}'. Class constructor is marked as private."),
                    Accessors_must_both_be_abstract_or_non_abstract: i(2676, 1, "Accessors_must_both_be_abstract_or_non_abstract_2676", "Accessors must both be abstract or non-abstract."),
                    A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type: i(2677, 1, "A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type_2677", "A type predicate's type must be assignable to its parameter's type."),
                    Type_0_is_not_comparable_to_type_1: i(2678, 1, "Type_0_is_not_comparable_to_type_1_2678", "Type '{0}' is not comparable to type '{1}'."),
                    A_function_that_is_called_with_the_new_keyword_cannot_have_a_this_type_that_is_void: i(2679, 1, "A_function_that_is_called_with_the_new_keyword_cannot_have_a_this_type_that_is_void_2679", "A function that is called with the 'new' keyword cannot have a 'this' type that is 'void'."),
                    A_0_parameter_must_be_the_first_parameter: i(2680, 1, "A_0_parameter_must_be_the_first_parameter_2680", "A '{0}' parameter must be the first parameter."),
                    A_constructor_cannot_have_a_this_parameter: i(2681, 1, "A_constructor_cannot_have_a_this_parameter_2681", "A constructor cannot have a 'this' parameter."),
                    this_implicitly_has_type_any_because_it_does_not_have_a_type_annotation: i(2683, 1, "this_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_2683", "'this' implicitly has type 'any' because it does not have a type annotation."),
                    The_this_context_of_type_0_is_not_assignable_to_method_s_this_of_type_1: i(2684, 1, "The_this_context_of_type_0_is_not_assignable_to_method_s_this_of_type_1_2684", "The 'this' context of type '{0}' is not assignable to method's 'this' of type '{1}'."),
                    The_this_types_of_each_signature_are_incompatible: i(2685, 1, "The_this_types_of_each_signature_are_incompatible_2685", "The 'this' types of each signature are incompatible."),
                    _0_refers_to_a_UMD_global_but_the_current_file_is_a_module_Consider_adding_an_import_instead: i(2686, 1, "_0_refers_to_a_UMD_global_but_the_current_file_is_a_module_Consider_adding_an_import_instead_2686", "'{0}' refers to a UMD global, but the current file is a module. Consider adding an import instead."),
                    All_declarations_of_0_must_have_identical_modifiers: i(2687, 1, "All_declarations_of_0_must_have_identical_modifiers_2687", "All declarations of '{0}' must have identical modifiers."),
                    Cannot_find_type_definition_file_for_0: i(2688, 1, "Cannot_find_type_definition_file_for_0_2688", "Cannot find type definition file for '{0}'."),
                    Cannot_extend_an_interface_0_Did_you_mean_implements: i(2689, 1, "Cannot_extend_an_interface_0_Did_you_mean_implements_2689", "Cannot extend an interface '{0}'. Did you mean 'implements'?"),
                    _0_only_refers_to_a_type_but_is_being_used_as_a_value_here_Did_you_mean_to_use_1_in_0: i(2690, 1, "_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_Did_you_mean_to_use_1_in_0_2690", "'{0}' only refers to a type, but is being used as a value here. Did you mean to use '{1} in {0}'?"),
                    _0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible: i(2692, 1, "_0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible_2692", "'{0}' is a primitive, but '{1}' is a wrapper object. Prefer using '{0}' when possible."),
                    _0_only_refers_to_a_type_but_is_being_used_as_a_value_here: i(2693, 1, "_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_2693", "'{0}' only refers to a type, but is being used as a value here."),
                    Namespace_0_has_no_exported_member_1: i(2694, 1, "Namespace_0_has_no_exported_member_1_2694", "Namespace '{0}' has no exported member '{1}'."),
                    Left_side_of_comma_operator_is_unused_and_has_no_side_effects: i(2695, 1, "Left_side_of_comma_operator_is_unused_and_has_no_side_effects_2695", "Left side of comma operator is unused and has no side effects.", !0),
                    The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead: i(2696, 1, "The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead_2696", "The 'Object' type is assignable to very few other types. Did you mean to use the 'any' type instead?"),
                    An_async_function_or_method_must_return_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES2015_in_your_lib_option: i(2697, 1, "An_async_function_or_method_must_return_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_in_2697", "An async function or method must return a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option."),
                    Spread_types_may_only_be_created_from_object_types: i(2698, 1, "Spread_types_may_only_be_created_from_object_types_2698", "Spread types may only be created from object types."),
                    Static_property_0_conflicts_with_built_in_property_Function_0_of_constructor_function_1: i(2699, 1, "Static_property_0_conflicts_with_built_in_property_Function_0_of_constructor_function_1_2699", "Static property '{0}' conflicts with built-in property 'Function.{0}' of constructor function '{1}'."),
                    Rest_types_may_only_be_created_from_object_types: i(2700, 1, "Rest_types_may_only_be_created_from_object_types_2700", "Rest types may only be created from object types."),
                    The_target_of_an_object_rest_assignment_must_be_a_variable_or_a_property_access: i(2701, 1, "The_target_of_an_object_rest_assignment_must_be_a_variable_or_a_property_access_2701", "The target of an object rest assignment must be a variable or a property access."),
                    _0_only_refers_to_a_type_but_is_being_used_as_a_namespace_here: i(2702, 1, "_0_only_refers_to_a_type_but_is_being_used_as_a_namespace_here_2702", "'{0}' only refers to a type, but is being used as a namespace here."),
                    The_operand_of_a_delete_operator_must_be_a_property_reference: i(2703, 1, "The_operand_of_a_delete_operator_must_be_a_property_reference_2703", "The operand of a 'delete' operator must be a property reference."),
                    The_operand_of_a_delete_operator_cannot_be_a_read_only_property: i(2704, 1, "The_operand_of_a_delete_operator_cannot_be_a_read_only_property_2704", "The operand of a 'delete' operator cannot be a read-only property."),
                    An_async_function_or_method_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_the_Promise_constructor_or_include_ES2015_in_your_lib_option: i(2705, 1, "An_async_function_or_method_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_de_2705", "An async function or method in ES5/ES3 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your '--lib' option."),
                    Required_type_parameters_may_not_follow_optional_type_parameters: i(2706, 1, "Required_type_parameters_may_not_follow_optional_type_parameters_2706", "Required type parameters may not follow optional type parameters."),
                    Generic_type_0_requires_between_1_and_2_type_arguments: i(2707, 1, "Generic_type_0_requires_between_1_and_2_type_arguments_2707", "Generic type '{0}' requires between {1} and {2} type arguments."),
                    Cannot_use_namespace_0_as_a_value: i(2708, 1, "Cannot_use_namespace_0_as_a_value_2708", "Cannot use namespace '{0}' as a value."),
                    Cannot_use_namespace_0_as_a_type: i(2709, 1, "Cannot_use_namespace_0_as_a_type_2709", "Cannot use namespace '{0}' as a type."),
                    _0_are_specified_twice_The_attribute_named_0_will_be_overwritten: i(2710, 1, "_0_are_specified_twice_The_attribute_named_0_will_be_overwritten_2710", "'{0}' are specified twice. The attribute named '{0}' will be overwritten."),
                    A_dynamic_import_call_returns_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES2015_in_your_lib_option: i(2711, 1, "A_dynamic_import_call_returns_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES20_2711", "A dynamic import call returns a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option."),
                    A_dynamic_import_call_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_the_Promise_constructor_or_include_ES2015_in_your_lib_option: i(2712, 1, "A_dynamic_import_call_in_ES5_SlashES3_requires_the_Promise_constructor_Make_sure_you_have_a_declarat_2712", "A dynamic import call in ES5/ES3 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your '--lib' option."),
                    Cannot_access_0_1_because_0_is_a_type_but_not_a_namespace_Did_you_mean_to_retrieve_the_type_of_the_property_1_in_0_with_0_1: i(2713, 1, "Cannot_access_0_1_because_0_is_a_type_but_not_a_namespace_Did_you_mean_to_retrieve_the_type_of_the_p_2713", `Cannot access '{0}.{1}' because '{0}' is a type, but not a namespace. Did you mean to retrieve the type of the property '{1}' in '{0}' with '{0}["{1}"]'?`),
                    The_expression_of_an_export_assignment_must_be_an_identifier_or_qualified_name_in_an_ambient_context: i(2714, 1, "The_expression_of_an_export_assignment_must_be_an_identifier_or_qualified_name_in_an_ambient_context_2714", "The expression of an export assignment must be an identifier or qualified name in an ambient context."),
                    Abstract_property_0_in_class_1_cannot_be_accessed_in_the_constructor: i(2715, 1, "Abstract_property_0_in_class_1_cannot_be_accessed_in_the_constructor_2715", "Abstract property '{0}' in class '{1}' cannot be accessed in the constructor."),
                    Type_parameter_0_has_a_circular_default: i(2716, 1, "Type_parameter_0_has_a_circular_default_2716", "Type parameter '{0}' has a circular default."),
                    Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_type_2: i(2717, 1, "Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_t_2717", "Subsequent property declarations must have the same type.  Property '{0}' must be of type '{1}', but here has type '{2}'."),
                    Duplicate_property_0: i(2718, 1, "Duplicate_property_0_2718", "Duplicate property '{0}'."),
                    Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated: i(2719, 1, "Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated_2719", "Type '{0}' is not assignable to type '{1}'. Two different types with this name exist, but they are unrelated."),
                    Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclass: i(2720, 1, "Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclas_2720", "Class '{0}' incorrectly implements class '{1}'. Did you mean to extend '{1}' and inherit its members as a subclass?"),
                    Cannot_invoke_an_object_which_is_possibly_null: i(2721, 1, "Cannot_invoke_an_object_which_is_possibly_null_2721", "Cannot invoke an object which is possibly 'null'."),
                    Cannot_invoke_an_object_which_is_possibly_undefined: i(2722, 1, "Cannot_invoke_an_object_which_is_possibly_undefined_2722", "Cannot invoke an object which is possibly 'undefined'."),
                    Cannot_invoke_an_object_which_is_possibly_null_or_undefined: i(2723, 1, "Cannot_invoke_an_object_which_is_possibly_null_or_undefined_2723", "Cannot invoke an object which is possibly 'null' or 'undefined'."),
                    _0_has_no_exported_member_named_1_Did_you_mean_2: i(2724, 1, "_0_has_no_exported_member_named_1_Did_you_mean_2_2724", "'{0}' has no exported member named '{1}'. Did you mean '{2}'?"),
                    Class_name_cannot_be_Object_when_targeting_ES5_with_module_0: i(2725, 1, "Class_name_cannot_be_Object_when_targeting_ES5_with_module_0_2725", "Class name cannot be 'Object' when targeting ES5 with module {0}."),
                    Cannot_find_lib_definition_for_0: i(2726, 1, "Cannot_find_lib_definition_for_0_2726", "Cannot find lib definition for '{0}'."),
                    Cannot_find_lib_definition_for_0_Did_you_mean_1: i(2727, 1, "Cannot_find_lib_definition_for_0_Did_you_mean_1_2727", "Cannot find lib definition for '{0}'. Did you mean '{1}'?"),
                    _0_is_declared_here: i(2728, 3, "_0_is_declared_here_2728", "'{0}' is declared here."),
                    Property_0_is_used_before_its_initialization: i(2729, 1, "Property_0_is_used_before_its_initialization_2729", "Property '{0}' is used before its initialization."),
                    An_arrow_function_cannot_have_a_this_parameter: i(2730, 1, "An_arrow_function_cannot_have_a_this_parameter_2730", "An arrow function cannot have a 'this' parameter."),
                    Implicit_conversion_of_a_symbol_to_a_string_will_fail_at_runtime_Consider_wrapping_this_expression_in_String: i(2731, 1, "Implicit_conversion_of_a_symbol_to_a_string_will_fail_at_runtime_Consider_wrapping_this_expression_i_2731", "Implicit conversion of a 'symbol' to a 'string' will fail at runtime. Consider wrapping this expression in 'String(...)'."),
                    Cannot_find_module_0_Consider_using_resolveJsonModule_to_import_module_with_json_extension: i(2732, 1, "Cannot_find_module_0_Consider_using_resolveJsonModule_to_import_module_with_json_extension_2732", "Cannot find module '{0}'. Consider using '--resolveJsonModule' to import module with '.json' extension."),
                    Property_0_was_also_declared_here: i(2733, 1, "Property_0_was_also_declared_here_2733", "Property '{0}' was also declared here."),
                    Are_you_missing_a_semicolon: i(2734, 1, "Are_you_missing_a_semicolon_2734", "Are you missing a semicolon?"),
                    Did_you_mean_for_0_to_be_constrained_to_type_new_args_Colon_any_1: i(2735, 1, "Did_you_mean_for_0_to_be_constrained_to_type_new_args_Colon_any_1_2735", "Did you mean for '{0}' to be constrained to type 'new (...args: any[]) => {1}'?"),
                    Operator_0_cannot_be_applied_to_type_1: i(2736, 1, "Operator_0_cannot_be_applied_to_type_1_2736", "Operator '{0}' cannot be applied to type '{1}'."),
                    BigInt_literals_are_not_available_when_targeting_lower_than_ES2020: i(2737, 1, "BigInt_literals_are_not_available_when_targeting_lower_than_ES2020_2737", "BigInt literals are not available when targeting lower than ES2020."),
                    An_outer_value_of_this_is_shadowed_by_this_container: i(2738, 3, "An_outer_value_of_this_is_shadowed_by_this_container_2738", "An outer value of 'this' is shadowed by this container."),
                    Type_0_is_missing_the_following_properties_from_type_1_Colon_2: i(2739, 1, "Type_0_is_missing_the_following_properties_from_type_1_Colon_2_2739", "Type '{0}' is missing the following properties from type '{1}': {2}"),
                    Type_0_is_missing_the_following_properties_from_type_1_Colon_2_and_3_more: i(2740, 1, "Type_0_is_missing_the_following_properties_from_type_1_Colon_2_and_3_more_2740", "Type '{0}' is missing the following properties from type '{1}': {2}, and {3} more."),
                    Property_0_is_missing_in_type_1_but_required_in_type_2: i(2741, 1, "Property_0_is_missing_in_type_1_but_required_in_type_2_2741", "Property '{0}' is missing in type '{1}' but required in type '{2}'."),
                    The_inferred_type_of_0_cannot_be_named_without_a_reference_to_1_This_is_likely_not_portable_A_type_annotation_is_necessary: i(2742, 1, "The_inferred_type_of_0_cannot_be_named_without_a_reference_to_1_This_is_likely_not_portable_A_type_a_2742", "The inferred type of '{0}' cannot be named without a reference to '{1}'. This is likely not portable. A type annotation is necessary."),
                    No_overload_expects_0_type_arguments_but_overloads_do_exist_that_expect_either_1_or_2_type_arguments: i(2743, 1, "No_overload_expects_0_type_arguments_but_overloads_do_exist_that_expect_either_1_or_2_type_arguments_2743", "No overload expects {0} type arguments, but overloads do exist that expect either {1} or {2} type arguments."),
                    Type_parameter_defaults_can_only_reference_previously_declared_type_parameters: i(2744, 1, "Type_parameter_defaults_can_only_reference_previously_declared_type_parameters_2744", "Type parameter defaults can only reference previously declared type parameters."),
                    This_JSX_tag_s_0_prop_expects_type_1_which_requires_multiple_children_but_only_a_single_child_was_provided: i(2745, 1, "This_JSX_tag_s_0_prop_expects_type_1_which_requires_multiple_children_but_only_a_single_child_was_pr_2745", "This JSX tag's '{0}' prop expects type '{1}' which requires multiple children, but only a single child was provided."),
                    This_JSX_tag_s_0_prop_expects_a_single_child_of_type_1_but_multiple_children_were_provided: i(2746, 1, "This_JSX_tag_s_0_prop_expects_a_single_child_of_type_1_but_multiple_children_were_provided_2746", "This JSX tag's '{0}' prop expects a single child of type '{1}', but multiple children were provided."),
                    _0_components_don_t_accept_text_as_child_elements_Text_in_JSX_has_the_type_string_but_the_expected_type_of_1_is_2: i(2747, 1, "_0_components_don_t_accept_text_as_child_elements_Text_in_JSX_has_the_type_string_but_the_expected_t_2747", "'{0}' components don't accept text as child elements. Text in JSX has the type 'string', but the expected type of '{1}' is '{2}'."),
                    Cannot_access_ambient_const_enums_when_0_is_enabled: i(2748, 1, "Cannot_access_ambient_const_enums_when_0_is_enabled_2748", "Cannot access ambient const enums when '{0}' is enabled."),
                    _0_refers_to_a_value_but_is_being_used_as_a_type_here_Did_you_mean_typeof_0: i(2749, 1, "_0_refers_to_a_value_but_is_being_used_as_a_type_here_Did_you_mean_typeof_0_2749", "'{0}' refers to a value, but is being used as a type here. Did you mean 'typeof {0}'?"),
                    The_implementation_signature_is_declared_here: i(2750, 1, "The_implementation_signature_is_declared_here_2750", "The implementation signature is declared here."),
                    Circularity_originates_in_type_at_this_location: i(2751, 1, "Circularity_originates_in_type_at_this_location_2751", "Circularity originates in type at this location."),
                    The_first_export_default_is_here: i(2752, 1, "The_first_export_default_is_here_2752", "The first export default is here."),
                    Another_export_default_is_here: i(2753, 1, "Another_export_default_is_here_2753", "Another export default is here."),
                    super_may_not_use_type_arguments: i(2754, 1, "super_may_not_use_type_arguments_2754", "'super' may not use type arguments."),
                    No_constituent_of_type_0_is_callable: i(2755, 1, "No_constituent_of_type_0_is_callable_2755", "No constituent of type '{0}' is callable."),
                    Not_all_constituents_of_type_0_are_callable: i(2756, 1, "Not_all_constituents_of_type_0_are_callable_2756", "Not all constituents of type '{0}' are callable."),
                    Type_0_has_no_call_signatures: i(2757, 1, "Type_0_has_no_call_signatures_2757", "Type '{0}' has no call signatures."),
                    Each_member_of_the_union_type_0_has_signatures_but_none_of_those_signatures_are_compatible_with_each_other: i(2758, 1, "Each_member_of_the_union_type_0_has_signatures_but_none_of_those_signatures_are_compatible_with_each_2758", "Each member of the union type '{0}' has signatures, but none of those signatures are compatible with each other."),
                    No_constituent_of_type_0_is_constructable: i(2759, 1, "No_constituent_of_type_0_is_constructable_2759", "No constituent of type '{0}' is constructable."),
                    Not_all_constituents_of_type_0_are_constructable: i(2760, 1, "Not_all_constituents_of_type_0_are_constructable_2760", "Not all constituents of type '{0}' are constructable."),
                    Type_0_has_no_construct_signatures: i(2761, 1, "Type_0_has_no_construct_signatures_2761", "Type '{0}' has no construct signatures."),
                    Each_member_of_the_union_type_0_has_construct_signatures_but_none_of_those_signatures_are_compatible_with_each_other: i(2762, 1, "Each_member_of_the_union_type_0_has_construct_signatures_but_none_of_those_signatures_are_compatible_2762", "Each member of the union type '{0}' has construct signatures, but none of those signatures are compatible with each other."),
                    Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_for_of_will_always_send_0: i(2763, 1, "Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_for_of_will_always_s_2763", "Cannot iterate value because the 'next' method of its iterator expects type '{1}', but for-of will always send '{0}'."),
                    Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_array_spread_will_always_send_0: i(2764, 1, "Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_array_spread_will_al_2764", "Cannot iterate value because the 'next' method of its iterator expects type '{1}', but array spread will always send '{0}'."),
                    Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_array_destructuring_will_always_send_0: i(2765, 1, "Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_array_destructuring__2765", "Cannot iterate value because the 'next' method of its iterator expects type '{1}', but array destructuring will always send '{0}'."),
                    Cannot_delegate_iteration_to_value_because_the_next_method_of_its_iterator_expects_type_1_but_the_containing_generator_will_always_send_0: i(2766, 1, "Cannot_delegate_iteration_to_value_because_the_next_method_of_its_iterator_expects_type_1_but_the_co_2766", "Cannot delegate iteration to value because the 'next' method of its iterator expects type '{1}', but the containing generator will always send '{0}'."),
                    The_0_property_of_an_iterator_must_be_a_method: i(2767, 1, "The_0_property_of_an_iterator_must_be_a_method_2767", "The '{0}' property of an iterator must be a method."),
                    The_0_property_of_an_async_iterator_must_be_a_method: i(2768, 1, "The_0_property_of_an_async_iterator_must_be_a_method_2768", "The '{0}' property of an async iterator must be a method."),
                    No_overload_matches_this_call: i(2769, 1, "No_overload_matches_this_call_2769", "No overload matches this call."),
                    The_last_overload_gave_the_following_error: i(2770, 1, "The_last_overload_gave_the_following_error_2770", "The last overload gave the following error."),
                    The_last_overload_is_declared_here: i(2771, 1, "The_last_overload_is_declared_here_2771", "The last overload is declared here."),
                    Overload_0_of_1_2_gave_the_following_error: i(2772, 1, "Overload_0_of_1_2_gave_the_following_error_2772", "Overload {0} of {1}, '{2}', gave the following error."),
                    Did_you_forget_to_use_await: i(2773, 1, "Did_you_forget_to_use_await_2773", "Did you forget to use 'await'?"),
                    This_condition_will_always_return_true_since_this_function_is_always_defined_Did_you_mean_to_call_it_instead: i(2774, 1, "This_condition_will_always_return_true_since_this_function_is_always_defined_Did_you_mean_to_call_it_2774", "This condition will always return true since this function is always defined. Did you mean to call it instead?"),
                    Assertions_require_every_name_in_the_call_target_to_be_declared_with_an_explicit_type_annotation: i(2775, 1, "Assertions_require_every_name_in_the_call_target_to_be_declared_with_an_explicit_type_annotation_2775", "Assertions require every name in the call target to be declared with an explicit type annotation."),
                    Assertions_require_the_call_target_to_be_an_identifier_or_qualified_name: i(2776, 1, "Assertions_require_the_call_target_to_be_an_identifier_or_qualified_name_2776", "Assertions require the call target to be an identifier or qualified name."),
                    The_operand_of_an_increment_or_decrement_operator_may_not_be_an_optional_property_access: i(2777, 1, "The_operand_of_an_increment_or_decrement_operator_may_not_be_an_optional_property_access_2777", "The operand of an increment or decrement operator may not be an optional property access."),
                    The_target_of_an_object_rest_assignment_may_not_be_an_optional_property_access: i(2778, 1, "The_target_of_an_object_rest_assignment_may_not_be_an_optional_property_access_2778", "The target of an object rest assignment may not be an optional property access."),
                    The_left_hand_side_of_an_assignment_expression_may_not_be_an_optional_property_access: i(2779, 1, "The_left_hand_side_of_an_assignment_expression_may_not_be_an_optional_property_access_2779", "The left-hand side of an assignment expression may not be an optional property access."),
                    The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access: i(2780, 1, "The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access_2780", "The left-hand side of a 'for...in' statement may not be an optional property access."),
                    The_left_hand_side_of_a_for_of_statement_may_not_be_an_optional_property_access: i(2781, 1, "The_left_hand_side_of_a_for_of_statement_may_not_be_an_optional_property_access_2781", "The left-hand side of a 'for...of' statement may not be an optional property access."),
                    _0_needs_an_explicit_type_annotation: i(2782, 3, "_0_needs_an_explicit_type_annotation_2782", "'{0}' needs an explicit type annotation."),
                    _0_is_specified_more_than_once_so_this_usage_will_be_overwritten: i(2783, 1, "_0_is_specified_more_than_once_so_this_usage_will_be_overwritten_2783", "'{0}' is specified more than once, so this usage will be overwritten."),
                    get_and_set_accessors_cannot_declare_this_parameters: i(2784, 1, "get_and_set_accessors_cannot_declare_this_parameters_2784", "'get' and 'set' accessors cannot declare 'this' parameters."),
                    This_spread_always_overwrites_this_property: i(2785, 1, "This_spread_always_overwrites_this_property_2785", "This spread always overwrites this property."),
                    _0_cannot_be_used_as_a_JSX_component: i(2786, 1, "_0_cannot_be_used_as_a_JSX_component_2786", "'{0}' cannot be used as a JSX component."),
                    Its_return_type_0_is_not_a_valid_JSX_element: i(2787, 1, "Its_return_type_0_is_not_a_valid_JSX_element_2787", "Its return type '{0}' is not a valid JSX element."),
                    Its_instance_type_0_is_not_a_valid_JSX_element: i(2788, 1, "Its_instance_type_0_is_not_a_valid_JSX_element_2788", "Its instance type '{0}' is not a valid JSX element."),
                    Its_element_type_0_is_not_a_valid_JSX_element: i(2789, 1, "Its_element_type_0_is_not_a_valid_JSX_element_2789", "Its element type '{0}' is not a valid JSX element."),
                    The_operand_of_a_delete_operator_must_be_optional: i(2790, 1, "The_operand_of_a_delete_operator_must_be_optional_2790", "The operand of a 'delete' operator must be optional."),
                    Exponentiation_cannot_be_performed_on_bigint_values_unless_the_target_option_is_set_to_es2016_or_later: i(2791, 1, "Exponentiation_cannot_be_performed_on_bigint_values_unless_the_target_option_is_set_to_es2016_or_lat_2791", "Exponentiation cannot be performed on 'bigint' values unless the 'target' option is set to 'es2016' or later."),
                    Cannot_find_module_0_Did_you_mean_to_set_the_moduleResolution_option_to_nodenext_or_to_add_aliases_to_the_paths_option: i(2792, 1, "Cannot_find_module_0_Did_you_mean_to_set_the_moduleResolution_option_to_nodenext_or_to_add_aliases_t_2792", "Cannot find module '{0}'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?"),
                    The_call_would_have_succeeded_against_this_implementation_but_implementation_signatures_of_overloads_are_not_externally_visible: i(2793, 1, "The_call_would_have_succeeded_against_this_implementation_but_implementation_signatures_of_overloads_2793", "The call would have succeeded against this implementation, but implementation signatures of overloads are not externally visible."),
                    Expected_0_arguments_but_got_1_Did_you_forget_to_include_void_in_your_type_argument_to_Promise: i(2794, 1, "Expected_0_arguments_but_got_1_Did_you_forget_to_include_void_in_your_type_argument_to_Promise_2794", "Expected {0} arguments, but got {1}. Did you forget to include 'void' in your type argument to 'Promise'?"),
                    The_intrinsic_keyword_can_only_be_used_to_declare_compiler_provided_intrinsic_types: i(2795, 1, "The_intrinsic_keyword_can_only_be_used_to_declare_compiler_provided_intrinsic_types_2795", "The 'intrinsic' keyword can only be used to declare compiler provided intrinsic types."),
                    It_is_likely_that_you_are_missing_a_comma_to_separate_these_two_template_expressions_They_form_a_tagged_template_expression_which_cannot_be_invoked: i(2796, 1, "It_is_likely_that_you_are_missing_a_comma_to_separate_these_two_template_expressions_They_form_a_tag_2796", "It is likely that you are missing a comma to separate these two template expressions. They form a tagged template expression which cannot be invoked."),
                    A_mixin_class_that_extends_from_a_type_variable_containing_an_abstract_construct_signature_must_also_be_declared_abstract: i(2797, 1, "A_mixin_class_that_extends_from_a_type_variable_containing_an_abstract_construct_signature_must_also_2797", "A mixin class that extends from a type variable containing an abstract construct signature must also be declared 'abstract'."),
                    The_declaration_was_marked_as_deprecated_here: i(2798, 1, "The_declaration_was_marked_as_deprecated_here_2798", "The declaration was marked as deprecated here."),
                    Type_produces_a_tuple_type_that_is_too_large_to_represent: i(2799, 1, "Type_produces_a_tuple_type_that_is_too_large_to_represent_2799", "Type produces a tuple type that is too large to represent."),
                    Expression_produces_a_tuple_type_that_is_too_large_to_represent: i(2800, 1, "Expression_produces_a_tuple_type_that_is_too_large_to_represent_2800", "Expression produces a tuple type that is too large to represent."),
                    This_condition_will_always_return_true_since_this_0_is_always_defined: i(2801, 1, "This_condition_will_always_return_true_since_this_0_is_always_defined_2801", "This condition will always return true since this '{0}' is always defined."),
                    Type_0_can_only_be_iterated_through_when_using_the_downlevelIteration_flag_or_with_a_target_of_es2015_or_higher: i(2802, 1, "Type_0_can_only_be_iterated_through_when_using_the_downlevelIteration_flag_or_with_a_target_of_es201_2802", "Type '{0}' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher."),
                    Cannot_assign_to_private_method_0_Private_methods_are_not_writable: i(2803, 1, "Cannot_assign_to_private_method_0_Private_methods_are_not_writable_2803", "Cannot assign to private method '{0}'. Private methods are not writable."),
                    Duplicate_identifier_0_Static_and_instance_elements_cannot_share_the_same_private_name: i(2804, 1, "Duplicate_identifier_0_Static_and_instance_elements_cannot_share_the_same_private_name_2804", "Duplicate identifier '{0}'. Static and instance elements cannot share the same private name."),
                    Private_accessor_was_defined_without_a_getter: i(2806, 1, "Private_accessor_was_defined_without_a_getter_2806", "Private accessor was defined without a getter."),
                    This_syntax_requires_an_imported_helper_named_1_with_2_parameters_which_is_not_compatible_with_the_one_in_0_Consider_upgrading_your_version_of_0: i(2807, 1, "This_syntax_requires_an_imported_helper_named_1_with_2_parameters_which_is_not_compatible_with_the_o_2807", "This syntax requires an imported helper named '{1}' with {2} parameters, which is not compatible with the one in '{0}'. Consider upgrading your version of '{0}'."),
                    A_get_accessor_must_be_at_least_as_accessible_as_the_setter: i(2808, 1, "A_get_accessor_must_be_at_least_as_accessible_as_the_setter_2808", "A get accessor must be at least as accessible as the setter"),
                    Declaration_or_statement_expected_This_follows_a_block_of_statements_so_if_you_intended_to_write_a_destructuring_assignment_you_might_need_to_wrap_the_whole_assignment_in_parentheses: i(2809, 1, "Declaration_or_statement_expected_This_follows_a_block_of_statements_so_if_you_intended_to_write_a_d_2809", "Declaration or statement expected. This '=' follows a block of statements, so if you intended to write a destructuring assignment, you might need to wrap the whole assignment in parentheses."),
                    Expected_1_argument_but_got_0_new_Promise_needs_a_JSDoc_hint_to_produce_a_resolve_that_can_be_called_without_arguments: i(2810, 1, "Expected_1_argument_but_got_0_new_Promise_needs_a_JSDoc_hint_to_produce_a_resolve_that_can_be_called_2810", "Expected 1 argument, but got 0. 'new Promise()' needs a JSDoc hint to produce a 'resolve' that can be called without arguments."),
                    Initializer_for_property_0: i(2811, 1, "Initializer_for_property_0_2811", "Initializer for property '{0}'"),
                    Property_0_does_not_exist_on_type_1_Try_changing_the_lib_compiler_option_to_include_dom: i(2812, 1, "Property_0_does_not_exist_on_type_1_Try_changing_the_lib_compiler_option_to_include_dom_2812", "Property '{0}' does not exist on type '{1}'. Try changing the 'lib' compiler option to include 'dom'."),
                    Class_declaration_cannot_implement_overload_list_for_0: i(2813, 1, "Class_declaration_cannot_implement_overload_list_for_0_2813", "Class declaration cannot implement overload list for '{0}'."),
                    Function_with_bodies_can_only_merge_with_classes_that_are_ambient: i(2814, 1, "Function_with_bodies_can_only_merge_with_classes_that_are_ambient_2814", "Function with bodies can only merge with classes that are ambient."),
                    arguments_cannot_be_referenced_in_property_initializers: i(2815, 1, "arguments_cannot_be_referenced_in_property_initializers_2815", "'arguments' cannot be referenced in property initializers."),
                    Cannot_use_this_in_a_static_property_initializer_of_a_decorated_class: i(2816, 1, "Cannot_use_this_in_a_static_property_initializer_of_a_decorated_class_2816", "Cannot use 'this' in a static property initializer of a decorated class."),
                    Property_0_has_no_initializer_and_is_not_definitely_assigned_in_a_class_static_block: i(2817, 1, "Property_0_has_no_initializer_and_is_not_definitely_assigned_in_a_class_static_block_2817", "Property '{0}' has no initializer and is not definitely assigned in a class static block."),
                    Duplicate_identifier_0_Compiler_reserves_name_1_when_emitting_super_references_in_static_initializers: i(2818, 1, "Duplicate_identifier_0_Compiler_reserves_name_1_when_emitting_super_references_in_static_initializer_2818", "Duplicate identifier '{0}'. Compiler reserves name '{1}' when emitting 'super' references in static initializers."),
                    Namespace_name_cannot_be_0: i(2819, 1, "Namespace_name_cannot_be_0_2819", "Namespace name cannot be '{0}'."),
                    Type_0_is_not_assignable_to_type_1_Did_you_mean_2: i(2820, 1, "Type_0_is_not_assignable_to_type_1_Did_you_mean_2_2820", "Type '{0}' is not assignable to type '{1}'. Did you mean '{2}'?"),
                    Import_assertions_are_only_supported_when_the_module_option_is_set_to_esnext_or_nodenext: i(2821, 1, "Import_assertions_are_only_supported_when_the_module_option_is_set_to_esnext_or_nodenext_2821", "Import assertions are only supported when the '--module' option is set to 'esnext' or 'nodenext'."),
                    Import_assertions_cannot_be_used_with_type_only_imports_or_exports: i(2822, 1, "Import_assertions_cannot_be_used_with_type_only_imports_or_exports_2822", "Import assertions cannot be used with type-only imports or exports."),
                    Import_attributes_are_only_supported_when_the_module_option_is_set_to_esnext_or_nodenext: i(2823, 1, "Import_attributes_are_only_supported_when_the_module_option_is_set_to_esnext_or_nodenext_2823", "Import attributes are only supported when the '--module' option is set to 'esnext' or 'nodenext'."),
                    Cannot_find_namespace_0_Did_you_mean_1: i(2833, 1, "Cannot_find_namespace_0_Did_you_mean_1_2833", "Cannot find namespace '{0}'. Did you mean '{1}'?"),
                    Relative_import_paths_need_explicit_file_extensions_in_ECMAScript_imports_when_moduleResolution_is_node16_or_nodenext_Consider_adding_an_extension_to_the_import_path: i(2834, 1, "Relative_import_paths_need_explicit_file_extensions_in_ECMAScript_imports_when_moduleResolution_is_n_2834", "Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path."),
                    Relative_import_paths_need_explicit_file_extensions_in_ECMAScript_imports_when_moduleResolution_is_node16_or_nodenext_Did_you_mean_0: i(2835, 1, "Relative_import_paths_need_explicit_file_extensions_in_ECMAScript_imports_when_moduleResolution_is_n_2835", "Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '{0}'?"),
                    Import_assertions_are_not_allowed_on_statements_that_compile_to_CommonJS_require_calls: i(2836, 1, "Import_assertions_are_not_allowed_on_statements_that_compile_to_CommonJS_require_calls_2836", "Import assertions are not allowed on statements that compile to CommonJS 'require' calls."),
                    Import_assertion_values_must_be_string_literal_expressions: i(2837, 1, "Import_assertion_values_must_be_string_literal_expressions_2837", "Import assertion values must be string literal expressions."),
                    All_declarations_of_0_must_have_identical_constraints: i(2838, 1, "All_declarations_of_0_must_have_identical_constraints_2838", "All declarations of '{0}' must have identical constraints."),
                    This_condition_will_always_return_0_since_JavaScript_compares_objects_by_reference_not_value: i(2839, 1, "This_condition_will_always_return_0_since_JavaScript_compares_objects_by_reference_not_value_2839", "This condition will always return '{0}' since JavaScript compares objects by reference, not value."),
                    An_interface_cannot_extend_a_primitive_type_like_0_It_can_only_extend_other_named_object_types: i(2840, 1, "An_interface_cannot_extend_a_primitive_type_like_0_It_can_only_extend_other_named_object_types_2840", "An interface cannot extend a primitive type like '{0}'. It can only extend other named object types."),
                    _0_is_an_unused_renaming_of_1_Did_you_intend_to_use_it_as_a_type_annotation: i(2842, 1, "_0_is_an_unused_renaming_of_1_Did_you_intend_to_use_it_as_a_type_annotation_2842", "'{0}' is an unused renaming of '{1}'. Did you intend to use it as a type annotation?"),
                    We_can_only_write_a_type_for_0_by_adding_a_type_for_the_entire_parameter_here: i(2843, 1, "We_can_only_write_a_type_for_0_by_adding_a_type_for_the_entire_parameter_here_2843", "We can only write a type for '{0}' by adding a type for the entire parameter here."),
                    Type_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor: i(2844, 1, "Type_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor_2844", "Type of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor."),
                    This_condition_will_always_return_0: i(2845, 1, "This_condition_will_always_return_0_2845", "This condition will always return '{0}'."),
                    A_declaration_file_cannot_be_imported_without_import_type_Did_you_mean_to_import_an_implementation_file_0_instead: i(2846, 1, "A_declaration_file_cannot_be_imported_without_import_type_Did_you_mean_to_import_an_implementation_f_2846", "A declaration file cannot be imported without 'import type'. Did you mean to import an implementation file '{0}' instead?"),
                    The_right_hand_side_of_an_instanceof_expression_must_not_be_an_instantiation_expression: i(2848, 1, "The_right_hand_side_of_an_instanceof_expression_must_not_be_an_instantiation_expression_2848", "The right-hand side of an 'instanceof' expression must not be an instantiation expression."),
                    Target_signature_provides_too_few_arguments_Expected_0_or_more_but_got_1: i(2849, 1, "Target_signature_provides_too_few_arguments_Expected_0_or_more_but_got_1_2849", "Target signature provides too few arguments. Expected {0} or more, but got {1}."),
                    The_initializer_of_a_using_declaration_must_be_either_an_object_with_a_Symbol_dispose_method_or_be_null_or_undefined: i(2850, 1, "The_initializer_of_a_using_declaration_must_be_either_an_object_with_a_Symbol_dispose_method_or_be_n_2850", "The initializer of a 'using' declaration must be either an object with a '[Symbol.dispose]()' method, or be 'null' or 'undefined'."),
                    The_initializer_of_an_await_using_declaration_must_be_either_an_object_with_a_Symbol_asyncDispose_or_Symbol_dispose_method_or_be_null_or_undefined: i(2851, 1, "The_initializer_of_an_await_using_declaration_must_be_either_an_object_with_a_Symbol_asyncDispose_or_2851", "The initializer of an 'await using' declaration must be either an object with a '[Symbol.asyncDispose]()' or '[Symbol.dispose]()' method, or be 'null' or 'undefined'."),
                    await_using_statements_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules: i(2852, 1, "await_using_statements_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules_2852", "'await using' statements are only allowed within async functions and at the top levels of modules."),
                    await_using_statements_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_file_has_no_imports_or_exports_Consider_adding_an_empty_export_to_make_this_file_a_module: i(2853, 1, "await_using_statements_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_th_2853", "'await using' statements are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module."),
                    Top_level_await_using_statements_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_node16_or_nodenext_and_the_target_option_is_set_to_es2017_or_higher: i(2854, 1, "Top_level_await_using_statements_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_sys_2854", "Top-level 'await using' statements are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', or 'nodenext', and the 'target' option is set to 'es2017' or higher."),
                    Class_field_0_defined_by_the_parent_class_is_not_accessible_in_the_child_class_via_super: i(2855, 1, "Class_field_0_defined_by_the_parent_class_is_not_accessible_in_the_child_class_via_super_2855", "Class field '{0}' defined by the parent class is not accessible in the child class via super."),
                    Import_attributes_are_not_allowed_on_statements_that_compile_to_CommonJS_require_calls: i(2856, 1, "Import_attributes_are_not_allowed_on_statements_that_compile_to_CommonJS_require_calls_2856", "Import attributes are not allowed on statements that compile to CommonJS 'require' calls."),
                    Import_attributes_cannot_be_used_with_type_only_imports_or_exports: i(2857, 1, "Import_attributes_cannot_be_used_with_type_only_imports_or_exports_2857", "Import attributes cannot be used with type-only imports or exports."),
                    Import_attribute_values_must_be_string_literal_expressions: i(2858, 1, "Import_attribute_values_must_be_string_literal_expressions_2858", "Import attribute values must be string literal expressions."),
                    Excessive_complexity_comparing_types_0_and_1: i(2859, 1, "Excessive_complexity_comparing_types_0_and_1_2859", "Excessive complexity comparing types '{0}' and '{1}'."),
                    The_left_hand_side_of_an_instanceof_expression_must_be_assignable_to_the_first_argument_of_the_right_hand_side_s_Symbol_hasInstance_method: i(2860, 1, "The_left_hand_side_of_an_instanceof_expression_must_be_assignable_to_the_first_argument_of_the_right_2860", "The left-hand side of an 'instanceof' expression must be assignable to the first argument of the right-hand side's '[Symbol.hasInstance]' method."),
                    An_object_s_Symbol_hasInstance_method_must_return_a_boolean_value_for_it_to_be_used_on_the_right_hand_side_of_an_instanceof_expression: i(2861, 1, "An_object_s_Symbol_hasInstance_method_must_return_a_boolean_value_for_it_to_be_used_on_the_right_han_2861", "An object's '[Symbol.hasInstance]' method must return a boolean value for it to be used on the right-hand side of an 'instanceof' expression."),
                    Type_0_is_generic_and_can_only_be_indexed_for_reading: i(2862, 1, "Type_0_is_generic_and_can_only_be_indexed_for_reading_2862", "Type '{0}' is generic and can only be indexed for reading."),
                    A_class_cannot_extend_a_primitive_type_like_0_Classes_can_only_extend_constructable_values: i(2863, 1, "A_class_cannot_extend_a_primitive_type_like_0_Classes_can_only_extend_constructable_values_2863", "A class cannot extend a primitive type like '{0}'. Classes can only extend constructable values."),
                    A_class_cannot_implement_a_primitive_type_like_0_It_can_only_implement_other_named_object_types: i(2864, 1, "A_class_cannot_implement_a_primitive_type_like_0_It_can_only_implement_other_named_object_types_2864", "A class cannot implement a primitive type like '{0}'. It can only implement other named object types."),
                    Import_declaration_0_is_using_private_name_1: i(4e3, 1, "Import_declaration_0_is_using_private_name_1_4000", "Import declaration '{0}' is using private name '{1}'."),
                    Type_parameter_0_of_exported_class_has_or_is_using_private_name_1: i(4002, 1, "Type_parameter_0_of_exported_class_has_or_is_using_private_name_1_4002", "Type parameter '{0}' of exported class has or is using private name '{1}'."),
                    Type_parameter_0_of_exported_interface_has_or_is_using_private_name_1: i(4004, 1, "Type_parameter_0_of_exported_interface_has_or_is_using_private_name_1_4004", "Type parameter '{0}' of exported interface has or is using private name '{1}'."),
                    Type_parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1: i(4006, 1, "Type_parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1_4006", "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'."),
                    Type_parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1: i(4008, 1, "Type_parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1_4008", "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'."),
                    Type_parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1: i(4010, 1, "Type_parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1_4010", "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'."),
                    Type_parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1: i(4012, 1, "Type_parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1_4012", "Type parameter '{0}' of public method from exported class has or is using private name '{1}'."),
                    Type_parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1: i(4014, 1, "Type_parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1_4014", "Type parameter '{0}' of method from exported interface has or is using private name '{1}'."),
                    Type_parameter_0_of_exported_function_has_or_is_using_private_name_1: i(4016, 1, "Type_parameter_0_of_exported_function_has_or_is_using_private_name_1_4016", "Type parameter '{0}' of exported function has or is using private name '{1}'."),
                    Implements_clause_of_exported_class_0_has_or_is_using_private_name_1: i(4019, 1, "Implements_clause_of_exported_class_0_has_or_is_using_private_name_1_4019", "Implements clause of exported class '{0}' has or is using private name '{1}'."),
                    extends_clause_of_exported_class_0_has_or_is_using_private_name_1: i(4020, 1, "extends_clause_of_exported_class_0_has_or_is_using_private_name_1_4020", "'extends' clause of exported class '{0}' has or is using private name '{1}'."),
                    extends_clause_of_exported_class_has_or_is_using_private_name_0: i(4021, 1, "extends_clause_of_exported_class_has_or_is_using_private_name_0_4021", "'extends' clause of exported class has or is using private name '{0}'."),
                    extends_clause_of_exported_interface_0_has_or_is_using_private_name_1: i(4022, 1, "extends_clause_of_exported_interface_0_has_or_is_using_private_name_1_4022", "'extends' clause of exported interface '{0}' has or is using private name '{1}'."),
                    Exported_variable_0_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4023, 1, "Exported_variable_0_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4023", "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named."),
                    Exported_variable_0_has_or_is_using_name_1_from_private_module_2: i(4024, 1, "Exported_variable_0_has_or_is_using_name_1_from_private_module_2_4024", "Exported variable '{0}' has or is using name '{1}' from private module '{2}'."),
                    Exported_variable_0_has_or_is_using_private_name_1: i(4025, 1, "Exported_variable_0_has_or_is_using_private_name_1_4025", "Exported variable '{0}' has or is using private name '{1}'."),
                    Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4026, 1, "Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot__4026", "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
                    Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: i(4027, 1, "Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4027", "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
                    Public_static_property_0_of_exported_class_has_or_is_using_private_name_1: i(4028, 1, "Public_static_property_0_of_exported_class_has_or_is_using_private_name_1_4028", "Public static property '{0}' of exported class has or is using private name '{1}'."),
                    Public_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4029, 1, "Public_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_name_4029", "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
                    Public_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: i(4030, 1, "Public_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4030", "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
                    Public_property_0_of_exported_class_has_or_is_using_private_name_1: i(4031, 1, "Public_property_0_of_exported_class_has_or_is_using_private_name_1_4031", "Public property '{0}' of exported class has or is using private name '{1}'."),
                    Property_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2: i(4032, 1, "Property_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2_4032", "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'."),
                    Property_0_of_exported_interface_has_or_is_using_private_name_1: i(4033, 1, "Property_0_of_exported_interface_has_or_is_using_private_name_1_4033", "Property '{0}' of exported interface has or is using private name '{1}'."),
                    Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: i(4034, 1, "Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_name_1_from_private_mod_4034", "Parameter type of public static setter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
                    Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_private_name_1: i(4035, 1, "Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_private_name_1_4035", "Parameter type of public static setter '{0}' from exported class has or is using private name '{1}'."),
                    Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: i(4036, 1, "Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2_4036", "Parameter type of public setter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
                    Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_private_name_1: i(4037, 1, "Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_private_name_1_4037", "Parameter type of public setter '{0}' from exported class has or is using private name '{1}'."),
                    Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4038, 1, "Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_external_modul_4038", "Return type of public static getter '{0}' from exported class has or is using name '{1}' from external module {2} but cannot be named."),
                    Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: i(4039, 1, "Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_4039", "Return type of public static getter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
                    Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_private_name_1: i(4040, 1, "Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_private_name_1_4040", "Return type of public static getter '{0}' from exported class has or is using private name '{1}'."),
                    Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4041, 1, "Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_4041", "Return type of public getter '{0}' from exported class has or is using name '{1}' from external module {2} but cannot be named."),
                    Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: i(4042, 1, "Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2_4042", "Return type of public getter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
                    Return_type_of_public_getter_0_from_exported_class_has_or_is_using_private_name_1: i(4043, 1, "Return_type_of_public_getter_0_from_exported_class_has_or_is_using_private_name_1_4043", "Return type of public getter '{0}' from exported class has or is using private name '{1}'."),
                    Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1: i(4044, 1, "Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_name_0_from_private_mod_4044", "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'."),
                    Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_0: i(4045, 1, "Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_0_4045", "Return type of constructor signature from exported interface has or is using private name '{0}'."),
                    Return_type_of_call_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1: i(4046, 1, "Return_type_of_call_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1_4046", "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'."),
                    Return_type_of_call_signature_from_exported_interface_has_or_is_using_private_name_0: i(4047, 1, "Return_type_of_call_signature_from_exported_interface_has_or_is_using_private_name_0_4047", "Return type of call signature from exported interface has or is using private name '{0}'."),
                    Return_type_of_index_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1: i(4048, 1, "Return_type_of_index_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1_4048", "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'."),
                    Return_type_of_index_signature_from_exported_interface_has_or_is_using_private_name_0: i(4049, 1, "Return_type_of_index_signature_from_exported_interface_has_or_is_using_private_name_0_4049", "Return type of index signature from exported interface has or is using private name '{0}'."),
                    Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named: i(4050, 1, "Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_external_module__4050", "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named."),
                    Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_private_module_1: i(4051, 1, "Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_private_module_1_4051", "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'."),
                    Return_type_of_public_static_method_from_exported_class_has_or_is_using_private_name_0: i(4052, 1, "Return_type_of_public_static_method_from_exported_class_has_or_is_using_private_name_0_4052", "Return type of public static method from exported class has or is using private name '{0}'."),
                    Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named: i(4053, 1, "Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_c_4053", "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named."),
                    Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_private_module_1: i(4054, 1, "Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_private_module_1_4054", "Return type of public method from exported class has or is using name '{0}' from private module '{1}'."),
                    Return_type_of_public_method_from_exported_class_has_or_is_using_private_name_0: i(4055, 1, "Return_type_of_public_method_from_exported_class_has_or_is_using_private_name_0_4055", "Return type of public method from exported class has or is using private name '{0}'."),
                    Return_type_of_method_from_exported_interface_has_or_is_using_name_0_from_private_module_1: i(4056, 1, "Return_type_of_method_from_exported_interface_has_or_is_using_name_0_from_private_module_1_4056", "Return type of method from exported interface has or is using name '{0}' from private module '{1}'."),
                    Return_type_of_method_from_exported_interface_has_or_is_using_private_name_0: i(4057, 1, "Return_type_of_method_from_exported_interface_has_or_is_using_private_name_0_4057", "Return type of method from exported interface has or is using private name '{0}'."),
                    Return_type_of_exported_function_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named: i(4058, 1, "Return_type_of_exported_function_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named_4058", "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named."),
                    Return_type_of_exported_function_has_or_is_using_name_0_from_private_module_1: i(4059, 1, "Return_type_of_exported_function_has_or_is_using_name_0_from_private_module_1_4059", "Return type of exported function has or is using name '{0}' from private module '{1}'."),
                    Return_type_of_exported_function_has_or_is_using_private_name_0: i(4060, 1, "Return_type_of_exported_function_has_or_is_using_private_name_0_4060", "Return type of exported function has or is using private name '{0}'."),
                    Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4061, 1, "Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_can_4061", "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named."),
                    Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_private_module_2: i(4062, 1, "Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_private_module_2_4062", "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'."),
                    Parameter_0_of_constructor_from_exported_class_has_or_is_using_private_name_1: i(4063, 1, "Parameter_0_of_constructor_from_exported_class_has_or_is_using_private_name_1_4063", "Parameter '{0}' of constructor from exported class has or is using private name '{1}'."),
                    Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2: i(4064, 1, "Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_name_1_from_private_mod_4064", "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'."),
                    Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1: i(4065, 1, "Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1_4065", "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'."),
                    Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2: i(4066, 1, "Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2_4066", "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'."),
                    Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1: i(4067, 1, "Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1_4067", "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'."),
                    Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4068, 1, "Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_external_module__4068", "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named."),
                    Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_private_module_2: i(4069, 1, "Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_private_module_2_4069", "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'."),
                    Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1: i(4070, 1, "Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1_4070", "Parameter '{0}' of public static method from exported class has or is using private name '{1}'."),
                    Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4071, 1, "Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_c_4071", "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named."),
                    Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_private_module_2: i(4072, 1, "Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_private_module_2_4072", "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'."),
                    Parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1: i(4073, 1, "Parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1_4073", "Parameter '{0}' of public method from exported class has or is using private name '{1}'."),
                    Parameter_0_of_method_from_exported_interface_has_or_is_using_name_1_from_private_module_2: i(4074, 1, "Parameter_0_of_method_from_exported_interface_has_or_is_using_name_1_from_private_module_2_4074", "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'."),
                    Parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1: i(4075, 1, "Parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1_4075", "Parameter '{0}' of method from exported interface has or is using private name '{1}'."),
                    Parameter_0_of_exported_function_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4076, 1, "Parameter_0_of_exported_function_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4076", "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named."),
                    Parameter_0_of_exported_function_has_or_is_using_name_1_from_private_module_2: i(4077, 1, "Parameter_0_of_exported_function_has_or_is_using_name_1_from_private_module_2_4077", "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'."),
                    Parameter_0_of_exported_function_has_or_is_using_private_name_1: i(4078, 1, "Parameter_0_of_exported_function_has_or_is_using_private_name_1_4078", "Parameter '{0}' of exported function has or is using private name '{1}'."),
                    Exported_type_alias_0_has_or_is_using_private_name_1: i(4081, 1, "Exported_type_alias_0_has_or_is_using_private_name_1_4081", "Exported type alias '{0}' has or is using private name '{1}'."),
                    Default_export_of_the_module_has_or_is_using_private_name_0: i(4082, 1, "Default_export_of_the_module_has_or_is_using_private_name_0_4082", "Default export of the module has or is using private name '{0}'."),
                    Type_parameter_0_of_exported_type_alias_has_or_is_using_private_name_1: i(4083, 1, "Type_parameter_0_of_exported_type_alias_has_or_is_using_private_name_1_4083", "Type parameter '{0}' of exported type alias has or is using private name '{1}'."),
                    Exported_type_alias_0_has_or_is_using_private_name_1_from_module_2: i(4084, 1, "Exported_type_alias_0_has_or_is_using_private_name_1_from_module_2_4084", "Exported type alias '{0}' has or is using private name '{1}' from module {2}."),
                    Extends_clause_for_inferred_type_0_has_or_is_using_private_name_1: i(4085, 1, "Extends_clause_for_inferred_type_0_has_or_is_using_private_name_1_4085", "Extends clause for inferred type '{0}' has or is using private name '{1}'."),
                    Conflicting_definitions_for_0_found_at_1_and_2_Consider_installing_a_specific_version_of_this_library_to_resolve_the_conflict: i(4090, 1, "Conflicting_definitions_for_0_found_at_1_and_2_Consider_installing_a_specific_version_of_this_librar_4090", "Conflicting definitions for '{0}' found at '{1}' and '{2}'. Consider installing a specific version of this library to resolve the conflict."),
                    Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2: i(4091, 1, "Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2_4091", "Parameter '{0}' of index signature from exported interface has or is using name '{1}' from private module '{2}'."),
                    Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_private_name_1: i(4092, 1, "Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_private_name_1_4092", "Parameter '{0}' of index signature from exported interface has or is using private name '{1}'."),
                    Property_0_of_exported_class_expression_may_not_be_private_or_protected: i(4094, 1, "Property_0_of_exported_class_expression_may_not_be_private_or_protected_4094", "Property '{0}' of exported class expression may not be private or protected."),
                    Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4095, 1, "Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_4095", "Public static method '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
                    Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: i(4096, 1, "Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4096", "Public static method '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
                    Public_static_method_0_of_exported_class_has_or_is_using_private_name_1: i(4097, 1, "Public_static_method_0_of_exported_class_has_or_is_using_private_name_1_4097", "Public static method '{0}' of exported class has or is using private name '{1}'."),
                    Public_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4098, 1, "Public_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4098", "Public method '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
                    Public_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: i(4099, 1, "Public_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4099", "Public method '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
                    Public_method_0_of_exported_class_has_or_is_using_private_name_1: i(4100, 1, "Public_method_0_of_exported_class_has_or_is_using_private_name_1_4100", "Public method '{0}' of exported class has or is using private name '{1}'."),
                    Method_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2: i(4101, 1, "Method_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2_4101", "Method '{0}' of exported interface has or is using name '{1}' from private module '{2}'."),
                    Method_0_of_exported_interface_has_or_is_using_private_name_1: i(4102, 1, "Method_0_of_exported_interface_has_or_is_using_private_name_1_4102", "Method '{0}' of exported interface has or is using private name '{1}'."),
                    Type_parameter_0_of_exported_mapped_object_type_is_using_private_name_1: i(4103, 1, "Type_parameter_0_of_exported_mapped_object_type_is_using_private_name_1_4103", "Type parameter '{0}' of exported mapped object type is using private name '{1}'."),
                    The_type_0_is_readonly_and_cannot_be_assigned_to_the_mutable_type_1: i(4104, 1, "The_type_0_is_readonly_and_cannot_be_assigned_to_the_mutable_type_1_4104", "The type '{0}' is 'readonly' and cannot be assigned to the mutable type '{1}'."),
                    Private_or_protected_member_0_cannot_be_accessed_on_a_type_parameter: i(4105, 1, "Private_or_protected_member_0_cannot_be_accessed_on_a_type_parameter_4105", "Private or protected member '{0}' cannot be accessed on a type parameter."),
                    Parameter_0_of_accessor_has_or_is_using_private_name_1: i(4106, 1, "Parameter_0_of_accessor_has_or_is_using_private_name_1_4106", "Parameter '{0}' of accessor has or is using private name '{1}'."),
                    Parameter_0_of_accessor_has_or_is_using_name_1_from_private_module_2: i(4107, 1, "Parameter_0_of_accessor_has_or_is_using_name_1_from_private_module_2_4107", "Parameter '{0}' of accessor has or is using name '{1}' from private module '{2}'."),
                    Parameter_0_of_accessor_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: i(4108, 1, "Parameter_0_of_accessor_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4108", "Parameter '{0}' of accessor has or is using name '{1}' from external module '{2}' but cannot be named."),
                    Type_arguments_for_0_circularly_reference_themselves: i(4109, 1, "Type_arguments_for_0_circularly_reference_themselves_4109", "Type arguments for '{0}' circularly reference themselves."),
                    Tuple_type_arguments_circularly_reference_themselves: i(4110, 1, "Tuple_type_arguments_circularly_reference_themselves_4110", "Tuple type arguments circularly reference themselves."),
                    Property_0_comes_from_an_index_signature_so_it_must_be_accessed_with_0: i(4111, 1, "Property_0_comes_from_an_index_signature_so_it_must_be_accessed_with_0_4111", "Property '{0}' comes from an index signature, so it must be accessed with ['{0}']."),
                    This_member_cannot_have_an_override_modifier_because_its_containing_class_0_does_not_extend_another_class: i(4112, 1, "This_member_cannot_have_an_override_modifier_because_its_containing_class_0_does_not_extend_another__4112", "This member cannot have an 'override' modifier because its containing class '{0}' does not extend another class."),
                    This_member_cannot_have_an_override_modifier_because_it_is_not_declared_in_the_base_class_0: i(4113, 1, "This_member_cannot_have_an_override_modifier_because_it_is_not_declared_in_the_base_class_0_4113", "This member cannot have an 'override' modifier because it is not declared in the base class '{0}'."),
                    This_member_must_have_an_override_modifier_because_it_overrides_a_member_in_the_base_class_0: i(4114, 1, "This_member_must_have_an_override_modifier_because_it_overrides_a_member_in_the_base_class_0_4114", "This member must have an 'override' modifier because it overrides a member in the base class '{0}'."),
                    This_parameter_property_must_have_an_override_modifier_because_it_overrides_a_member_in_base_class_0: i(4115, 1, "This_parameter_property_must_have_an_override_modifier_because_it_overrides_a_member_in_base_class_0_4115", "This parameter property must have an 'override' modifier because it overrides a member in base class '{0}'."),
                    This_member_must_have_an_override_modifier_because_it_overrides_an_abstract_method_that_is_declared_in_the_base_class_0: i(4116, 1, "This_member_must_have_an_override_modifier_because_it_overrides_an_abstract_method_that_is_declared__4116", "This member must have an 'override' modifier because it overrides an abstract method that is declared in the base class '{0}'."),
                    This_member_cannot_have_an_override_modifier_because_it_is_not_declared_in_the_base_class_0_Did_you_mean_1: i(4117, 1, "This_member_cannot_have_an_override_modifier_because_it_is_not_declared_in_the_base_class_0_Did_you__4117", "This member cannot have an 'override' modifier because it is not declared in the base class '{0}'. Did you mean '{1}'?"),
                    The_type_of_this_node_cannot_be_serialized_because_its_property_0_cannot_be_serialized: i(4118, 1, "The_type_of_this_node_cannot_be_serialized_because_its_property_0_cannot_be_serialized_4118", "The type of this node cannot be serialized because its property '{0}' cannot be serialized."),
                    This_member_must_have_a_JSDoc_comment_with_an_override_tag_because_it_overrides_a_member_in_the_base_class_0: i(4119, 1, "This_member_must_have_a_JSDoc_comment_with_an_override_tag_because_it_overrides_a_member_in_the_base_4119", "This member must have a JSDoc comment with an '@override' tag because it overrides a member in the base class '{0}'."),
                    This_parameter_property_must_have_a_JSDoc_comment_with_an_override_tag_because_it_overrides_a_member_in_the_base_class_0: i(4120, 1, "This_parameter_property_must_have_a_JSDoc_comment_with_an_override_tag_because_it_overrides_a_member_4120", "This parameter property must have a JSDoc comment with an '@override' tag because it overrides a member in the base class '{0}'."),
                    This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_its_containing_class_0_does_not_extend_another_class: i(4121, 1, "This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_its_containing_class_0_does_not_4121", "This member cannot have a JSDoc comment with an '@override' tag because its containing class '{0}' does not extend another class."),
                    This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_it_is_not_declared_in_the_base_class_0: i(4122, 1, "This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_it_is_not_declared_in_the_base__4122", "This member cannot have a JSDoc comment with an '@override' tag because it is not declared in the base class '{0}'."),
                    This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_it_is_not_declared_in_the_base_class_0_Did_you_mean_1: i(4123, 1, "This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_it_is_not_declared_in_the_base__4123", "This member cannot have a JSDoc comment with an 'override' tag because it is not declared in the base class '{0}'. Did you mean '{1}'?"),
                    Compiler_option_0_of_value_1_is_unstable_Use_nightly_TypeScript_to_silence_this_error_Try_updating_with_npm_install_D_typescript_next: i(4124, 1, "Compiler_option_0_of_value_1_is_unstable_Use_nightly_TypeScript_to_silence_this_error_Try_updating_w_4124", "Compiler option '{0}' of value '{1}' is unstable. Use nightly TypeScript to silence this error. Try updating with 'npm install -D typescript@next'."),
                    The_current_host_does_not_support_the_0_option: i(5001, 1, "The_current_host_does_not_support_the_0_option_5001", "The current host does not support the '{0}' option."),
                    Cannot_find_the_common_subdirectory_path_for_the_input_files: i(5009, 1, "Cannot_find_the_common_subdirectory_path_for_the_input_files_5009", "Cannot find the common subdirectory path for the input files."),
                    File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0: i(5010, 1, "File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0_5010", "File specification cannot end in a recursive directory wildcard ('**'): '{0}'."),
                    Cannot_read_file_0_Colon_1: i(5012, 1, "Cannot_read_file_0_Colon_1_5012", "Cannot read file '{0}': {1}."),
                    Failed_to_parse_file_0_Colon_1: i(5014, 1, "Failed_to_parse_file_0_Colon_1_5014", "Failed to parse file '{0}': {1}."),
                    Unknown_compiler_option_0: i(5023, 1, "Unknown_compiler_option_0_5023", "Unknown compiler option '{0}'."),
                    Compiler_option_0_requires_a_value_of_type_1: i(5024, 1, "Compiler_option_0_requires_a_value_of_type_1_5024", "Compiler option '{0}' requires a value of type {1}."),
                    Unknown_compiler_option_0_Did_you_mean_1: i(5025, 1, "Unknown_compiler_option_0_Did_you_mean_1_5025", "Unknown compiler option '{0}'. Did you mean '{1}'?"),
                    Could_not_write_file_0_Colon_1: i(5033, 1, "Could_not_write_file_0_Colon_1_5033", "Could not write file '{0}': {1}."),
                    Option_project_cannot_be_mixed_with_source_files_on_a_command_line: i(5042, 1, "Option_project_cannot_be_mixed_with_source_files_on_a_command_line_5042", "Option 'project' cannot be mixed with source files on a command line."),
                    Option_isolatedModules_can_only_be_used_when_either_option_module_is_provided_or_option_target_is_ES2015_or_higher: i(5047, 1, "Option_isolatedModules_can_only_be_used_when_either_option_module_is_provided_or_option_target_is_ES_5047", "Option 'isolatedModules' can only be used when either option '--module' is provided or option 'target' is 'ES2015' or higher."),
                    Option_0_cannot_be_specified_when_option_target_is_ES3: i(5048, 1, "Option_0_cannot_be_specified_when_option_target_is_ES3_5048", "Option '{0}' cannot be specified when option 'target' is 'ES3'."),
                    Option_0_can_only_be_used_when_either_option_inlineSourceMap_or_option_sourceMap_is_provided: i(5051, 1, "Option_0_can_only_be_used_when_either_option_inlineSourceMap_or_option_sourceMap_is_provided_5051", "Option '{0} can only be used when either option '--inlineSourceMap' or option '--sourceMap' is provided."),
                    Option_0_cannot_be_specified_without_specifying_option_1: i(5052, 1, "Option_0_cannot_be_specified_without_specifying_option_1_5052", "Option '{0}' cannot be specified without specifying option '{1}'."),
                    Option_0_cannot_be_specified_with_option_1: i(5053, 1, "Option_0_cannot_be_specified_with_option_1_5053", "Option '{0}' cannot be specified with option '{1}'."),
                    A_tsconfig_json_file_is_already_defined_at_Colon_0: i(5054, 1, "A_tsconfig_json_file_is_already_defined_at_Colon_0_5054", "A 'tsconfig.json' file is already defined at: '{0}'."),
                    Cannot_write_file_0_because_it_would_overwrite_input_file: i(5055, 1, "Cannot_write_file_0_because_it_would_overwrite_input_file_5055", "Cannot write file '{0}' because it would overwrite input file."),
                    Cannot_write_file_0_because_it_would_be_overwritten_by_multiple_input_files: i(5056, 1, "Cannot_write_file_0_because_it_would_be_overwritten_by_multiple_input_files_5056", "Cannot write file '{0}' because it would be overwritten by multiple input files."),
                    Cannot_find_a_tsconfig_json_file_at_the_specified_directory_Colon_0: i(5057, 1, "Cannot_find_a_tsconfig_json_file_at_the_specified_directory_Colon_0_5057", "Cannot find a tsconfig.json file at the specified directory: '{0}'."),
                    The_specified_path_does_not_exist_Colon_0: i(5058, 1, "The_specified_path_does_not_exist_Colon_0_5058", "The specified path does not exist: '{0}'."),
                    Invalid_value_for_reactNamespace_0_is_not_a_valid_identifier: i(5059, 1, "Invalid_value_for_reactNamespace_0_is_not_a_valid_identifier_5059", "Invalid value for '--reactNamespace'. '{0}' is not a valid identifier."),
                    Pattern_0_can_have_at_most_one_Asterisk_character: i(5061, 1, "Pattern_0_can_have_at_most_one_Asterisk_character_5061", "Pattern '{0}' can have at most one '*' character."),
                    Substitution_0_in_pattern_1_can_have_at_most_one_Asterisk_character: i(5062, 1, "Substitution_0_in_pattern_1_can_have_at_most_one_Asterisk_character_5062", "Substitution '{0}' in pattern '{1}' can have at most one '*' character."),
                    Substitutions_for_pattern_0_should_be_an_array: i(5063, 1, "Substitutions_for_pattern_0_should_be_an_array_5063", "Substitutions for pattern '{0}' should be an array."),
                    Substitution_0_for_pattern_1_has_incorrect_type_expected_string_got_2: i(5064, 1, "Substitution_0_for_pattern_1_has_incorrect_type_expected_string_got_2_5064", "Substitution '{0}' for pattern '{1}' has incorrect type, expected 'string', got '{2}'."),
                    File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0: i(5065, 1, "File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildca_5065", "File specification cannot contain a parent directory ('..') that appears after a recursive directory wildcard ('**'): '{0}'."),
                    Substitutions_for_pattern_0_shouldn_t_be_an_empty_array: i(5066, 1, "Substitutions_for_pattern_0_shouldn_t_be_an_empty_array_5066", "Substitutions for pattern '{0}' shouldn't be an empty array."),
                    Invalid_value_for_jsxFactory_0_is_not_a_valid_identifier_or_qualified_name: i(5067, 1, "Invalid_value_for_jsxFactory_0_is_not_a_valid_identifier_or_qualified_name_5067", "Invalid value for 'jsxFactory'. '{0}' is not a valid identifier or qualified-name."),
                    Adding_a_tsconfig_json_file_will_help_organize_projects_that_contain_both_TypeScript_and_JavaScript_files_Learn_more_at_https_Colon_Slash_Slashaka_ms_Slashtsconfig: i(5068, 1, "Adding_a_tsconfig_json_file_will_help_organize_projects_that_contain_both_TypeScript_and_JavaScript__5068", "Adding a tsconfig.json file will help organize projects that contain both TypeScript and JavaScript files. Learn more at https://aka.ms/tsconfig."),
                    Option_0_cannot_be_specified_without_specifying_option_1_or_option_2: i(5069, 1, "Option_0_cannot_be_specified_without_specifying_option_1_or_option_2_5069", "Option '{0}' cannot be specified without specifying option '{1}' or option '{2}'."),
                    Option_resolveJsonModule_cannot_be_specified_when_moduleResolution_is_set_to_classic: i(5070, 1, "Option_resolveJsonModule_cannot_be_specified_when_moduleResolution_is_set_to_classic_5070", "Option '--resolveJsonModule' cannot be specified when 'moduleResolution' is set to 'classic'."),
                    Option_resolveJsonModule_can_only_be_specified_when_module_code_generation_is_commonjs_amd_es2015_or_esNext: i(5071, 1, "Option_resolveJsonModule_can_only_be_specified_when_module_code_generation_is_commonjs_amd_es2015_or_5071", "Option '--resolveJsonModule' can only be specified when module code generation is 'commonjs', 'amd', 'es2015' or 'esNext'."),
                    Unknown_build_option_0: i(5072, 1, "Unknown_build_option_0_5072", "Unknown build option '{0}'."),
                    Build_option_0_requires_a_value_of_type_1: i(5073, 1, "Build_option_0_requires_a_value_of_type_1_5073", "Build option '{0}' requires a value of type {1}."),
                    Option_incremental_can_only_be_specified_using_tsconfig_emitting_to_single_file_or_when_option_tsBuildInfoFile_is_specified: i(5074, 1, "Option_incremental_can_only_be_specified_using_tsconfig_emitting_to_single_file_or_when_option_tsBui_5074", "Option '--incremental' can only be specified using tsconfig, emitting to single file or when option '--tsBuildInfoFile' is specified."),
                    _0_is_assignable_to_the_constraint_of_type_1_but_1_could_be_instantiated_with_a_different_subtype_of_constraint_2: i(5075, 1, "_0_is_assignable_to_the_constraint_of_type_1_but_1_could_be_instantiated_with_a_different_subtype_of_5075", "'{0}' is assignable to the constraint of type '{1}', but '{1}' could be instantiated with a different subtype of constraint '{2}'."),
                    _0_and_1_operations_cannot_be_mixed_without_parentheses: i(5076, 1, "_0_and_1_operations_cannot_be_mixed_without_parentheses_5076", "'{0}' and '{1}' operations cannot be mixed without parentheses."),
                    Unknown_build_option_0_Did_you_mean_1: i(5077, 1, "Unknown_build_option_0_Did_you_mean_1_5077", "Unknown build option '{0}'. Did you mean '{1}'?"),
                    Unknown_watch_option_0: i(5078, 1, "Unknown_watch_option_0_5078", "Unknown watch option '{0}'."),
                    Unknown_watch_option_0_Did_you_mean_1: i(5079, 1, "Unknown_watch_option_0_Did_you_mean_1_5079", "Unknown watch option '{0}'. Did you mean '{1}'?"),
                    Watch_option_0_requires_a_value_of_type_1: i(5080, 1, "Watch_option_0_requires_a_value_of_type_1_5080", "Watch option '{0}' requires a value of type {1}."),
                    Cannot_find_a_tsconfig_json_file_at_the_current_directory_Colon_0: i(5081, 1, "Cannot_find_a_tsconfig_json_file_at_the_current_directory_Colon_0_5081", "Cannot find a tsconfig.json file at the current directory: {0}."),
                    _0_could_be_instantiated_with_an_arbitrary_type_which_could_be_unrelated_to_1: i(5082, 1, "_0_could_be_instantiated_with_an_arbitrary_type_which_could_be_unrelated_to_1_5082", "'{0}' could be instantiated with an arbitrary type which could be unrelated to '{1}'."),
                    Cannot_read_file_0: i(5083, 1, "Cannot_read_file_0_5083", "Cannot read file '{0}'."),
                    A_tuple_member_cannot_be_both_optional_and_rest: i(5085, 1, "A_tuple_member_cannot_be_both_optional_and_rest_5085", "A tuple member cannot be both optional and rest."),
                    A_labeled_tuple_element_is_declared_as_optional_with_a_question_mark_after_the_name_and_before_the_colon_rather_than_after_the_type: i(5086, 1, "A_labeled_tuple_element_is_declared_as_optional_with_a_question_mark_after_the_name_and_before_the_c_5086", "A labeled tuple element is declared as optional with a question mark after the name and before the colon, rather than after the type."),
                    A_labeled_tuple_element_is_declared_as_rest_with_a_before_the_name_rather_than_before_the_type: i(5087, 1, "A_labeled_tuple_element_is_declared_as_rest_with_a_before_the_name_rather_than_before_the_type_5087", "A labeled tuple element is declared as rest with a '...' before the name, rather than before the type."),
                    The_inferred_type_of_0_references_a_type_with_a_cyclic_structure_which_cannot_be_trivially_serialized_A_type_annotation_is_necessary: i(5088, 1, "The_inferred_type_of_0_references_a_type_with_a_cyclic_structure_which_cannot_be_trivially_serialize_5088", "The inferred type of '{0}' references a type with a cyclic structure which cannot be trivially serialized. A type annotation is necessary."),
                    Option_0_cannot_be_specified_when_option_jsx_is_1: i(5089, 1, "Option_0_cannot_be_specified_when_option_jsx_is_1_5089", "Option '{0}' cannot be specified when option 'jsx' is '{1}'."),
                    Non_relative_paths_are_not_allowed_when_baseUrl_is_not_set_Did_you_forget_a_leading_Slash: i(5090, 1, "Non_relative_paths_are_not_allowed_when_baseUrl_is_not_set_Did_you_forget_a_leading_Slash_5090", "Non-relative paths are not allowed when 'baseUrl' is not set. Did you forget a leading './'?"),
                    Option_preserveConstEnums_cannot_be_disabled_when_0_is_enabled: i(5091, 1, "Option_preserveConstEnums_cannot_be_disabled_when_0_is_enabled_5091", "Option 'preserveConstEnums' cannot be disabled when '{0}' is enabled."),
                    The_root_value_of_a_0_file_must_be_an_object: i(5092, 1, "The_root_value_of_a_0_file_must_be_an_object_5092", "The root value of a '{0}' file must be an object."),
                    Compiler_option_0_may_only_be_used_with_build: i(5093, 1, "Compiler_option_0_may_only_be_used_with_build_5093", "Compiler option '--{0}' may only be used with '--build'."),
                    Compiler_option_0_may_not_be_used_with_build: i(5094, 1, "Compiler_option_0_may_not_be_used_with_build_5094", "Compiler option '--{0}' may not be used with '--build'."),
                    Option_0_can_only_be_used_when_module_is_set_to_es2015_or_later: i(5095, 1, "Option_0_can_only_be_used_when_module_is_set_to_es2015_or_later_5095", "Option '{0}' can only be used when 'module' is set to 'es2015' or later."),
                    Option_allowImportingTsExtensions_can_only_be_used_when_either_noEmit_or_emitDeclarationOnly_is_set: i(5096, 1, "Option_allowImportingTsExtensions_can_only_be_used_when_either_noEmit_or_emitDeclarationOnly_is_set_5096", "Option 'allowImportingTsExtensions' can only be used when either 'noEmit' or 'emitDeclarationOnly' is set."),
                    An_import_path_can_only_end_with_a_0_extension_when_allowImportingTsExtensions_is_enabled: i(5097, 1, "An_import_path_can_only_end_with_a_0_extension_when_allowImportingTsExtensions_is_enabled_5097", "An import path can only end with a '{0}' extension when 'allowImportingTsExtensions' is enabled."),
                    Option_0_can_only_be_used_when_moduleResolution_is_set_to_node16_nodenext_or_bundler: i(5098, 1, "Option_0_can_only_be_used_when_moduleResolution_is_set_to_node16_nodenext_or_bundler_5098", "Option '{0}' can only be used when 'moduleResolution' is set to 'node16', 'nodenext', or 'bundler'."),
                    Option_0_is_deprecated_and_will_stop_functioning_in_TypeScript_1_Specify_compilerOption_ignoreDeprecations_Colon_2_to_silence_this_error: i(5101, 1, "Option_0_is_deprecated_and_will_stop_functioning_in_TypeScript_1_Specify_compilerOption_ignoreDeprec_5101", `Option '{0}' is deprecated and will stop functioning in TypeScript {1}. Specify compilerOption '"ignoreDeprecations": "{2}"' to silence this error.`),
                    Option_0_has_been_removed_Please_remove_it_from_your_configuration: i(5102, 1, "Option_0_has_been_removed_Please_remove_it_from_your_configuration_5102", "Option '{0}' has been removed. Please remove it from your configuration."),
                    Invalid_value_for_ignoreDeprecations: i(5103, 1, "Invalid_value_for_ignoreDeprecations_5103", "Invalid value for '--ignoreDeprecations'."),
                    Option_0_is_redundant_and_cannot_be_specified_with_option_1: i(5104, 1, "Option_0_is_redundant_and_cannot_be_specified_with_option_1_5104", "Option '{0}' is redundant and cannot be specified with option '{1}'."),
                    Option_verbatimModuleSyntax_cannot_be_used_when_module_is_set_to_UMD_AMD_or_System: i(5105, 1, "Option_verbatimModuleSyntax_cannot_be_used_when_module_is_set_to_UMD_AMD_or_System_5105", "Option 'verbatimModuleSyntax' cannot be used when 'module' is set to 'UMD', 'AMD', or 'System'."),
                    Use_0_instead: i(5106, 3, "Use_0_instead_5106", "Use '{0}' instead."),
                    Option_0_1_is_deprecated_and_will_stop_functioning_in_TypeScript_2_Specify_compilerOption_ignoreDeprecations_Colon_3_to_silence_this_error: i(5107, 1, "Option_0_1_is_deprecated_and_will_stop_functioning_in_TypeScript_2_Specify_compilerOption_ignoreDepr_5107", `Option '{0}={1}' is deprecated and will stop functioning in TypeScript {2}. Specify compilerOption '"ignoreDeprecations": "{3}"' to silence this error.`),
                    Option_0_1_has_been_removed_Please_remove_it_from_your_configuration: i(5108, 1, "Option_0_1_has_been_removed_Please_remove_it_from_your_configuration_5108", "Option '{0}={1}' has been removed. Please remove it from your configuration."),
                    Option_moduleResolution_must_be_set_to_0_or_left_unspecified_when_option_module_is_set_to_1: i(5109, 1, "Option_moduleResolution_must_be_set_to_0_or_left_unspecified_when_option_module_is_set_to_1_5109", "Option 'moduleResolution' must be set to '{0}' (or left unspecified) when option 'module' is set to '{1}'."),
                    Option_module_must_be_set_to_0_when_option_moduleResolution_is_set_to_1: i(5110, 1, "Option_module_must_be_set_to_0_when_option_moduleResolution_is_set_to_1_5110", "Option 'module' must be set to '{0}' when option 'moduleResolution' is set to '{1}'."),
                    Generates_a_sourcemap_for_each_corresponding_d_ts_file: i(6e3, 3, "Generates_a_sourcemap_for_each_corresponding_d_ts_file_6000", "Generates a sourcemap for each corresponding '.d.ts' file."),
                    Concatenate_and_emit_output_to_single_file: i(6001, 3, "Concatenate_and_emit_output_to_single_file_6001", "Concatenate and emit output to single file."),
                    Generates_corresponding_d_ts_file: i(6002, 3, "Generates_corresponding_d_ts_file_6002", "Generates corresponding '.d.ts' file."),
                    Specify_the_location_where_debugger_should_locate_TypeScript_files_instead_of_source_locations: i(6004, 3, "Specify_the_location_where_debugger_should_locate_TypeScript_files_instead_of_source_locations_6004", "Specify the location where debugger should locate TypeScript files instead of source locations."),
                    Watch_input_files: i(6005, 3, "Watch_input_files_6005", "Watch input files."),
                    Redirect_output_structure_to_the_directory: i(6006, 3, "Redirect_output_structure_to_the_directory_6006", "Redirect output structure to the directory."),
                    Do_not_erase_const_enum_declarations_in_generated_code: i(6007, 3, "Do_not_erase_const_enum_declarations_in_generated_code_6007", "Do not erase const enum declarations in generated code."),
                    Do_not_emit_outputs_if_any_errors_were_reported: i(6008, 3, "Do_not_emit_outputs_if_any_errors_were_reported_6008", "Do not emit outputs if any errors were reported."),
                    Do_not_emit_comments_to_output: i(6009, 3, "Do_not_emit_comments_to_output_6009", "Do not emit comments to output."),
                    Do_not_emit_outputs: i(6010, 3, "Do_not_emit_outputs_6010", "Do not emit outputs."),
                    Allow_default_imports_from_modules_with_no_default_export_This_does_not_affect_code_emit_just_typechecking: i(6011, 3, "Allow_default_imports_from_modules_with_no_default_export_This_does_not_affect_code_emit_just_typech_6011", "Allow default imports from modules with no default export. This does not affect code emit, just typechecking."),
                    Skip_type_checking_of_declaration_files: i(6012, 3, "Skip_type_checking_of_declaration_files_6012", "Skip type checking of declaration files."),
                    Do_not_resolve_the_real_path_of_symlinks: i(6013, 3, "Do_not_resolve_the_real_path_of_symlinks_6013", "Do not resolve the real path of symlinks."),
                    Only_emit_d_ts_declaration_files: i(6014, 3, "Only_emit_d_ts_declaration_files_6014", "Only emit '.d.ts' declaration files."),
                    Specify_ECMAScript_target_version: i(6015, 3, "Specify_ECMAScript_target_version_6015", "Specify ECMAScript target version."),
                    Specify_module_code_generation: i(6016, 3, "Specify_module_code_generation_6016", "Specify module code generation."),
                    Print_this_message: i(6017, 3, "Print_this_message_6017", "Print this message."),
                    Print_the_compiler_s_version: i(6019, 3, "Print_the_compiler_s_version_6019", "Print the compiler's version."),
                    Compile_the_project_given_the_path_to_its_configuration_file_or_to_a_folder_with_a_tsconfig_json: i(6020, 3, "Compile_the_project_given_the_path_to_its_configuration_file_or_to_a_folder_with_a_tsconfig_json_6020", "Compile the project given the path to its configuration file, or to a folder with a 'tsconfig.json'."),
                    Syntax_Colon_0: i(6023, 3, "Syntax_Colon_0_6023", "Syntax: {0}"),
                    options: i(6024, 3, "options_6024", "options"),
                    file: i(6025, 3, "file_6025", "file"),
                    Examples_Colon_0: i(6026, 3, "Examples_Colon_0_6026", "Examples: {0}"),
                    Options_Colon: i(6027, 3, "Options_Colon_6027", "Options:"),
                    Version_0: i(6029, 3, "Version_0_6029", "Version {0}"),
                    Insert_command_line_options_and_files_from_a_file: i(6030, 3, "Insert_command_line_options_and_files_from_a_file_6030", "Insert command line options and files from a file."),
                    Starting_compilation_in_watch_mode: i(6031, 3, "Starting_compilation_in_watch_mode_6031", "Starting compilation in watch mode..."),
                    File_change_detected_Starting_incremental_compilation: i(6032, 3, "File_change_detected_Starting_incremental_compilation_6032", "File change detected. Starting incremental compilation..."),
                    KIND: i(6034, 3, "KIND_6034", "KIND"),
                    FILE: i(6035, 3, "FILE_6035", "FILE"),
                    VERSION: i(6036, 3, "VERSION_6036", "VERSION"),
                    LOCATION: i(6037, 3, "LOCATION_6037", "LOCATION"),
                    DIRECTORY: i(6038, 3, "DIRECTORY_6038", "DIRECTORY"),
                    STRATEGY: i(6039, 3, "STRATEGY_6039", "STRATEGY"),
                    FILE_OR_DIRECTORY: i(6040, 3, "FILE_OR_DIRECTORY_6040", "FILE OR DIRECTORY"),
                    Errors_Files: i(6041, 3, "Errors_Files_6041", "Errors  Files"),
                    Generates_corresponding_map_file: i(6043, 3, "Generates_corresponding_map_file_6043", "Generates corresponding '.map' file."),
                    Compiler_option_0_expects_an_argument: i(6044, 1, "Compiler_option_0_expects_an_argument_6044", "Compiler option '{0}' expects an argument."),
                    Unterminated_quoted_string_in_response_file_0: i(6045, 1, "Unterminated_quoted_string_in_response_file_0_6045", "Unterminated quoted string in response file '{0}'."),
                    Argument_for_0_option_must_be_Colon_1: i(6046, 1, "Argument_for_0_option_must_be_Colon_1_6046", "Argument for '{0}' option must be: {1}."),
                    Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1: i(6048, 1, "Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1_6048", "Locale must be of the form <language> or <language>-<territory>. For example '{0}' or '{1}'."),
                    Unable_to_open_file_0: i(6050, 1, "Unable_to_open_file_0_6050", "Unable to open file '{0}'."),
                    Corrupted_locale_file_0: i(6051, 1, "Corrupted_locale_file_0_6051", "Corrupted locale file {0}."),
                    Raise_error_on_expressions_and_declarations_with_an_implied_any_type: i(6052, 3, "Raise_error_on_expressions_and_declarations_with_an_implied_any_type_6052", "Raise error on expressions and declarations with an implied 'any' type."),
                    File_0_not_found: i(6053, 1, "File_0_not_found_6053", "File '{0}' not found."),
                    File_0_has_an_unsupported_extension_The_only_supported_extensions_are_1: i(6054, 1, "File_0_has_an_unsupported_extension_The_only_supported_extensions_are_1_6054", "File '{0}' has an unsupported extension. The only supported extensions are {1}."),
                    Suppress_noImplicitAny_errors_for_indexing_objects_lacking_index_signatures: i(6055, 3, "Suppress_noImplicitAny_errors_for_indexing_objects_lacking_index_signatures_6055", "Suppress noImplicitAny errors for indexing objects lacking index signatures."),
                    Do_not_emit_declarations_for_code_that_has_an_internal_annotation: i(6056, 3, "Do_not_emit_declarations_for_code_that_has_an_internal_annotation_6056", "Do not emit declarations for code that has an '@internal' annotation."),
                    Specify_the_root_directory_of_input_files_Use_to_control_the_output_directory_structure_with_outDir: i(6058, 3, "Specify_the_root_directory_of_input_files_Use_to_control_the_output_directory_structure_with_outDir_6058", "Specify the root directory of input files. Use to control the output directory structure with --outDir."),
                    File_0_is_not_under_rootDir_1_rootDir_is_expected_to_contain_all_source_files: i(6059, 1, "File_0_is_not_under_rootDir_1_rootDir_is_expected_to_contain_all_source_files_6059", "File '{0}' is not under 'rootDir' '{1}'. 'rootDir' is expected to contain all source files."),
                    Specify_the_end_of_line_sequence_to_be_used_when_emitting_files_Colon_CRLF_dos_or_LF_unix: i(6060, 3, "Specify_the_end_of_line_sequence_to_be_used_when_emitting_files_Colon_CRLF_dos_or_LF_unix_6060", "Specify the end of line sequence to be used when emitting files: 'CRLF' (dos) or 'LF' (unix)."),
                    NEWLINE: i(6061, 3, "NEWLINE_6061", "NEWLINE"),
                    Option_0_can_only_be_specified_in_tsconfig_json_file_or_set_to_null_on_command_line: i(6064, 1, "Option_0_can_only_be_specified_in_tsconfig_json_file_or_set_to_null_on_command_line_6064", "Option '{0}' can only be specified in 'tsconfig.json' file or set to 'null' on command line."),
                    Enables_experimental_support_for_ES7_decorators: i(6065, 3, "Enables_experimental_support_for_ES7_decorators_6065", "Enables experimental support for ES7 decorators."),
                    Enables_experimental_support_for_emitting_type_metadata_for_decorators: i(6066, 3, "Enables_experimental_support_for_emitting_type_metadata_for_decorators_6066", "Enables experimental support for emitting type metadata for decorators."),
                    Initializes_a_TypeScript_project_and_creates_a_tsconfig_json_file: i(6070, 3, "Initializes_a_TypeScript_project_and_creates_a_tsconfig_json_file_6070", "Initializes a TypeScript project and creates a tsconfig.json file."),
                    Successfully_created_a_tsconfig_json_file: i(6071, 3, "Successfully_created_a_tsconfig_json_file_6071", "Successfully created a tsconfig.json file."),
                    Suppress_excess_property_checks_for_object_literals: i(6072, 3, "Suppress_excess_property_checks_for_object_literals_6072", "Suppress excess property checks for object literals."),
                    Stylize_errors_and_messages_using_color_and_context_experimental: i(6073, 3, "Stylize_errors_and_messages_using_color_and_context_experimental_6073", "Stylize errors and messages using color and context (experimental)."),
                    Do_not_report_errors_on_unused_labels: i(6074, 3, "Do_not_report_errors_on_unused_labels_6074", "Do not report errors on unused labels."),
                    Report_error_when_not_all_code_paths_in_function_return_a_value: i(6075, 3, "Report_error_when_not_all_code_paths_in_function_return_a_value_6075", "Report error when not all code paths in function return a value."),
                    Report_errors_for_fallthrough_cases_in_switch_statement: i(6076, 3, "Report_errors_for_fallthrough_cases_in_switch_statement_6076", "Report errors for fallthrough cases in switch statement."),
                    Do_not_report_errors_on_unreachable_code: i(6077, 3, "Do_not_report_errors_on_unreachable_code_6077", "Do not report errors on unreachable code."),
                    Disallow_inconsistently_cased_references_to_the_same_file: i(6078, 3, "Disallow_inconsistently_cased_references_to_the_same_file_6078", "Disallow inconsistently-cased references to the same file."),
                    Specify_library_files_to_be_included_in_the_compilation: i(6079, 3, "Specify_library_files_to_be_included_in_the_compilation_6079", "Specify library files to be included in the compilation."),
                    Specify_JSX_code_generation: i(6080, 3, "Specify_JSX_code_generation_6080", "Specify JSX code generation."),
                    File_0_has_an_unsupported_extension_so_skipping_it: i(6081, 3, "File_0_has_an_unsupported_extension_so_skipping_it_6081", "File '{0}' has an unsupported extension, so skipping it."),
                    Only_amd_and_system_modules_are_supported_alongside_0: i(6082, 1, "Only_amd_and_system_modules_are_supported_alongside_0_6082", "Only 'amd' and 'system' modules are supported alongside --{0}."),
                    Base_directory_to_resolve_non_absolute_module_names: i(6083, 3, "Base_directory_to_resolve_non_absolute_module_names_6083", "Base directory to resolve non-absolute module names."),
                    Deprecated_Use_jsxFactory_instead_Specify_the_object_invoked_for_createElement_when_targeting_react_JSX_emit: i(6084, 3, "Deprecated_Use_jsxFactory_instead_Specify_the_object_invoked_for_createElement_when_targeting_react__6084", "[Deprecated] Use '--jsxFactory' instead. Specify the object invoked for createElement when targeting 'react' JSX emit"),
                    Enable_tracing_of_the_name_resolution_process: i(6085, 3, "Enable_tracing_of_the_name_resolution_process_6085", "Enable tracing of the name resolution process."),
                    Resolving_module_0_from_1: i(6086, 3, "Resolving_module_0_from_1_6086", "======== Resolving module '{0}' from '{1}'. ========"),
                    Explicitly_specified_module_resolution_kind_Colon_0: i(6087, 3, "Explicitly_specified_module_resolution_kind_Colon_0_6087", "Explicitly specified module resolution kind: '{0}'."),
                    Module_resolution_kind_is_not_specified_using_0: i(6088, 3, "Module_resolution_kind_is_not_specified_using_0_6088", "Module resolution kind is not specified, using '{0}'."),
                    Module_name_0_was_successfully_resolved_to_1: i(6089, 3, "Module_name_0_was_successfully_resolved_to_1_6089", "======== Module name '{0}' was successfully resolved to '{1}'. ========"),
                    Module_name_0_was_not_resolved: i(6090, 3, "Module_name_0_was_not_resolved_6090", "======== Module name '{0}' was not resolved. ========"),
                    paths_option_is_specified_looking_for_a_pattern_to_match_module_name_0: i(6091, 3, "paths_option_is_specified_looking_for_a_pattern_to_match_module_name_0_6091", "'paths' option is specified, looking for a pattern to match module name '{0}'."),
                    Module_name_0_matched_pattern_1: i(6092, 3, "Module_name_0_matched_pattern_1_6092", "Module name '{0}', matched pattern '{1}'."),
                    Trying_substitution_0_candidate_module_location_Colon_1: i(6093, 3, "Trying_substitution_0_candidate_module_location_Colon_1_6093", "Trying substitution '{0}', candidate module location: '{1}'."),
                    Resolving_module_name_0_relative_to_base_url_1_2: i(6094, 3, "Resolving_module_name_0_relative_to_base_url_1_2_6094", "Resolving module name '{0}' relative to base url '{1}' - '{2}'."),
                    Loading_module_as_file_Slash_folder_candidate_module_location_0_target_file_types_Colon_1: i(6095, 3, "Loading_module_as_file_Slash_folder_candidate_module_location_0_target_file_types_Colon_1_6095", "Loading module as file / folder, candidate module location '{0}', target file types: {1}."),
                    File_0_does_not_exist: i(6096, 3, "File_0_does_not_exist_6096", "File '{0}' does not exist."),
                    File_0_exists_use_it_as_a_name_resolution_result: i(6097, 3, "File_0_exists_use_it_as_a_name_resolution_result_6097", "File '{0}' exists - use it as a name resolution result."),
                    Loading_module_0_from_node_modules_folder_target_file_types_Colon_1: i(6098, 3, "Loading_module_0_from_node_modules_folder_target_file_types_Colon_1_6098", "Loading module '{0}' from 'node_modules' folder, target file types: {1}."),
                    Found_package_json_at_0: i(6099, 3, "Found_package_json_at_0_6099", "Found 'package.json' at '{0}'."),
                    package_json_does_not_have_a_0_field: i(6100, 3, "package_json_does_not_have_a_0_field_6100", "'package.json' does not have a '{0}' field."),
                    package_json_has_0_field_1_that_references_2: i(6101, 3, "package_json_has_0_field_1_that_references_2_6101", "'package.json' has '{0}' field '{1}' that references '{2}'."),
                    Allow_javascript_files_to_be_compiled: i(6102, 3, "Allow_javascript_files_to_be_compiled_6102", "Allow javascript files to be compiled."),
                    Checking_if_0_is_the_longest_matching_prefix_for_1_2: i(6104, 3, "Checking_if_0_is_the_longest_matching_prefix_for_1_2_6104", "Checking if '{0}' is the longest matching prefix for '{1}' - '{2}'."),
                    Expected_type_of_0_field_in_package_json_to_be_1_got_2: i(6105, 3, "Expected_type_of_0_field_in_package_json_to_be_1_got_2_6105", "Expected type of '{0}' field in 'package.json' to be '{1}', got '{2}'."),
                    baseUrl_option_is_set_to_0_using_this_value_to_resolve_non_relative_module_name_1: i(6106, 3, "baseUrl_option_is_set_to_0_using_this_value_to_resolve_non_relative_module_name_1_6106", "'baseUrl' option is set to '{0}', using this value to resolve non-relative module name '{1}'."),
                    rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0: i(6107, 3, "rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0_6107", "'rootDirs' option is set, using it to resolve relative module name '{0}'."),
                    Longest_matching_prefix_for_0_is_1: i(6108, 3, "Longest_matching_prefix_for_0_is_1_6108", "Longest matching prefix for '{0}' is '{1}'."),
                    Loading_0_from_the_root_dir_1_candidate_location_2: i(6109, 3, "Loading_0_from_the_root_dir_1_candidate_location_2_6109", "Loading '{0}' from the root dir '{1}', candidate location '{2}'."),
                    Trying_other_entries_in_rootDirs: i(6110, 3, "Trying_other_entries_in_rootDirs_6110", "Trying other entries in 'rootDirs'."),
                    Module_resolution_using_rootDirs_has_failed: i(6111, 3, "Module_resolution_using_rootDirs_has_failed_6111", "Module resolution using 'rootDirs' has failed."),
                    Do_not_emit_use_strict_directives_in_module_output: i(6112, 3, "Do_not_emit_use_strict_directives_in_module_output_6112", "Do not emit 'use strict' directives in module output."),
                    Enable_strict_null_checks: i(6113, 3, "Enable_strict_null_checks_6113", "Enable strict null checks."),
                    Unknown_option_excludes_Did_you_mean_exclude: i(6114, 1, "Unknown_option_excludes_Did_you_mean_exclude_6114", "Unknown option 'excludes'. Did you mean 'exclude'?"),
                    Raise_error_on_this_expressions_with_an_implied_any_type: i(6115, 3, "Raise_error_on_this_expressions_with_an_implied_any_type_6115", "Raise error on 'this' expressions with an implied 'any' type."),
                    Resolving_type_reference_directive_0_containing_file_1_root_directory_2: i(6116, 3, "Resolving_type_reference_directive_0_containing_file_1_root_directory_2_6116", "======== Resolving type reference directive '{0}', containing file '{1}', root directory '{2}'. ========"),
                    Type_reference_directive_0_was_successfully_resolved_to_1_primary_Colon_2: i(6119, 3, "Type_reference_directive_0_was_successfully_resolved_to_1_primary_Colon_2_6119", "======== Type reference directive '{0}' was successfully resolved to '{1}', primary: {2}. ========"),
                    Type_reference_directive_0_was_not_resolved: i(6120, 3, "Type_reference_directive_0_was_not_resolved_6120", "======== Type reference directive '{0}' was not resolved. ========"),
                    Resolving_with_primary_search_path_0: i(6121, 3, "Resolving_with_primary_search_path_0_6121", "Resolving with primary search path '{0}'."),
                    Root_directory_cannot_be_determined_skipping_primary_search_paths: i(6122, 3, "Root_directory_cannot_be_determined_skipping_primary_search_paths_6122", "Root directory cannot be determined, skipping primary search paths."),
                    Resolving_type_reference_directive_0_containing_file_1_root_directory_not_set: i(6123, 3, "Resolving_type_reference_directive_0_containing_file_1_root_directory_not_set_6123", "======== Resolving type reference directive '{0}', containing file '{1}', root directory not set. ========"),
                    Type_declaration_files_to_be_included_in_compilation: i(6124, 3, "Type_declaration_files_to_be_included_in_compilation_6124", "Type declaration files to be included in compilation."),
                    Looking_up_in_node_modules_folder_initial_location_0: i(6125, 3, "Looking_up_in_node_modules_folder_initial_location_0_6125", "Looking up in 'node_modules' folder, initial location '{0}'."),
                    Containing_file_is_not_specified_and_root_directory_cannot_be_determined_skipping_lookup_in_node_modules_folder: i(6126, 3, "Containing_file_is_not_specified_and_root_directory_cannot_be_determined_skipping_lookup_in_node_mod_6126", "Containing file is not specified and root directory cannot be determined, skipping lookup in 'node_modules' folder."),
                    Resolving_type_reference_directive_0_containing_file_not_set_root_directory_1: i(6127, 3, "Resolving_type_reference_directive_0_containing_file_not_set_root_directory_1_6127", "======== Resolving type reference directive '{0}', containing file not set, root directory '{1}'. ========"),
                    Resolving_type_reference_directive_0_containing_file_not_set_root_directory_not_set: i(6128, 3, "Resolving_type_reference_directive_0_containing_file_not_set_root_directory_not_set_6128", "======== Resolving type reference directive '{0}', containing file not set, root directory not set. ========"),
                    Resolving_real_path_for_0_result_1: i(6130, 3, "Resolving_real_path_for_0_result_1_6130", "Resolving real path for '{0}', result '{1}'."),
                    Cannot_compile_modules_using_option_0_unless_the_module_flag_is_amd_or_system: i(6131, 1, "Cannot_compile_modules_using_option_0_unless_the_module_flag_is_amd_or_system_6131", "Cannot compile modules using option '{0}' unless the '--module' flag is 'amd' or 'system'."),
                    File_name_0_has_a_1_extension_stripping_it: i(6132, 3, "File_name_0_has_a_1_extension_stripping_it_6132", "File name '{0}' has a '{1}' extension - stripping it."),
                    _0_is_declared_but_its_value_is_never_read: i(6133, 1, "_0_is_declared_but_its_value_is_never_read_6133", "'{0}' is declared but its value is never read.", !0),
                    Report_errors_on_unused_locals: i(6134, 3, "Report_errors_on_unused_locals_6134", "Report errors on unused locals."),
                    Report_errors_on_unused_parameters: i(6135, 3, "Report_errors_on_unused_parameters_6135", "Report errors on unused parameters."),
                    The_maximum_dependency_depth_to_search_under_node_modules_and_load_JavaScript_files: i(6136, 3, "The_maximum_dependency_depth_to_search_under_node_modules_and_load_JavaScript_files_6136", "The maximum dependency depth to search under node_modules and load JavaScript files."),
                    Cannot_import_type_declaration_files_Consider_importing_0_instead_of_1: i(6137, 1, "Cannot_import_type_declaration_files_Consider_importing_0_instead_of_1_6137", "Cannot import type declaration files. Consider importing '{0}' instead of '{1}'."),
                    Property_0_is_declared_but_its_value_is_never_read: i(6138, 1, "Property_0_is_declared_but_its_value_is_never_read_6138", "Property '{0}' is declared but its value is never read.", !0),
                    Import_emit_helpers_from_tslib: i(6139, 3, "Import_emit_helpers_from_tslib_6139", "Import emit helpers from 'tslib'."),
                    Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using_cache_location_2: i(6140, 1, "Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using__6140", "Auto discovery for typings is enabled in project '{0}'. Running extra resolution pass for module '{1}' using cache location '{2}'."),
                    Parse_in_strict_mode_and_emit_use_strict_for_each_source_file: i(6141, 3, "Parse_in_strict_mode_and_emit_use_strict_for_each_source_file_6141", 'Parse in strict mode and emit "use strict" for each source file.'),
                    Module_0_was_resolved_to_1_but_jsx_is_not_set: i(6142, 1, "Module_0_was_resolved_to_1_but_jsx_is_not_set_6142", "Module '{0}' was resolved to '{1}', but '--jsx' is not set."),
                    Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1: i(6144, 3, "Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1_6144", "Module '{0}' was resolved as locally declared ambient module in file '{1}'."),
                    Module_0_was_resolved_as_ambient_module_declared_in_1_since_this_file_was_not_modified: i(6145, 3, "Module_0_was_resolved_as_ambient_module_declared_in_1_since_this_file_was_not_modified_6145", "Module '{0}' was resolved as ambient module declared in '{1}' since this file was not modified."),
                    Specify_the_JSX_factory_function_to_use_when_targeting_react_JSX_emit_e_g_React_createElement_or_h: i(6146, 3, "Specify_the_JSX_factory_function_to_use_when_targeting_react_JSX_emit_e_g_React_createElement_or_h_6146", "Specify the JSX factory function to use when targeting 'react' JSX emit, e.g. 'React.createElement' or 'h'."),
                    Resolution_for_module_0_was_found_in_cache_from_location_1: i(6147, 3, "Resolution_for_module_0_was_found_in_cache_from_location_1_6147", "Resolution for module '{0}' was found in cache from location '{1}'."),
                    Directory_0_does_not_exist_skipping_all_lookups_in_it: i(6148, 3, "Directory_0_does_not_exist_skipping_all_lookups_in_it_6148", "Directory '{0}' does not exist, skipping all lookups in it."),
                    Show_diagnostic_information: i(6149, 3, "Show_diagnostic_information_6149", "Show diagnostic information."),
                    Show_verbose_diagnostic_information: i(6150, 3, "Show_verbose_diagnostic_information_6150", "Show verbose diagnostic information."),
                    Emit_a_single_file_with_source_maps_instead_of_having_a_separate_file: i(6151, 3, "Emit_a_single_file_with_source_maps_instead_of_having_a_separate_file_6151", "Emit a single file with source maps instead of having a separate file."),
                    Emit_the_source_alongside_the_sourcemaps_within_a_single_file_requires_inlineSourceMap_or_sourceMap_to_be_set: i(6152, 3, "Emit_the_source_alongside_the_sourcemaps_within_a_single_file_requires_inlineSourceMap_or_sourceMap__6152", "Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set."),
                    Transpile_each_file_as_a_separate_module_similar_to_ts_transpileModule: i(6153, 3, "Transpile_each_file_as_a_separate_module_similar_to_ts_transpileModule_6153", "Transpile each file as a separate module (similar to 'ts.transpileModule')."),
                    Print_names_of_generated_files_part_of_the_compilation: i(6154, 3, "Print_names_of_generated_files_part_of_the_compilation_6154", "Print names of generated files part of the compilation."),
                    Print_names_of_files_part_of_the_compilation: i(6155, 3, "Print_names_of_files_part_of_the_compilation_6155", "Print names of files part of the compilation."),
                    The_locale_used_when_displaying_messages_to_the_user_e_g_en_us: i(6156, 3, "The_locale_used_when_displaying_messages_to_the_user_e_g_en_us_6156", "The locale used when displaying messages to the user (e.g. 'en-us')"),
                    Do_not_generate_custom_helper_functions_like_extends_in_compiled_output: i(6157, 3, "Do_not_generate_custom_helper_functions_like_extends_in_compiled_output_6157", "Do not generate custom helper functions like '__extends' in compiled output."),
                    Do_not_include_the_default_library_file_lib_d_ts: i(6158, 3, "Do_not_include_the_default_library_file_lib_d_ts_6158", "Do not include the default library file (lib.d.ts)."),
                    Do_not_add_triple_slash_references_or_imported_modules_to_the_list_of_compiled_files: i(6159, 3, "Do_not_add_triple_slash_references_or_imported_modules_to_the_list_of_compiled_files_6159", "Do not add triple-slash references or imported modules to the list of compiled files."),
                    Deprecated_Use_skipLibCheck_instead_Skip_type_checking_of_default_library_declaration_files: i(6160, 3, "Deprecated_Use_skipLibCheck_instead_Skip_type_checking_of_default_library_declaration_files_6160", "[Deprecated] Use '--skipLibCheck' instead. Skip type checking of default library declaration files."),
                    List_of_folders_to_include_type_definitions_from: i(6161, 3, "List_of_folders_to_include_type_definitions_from_6161", "List of folders to include type definitions from."),
                    Disable_size_limitations_on_JavaScript_projects: i(6162, 3, "Disable_size_limitations_on_JavaScript_projects_6162", "Disable size limitations on JavaScript projects."),
                    The_character_set_of_the_input_files: i(6163, 3, "The_character_set_of_the_input_files_6163", "The character set of the input files."),
                    Skipping_module_0_that_looks_like_an_absolute_URI_target_file_types_Colon_1: i(6164, 3, "Skipping_module_0_that_looks_like_an_absolute_URI_target_file_types_Colon_1_6164", "Skipping module '{0}' that looks like an absolute URI, target file types: {1}."),
                    Do_not_truncate_error_messages: i(6165, 3, "Do_not_truncate_error_messages_6165", "Do not truncate error messages."),
                    Output_directory_for_generated_declaration_files: i(6166, 3, "Output_directory_for_generated_declaration_files_6166", "Output directory for generated declaration files."),
                    A_series_of_entries_which_re_map_imports_to_lookup_locations_relative_to_the_baseUrl: i(6167, 3, "A_series_of_entries_which_re_map_imports_to_lookup_locations_relative_to_the_baseUrl_6167", "A series of entries which re-map imports to lookup locations relative to the 'baseUrl'."),
                    List_of_root_folders_whose_combined_content_represents_the_structure_of_the_project_at_runtime: i(6168, 3, "List_of_root_folders_whose_combined_content_represents_the_structure_of_the_project_at_runtime_6168", "List of root folders whose combined content represents the structure of the project at runtime."),
                    Show_all_compiler_options: i(6169, 3, "Show_all_compiler_options_6169", "Show all compiler options."),
                    Deprecated_Use_outFile_instead_Concatenate_and_emit_output_to_single_file: i(6170, 3, "Deprecated_Use_outFile_instead_Concatenate_and_emit_output_to_single_file_6170", "[Deprecated] Use '--outFile' instead. Concatenate and emit output to single file"),
                    Command_line_Options: i(6171, 3, "Command_line_Options_6171", "Command-line Options"),
                    Provide_full_support_for_iterables_in_for_of_spread_and_destructuring_when_targeting_ES5_or_ES3: i(6179, 3, "Provide_full_support_for_iterables_in_for_of_spread_and_destructuring_when_targeting_ES5_or_ES3_6179", "Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'."),
                    Enable_all_strict_type_checking_options: i(6180, 3, "Enable_all_strict_type_checking_options_6180", "Enable all strict type-checking options."),
                    Scoped_package_detected_looking_in_0: i(6182, 3, "Scoped_package_detected_looking_in_0_6182", "Scoped package detected, looking in '{0}'"),
                    Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2: i(6183, 3, "Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_6183", "Reusing resolution of module '{0}' from '{1}' of old program, it was successfully resolved to '{2}'."),
                    Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3: i(6184, 3, "Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package__6184", "Reusing resolution of module '{0}' from '{1}' of old program, it was successfully resolved to '{2}' with Package ID '{3}'."),
                    Enable_strict_checking_of_function_types: i(6186, 3, "Enable_strict_checking_of_function_types_6186", "Enable strict checking of function types."),
                    Enable_strict_checking_of_property_initialization_in_classes: i(6187, 3, "Enable_strict_checking_of_property_initialization_in_classes_6187", "Enable strict checking of property initialization in classes."),
                    Numeric_separators_are_not_allowed_here: i(6188, 1, "Numeric_separators_are_not_allowed_here_6188", "Numeric separators are not allowed here."),
                    Multiple_consecutive_numeric_separators_are_not_permitted: i(6189, 1, "Multiple_consecutive_numeric_separators_are_not_permitted_6189", "Multiple consecutive numeric separators are not permitted."),
                    Whether_to_keep_outdated_console_output_in_watch_mode_instead_of_clearing_the_screen: i(6191, 3, "Whether_to_keep_outdated_console_output_in_watch_mode_instead_of_clearing_the_screen_6191", "Whether to keep outdated console output in watch mode instead of clearing the screen."),
                    All_imports_in_import_declaration_are_unused: i(6192, 1, "All_imports_in_import_declaration_are_unused_6192", "All imports in import declaration are unused.", !0),
                    Found_1_error_Watching_for_file_changes: i(6193, 3, "Found_1_error_Watching_for_file_changes_6193", "Found 1 error. Watching for file changes."),
                    Found_0_errors_Watching_for_file_changes: i(6194, 3, "Found_0_errors_Watching_for_file_changes_6194", "Found {0} errors. Watching for file changes."),
                    Resolve_keyof_to_string_valued_property_names_only_no_numbers_or_symbols: i(6195, 3, "Resolve_keyof_to_string_valued_property_names_only_no_numbers_or_symbols_6195", "Resolve 'keyof' to string valued property names only (no numbers or symbols)."),
                    _0_is_declared_but_never_used: i(6196, 1, "_0_is_declared_but_never_used_6196", "'{0}' is declared but never used.", !0),
                    Include_modules_imported_with_json_extension: i(6197, 3, "Include_modules_imported_with_json_extension_6197", "Include modules imported with '.json' extension"),
                    All_destructured_elements_are_unused: i(6198, 1, "All_destructured_elements_are_unused_6198", "All destructured elements are unused.", !0),
                    All_variables_are_unused: i(6199, 1, "All_variables_are_unused_6199", "All variables are unused.", !0),
                    Definitions_of_the_following_identifiers_conflict_with_those_in_another_file_Colon_0: i(6200, 1, "Definitions_of_the_following_identifiers_conflict_with_those_in_another_file_Colon_0_6200", "Definitions of the following identifiers conflict with those in another file: {0}"),
                    Conflicts_are_in_this_file: i(6201, 3, "Conflicts_are_in_this_file_6201", "Conflicts are in this file."),
                    Project_references_may_not_form_a_circular_graph_Cycle_detected_Colon_0: i(6202, 1, "Project_references_may_not_form_a_circular_graph_Cycle_detected_Colon_0_6202", "Project references may not form a circular graph. Cycle detected: {0}"),
                    _0_was_also_declared_here: i(6203, 3, "_0_was_also_declared_here_6203", "'{0}' was also declared here."),
                    and_here: i(6204, 3, "and_here_6204", "and here."),
                    All_type_parameters_are_unused: i(6205, 1, "All_type_parameters_are_unused_6205", "All type parameters are unused."),
                    package_json_has_a_typesVersions_field_with_version_specific_path_mappings: i(6206, 3, "package_json_has_a_typesVersions_field_with_version_specific_path_mappings_6206", "'package.json' has a 'typesVersions' field with version-specific path mappings."),
                    package_json_does_not_have_a_typesVersions_entry_that_matches_version_0: i(6207, 3, "package_json_does_not_have_a_typesVersions_entry_that_matches_version_0_6207", "'package.json' does not have a 'typesVersions' entry that matches version '{0}'."),
                    package_json_has_a_typesVersions_entry_0_that_matches_compiler_version_1_looking_for_a_pattern_to_match_module_name_2: i(6208, 3, "package_json_has_a_typesVersions_entry_0_that_matches_compiler_version_1_looking_for_a_pattern_to_ma_6208", "'package.json' has a 'typesVersions' entry '{0}' that matches compiler version '{1}', looking for a pattern to match module name '{2}'."),
                    package_json_has_a_typesVersions_entry_0_that_is_not_a_valid_semver_range: i(6209, 3, "package_json_has_a_typesVersions_entry_0_that_is_not_a_valid_semver_range_6209", "'package.json' has a 'typesVersions' entry '{0}' that is not a valid semver range."),
                    An_argument_for_0_was_not_provided: i(6210, 3, "An_argument_for_0_was_not_provided_6210", "An argument for '{0}' was not provided."),
                    An_argument_matching_this_binding_pattern_was_not_provided: i(6211, 3, "An_argument_matching_this_binding_pattern_was_not_provided_6211", "An argument matching this binding pattern was not provided."),
                    Did_you_mean_to_call_this_expression: i(6212, 3, "Did_you_mean_to_call_this_expression_6212", "Did you mean to call this expression?"),
                    Did_you_mean_to_use_new_with_this_expression: i(6213, 3, "Did_you_mean_to_use_new_with_this_expression_6213", "Did you mean to use 'new' with this expression?"),
                    Enable_strict_bind_call_and_apply_methods_on_functions: i(6214, 3, "Enable_strict_bind_call_and_apply_methods_on_functions_6214", "Enable strict 'bind', 'call', and 'apply' methods on functions."),
                    Using_compiler_options_of_project_reference_redirect_0: i(6215, 3, "Using_compiler_options_of_project_reference_redirect_0_6215", "Using compiler options of project reference redirect '{0}'."),
                    Found_1_error: i(6216, 3, "Found_1_error_6216", "Found 1 error."),
                    Found_0_errors: i(6217, 3, "Found_0_errors_6217", "Found {0} errors."),
                    Module_name_0_was_successfully_resolved_to_1_with_Package_ID_2: i(6218, 3, "Module_name_0_was_successfully_resolved_to_1_with_Package_ID_2_6218", "======== Module name '{0}' was successfully resolved to '{1}' with Package ID '{2}'. ========"),
                    Type_reference_directive_0_was_successfully_resolved_to_1_with_Package_ID_2_primary_Colon_3: i(6219, 3, "Type_reference_directive_0_was_successfully_resolved_to_1_with_Package_ID_2_primary_Colon_3_6219", "======== Type reference directive '{0}' was successfully resolved to '{1}' with Package ID '{2}', primary: {3}. ========"),
                    package_json_had_a_falsy_0_field: i(6220, 3, "package_json_had_a_falsy_0_field_6220", "'package.json' had a falsy '{0}' field."),
                    Disable_use_of_source_files_instead_of_declaration_files_from_referenced_projects: i(6221, 3, "Disable_use_of_source_files_instead_of_declaration_files_from_referenced_projects_6221", "Disable use of source files instead of declaration files from referenced projects."),
                    Emit_class_fields_with_Define_instead_of_Set: i(6222, 3, "Emit_class_fields_with_Define_instead_of_Set_6222", "Emit class fields with Define instead of Set."),
                    Generates_a_CPU_profile: i(6223, 3, "Generates_a_CPU_profile_6223", "Generates a CPU profile."),
                    Disable_solution_searching_for_this_project: i(6224, 3, "Disable_solution_searching_for_this_project_6224", "Disable solution searching for this project."),
                    Specify_strategy_for_watching_file_Colon_FixedPollingInterval_default_PriorityPollingInterval_DynamicPriorityPolling_FixedChunkSizePolling_UseFsEvents_UseFsEventsOnParentDirectory: i(6225, 3, "Specify_strategy_for_watching_file_Colon_FixedPollingInterval_default_PriorityPollingInterval_Dynami_6225", "Specify strategy for watching file: 'FixedPollingInterval' (default), 'PriorityPollingInterval', 'DynamicPriorityPolling', 'FixedChunkSizePolling', 'UseFsEvents', 'UseFsEventsOnParentDirectory'."),
                    Specify_strategy_for_watching_directory_on_platforms_that_don_t_support_recursive_watching_natively_Colon_UseFsEvents_default_FixedPollingInterval_DynamicPriorityPolling_FixedChunkSizePolling: i(6226, 3, "Specify_strategy_for_watching_directory_on_platforms_that_don_t_support_recursive_watching_natively__6226", "Specify strategy for watching directory on platforms that don't support recursive watching natively: 'UseFsEvents' (default), 'FixedPollingInterval', 'DynamicPriorityPolling', 'FixedChunkSizePolling'."),
                    Specify_strategy_for_creating_a_polling_watch_when_it_fails_to_create_using_file_system_events_Colon_FixedInterval_default_PriorityInterval_DynamicPriority_FixedChunkSize: i(6227, 3, "Specify_strategy_for_creating_a_polling_watch_when_it_fails_to_create_using_file_system_events_Colon_6227", "Specify strategy for creating a polling watch when it fails to create using file system events: 'FixedInterval' (default), 'PriorityInterval', 'DynamicPriority', 'FixedChunkSize'."),
                    Tag_0_expects_at_least_1_arguments_but_the_JSX_factory_2_provides_at_most_3: i(6229, 1, "Tag_0_expects_at_least_1_arguments_but_the_JSX_factory_2_provides_at_most_3_6229", "Tag '{0}' expects at least '{1}' arguments, but the JSX factory '{2}' provides at most '{3}'."),
                    Option_0_can_only_be_specified_in_tsconfig_json_file_or_set_to_false_or_null_on_command_line: i(6230, 1, "Option_0_can_only_be_specified_in_tsconfig_json_file_or_set_to_false_or_null_on_command_line_6230", "Option '{0}' can only be specified in 'tsconfig.json' file or set to 'false' or 'null' on command line."),
                    Could_not_resolve_the_path_0_with_the_extensions_Colon_1: i(6231, 1, "Could_not_resolve_the_path_0_with_the_extensions_Colon_1_6231", "Could not resolve the path '{0}' with the extensions: {1}."),
                    Declaration_augments_declaration_in_another_file_This_cannot_be_serialized: i(6232, 1, "Declaration_augments_declaration_in_another_file_This_cannot_be_serialized_6232", "Declaration augments declaration in another file. This cannot be serialized."),
                    This_is_the_declaration_being_augmented_Consider_moving_the_augmenting_declaration_into_the_same_file: i(6233, 1, "This_is_the_declaration_being_augmented_Consider_moving_the_augmenting_declaration_into_the_same_fil_6233", "This is the declaration being augmented. Consider moving the augmenting declaration into the same file."),
                    This_expression_is_not_callable_because_it_is_a_get_accessor_Did_you_mean_to_use_it_without: i(6234, 1, "This_expression_is_not_callable_because_it_is_a_get_accessor_Did_you_mean_to_use_it_without_6234", "This expression is not callable because it is a 'get' accessor. Did you mean to use it without '()'?"),
                    Disable_loading_referenced_projects: i(6235, 3, "Disable_loading_referenced_projects_6235", "Disable loading referenced projects."),
                    Arguments_for_the_rest_parameter_0_were_not_provided: i(6236, 1, "Arguments_for_the_rest_parameter_0_were_not_provided_6236", "Arguments for the rest parameter '{0}' were not provided."),
                    Generates_an_event_trace_and_a_list_of_types: i(6237, 3, "Generates_an_event_trace_and_a_list_of_types_6237", "Generates an event trace and a list of types."),
                    Specify_the_module_specifier_to_be_used_to_import_the_jsx_and_jsxs_factory_functions_from_eg_react: i(6238, 1, "Specify_the_module_specifier_to_be_used_to_import_the_jsx_and_jsxs_factory_functions_from_eg_react_6238", "Specify the module specifier to be used to import the 'jsx' and 'jsxs' factory functions from. eg, react"),
                    File_0_exists_according_to_earlier_cached_lookups: i(6239, 3, "File_0_exists_according_to_earlier_cached_lookups_6239", "File '{0}' exists according to earlier cached lookups."),
                    File_0_does_not_exist_according_to_earlier_cached_lookups: i(6240, 3, "File_0_does_not_exist_according_to_earlier_cached_lookups_6240", "File '{0}' does not exist according to earlier cached lookups."),
                    Resolution_for_type_reference_directive_0_was_found_in_cache_from_location_1: i(6241, 3, "Resolution_for_type_reference_directive_0_was_found_in_cache_from_location_1_6241", "Resolution for type reference directive '{0}' was found in cache from location '{1}'."),
                    Resolving_type_reference_directive_0_containing_file_1: i(6242, 3, "Resolving_type_reference_directive_0_containing_file_1_6242", "======== Resolving type reference directive '{0}', containing file '{1}'. ========"),
                    Interpret_optional_property_types_as_written_rather_than_adding_undefined: i(6243, 3, "Interpret_optional_property_types_as_written_rather_than_adding_undefined_6243", "Interpret optional property types as written, rather than adding 'undefined'."),
                    Modules: i(6244, 3, "Modules_6244", "Modules"),
                    File_Management: i(6245, 3, "File_Management_6245", "File Management"),
                    Emit: i(6246, 3, "Emit_6246", "Emit"),
                    JavaScript_Support: i(6247, 3, "JavaScript_Support_6247", "JavaScript Support"),
                    Type_Checking: i(6248, 3, "Type_Checking_6248", "Type Checking"),
                    Editor_Support: i(6249, 3, "Editor_Support_6249", "Editor Support"),
                    Watch_and_Build_Modes: i(6250, 3, "Watch_and_Build_Modes_6250", "Watch and Build Modes"),
                    Compiler_Diagnostics: i(6251, 3, "Compiler_Diagnostics_6251", "Compiler Diagnostics"),
                    Interop_Constraints: i(6252, 3, "Interop_Constraints_6252", "Interop Constraints"),
                    Backwards_Compatibility: i(6253, 3, "Backwards_Compatibility_6253", "Backwards Compatibility"),
                    Language_and_Environment: i(6254, 3, "Language_and_Environment_6254", "Language and Environment"),
                    Projects: i(6255, 3, "Projects_6255", "Projects"),
                    Output_Formatting: i(6256, 3, "Output_Formatting_6256", "Output Formatting"),
                    Completeness: i(6257, 3, "Completeness_6257", "Completeness"),
                    _0_should_be_set_inside_the_compilerOptions_object_of_the_config_json_file: i(6258, 1, "_0_should_be_set_inside_the_compilerOptions_object_of_the_config_json_file_6258", "'{0}' should be set inside the 'compilerOptions' object of the config json file"),
                    Found_1_error_in_0: i(6259, 3, "Found_1_error_in_0_6259", "Found 1 error in {0}"),
                    Found_0_errors_in_the_same_file_starting_at_Colon_1: i(6260, 3, "Found_0_errors_in_the_same_file_starting_at_Colon_1_6260", "Found {0} errors in the same file, starting at: {1}"),
                    Found_0_errors_in_1_files: i(6261, 3, "Found_0_errors_in_1_files_6261", "Found {0} errors in {1} files."),
                    File_name_0_has_a_1_extension_looking_up_2_instead: i(6262, 3, "File_name_0_has_a_1_extension_looking_up_2_instead_6262", "File name '{0}' has a '{1}' extension - looking up '{2}' instead."),
                    Module_0_was_resolved_to_1_but_allowArbitraryExtensions_is_not_set: i(6263, 1, "Module_0_was_resolved_to_1_but_allowArbitraryExtensions_is_not_set_6263", "Module '{0}' was resolved to '{1}', but '--allowArbitraryExtensions' is not set."),
                    Enable_importing_files_with_any_extension_provided_a_declaration_file_is_present: i(6264, 3, "Enable_importing_files_with_any_extension_provided_a_declaration_file_is_present_6264", "Enable importing files with any extension, provided a declaration file is present."),
                    Resolving_type_reference_directive_for_program_that_specifies_custom_typeRoots_skipping_lookup_in_node_modules_folder: i(6265, 3, "Resolving_type_reference_directive_for_program_that_specifies_custom_typeRoots_skipping_lookup_in_no_6265", "Resolving type reference directive for program that specifies custom typeRoots, skipping lookup in 'node_modules' folder."),
                    Option_0_can_only_be_specified_on_command_line: i(6266, 1, "Option_0_can_only_be_specified_on_command_line_6266", "Option '{0}' can only be specified on command line."),
                    Directory_0_has_no_containing_package_json_scope_Imports_will_not_resolve: i(6270, 3, "Directory_0_has_no_containing_package_json_scope_Imports_will_not_resolve_6270", "Directory '{0}' has no containing package.json scope. Imports will not resolve."),
                    Import_specifier_0_does_not_exist_in_package_json_scope_at_path_1: i(6271, 3, "Import_specifier_0_does_not_exist_in_package_json_scope_at_path_1_6271", "Import specifier '{0}' does not exist in package.json scope at path '{1}'."),
                    Invalid_import_specifier_0_has_no_possible_resolutions: i(6272, 3, "Invalid_import_specifier_0_has_no_possible_resolutions_6272", "Invalid import specifier '{0}' has no possible resolutions."),
                    package_json_scope_0_has_no_imports_defined: i(6273, 3, "package_json_scope_0_has_no_imports_defined_6273", "package.json scope '{0}' has no imports defined."),
                    package_json_scope_0_explicitly_maps_specifier_1_to_null: i(6274, 3, "package_json_scope_0_explicitly_maps_specifier_1_to_null_6274", "package.json scope '{0}' explicitly maps specifier '{1}' to null."),
                    package_json_scope_0_has_invalid_type_for_target_of_specifier_1: i(6275, 3, "package_json_scope_0_has_invalid_type_for_target_of_specifier_1_6275", "package.json scope '{0}' has invalid type for target of specifier '{1}'"),
                    Export_specifier_0_does_not_exist_in_package_json_scope_at_path_1: i(6276, 3, "Export_specifier_0_does_not_exist_in_package_json_scope_at_path_1_6276", "Export specifier '{0}' does not exist in package.json scope at path '{1}'."),
                    Resolution_of_non_relative_name_failed_trying_with_modern_Node_resolution_features_disabled_to_see_if_npm_library_needs_configuration_update: i(6277, 3, "Resolution_of_non_relative_name_failed_trying_with_modern_Node_resolution_features_disabled_to_see_i_6277", "Resolution of non-relative name failed; trying with modern Node resolution features disabled to see if npm library needs configuration update."),
                    There_are_types_at_0_but_this_result_could_not_be_resolved_when_respecting_package_json_exports_The_1_library_may_need_to_update_its_package_json_or_typings: i(6278, 3, "There_are_types_at_0_but_this_result_could_not_be_resolved_when_respecting_package_json_exports_The__6278", `There are types at '{0}', but this result could not be resolved when respecting package.json "exports". The '{1}' library may need to update its package.json or typings.`),
                    Enable_project_compilation: i(6302, 3, "Enable_project_compilation_6302", "Enable project compilation"),
                    Composite_projects_may_not_disable_declaration_emit: i(6304, 1, "Composite_projects_may_not_disable_declaration_emit_6304", "Composite projects may not disable declaration emit."),
                    Output_file_0_has_not_been_built_from_source_file_1: i(6305, 1, "Output_file_0_has_not_been_built_from_source_file_1_6305", "Output file '{0}' has not been built from source file '{1}'."),
                    Referenced_project_0_must_have_setting_composite_Colon_true: i(6306, 1, "Referenced_project_0_must_have_setting_composite_Colon_true_6306", `Referenced project '{0}' must have setting "composite": true.`),
                    File_0_is_not_listed_within_the_file_list_of_project_1_Projects_must_list_all_files_or_use_an_include_pattern: i(6307, 1, "File_0_is_not_listed_within_the_file_list_of_project_1_Projects_must_list_all_files_or_use_an_includ_6307", "File '{0}' is not listed within the file list of project '{1}'. Projects must list all files or use an 'include' pattern."),
                    Cannot_prepend_project_0_because_it_does_not_have_outFile_set: i(6308, 1, "Cannot_prepend_project_0_because_it_does_not_have_outFile_set_6308", "Cannot prepend project '{0}' because it does not have 'outFile' set"),
                    Output_file_0_from_project_1_does_not_exist: i(6309, 1, "Output_file_0_from_project_1_does_not_exist_6309", "Output file '{0}' from project '{1}' does not exist"),
                    Referenced_project_0_may_not_disable_emit: i(6310, 1, "Referenced_project_0_may_not_disable_emit_6310", "Referenced project '{0}' may not disable emit."),
                    Project_0_is_out_of_date_because_output_1_is_older_than_input_2: i(6350, 3, "Project_0_is_out_of_date_because_output_1_is_older_than_input_2_6350", "Project '{0}' is out of date because output '{1}' is older than input '{2}'"),
                    Project_0_is_up_to_date_because_newest_input_1_is_older_than_output_2: i(6351, 3, "Project_0_is_up_to_date_because_newest_input_1_is_older_than_output_2_6351", "Project '{0}' is up to date because newest input '{1}' is older than output '{2}'"),
                    Project_0_is_out_of_date_because_output_file_1_does_not_exist: i(6352, 3, "Project_0_is_out_of_date_because_output_file_1_does_not_exist_6352", "Project '{0}' is out of date because output file '{1}' does not exist"),
                    Project_0_is_out_of_date_because_its_dependency_1_is_out_of_date: i(6353, 3, "Project_0_is_out_of_date_because_its_dependency_1_is_out_of_date_6353", "Project '{0}' is out of date because its dependency '{1}' is out of date"),
                    Project_0_is_up_to_date_with_d_ts_files_from_its_dependencies: i(6354, 3, "Project_0_is_up_to_date_with_d_ts_files_from_its_dependencies_6354", "Project '{0}' is up to date with .d.ts files from its dependencies"),
                    Projects_in_this_build_Colon_0: i(6355, 3, "Projects_in_this_build_Colon_0_6355", "Projects in this build: {0}"),
                    A_non_dry_build_would_delete_the_following_files_Colon_0: i(6356, 3, "A_non_dry_build_would_delete_the_following_files_Colon_0_6356", "A non-dry build would delete the following files: {0}"),
                    A_non_dry_build_would_build_project_0: i(6357, 3, "A_non_dry_build_would_build_project_0_6357", "A non-dry build would build project '{0}'"),
                    Building_project_0: i(6358, 3, "Building_project_0_6358", "Building project '{0}'..."),
                    Updating_output_timestamps_of_project_0: i(6359, 3, "Updating_output_timestamps_of_project_0_6359", "Updating output timestamps of project '{0}'..."),
                    Project_0_is_up_to_date: i(6361, 3, "Project_0_is_up_to_date_6361", "Project '{0}' is up to date"),
                    Skipping_build_of_project_0_because_its_dependency_1_has_errors: i(6362, 3, "Skipping_build_of_project_0_because_its_dependency_1_has_errors_6362", "Skipping build of project '{0}' because its dependency '{1}' has errors"),
                    Project_0_can_t_be_built_because_its_dependency_1_has_errors: i(6363, 3, "Project_0_can_t_be_built_because_its_dependency_1_has_errors_6363", "Project '{0}' can't be built because its dependency '{1}' has errors"),
                    Build_one_or_more_projects_and_their_dependencies_if_out_of_date: i(6364, 3, "Build_one_or_more_projects_and_their_dependencies_if_out_of_date_6364", "Build one or more projects and their dependencies, if out of date"),
                    Delete_the_outputs_of_all_projects: i(6365, 3, "Delete_the_outputs_of_all_projects_6365", "Delete the outputs of all projects."),
                    Show_what_would_be_built_or_deleted_if_specified_with_clean: i(6367, 3, "Show_what_would_be_built_or_deleted_if_specified_with_clean_6367", "Show what would be built (or deleted, if specified with '--clean')"),
                    Option_build_must_be_the_first_command_line_argument: i(6369, 1, "Option_build_must_be_the_first_command_line_argument_6369", "Option '--build' must be the first command line argument."),
                    Options_0_and_1_cannot_be_combined: i(6370, 1, "Options_0_and_1_cannot_be_combined_6370", "Options '{0}' and '{1}' cannot be combined."),
                    Updating_unchanged_output_timestamps_of_project_0: i(6371, 3, "Updating_unchanged_output_timestamps_of_project_0_6371", "Updating unchanged output timestamps of project '{0}'..."),
                    Project_0_is_out_of_date_because_output_of_its_dependency_1_has_changed: i(6372, 3, "Project_0_is_out_of_date_because_output_of_its_dependency_1_has_changed_6372", "Project '{0}' is out of date because output of its dependency '{1}' has changed"),
                    Updating_output_of_project_0: i(6373, 3, "Updating_output_of_project_0_6373", "Updating output of project '{0}'..."),
                    A_non_dry_build_would_update_timestamps_for_output_of_project_0: i(6374, 3, "A_non_dry_build_would_update_timestamps_for_output_of_project_0_6374", "A non-dry build would update timestamps for output of project '{0}'"),
                    A_non_dry_build_would_update_output_of_project_0: i(6375, 3, "A_non_dry_build_would_update_output_of_project_0_6375", "A non-dry build would update output of project '{0}'"),
                    Cannot_update_output_of_project_0_because_there_was_error_reading_file_1: i(6376, 3, "Cannot_update_output_of_project_0_because_there_was_error_reading_file_1_6376", "Cannot update output of project '{0}' because there was error reading file '{1}'"),
                    Cannot_write_file_0_because_it_will_overwrite_tsbuildinfo_file_generated_by_referenced_project_1: i(6377, 1, "Cannot_write_file_0_because_it_will_overwrite_tsbuildinfo_file_generated_by_referenced_project_1_6377", "Cannot write file '{0}' because it will overwrite '.tsbuildinfo' file generated by referenced project '{1}'"),
                    Composite_projects_may_not_disable_incremental_compilation: i(6379, 1, "Composite_projects_may_not_disable_incremental_compilation_6379", "Composite projects may not disable incremental compilation."),
                    Specify_file_to_store_incremental_compilation_information: i(6380, 3, "Specify_file_to_store_incremental_compilation_information_6380", "Specify file to store incremental compilation information"),
                    Project_0_is_out_of_date_because_output_for_it_was_generated_with_version_1_that_differs_with_current_version_2: i(6381, 3, "Project_0_is_out_of_date_because_output_for_it_was_generated_with_version_1_that_differs_with_curren_6381", "Project '{0}' is out of date because output for it was generated with version '{1}' that differs with current version '{2}'"),
                    Skipping_build_of_project_0_because_its_dependency_1_was_not_built: i(6382, 3, "Skipping_build_of_project_0_because_its_dependency_1_was_not_built_6382", "Skipping build of project '{0}' because its dependency '{1}' was not built"),
                    Project_0_can_t_be_built_because_its_dependency_1_was_not_built: i(6383, 3, "Project_0_can_t_be_built_because_its_dependency_1_was_not_built_6383", "Project '{0}' can't be built because its dependency '{1}' was not built"),
                    Have_recompiles_in_incremental_and_watch_assume_that_changes_within_a_file_will_only_affect_files_directly_depending_on_it: i(6384, 3, "Have_recompiles_in_incremental_and_watch_assume_that_changes_within_a_file_will_only_affect_files_di_6384", "Have recompiles in '--incremental' and '--watch' assume that changes within a file will only affect files directly depending on it."),
                    _0_is_deprecated: i(6385, 2, "_0_is_deprecated_6385", "'{0}' is deprecated.", void 0, void 0, !0),
                    Performance_timings_for_diagnostics_or_extendedDiagnostics_are_not_available_in_this_session_A_native_implementation_of_the_Web_Performance_API_could_not_be_found: i(6386, 3, "Performance_timings_for_diagnostics_or_extendedDiagnostics_are_not_available_in_this_session_A_nativ_6386", "Performance timings for '--diagnostics' or '--extendedDiagnostics' are not available in this session. A native implementation of the Web Performance API could not be found."),
                    The_signature_0_of_1_is_deprecated: i(6387, 2, "The_signature_0_of_1_is_deprecated_6387", "The signature '{0}' of '{1}' is deprecated.", void 0, void 0, !0),
                    Project_0_is_being_forcibly_rebuilt: i(6388, 3, "Project_0_is_being_forcibly_rebuilt_6388", "Project '{0}' is being forcibly rebuilt"),
                    Reusing_resolution_of_module_0_from_1_of_old_program_it_was_not_resolved: i(6389, 3, "Reusing_resolution_of_module_0_from_1_of_old_program_it_was_not_resolved_6389", "Reusing resolution of module '{0}' from '{1}' of old program, it was not resolved."),
                    Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved_to_2: i(6390, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved__6390", "Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was successfully resolved to '{2}'."),
                    Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3: i(6391, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved__6391", "Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was successfully resolved to '{2}' with Package ID '{3}'."),
                    Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_not_resolved: i(6392, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_not_resolved_6392", "Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was not resolved."),
                    Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_3: i(6393, 3, "Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_6393", "Reusing resolution of module '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}'."),
                    Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_3_with_Package_ID_4: i(6394, 3, "Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_6394", "Reusing resolution of module '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}' with Package ID '{4}'."),
                    Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_not_resolved: i(6395, 3, "Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_not_resolved_6395", "Reusing resolution of module '{0}' from '{1}' found in cache from location '{2}', it was not resolved."),
                    Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_3: i(6396, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_succes_6396", "Reusing resolution of type reference directive '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}'."),
                    Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_3_with_Package_ID_4: i(6397, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_succes_6397", "Reusing resolution of type reference directive '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}' with Package ID '{4}'."),
                    Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_not_resolved: i(6398, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_not_re_6398", "Reusing resolution of type reference directive '{0}' from '{1}' found in cache from location '{2}', it was not resolved."),
                    Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_some_of_the_changes_were_not_emitted: i(6399, 3, "Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_some_of_the_changes_were_not_emitte_6399", "Project '{0}' is out of date because buildinfo file '{1}' indicates that some of the changes were not emitted"),
                    Project_0_is_up_to_date_but_needs_to_update_timestamps_of_output_files_that_are_older_than_input_files: i(6400, 3, "Project_0_is_up_to_date_but_needs_to_update_timestamps_of_output_files_that_are_older_than_input_fil_6400", "Project '{0}' is up to date but needs to update timestamps of output files that are older than input files"),
                    Project_0_is_out_of_date_because_there_was_error_reading_file_1: i(6401, 3, "Project_0_is_out_of_date_because_there_was_error_reading_file_1_6401", "Project '{0}' is out of date because there was error reading file '{1}'"),
                    Resolving_in_0_mode_with_conditions_1: i(6402, 3, "Resolving_in_0_mode_with_conditions_1_6402", "Resolving in {0} mode with conditions {1}."),
                    Matched_0_condition_1: i(6403, 3, "Matched_0_condition_1_6403", "Matched '{0}' condition '{1}'."),
                    Using_0_subpath_1_with_target_2: i(6404, 3, "Using_0_subpath_1_with_target_2_6404", "Using '{0}' subpath '{1}' with target '{2}'."),
                    Saw_non_matching_condition_0: i(6405, 3, "Saw_non_matching_condition_0_6405", "Saw non-matching condition '{0}'."),
                    Project_0_is_out_of_date_because_buildinfo_file_1_indicates_there_is_change_in_compilerOptions: i(6406, 3, "Project_0_is_out_of_date_because_buildinfo_file_1_indicates_there_is_change_in_compilerOptions_6406", "Project '{0}' is out of date because buildinfo file '{1}' indicates there is change in compilerOptions"),
                    Allow_imports_to_include_TypeScript_file_extensions_Requires_moduleResolution_bundler_and_either_noEmit_or_emitDeclarationOnly_to_be_set: i(6407, 3, "Allow_imports_to_include_TypeScript_file_extensions_Requires_moduleResolution_bundler_and_either_noE_6407", "Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set."),
                    Use_the_package_json_exports_field_when_resolving_package_imports: i(6408, 3, "Use_the_package_json_exports_field_when_resolving_package_imports_6408", "Use the package.json 'exports' field when resolving package imports."),
                    Use_the_package_json_imports_field_when_resolving_imports: i(6409, 3, "Use_the_package_json_imports_field_when_resolving_imports_6409", "Use the package.json 'imports' field when resolving imports."),
                    Conditions_to_set_in_addition_to_the_resolver_specific_defaults_when_resolving_imports: i(6410, 3, "Conditions_to_set_in_addition_to_the_resolver_specific_defaults_when_resolving_imports_6410", "Conditions to set in addition to the resolver-specific defaults when resolving imports."),
                    true_when_moduleResolution_is_node16_nodenext_or_bundler_otherwise_false: i(6411, 3, "true_when_moduleResolution_is_node16_nodenext_or_bundler_otherwise_false_6411", "`true` when 'moduleResolution' is 'node16', 'nodenext', or 'bundler'; otherwise `false`."),
                    Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_file_2_was_root_file_of_compilation_but_not_any_more: i(6412, 3, "Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_file_2_was_root_file_of_compilation_6412", "Project '{0}' is out of date because buildinfo file '{1}' indicates that file '{2}' was root file of compilation but not any more."),
                    Entering_conditional_exports: i(6413, 3, "Entering_conditional_exports_6413", "Entering conditional exports."),
                    Resolved_under_condition_0: i(6414, 3, "Resolved_under_condition_0_6414", "Resolved under condition '{0}'."),
                    Failed_to_resolve_under_condition_0: i(6415, 3, "Failed_to_resolve_under_condition_0_6415", "Failed to resolve under condition '{0}'."),
                    Exiting_conditional_exports: i(6416, 3, "Exiting_conditional_exports_6416", "Exiting conditional exports."),
                    Searching_all_ancestor_node_modules_directories_for_preferred_extensions_Colon_0: i(6417, 3, "Searching_all_ancestor_node_modules_directories_for_preferred_extensions_Colon_0_6417", "Searching all ancestor node_modules directories for preferred extensions: {0}."),
                    Searching_all_ancestor_node_modules_directories_for_fallback_extensions_Colon_0: i(6418, 3, "Searching_all_ancestor_node_modules_directories_for_fallback_extensions_Colon_0_6418", "Searching all ancestor node_modules directories for fallback extensions: {0}."),
                    The_expected_type_comes_from_property_0_which_is_declared_here_on_type_1: i(6500, 3, "The_expected_type_comes_from_property_0_which_is_declared_here_on_type_1_6500", "The expected type comes from property '{0}' which is declared here on type '{1}'"),
                    The_expected_type_comes_from_this_index_signature: i(6501, 3, "The_expected_type_comes_from_this_index_signature_6501", "The expected type comes from this index signature."),
                    The_expected_type_comes_from_the_return_type_of_this_signature: i(6502, 3, "The_expected_type_comes_from_the_return_type_of_this_signature_6502", "The expected type comes from the return type of this signature."),
                    Print_names_of_files_that_are_part_of_the_compilation_and_then_stop_processing: i(6503, 3, "Print_names_of_files_that_are_part_of_the_compilation_and_then_stop_processing_6503", "Print names of files that are part of the compilation and then stop processing."),
                    File_0_is_a_JavaScript_file_Did_you_mean_to_enable_the_allowJs_option: i(6504, 1, "File_0_is_a_JavaScript_file_Did_you_mean_to_enable_the_allowJs_option_6504", "File '{0}' is a JavaScript file. Did you mean to enable the 'allowJs' option?"),
                    Print_names_of_files_and_the_reason_they_are_part_of_the_compilation: i(6505, 3, "Print_names_of_files_and_the_reason_they_are_part_of_the_compilation_6505", "Print names of files and the reason they are part of the compilation."),
                    Consider_adding_a_declare_modifier_to_this_class: i(6506, 3, "Consider_adding_a_declare_modifier_to_this_class_6506", "Consider adding a 'declare' modifier to this class."),
                    Allow_JavaScript_files_to_be_a_part_of_your_program_Use_the_checkJS_option_to_get_errors_from_these_files: i(6600, 3, "Allow_JavaScript_files_to_be_a_part_of_your_program_Use_the_checkJS_option_to_get_errors_from_these__6600", "Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files."),
                    Allow_import_x_from_y_when_a_module_doesn_t_have_a_default_export: i(6601, 3, "Allow_import_x_from_y_when_a_module_doesn_t_have_a_default_export_6601", "Allow 'import x from y' when a module doesn't have a default export."),
                    Allow_accessing_UMD_globals_from_modules: i(6602, 3, "Allow_accessing_UMD_globals_from_modules_6602", "Allow accessing UMD globals from modules."),
                    Disable_error_reporting_for_unreachable_code: i(6603, 3, "Disable_error_reporting_for_unreachable_code_6603", "Disable error reporting for unreachable code."),
                    Disable_error_reporting_for_unused_labels: i(6604, 3, "Disable_error_reporting_for_unused_labels_6604", "Disable error reporting for unused labels."),
                    Ensure_use_strict_is_always_emitted: i(6605, 3, "Ensure_use_strict_is_always_emitted_6605", "Ensure 'use strict' is always emitted."),
                    Have_recompiles_in_projects_that_use_incremental_and_watch_mode_assume_that_changes_within_a_file_will_only_affect_files_directly_depending_on_it: i(6606, 3, "Have_recompiles_in_projects_that_use_incremental_and_watch_mode_assume_that_changes_within_a_file_wi_6606", "Have recompiles in projects that use 'incremental' and 'watch' mode assume that changes within a file will only affect files directly depending on it."),
                    Specify_the_base_directory_to_resolve_non_relative_module_names: i(6607, 3, "Specify_the_base_directory_to_resolve_non_relative_module_names_6607", "Specify the base directory to resolve non-relative module names."),
                    No_longer_supported_In_early_versions_manually_set_the_text_encoding_for_reading_files: i(6608, 3, "No_longer_supported_In_early_versions_manually_set_the_text_encoding_for_reading_files_6608", "No longer supported. In early versions, manually set the text encoding for reading files."),
                    Enable_error_reporting_in_type_checked_JavaScript_files: i(6609, 3, "Enable_error_reporting_in_type_checked_JavaScript_files_6609", "Enable error reporting in type-checked JavaScript files."),
                    Enable_constraints_that_allow_a_TypeScript_project_to_be_used_with_project_references: i(6611, 3, "Enable_constraints_that_allow_a_TypeScript_project_to_be_used_with_project_references_6611", "Enable constraints that allow a TypeScript project to be used with project references."),
                    Generate_d_ts_files_from_TypeScript_and_JavaScript_files_in_your_project: i(6612, 3, "Generate_d_ts_files_from_TypeScript_and_JavaScript_files_in_your_project_6612", "Generate .d.ts files from TypeScript and JavaScript files in your project."),
                    Specify_the_output_directory_for_generated_declaration_files: i(6613, 3, "Specify_the_output_directory_for_generated_declaration_files_6613", "Specify the output directory for generated declaration files."),
                    Create_sourcemaps_for_d_ts_files: i(6614, 3, "Create_sourcemaps_for_d_ts_files_6614", "Create sourcemaps for d.ts files."),
                    Output_compiler_performance_information_after_building: i(6615, 3, "Output_compiler_performance_information_after_building_6615", "Output compiler performance information after building."),
                    Disables_inference_for_type_acquisition_by_looking_at_filenames_in_a_project: i(6616, 3, "Disables_inference_for_type_acquisition_by_looking_at_filenames_in_a_project_6616", "Disables inference for type acquisition by looking at filenames in a project."),
                    Reduce_the_number_of_projects_loaded_automatically_by_TypeScript: i(6617, 3, "Reduce_the_number_of_projects_loaded_automatically_by_TypeScript_6617", "Reduce the number of projects loaded automatically by TypeScript."),
                    Remove_the_20mb_cap_on_total_source_code_size_for_JavaScript_files_in_the_TypeScript_language_server: i(6618, 3, "Remove_the_20mb_cap_on_total_source_code_size_for_JavaScript_files_in_the_TypeScript_language_server_6618", "Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server."),
                    Opt_a_project_out_of_multi_project_reference_checking_when_editing: i(6619, 3, "Opt_a_project_out_of_multi_project_reference_checking_when_editing_6619", "Opt a project out of multi-project reference checking when editing."),
                    Disable_preferring_source_files_instead_of_declaration_files_when_referencing_composite_projects: i(6620, 3, "Disable_preferring_source_files_instead_of_declaration_files_when_referencing_composite_projects_6620", "Disable preferring source files instead of declaration files when referencing composite projects."),
                    Emit_more_compliant_but_verbose_and_less_performant_JavaScript_for_iteration: i(6621, 3, "Emit_more_compliant_but_verbose_and_less_performant_JavaScript_for_iteration_6621", "Emit more compliant, but verbose and less performant JavaScript for iteration."),
                    Emit_a_UTF_8_Byte_Order_Mark_BOM_in_the_beginning_of_output_files: i(6622, 3, "Emit_a_UTF_8_Byte_Order_Mark_BOM_in_the_beginning_of_output_files_6622", "Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files."),
                    Only_output_d_ts_files_and_not_JavaScript_files: i(6623, 3, "Only_output_d_ts_files_and_not_JavaScript_files_6623", "Only output d.ts files and not JavaScript files."),
                    Emit_design_type_metadata_for_decorated_declarations_in_source_files: i(6624, 3, "Emit_design_type_metadata_for_decorated_declarations_in_source_files_6624", "Emit design-type metadata for decorated declarations in source files."),
                    Disable_the_type_acquisition_for_JavaScript_projects: i(6625, 3, "Disable_the_type_acquisition_for_JavaScript_projects_6625", "Disable the type acquisition for JavaScript projects"),
                    Emit_additional_JavaScript_to_ease_support_for_importing_CommonJS_modules_This_enables_allowSyntheticDefaultImports_for_type_compatibility: i(6626, 3, "Emit_additional_JavaScript_to_ease_support_for_importing_CommonJS_modules_This_enables_allowSyntheti_6626", "Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility."),
                    Filters_results_from_the_include_option: i(6627, 3, "Filters_results_from_the_include_option_6627", "Filters results from the `include` option."),
                    Remove_a_list_of_directories_from_the_watch_process: i(6628, 3, "Remove_a_list_of_directories_from_the_watch_process_6628", "Remove a list of directories from the watch process."),
                    Remove_a_list_of_files_from_the_watch_mode_s_processing: i(6629, 3, "Remove_a_list_of_files_from_the_watch_mode_s_processing_6629", "Remove a list of files from the watch mode's processing."),
                    Enable_experimental_support_for_legacy_experimental_decorators: i(6630, 3, "Enable_experimental_support_for_legacy_experimental_decorators_6630", "Enable experimental support for legacy experimental decorators."),
                    Print_files_read_during_the_compilation_including_why_it_was_included: i(6631, 3, "Print_files_read_during_the_compilation_including_why_it_was_included_6631", "Print files read during the compilation including why it was included."),
                    Output_more_detailed_compiler_performance_information_after_building: i(6632, 3, "Output_more_detailed_compiler_performance_information_after_building_6632", "Output more detailed compiler performance information after building."),
                    Specify_one_or_more_path_or_node_module_references_to_base_configuration_files_from_which_settings_are_inherited: i(6633, 3, "Specify_one_or_more_path_or_node_module_references_to_base_configuration_files_from_which_settings_a_6633", "Specify one or more path or node module references to base configuration files from which settings are inherited."),
                    Specify_what_approach_the_watcher_should_use_if_the_system_runs_out_of_native_file_watchers: i(6634, 3, "Specify_what_approach_the_watcher_should_use_if_the_system_runs_out_of_native_file_watchers_6634", "Specify what approach the watcher should use if the system runs out of native file watchers."),
                    Include_a_list_of_files_This_does_not_support_glob_patterns_as_opposed_to_include: i(6635, 3, "Include_a_list_of_files_This_does_not_support_glob_patterns_as_opposed_to_include_6635", "Include a list of files. This does not support glob patterns, as opposed to `include`."),
                    Build_all_projects_including_those_that_appear_to_be_up_to_date: i(6636, 3, "Build_all_projects_including_those_that_appear_to_be_up_to_date_6636", "Build all projects, including those that appear to be up to date."),
                    Ensure_that_casing_is_correct_in_imports: i(6637, 3, "Ensure_that_casing_is_correct_in_imports_6637", "Ensure that casing is correct in imports."),
                    Emit_a_v8_CPU_profile_of_the_compiler_run_for_debugging: i(6638, 3, "Emit_a_v8_CPU_profile_of_the_compiler_run_for_debugging_6638", "Emit a v8 CPU profile of the compiler run for debugging."),
                    Allow_importing_helper_functions_from_tslib_once_per_project_instead_of_including_them_per_file: i(6639, 3, "Allow_importing_helper_functions_from_tslib_once_per_project_instead_of_including_them_per_file_6639", "Allow importing helper functions from tslib once per project, instead of including them per-file."),
                    Specify_a_list_of_glob_patterns_that_match_files_to_be_included_in_compilation: i(6641, 3, "Specify_a_list_of_glob_patterns_that_match_files_to_be_included_in_compilation_6641", "Specify a list of glob patterns that match files to be included in compilation."),
                    Save_tsbuildinfo_files_to_allow_for_incremental_compilation_of_projects: i(6642, 3, "Save_tsbuildinfo_files_to_allow_for_incremental_compilation_of_projects_6642", "Save .tsbuildinfo files to allow for incremental compilation of projects."),
                    Include_sourcemap_files_inside_the_emitted_JavaScript: i(6643, 3, "Include_sourcemap_files_inside_the_emitted_JavaScript_6643", "Include sourcemap files inside the emitted JavaScript."),
                    Include_source_code_in_the_sourcemaps_inside_the_emitted_JavaScript: i(6644, 3, "Include_source_code_in_the_sourcemaps_inside_the_emitted_JavaScript_6644", "Include source code in the sourcemaps inside the emitted JavaScript."),
                    Ensure_that_each_file_can_be_safely_transpiled_without_relying_on_other_imports: i(6645, 3, "Ensure_that_each_file_can_be_safely_transpiled_without_relying_on_other_imports_6645", "Ensure that each file can be safely transpiled without relying on other imports."),
                    Specify_what_JSX_code_is_generated: i(6646, 3, "Specify_what_JSX_code_is_generated_6646", "Specify what JSX code is generated."),
                    Specify_the_JSX_factory_function_used_when_targeting_React_JSX_emit_e_g_React_createElement_or_h: i(6647, 3, "Specify_the_JSX_factory_function_used_when_targeting_React_JSX_emit_e_g_React_createElement_or_h_6647", "Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'."),
                    Specify_the_JSX_Fragment_reference_used_for_fragments_when_targeting_React_JSX_emit_e_g_React_Fragment_or_Fragment: i(6648, 3, "Specify_the_JSX_Fragment_reference_used_for_fragments_when_targeting_React_JSX_emit_e_g_React_Fragme_6648", "Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'."),
                    Specify_module_specifier_used_to_import_the_JSX_factory_functions_when_using_jsx_Colon_react_jsx_Asterisk: i(6649, 3, "Specify_module_specifier_used_to_import_the_JSX_factory_functions_when_using_jsx_Colon_react_jsx_Ast_6649", "Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'."),
                    Make_keyof_only_return_strings_instead_of_string_numbers_or_symbols_Legacy_option: i(6650, 3, "Make_keyof_only_return_strings_instead_of_string_numbers_or_symbols_Legacy_option_6650", "Make keyof only return strings instead of string, numbers or symbols. Legacy option."),
                    Specify_a_set_of_bundled_library_declaration_files_that_describe_the_target_runtime_environment: i(6651, 3, "Specify_a_set_of_bundled_library_declaration_files_that_describe_the_target_runtime_environment_6651", "Specify a set of bundled library declaration files that describe the target runtime environment."),
                    Print_the_names_of_emitted_files_after_a_compilation: i(6652, 3, "Print_the_names_of_emitted_files_after_a_compilation_6652", "Print the names of emitted files after a compilation."),
                    Print_all_of_the_files_read_during_the_compilation: i(6653, 3, "Print_all_of_the_files_read_during_the_compilation_6653", "Print all of the files read during the compilation."),
                    Set_the_language_of_the_messaging_from_TypeScript_This_does_not_affect_emit: i(6654, 3, "Set_the_language_of_the_messaging_from_TypeScript_This_does_not_affect_emit_6654", "Set the language of the messaging from TypeScript. This does not affect emit."),
                    Specify_the_location_where_debugger_should_locate_map_files_instead_of_generated_locations: i(6655, 3, "Specify_the_location_where_debugger_should_locate_map_files_instead_of_generated_locations_6655", "Specify the location where debugger should locate map files instead of generated locations."),
                    Specify_the_maximum_folder_depth_used_for_checking_JavaScript_files_from_node_modules_Only_applicable_with_allowJs: i(6656, 3, "Specify_the_maximum_folder_depth_used_for_checking_JavaScript_files_from_node_modules_Only_applicabl_6656", "Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'."),
                    Specify_what_module_code_is_generated: i(6657, 3, "Specify_what_module_code_is_generated_6657", "Specify what module code is generated."),
                    Specify_how_TypeScript_looks_up_a_file_from_a_given_module_specifier: i(6658, 3, "Specify_how_TypeScript_looks_up_a_file_from_a_given_module_specifier_6658", "Specify how TypeScript looks up a file from a given module specifier."),
                    Set_the_newline_character_for_emitting_files: i(6659, 3, "Set_the_newline_character_for_emitting_files_6659", "Set the newline character for emitting files."),
                    Disable_emitting_files_from_a_compilation: i(6660, 3, "Disable_emitting_files_from_a_compilation_6660", "Disable emitting files from a compilation."),
                    Disable_generating_custom_helper_functions_like_extends_in_compiled_output: i(6661, 3, "Disable_generating_custom_helper_functions_like_extends_in_compiled_output_6661", "Disable generating custom helper functions like '__extends' in compiled output."),
                    Disable_emitting_files_if_any_type_checking_errors_are_reported: i(6662, 3, "Disable_emitting_files_if_any_type_checking_errors_are_reported_6662", "Disable emitting files if any type checking errors are reported."),
                    Disable_truncating_types_in_error_messages: i(6663, 3, "Disable_truncating_types_in_error_messages_6663", "Disable truncating types in error messages."),
                    Enable_error_reporting_for_fallthrough_cases_in_switch_statements: i(6664, 3, "Enable_error_reporting_for_fallthrough_cases_in_switch_statements_6664", "Enable error reporting for fallthrough cases in switch statements."),
                    Enable_error_reporting_for_expressions_and_declarations_with_an_implied_any_type: i(6665, 3, "Enable_error_reporting_for_expressions_and_declarations_with_an_implied_any_type_6665", "Enable error reporting for expressions and declarations with an implied 'any' type."),
                    Ensure_overriding_members_in_derived_classes_are_marked_with_an_override_modifier: i(6666, 3, "Ensure_overriding_members_in_derived_classes_are_marked_with_an_override_modifier_6666", "Ensure overriding members in derived classes are marked with an override modifier."),
                    Enable_error_reporting_for_codepaths_that_do_not_explicitly_return_in_a_function: i(6667, 3, "Enable_error_reporting_for_codepaths_that_do_not_explicitly_return_in_a_function_6667", "Enable error reporting for codepaths that do not explicitly return in a function."),
                    Enable_error_reporting_when_this_is_given_the_type_any: i(6668, 3, "Enable_error_reporting_when_this_is_given_the_type_any_6668", "Enable error reporting when 'this' is given the type 'any'."),
                    Disable_adding_use_strict_directives_in_emitted_JavaScript_files: i(6669, 3, "Disable_adding_use_strict_directives_in_emitted_JavaScript_files_6669", "Disable adding 'use strict' directives in emitted JavaScript files."),
                    Disable_including_any_library_files_including_the_default_lib_d_ts: i(6670, 3, "Disable_including_any_library_files_including_the_default_lib_d_ts_6670", "Disable including any library files, including the default lib.d.ts."),
                    Enforces_using_indexed_accessors_for_keys_declared_using_an_indexed_type: i(6671, 3, "Enforces_using_indexed_accessors_for_keys_declared_using_an_indexed_type_6671", "Enforces using indexed accessors for keys declared using an indexed type."),
                    Disallow_import_s_require_s_or_reference_s_from_expanding_the_number_of_files_TypeScript_should_add_to_a_project: i(6672, 3, "Disallow_import_s_require_s_or_reference_s_from_expanding_the_number_of_files_TypeScript_should_add__6672", "Disallow 'import's, 'require's or '<reference>'s from expanding the number of files TypeScript should add to a project."),
                    Disable_strict_checking_of_generic_signatures_in_function_types: i(6673, 3, "Disable_strict_checking_of_generic_signatures_in_function_types_6673", "Disable strict checking of generic signatures in function types."),
                    Add_undefined_to_a_type_when_accessed_using_an_index: i(6674, 3, "Add_undefined_to_a_type_when_accessed_using_an_index_6674", "Add 'undefined' to a type when accessed using an index."),
                    Enable_error_reporting_when_local_variables_aren_t_read: i(6675, 3, "Enable_error_reporting_when_local_variables_aren_t_read_6675", "Enable error reporting when local variables aren't read."),
                    Raise_an_error_when_a_function_parameter_isn_t_read: i(6676, 3, "Raise_an_error_when_a_function_parameter_isn_t_read_6676", "Raise an error when a function parameter isn't read."),
                    Deprecated_setting_Use_outFile_instead: i(6677, 3, "Deprecated_setting_Use_outFile_instead_6677", "Deprecated setting. Use 'outFile' instead."),
                    Specify_an_output_folder_for_all_emitted_files: i(6678, 3, "Specify_an_output_folder_for_all_emitted_files_6678", "Specify an output folder for all emitted files."),
                    Specify_a_file_that_bundles_all_outputs_into_one_JavaScript_file_If_declaration_is_true_also_designates_a_file_that_bundles_all_d_ts_output: i(6679, 3, "Specify_a_file_that_bundles_all_outputs_into_one_JavaScript_file_If_declaration_is_true_also_designa_6679", "Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output."),
                    Specify_a_set_of_entries_that_re_map_imports_to_additional_lookup_locations: i(6680, 3, "Specify_a_set_of_entries_that_re_map_imports_to_additional_lookup_locations_6680", "Specify a set of entries that re-map imports to additional lookup locations."),
                    Specify_a_list_of_language_service_plugins_to_include: i(6681, 3, "Specify_a_list_of_language_service_plugins_to_include_6681", "Specify a list of language service plugins to include."),
                    Disable_erasing_const_enum_declarations_in_generated_code: i(6682, 3, "Disable_erasing_const_enum_declarations_in_generated_code_6682", "Disable erasing 'const enum' declarations in generated code."),
                    Disable_resolving_symlinks_to_their_realpath_This_correlates_to_the_same_flag_in_node: i(6683, 3, "Disable_resolving_symlinks_to_their_realpath_This_correlates_to_the_same_flag_in_node_6683", "Disable resolving symlinks to their realpath. This correlates to the same flag in node."),
                    Disable_wiping_the_console_in_watch_mode: i(6684, 3, "Disable_wiping_the_console_in_watch_mode_6684", "Disable wiping the console in watch mode."),
                    Enable_color_and_formatting_in_TypeScript_s_output_to_make_compiler_errors_easier_to_read: i(6685, 3, "Enable_color_and_formatting_in_TypeScript_s_output_to_make_compiler_errors_easier_to_read_6685", "Enable color and formatting in TypeScript's output to make compiler errors easier to read."),
                    Specify_the_object_invoked_for_createElement_This_only_applies_when_targeting_react_JSX_emit: i(6686, 3, "Specify_the_object_invoked_for_createElement_This_only_applies_when_targeting_react_JSX_emit_6686", "Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit."),
                    Specify_an_array_of_objects_that_specify_paths_for_projects_Used_in_project_references: i(6687, 3, "Specify_an_array_of_objects_that_specify_paths_for_projects_Used_in_project_references_6687", "Specify an array of objects that specify paths for projects. Used in project references."),
                    Disable_emitting_comments: i(6688, 3, "Disable_emitting_comments_6688", "Disable emitting comments."),
                    Enable_importing_json_files: i(6689, 3, "Enable_importing_json_files_6689", "Enable importing .json files."),
                    Specify_the_root_folder_within_your_source_files: i(6690, 3, "Specify_the_root_folder_within_your_source_files_6690", "Specify the root folder within your source files."),
                    Allow_multiple_folders_to_be_treated_as_one_when_resolving_modules: i(6691, 3, "Allow_multiple_folders_to_be_treated_as_one_when_resolving_modules_6691", "Allow multiple folders to be treated as one when resolving modules."),
                    Skip_type_checking_d_ts_files_that_are_included_with_TypeScript: i(6692, 3, "Skip_type_checking_d_ts_files_that_are_included_with_TypeScript_6692", "Skip type checking .d.ts files that are included with TypeScript."),
                    Skip_type_checking_all_d_ts_files: i(6693, 3, "Skip_type_checking_all_d_ts_files_6693", "Skip type checking all .d.ts files."),
                    Create_source_map_files_for_emitted_JavaScript_files: i(6694, 3, "Create_source_map_files_for_emitted_JavaScript_files_6694", "Create source map files for emitted JavaScript files."),
                    Specify_the_root_path_for_debuggers_to_find_the_reference_source_code: i(6695, 3, "Specify_the_root_path_for_debuggers_to_find_the_reference_source_code_6695", "Specify the root path for debuggers to find the reference source code."),
                    Check_that_the_arguments_for_bind_call_and_apply_methods_match_the_original_function: i(6697, 3, "Check_that_the_arguments_for_bind_call_and_apply_methods_match_the_original_function_6697", "Check that the arguments for 'bind', 'call', and 'apply' methods match the original function."),
                    When_assigning_functions_check_to_ensure_parameters_and_the_return_values_are_subtype_compatible: i(6698, 3, "When_assigning_functions_check_to_ensure_parameters_and_the_return_values_are_subtype_compatible_6698", "When assigning functions, check to ensure parameters and the return values are subtype-compatible."),
                    When_type_checking_take_into_account_null_and_undefined: i(6699, 3, "When_type_checking_take_into_account_null_and_undefined_6699", "When type checking, take into account 'null' and 'undefined'."),
                    Check_for_class_properties_that_are_declared_but_not_set_in_the_constructor: i(6700, 3, "Check_for_class_properties_that_are_declared_but_not_set_in_the_constructor_6700", "Check for class properties that are declared but not set in the constructor."),
                    Disable_emitting_declarations_that_have_internal_in_their_JSDoc_comments: i(6701, 3, "Disable_emitting_declarations_that_have_internal_in_their_JSDoc_comments_6701", "Disable emitting declarations that have '@internal' in their JSDoc comments."),
                    Disable_reporting_of_excess_property_errors_during_the_creation_of_object_literals: i(6702, 3, "Disable_reporting_of_excess_property_errors_during_the_creation_of_object_literals_6702", "Disable reporting of excess property errors during the creation of object literals."),
                    Suppress_noImplicitAny_errors_when_indexing_objects_that_lack_index_signatures: i(6703, 3, "Suppress_noImplicitAny_errors_when_indexing_objects_that_lack_index_signatures_6703", "Suppress 'noImplicitAny' errors when indexing objects that lack index signatures."),
                    Synchronously_call_callbacks_and_update_the_state_of_directory_watchers_on_platforms_that_don_t_support_recursive_watching_natively: i(6704, 3, "Synchronously_call_callbacks_and_update_the_state_of_directory_watchers_on_platforms_that_don_t_supp_6704", "Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively."),
                    Set_the_JavaScript_language_version_for_emitted_JavaScript_and_include_compatible_library_declarations: i(6705, 3, "Set_the_JavaScript_language_version_for_emitted_JavaScript_and_include_compatible_library_declaratio_6705", "Set the JavaScript language version for emitted JavaScript and include compatible library declarations."),
                    Log_paths_used_during_the_moduleResolution_process: i(6706, 3, "Log_paths_used_during_the_moduleResolution_process_6706", "Log paths used during the 'moduleResolution' process."),
                    Specify_the_path_to_tsbuildinfo_incremental_compilation_file: i(6707, 3, "Specify_the_path_to_tsbuildinfo_incremental_compilation_file_6707", "Specify the path to .tsbuildinfo incremental compilation file."),
                    Specify_options_for_automatic_acquisition_of_declaration_files: i(6709, 3, "Specify_options_for_automatic_acquisition_of_declaration_files_6709", "Specify options for automatic acquisition of declaration files."),
                    Specify_multiple_folders_that_act_like_Slashnode_modules_Slash_types: i(6710, 3, "Specify_multiple_folders_that_act_like_Slashnode_modules_Slash_types_6710", "Specify multiple folders that act like './node_modules/@types'."),
                    Specify_type_package_names_to_be_included_without_being_referenced_in_a_source_file: i(6711, 3, "Specify_type_package_names_to_be_included_without_being_referenced_in_a_source_file_6711", "Specify type package names to be included without being referenced in a source file."),
                    Emit_ECMAScript_standard_compliant_class_fields: i(6712, 3, "Emit_ECMAScript_standard_compliant_class_fields_6712", "Emit ECMAScript-standard-compliant class fields."),
                    Enable_verbose_logging: i(6713, 3, "Enable_verbose_logging_6713", "Enable verbose logging."),
                    Specify_how_directories_are_watched_on_systems_that_lack_recursive_file_watching_functionality: i(6714, 3, "Specify_how_directories_are_watched_on_systems_that_lack_recursive_file_watching_functionality_6714", "Specify how directories are watched on systems that lack recursive file-watching functionality."),
                    Specify_how_the_TypeScript_watch_mode_works: i(6715, 3, "Specify_how_the_TypeScript_watch_mode_works_6715", "Specify how the TypeScript watch mode works."),
                    Require_undeclared_properties_from_index_signatures_to_use_element_accesses: i(6717, 3, "Require_undeclared_properties_from_index_signatures_to_use_element_accesses_6717", "Require undeclared properties from index signatures to use element accesses."),
                    Specify_emit_Slashchecking_behavior_for_imports_that_are_only_used_for_types: i(6718, 3, "Specify_emit_Slashchecking_behavior_for_imports_that_are_only_used_for_types_6718", "Specify emit/checking behavior for imports that are only used for types."),
                    Default_catch_clause_variables_as_unknown_instead_of_any: i(6803, 3, "Default_catch_clause_variables_as_unknown_instead_of_any_6803", "Default catch clause variables as 'unknown' instead of 'any'."),
                    Do_not_transform_or_elide_any_imports_or_exports_not_marked_as_type_only_ensuring_they_are_written_in_the_output_file_s_format_based_on_the_module_setting: i(6804, 3, "Do_not_transform_or_elide_any_imports_or_exports_not_marked_as_type_only_ensuring_they_are_written_i_6804", "Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting."),
                    one_of_Colon: i(6900, 3, "one_of_Colon_6900", "one of:"),
                    one_or_more_Colon: i(6901, 3, "one_or_more_Colon_6901", "one or more:"),
                    type_Colon: i(6902, 3, "type_Colon_6902", "type:"),
                    default_Colon: i(6903, 3, "default_Colon_6903", "default:"),
                    module_system_or_esModuleInterop: i(6904, 3, "module_system_or_esModuleInterop_6904", 'module === "system" or esModuleInterop'),
                    false_unless_strict_is_set: i(6905, 3, "false_unless_strict_is_set_6905", "`false`, unless `strict` is set"),
                    false_unless_composite_is_set: i(6906, 3, "false_unless_composite_is_set_6906", "`false`, unless `composite` is set"),
                    node_modules_bower_components_jspm_packages_plus_the_value_of_outDir_if_one_is_specified: i(6907, 3, "node_modules_bower_components_jspm_packages_plus_the_value_of_outDir_if_one_is_specified_6907", '`["node_modules", "bower_components", "jspm_packages"]`, plus the value of `outDir` if one is specified.'),
                    if_files_is_specified_otherwise_Asterisk_Asterisk_Slash_Asterisk: i(6908, 3, "if_files_is_specified_otherwise_Asterisk_Asterisk_Slash_Asterisk_6908", '`[]` if `files` is specified, otherwise `["**/*"]`'),
                    true_if_composite_false_otherwise: i(6909, 3, "true_if_composite_false_otherwise_6909", "`true` if `composite`, `false` otherwise"),
                    module_AMD_or_UMD_or_System_or_ES6_then_Classic_Otherwise_Node: i(69010, 3, "module_AMD_or_UMD_or_System_or_ES6_then_Classic_Otherwise_Node_69010", "module === `AMD` or `UMD` or `System` or `ES6`, then `Classic`, Otherwise `Node`"),
                    Computed_from_the_list_of_input_files: i(6911, 3, "Computed_from_the_list_of_input_files_6911", "Computed from the list of input files"),
                    Platform_specific: i(6912, 3, "Platform_specific_6912", "Platform specific"),
                    You_can_learn_about_all_of_the_compiler_options_at_0: i(6913, 3, "You_can_learn_about_all_of_the_compiler_options_at_0_6913", "You can learn about all of the compiler options at {0}"),
                    Including_watch_w_will_start_watching_the_current_project_for_the_file_changes_Once_set_you_can_config_watch_mode_with_Colon: i(6914, 3, "Including_watch_w_will_start_watching_the_current_project_for_the_file_changes_Once_set_you_can_conf_6914", "Including --watch, -w will start watching the current project for the file changes. Once set, you can config watch mode with:"),
                    Using_build_b_will_make_tsc_behave_more_like_a_build_orchestrator_than_a_compiler_This_is_used_to_trigger_building_composite_projects_which_you_can_learn_more_about_at_0: i(6915, 3, "Using_build_b_will_make_tsc_behave_more_like_a_build_orchestrator_than_a_compiler_This_is_used_to_tr_6915", "Using --build, -b will make tsc behave more like a build orchestrator than a compiler. This is used to trigger building composite projects which you can learn more about at {0}"),
                    COMMON_COMMANDS: i(6916, 3, "COMMON_COMMANDS_6916", "COMMON COMMANDS"),
                    ALL_COMPILER_OPTIONS: i(6917, 3, "ALL_COMPILER_OPTIONS_6917", "ALL COMPILER OPTIONS"),
                    WATCH_OPTIONS: i(6918, 3, "WATCH_OPTIONS_6918", "WATCH OPTIONS"),
                    BUILD_OPTIONS: i(6919, 3, "BUILD_OPTIONS_6919", "BUILD OPTIONS"),
                    COMMON_COMPILER_OPTIONS: i(6920, 3, "COMMON_COMPILER_OPTIONS_6920", "COMMON COMPILER OPTIONS"),
                    COMMAND_LINE_FLAGS: i(6921, 3, "COMMAND_LINE_FLAGS_6921", "COMMAND LINE FLAGS"),
                    tsc_Colon_The_TypeScript_Compiler: i(6922, 3, "tsc_Colon_The_TypeScript_Compiler_6922", "tsc: The TypeScript Compiler"),
                    Compiles_the_current_project_tsconfig_json_in_the_working_directory: i(6923, 3, "Compiles_the_current_project_tsconfig_json_in_the_working_directory_6923", "Compiles the current project (tsconfig.json in the working directory.)"),
                    Ignoring_tsconfig_json_compiles_the_specified_files_with_default_compiler_options: i(6924, 3, "Ignoring_tsconfig_json_compiles_the_specified_files_with_default_compiler_options_6924", "Ignoring tsconfig.json, compiles the specified files with default compiler options."),
                    Build_a_composite_project_in_the_working_directory: i(6925, 3, "Build_a_composite_project_in_the_working_directory_6925", "Build a composite project in the working directory."),
                    Creates_a_tsconfig_json_with_the_recommended_settings_in_the_working_directory: i(6926, 3, "Creates_a_tsconfig_json_with_the_recommended_settings_in_the_working_directory_6926", "Creates a tsconfig.json with the recommended settings in the working directory."),
                    Compiles_the_TypeScript_project_located_at_the_specified_path: i(6927, 3, "Compiles_the_TypeScript_project_located_at_the_specified_path_6927", "Compiles the TypeScript project located at the specified path."),
                    An_expanded_version_of_this_information_showing_all_possible_compiler_options: i(6928, 3, "An_expanded_version_of_this_information_showing_all_possible_compiler_options_6928", "An expanded version of this information, showing all possible compiler options"),
                    Compiles_the_current_project_with_additional_settings: i(6929, 3, "Compiles_the_current_project_with_additional_settings_6929", "Compiles the current project, with additional settings."),
                    true_for_ES2022_and_above_including_ESNext: i(6930, 3, "true_for_ES2022_and_above_including_ESNext_6930", "`true` for ES2022 and above, including ESNext."),
                    List_of_file_name_suffixes_to_search_when_resolving_a_module: i(6931, 1, "List_of_file_name_suffixes_to_search_when_resolving_a_module_6931", "List of file name suffixes to search when resolving a module."),
                    Variable_0_implicitly_has_an_1_type: i(7005, 1, "Variable_0_implicitly_has_an_1_type_7005", "Variable '{0}' implicitly has an '{1}' type."),
                    Parameter_0_implicitly_has_an_1_type: i(7006, 1, "Parameter_0_implicitly_has_an_1_type_7006", "Parameter '{0}' implicitly has an '{1}' type."),
                    Member_0_implicitly_has_an_1_type: i(7008, 1, "Member_0_implicitly_has_an_1_type_7008", "Member '{0}' implicitly has an '{1}' type."),
                    new_expression_whose_target_lacks_a_construct_signature_implicitly_has_an_any_type: i(7009, 1, "new_expression_whose_target_lacks_a_construct_signature_implicitly_has_an_any_type_7009", "'new' expression, whose target lacks a construct signature, implicitly has an 'any' type."),
                    _0_which_lacks_return_type_annotation_implicitly_has_an_1_return_type: i(7010, 1, "_0_which_lacks_return_type_annotation_implicitly_has_an_1_return_type_7010", "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type."),
                    Function_expression_which_lacks_return_type_annotation_implicitly_has_an_0_return_type: i(7011, 1, "Function_expression_which_lacks_return_type_annotation_implicitly_has_an_0_return_type_7011", "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type."),
                    This_overload_implicitly_returns_the_type_0_because_it_lacks_a_return_type_annotation: i(7012, 1, "This_overload_implicitly_returns_the_type_0_because_it_lacks_a_return_type_annotation_7012", "This overload implicitly returns the type '{0}' because it lacks a return type annotation."),
                    Construct_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type: i(7013, 1, "Construct_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type_7013", "Construct signature, which lacks return-type annotation, implicitly has an 'any' return type."),
                    Function_type_which_lacks_return_type_annotation_implicitly_has_an_0_return_type: i(7014, 1, "Function_type_which_lacks_return_type_annotation_implicitly_has_an_0_return_type_7014", "Function type, which lacks return-type annotation, implicitly has an '{0}' return type."),
                    Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number: i(7015, 1, "Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number_7015", "Element implicitly has an 'any' type because index expression is not of type 'number'."),
                    Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type: i(7016, 1, "Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type_7016", "Could not find a declaration file for module '{0}'. '{1}' implicitly has an 'any' type."),
                    Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature: i(7017, 1, "Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_7017", "Element implicitly has an 'any' type because type '{0}' has no index signature."),
                    Object_literal_s_property_0_implicitly_has_an_1_type: i(7018, 1, "Object_literal_s_property_0_implicitly_has_an_1_type_7018", "Object literal's property '{0}' implicitly has an '{1}' type."),
                    Rest_parameter_0_implicitly_has_an_any_type: i(7019, 1, "Rest_parameter_0_implicitly_has_an_any_type_7019", "Rest parameter '{0}' implicitly has an 'any[]' type."),
                    Call_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type: i(7020, 1, "Call_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type_7020", "Call signature, which lacks return-type annotation, implicitly has an 'any' return type."),
                    _0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or_indirectly_in_its_own_initializer: i(7022, 1, "_0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or__7022", "'{0}' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer."),
                    _0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions: i(7023, 1, "_0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_reference_7023", "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions."),
                    Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions: i(7024, 1, "Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_ref_7024", "Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions."),
                    Generator_implicitly_has_yield_type_0_because_it_does_not_yield_any_values_Consider_supplying_a_return_type_annotation: i(7025, 1, "Generator_implicitly_has_yield_type_0_because_it_does_not_yield_any_values_Consider_supplying_a_retu_7025", "Generator implicitly has yield type '{0}' because it does not yield any values. Consider supplying a return type annotation."),
                    JSX_element_implicitly_has_type_any_because_no_interface_JSX_0_exists: i(7026, 1, "JSX_element_implicitly_has_type_any_because_no_interface_JSX_0_exists_7026", "JSX element implicitly has type 'any' because no interface 'JSX.{0}' exists."),
                    Unreachable_code_detected: i(7027, 1, "Unreachable_code_detected_7027", "Unreachable code detected.", !0),
                    Unused_label: i(7028, 1, "Unused_label_7028", "Unused label.", !0),
                    Fallthrough_case_in_switch: i(7029, 1, "Fallthrough_case_in_switch_7029", "Fallthrough case in switch."),
                    Not_all_code_paths_return_a_value: i(7030, 1, "Not_all_code_paths_return_a_value_7030", "Not all code paths return a value."),
                    Binding_element_0_implicitly_has_an_1_type: i(7031, 1, "Binding_element_0_implicitly_has_an_1_type_7031", "Binding element '{0}' implicitly has an '{1}' type."),
                    Property_0_implicitly_has_type_any_because_its_set_accessor_lacks_a_parameter_type_annotation: i(7032, 1, "Property_0_implicitly_has_type_any_because_its_set_accessor_lacks_a_parameter_type_annotation_7032", "Property '{0}' implicitly has type 'any', because its set accessor lacks a parameter type annotation."),
                    Property_0_implicitly_has_type_any_because_its_get_accessor_lacks_a_return_type_annotation: i(7033, 1, "Property_0_implicitly_has_type_any_because_its_get_accessor_lacks_a_return_type_annotation_7033", "Property '{0}' implicitly has type 'any', because its get accessor lacks a return type annotation."),
                    Variable_0_implicitly_has_type_1_in_some_locations_where_its_type_cannot_be_determined: i(7034, 1, "Variable_0_implicitly_has_type_1_in_some_locations_where_its_type_cannot_be_determined_7034", "Variable '{0}' implicitly has type '{1}' in some locations where its type cannot be determined."),
                    Try_npm_i_save_dev_types_Slash_1_if_it_exists_or_add_a_new_declaration_d_ts_file_containing_declare_module_0: i(7035, 1, "Try_npm_i_save_dev_types_Slash_1_if_it_exists_or_add_a_new_declaration_d_ts_file_containing_declare__7035", "Try `npm i --save-dev @types/{1}` if it exists or add a new declaration (.d.ts) file containing `declare module '{0}';`"),
                    Dynamic_import_s_specifier_must_be_of_type_string_but_here_has_type_0: i(7036, 1, "Dynamic_import_s_specifier_must_be_of_type_string_but_here_has_type_0_7036", "Dynamic import's specifier must be of type 'string', but here has type '{0}'."),
                    Enables_emit_interoperability_between_CommonJS_and_ES_Modules_via_creation_of_namespace_objects_for_all_imports_Implies_allowSyntheticDefaultImports: i(7037, 3, "Enables_emit_interoperability_between_CommonJS_and_ES_Modules_via_creation_of_namespace_objects_for__7037", "Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'."),
                    Type_originates_at_this_import_A_namespace_style_import_cannot_be_called_or_constructed_and_will_cause_a_failure_at_runtime_Consider_using_a_default_import_or_import_require_here_instead: i(7038, 3, "Type_originates_at_this_import_A_namespace_style_import_cannot_be_called_or_constructed_and_will_cau_7038", "Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead."),
                    Mapped_object_type_implicitly_has_an_any_template_type: i(7039, 1, "Mapped_object_type_implicitly_has_an_any_template_type_7039", "Mapped object type implicitly has an 'any' template type."),
                    If_the_0_package_actually_exposes_this_module_consider_sending_a_pull_request_to_amend_https_Colon_Slash_Slashgithub_com_SlashDefinitelyTyped_SlashDefinitelyTyped_Slashtree_Slashmaster_Slashtypes_Slash_1: i(7040, 1, "If_the_0_package_actually_exposes_this_module_consider_sending_a_pull_request_to_amend_https_Colon_S_7040", "If the '{0}' package actually exposes this module, consider sending a pull request to amend 'https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/{1}'"),
                    The_containing_arrow_function_captures_the_global_value_of_this: i(7041, 1, "The_containing_arrow_function_captures_the_global_value_of_this_7041", "The containing arrow function captures the global value of 'this'."),
                    Module_0_was_resolved_to_1_but_resolveJsonModule_is_not_used: i(7042, 1, "Module_0_was_resolved_to_1_but_resolveJsonModule_is_not_used_7042", "Module '{0}' was resolved to '{1}', but '--resolveJsonModule' is not used."),
                    Variable_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage: i(7043, 2, "Variable_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage_7043", "Variable '{0}' implicitly has an '{1}' type, but a better type may be inferred from usage."),
                    Parameter_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage: i(7044, 2, "Parameter_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage_7044", "Parameter '{0}' implicitly has an '{1}' type, but a better type may be inferred from usage."),
                    Member_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage: i(7045, 2, "Member_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage_7045", "Member '{0}' implicitly has an '{1}' type, but a better type may be inferred from usage."),
                    Variable_0_implicitly_has_type_1_in_some_locations_but_a_better_type_may_be_inferred_from_usage: i(7046, 2, "Variable_0_implicitly_has_type_1_in_some_locations_but_a_better_type_may_be_inferred_from_usage_7046", "Variable '{0}' implicitly has type '{1}' in some locations, but a better type may be inferred from usage."),
                    Rest_parameter_0_implicitly_has_an_any_type_but_a_better_type_may_be_inferred_from_usage: i(7047, 2, "Rest_parameter_0_implicitly_has_an_any_type_but_a_better_type_may_be_inferred_from_usage_7047", "Rest parameter '{0}' implicitly has an 'any[]' type, but a better type may be inferred from usage."),
                    Property_0_implicitly_has_type_any_but_a_better_type_for_its_get_accessor_may_be_inferred_from_usage: i(7048, 2, "Property_0_implicitly_has_type_any_but_a_better_type_for_its_get_accessor_may_be_inferred_from_usage_7048", "Property '{0}' implicitly has type 'any', but a better type for its get accessor may be inferred from usage."),
                    Property_0_implicitly_has_type_any_but_a_better_type_for_its_set_accessor_may_be_inferred_from_usage: i(7049, 2, "Property_0_implicitly_has_type_any_but_a_better_type_for_its_set_accessor_may_be_inferred_from_usage_7049", "Property '{0}' implicitly has type 'any', but a better type for its set accessor may be inferred from usage."),
                    _0_implicitly_has_an_1_return_type_but_a_better_type_may_be_inferred_from_usage: i(7050, 2, "_0_implicitly_has_an_1_return_type_but_a_better_type_may_be_inferred_from_usage_7050", "'{0}' implicitly has an '{1}' return type, but a better type may be inferred from usage."),
                    Parameter_has_a_name_but_no_type_Did_you_mean_0_Colon_1: i(7051, 1, "Parameter_has_a_name_but_no_type_Did_you_mean_0_Colon_1_7051", "Parameter has a name but no type. Did you mean '{0}: {1}'?"),
                    Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_Did_you_mean_to_call_1: i(7052, 1, "Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_Did_you_mean_to_call_1_7052", "Element implicitly has an 'any' type because type '{0}' has no index signature. Did you mean to call '{1}'?"),
                    Element_implicitly_has_an_any_type_because_expression_of_type_0_can_t_be_used_to_index_type_1: i(7053, 1, "Element_implicitly_has_an_any_type_because_expression_of_type_0_can_t_be_used_to_index_type_1_7053", "Element implicitly has an 'any' type because expression of type '{0}' can't be used to index type '{1}'."),
                    No_index_signature_with_a_parameter_of_type_0_was_found_on_type_1: i(7054, 1, "No_index_signature_with_a_parameter_of_type_0_was_found_on_type_1_7054", "No index signature with a parameter of type '{0}' was found on type '{1}'."),
                    _0_which_lacks_return_type_annotation_implicitly_has_an_1_yield_type: i(7055, 1, "_0_which_lacks_return_type_annotation_implicitly_has_an_1_yield_type_7055", "'{0}', which lacks return-type annotation, implicitly has an '{1}' yield type."),
                    The_inferred_type_of_this_node_exceeds_the_maximum_length_the_compiler_will_serialize_An_explicit_type_annotation_is_needed: i(7056, 1, "The_inferred_type_of_this_node_exceeds_the_maximum_length_the_compiler_will_serialize_An_explicit_ty_7056", "The inferred type of this node exceeds the maximum length the compiler will serialize. An explicit type annotation is needed."),
                    yield_expression_implicitly_results_in_an_any_type_because_its_containing_generator_lacks_a_return_type_annotation: i(7057, 1, "yield_expression_implicitly_results_in_an_any_type_because_its_containing_generator_lacks_a_return_t_7057", "'yield' expression implicitly results in an 'any' type because its containing generator lacks a return-type annotation."),
                    If_the_0_package_actually_exposes_this_module_try_adding_a_new_declaration_d_ts_file_containing_declare_module_1: i(7058, 1, "If_the_0_package_actually_exposes_this_module_try_adding_a_new_declaration_d_ts_file_containing_decl_7058", "If the '{0}' package actually exposes this module, try adding a new declaration (.d.ts) file containing `declare module '{1}';`"),
                    This_syntax_is_reserved_in_files_with_the_mts_or_cts_extension_Use_an_as_expression_instead: i(7059, 1, "This_syntax_is_reserved_in_files_with_the_mts_or_cts_extension_Use_an_as_expression_instead_7059", "This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead."),
                    This_syntax_is_reserved_in_files_with_the_mts_or_cts_extension_Add_a_trailing_comma_or_explicit_constraint: i(7060, 1, "This_syntax_is_reserved_in_files_with_the_mts_or_cts_extension_Add_a_trailing_comma_or_explicit_cons_7060", "This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint."),
                    A_mapped_type_may_not_declare_properties_or_methods: i(7061, 1, "A_mapped_type_may_not_declare_properties_or_methods_7061", "A mapped type may not declare properties or methods."),
                    You_cannot_rename_this_element: i(8e3, 1, "You_cannot_rename_this_element_8000", "You cannot rename this element."),
                    You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library: i(8001, 1, "You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library_8001", "You cannot rename elements that are defined in the standard TypeScript library."),
                    import_can_only_be_used_in_TypeScript_files: i(8002, 1, "import_can_only_be_used_in_TypeScript_files_8002", "'import ... =' can only be used in TypeScript files."),
                    export_can_only_be_used_in_TypeScript_files: i(8003, 1, "export_can_only_be_used_in_TypeScript_files_8003", "'export =' can only be used in TypeScript files."),
                    Type_parameter_declarations_can_only_be_used_in_TypeScript_files: i(8004, 1, "Type_parameter_declarations_can_only_be_used_in_TypeScript_files_8004", "Type parameter declarations can only be used in TypeScript files."),
                    implements_clauses_can_only_be_used_in_TypeScript_files: i(8005, 1, "implements_clauses_can_only_be_used_in_TypeScript_files_8005", "'implements' clauses can only be used in TypeScript files."),
                    _0_declarations_can_only_be_used_in_TypeScript_files: i(8006, 1, "_0_declarations_can_only_be_used_in_TypeScript_files_8006", "'{0}' declarations can only be used in TypeScript files."),
                    Type_aliases_can_only_be_used_in_TypeScript_files: i(8008, 1, "Type_aliases_can_only_be_used_in_TypeScript_files_8008", "Type aliases can only be used in TypeScript files."),
                    The_0_modifier_can_only_be_used_in_TypeScript_files: i(8009, 1, "The_0_modifier_can_only_be_used_in_TypeScript_files_8009", "The '{0}' modifier can only be used in TypeScript files."),
                    Type_annotations_can_only_be_used_in_TypeScript_files: i(8010, 1, "Type_annotations_can_only_be_used_in_TypeScript_files_8010", "Type annotations can only be used in TypeScript files."),
                    Type_arguments_can_only_be_used_in_TypeScript_files: i(8011, 1, "Type_arguments_can_only_be_used_in_TypeScript_files_8011", "Type arguments can only be used in TypeScript files."),
                    Parameter_modifiers_can_only_be_used_in_TypeScript_files: i(8012, 1, "Parameter_modifiers_can_only_be_used_in_TypeScript_files_8012", "Parameter modifiers can only be used in TypeScript files."),
                    Non_null_assertions_can_only_be_used_in_TypeScript_files: i(8013, 1, "Non_null_assertions_can_only_be_used_in_TypeScript_files_8013", "Non-null assertions can only be used in TypeScript files."),
                    Type_assertion_expressions_can_only_be_used_in_TypeScript_files: i(8016, 1, "Type_assertion_expressions_can_only_be_used_in_TypeScript_files_8016", "Type assertion expressions can only be used in TypeScript files."),
                    Signature_declarations_can_only_be_used_in_TypeScript_files: i(8017, 1, "Signature_declarations_can_only_be_used_in_TypeScript_files_8017", "Signature declarations can only be used in TypeScript files."),
                    Report_errors_in_js_files: i(8019, 3, "Report_errors_in_js_files_8019", "Report errors in .js files."),
                    JSDoc_types_can_only_be_used_inside_documentation_comments: i(8020, 1, "JSDoc_types_can_only_be_used_inside_documentation_comments_8020", "JSDoc types can only be used inside documentation comments."),
                    JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags: i(8021, 1, "JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags_8021", "JSDoc '@typedef' tag should either have a type annotation or be followed by '@property' or '@member' tags."),
                    JSDoc_0_is_not_attached_to_a_class: i(8022, 1, "JSDoc_0_is_not_attached_to_a_class_8022", "JSDoc '@{0}' is not attached to a class."),
                    JSDoc_0_1_does_not_match_the_extends_2_clause: i(8023, 1, "JSDoc_0_1_does_not_match_the_extends_2_clause_8023", "JSDoc '@{0} {1}' does not match the 'extends {2}' clause."),
                    JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name: i(8024, 1, "JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_8024", "JSDoc '@param' tag has name '{0}', but there is no parameter with that name."),
                    Class_declarations_cannot_have_more_than_one_augments_or_extends_tag: i(8025, 1, "Class_declarations_cannot_have_more_than_one_augments_or_extends_tag_8025", "Class declarations cannot have more than one '@augments' or '@extends' tag."),
                    Expected_0_type_arguments_provide_these_with_an_extends_tag: i(8026, 1, "Expected_0_type_arguments_provide_these_with_an_extends_tag_8026", "Expected {0} type arguments; provide these with an '@extends' tag."),
                    Expected_0_1_type_arguments_provide_these_with_an_extends_tag: i(8027, 1, "Expected_0_1_type_arguments_provide_these_with_an_extends_tag_8027", "Expected {0}-{1} type arguments; provide these with an '@extends' tag."),
                    JSDoc_may_only_appear_in_the_last_parameter_of_a_signature: i(8028, 1, "JSDoc_may_only_appear_in_the_last_parameter_of_a_signature_8028", "JSDoc '...' may only appear in the last parameter of a signature."),
                    JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_had_an_array_type: i(8029, 1, "JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_h_8029", "JSDoc '@param' tag has name '{0}', but there is no parameter with that name. It would match 'arguments' if it had an array type."),
                    The_type_of_a_function_declaration_must_match_the_function_s_signature: i(8030, 1, "The_type_of_a_function_declaration_must_match_the_function_s_signature_8030", "The type of a function declaration must match the function's signature."),
                    You_cannot_rename_a_module_via_a_global_import: i(8031, 1, "You_cannot_rename_a_module_via_a_global_import_8031", "You cannot rename a module via a global import."),
                    Qualified_name_0_is_not_allowed_without_a_leading_param_object_1: i(8032, 1, "Qualified_name_0_is_not_allowed_without_a_leading_param_object_1_8032", "Qualified name '{0}' is not allowed without a leading '@param {object} {1}'."),
                    A_JSDoc_typedef_comment_may_not_contain_multiple_type_tags: i(8033, 1, "A_JSDoc_typedef_comment_may_not_contain_multiple_type_tags_8033", "A JSDoc '@typedef' comment may not contain multiple '@type' tags."),
                    The_tag_was_first_specified_here: i(8034, 1, "The_tag_was_first_specified_here_8034", "The tag was first specified here."),
                    You_cannot_rename_elements_that_are_defined_in_a_node_modules_folder: i(8035, 1, "You_cannot_rename_elements_that_are_defined_in_a_node_modules_folder_8035", "You cannot rename elements that are defined in a 'node_modules' folder."),
                    You_cannot_rename_elements_that_are_defined_in_another_node_modules_folder: i(8036, 1, "You_cannot_rename_elements_that_are_defined_in_another_node_modules_folder_8036", "You cannot rename elements that are defined in another 'node_modules' folder."),
                    Type_satisfaction_expressions_can_only_be_used_in_TypeScript_files: i(8037, 1, "Type_satisfaction_expressions_can_only_be_used_in_TypeScript_files_8037", "Type satisfaction expressions can only be used in TypeScript files."),
                    Decorators_may_not_appear_after_export_or_export_default_if_they_also_appear_before_export: i(8038, 1, "Decorators_may_not_appear_after_export_or_export_default_if_they_also_appear_before_export_8038", "Decorators may not appear after 'export' or 'export default' if they also appear before 'export'."),
                    A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag: i(8039, 1, "A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag_8039", "A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag"),
                    Declaration_emit_for_this_file_requires_using_private_name_0_An_explicit_type_annotation_may_unblock_declaration_emit: i(9005, 1, "Declaration_emit_for_this_file_requires_using_private_name_0_An_explicit_type_annotation_may_unblock_9005", "Declaration emit for this file requires using private name '{0}'. An explicit type annotation may unblock declaration emit."),
                    Declaration_emit_for_this_file_requires_using_private_name_0_from_module_1_An_explicit_type_annotation_may_unblock_declaration_emit: i(9006, 1, "Declaration_emit_for_this_file_requires_using_private_name_0_from_module_1_An_explicit_type_annotati_9006", "Declaration emit for this file requires using private name '{0}' from module '{1}'. An explicit type annotation may unblock declaration emit."),
                    JSX_attributes_must_only_be_assigned_a_non_empty_expression: i(17e3, 1, "JSX_attributes_must_only_be_assigned_a_non_empty_expression_17000", "JSX attributes must only be assigned a non-empty 'expression'."),
                    JSX_elements_cannot_have_multiple_attributes_with_the_same_name: i(17001, 1, "JSX_elements_cannot_have_multiple_attributes_with_the_same_name_17001", "JSX elements cannot have multiple attributes with the same name."),
                    Expected_corresponding_JSX_closing_tag_for_0: i(17002, 1, "Expected_corresponding_JSX_closing_tag_for_0_17002", "Expected corresponding JSX closing tag for '{0}'."),
                    Cannot_use_JSX_unless_the_jsx_flag_is_provided: i(17004, 1, "Cannot_use_JSX_unless_the_jsx_flag_is_provided_17004", "Cannot use JSX unless the '--jsx' flag is provided."),
                    A_constructor_cannot_contain_a_super_call_when_its_class_extends_null: i(17005, 1, "A_constructor_cannot_contain_a_super_call_when_its_class_extends_null_17005", "A constructor cannot contain a 'super' call when its class extends 'null'."),
                    An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses: i(17006, 1, "An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_ex_17006", "An unary expression with the '{0}' operator is not allowed in the left-hand side of an exponentiation expression. Consider enclosing the expression in parentheses."),
                    A_type_assertion_expression_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses: i(17007, 1, "A_type_assertion_expression_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Con_17007", "A type assertion expression is not allowed in the left-hand side of an exponentiation expression. Consider enclosing the expression in parentheses."),
                    JSX_element_0_has_no_corresponding_closing_tag: i(17008, 1, "JSX_element_0_has_no_corresponding_closing_tag_17008", "JSX element '{0}' has no corresponding closing tag."),
                    super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_class: i(17009, 1, "super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_class_17009", "'super' must be called before accessing 'this' in the constructor of a derived class."),
                    Unknown_type_acquisition_option_0: i(17010, 1, "Unknown_type_acquisition_option_0_17010", "Unknown type acquisition option '{0}'."),
                    super_must_be_called_before_accessing_a_property_of_super_in_the_constructor_of_a_derived_class: i(17011, 1, "super_must_be_called_before_accessing_a_property_of_super_in_the_constructor_of_a_derived_class_17011", "'super' must be called before accessing a property of 'super' in the constructor of a derived class."),
                    _0_is_not_a_valid_meta_property_for_keyword_1_Did_you_mean_2: i(17012, 1, "_0_is_not_a_valid_meta_property_for_keyword_1_Did_you_mean_2_17012", "'{0}' is not a valid meta-property for keyword '{1}'. Did you mean '{2}'?"),
                    Meta_property_0_is_only_allowed_in_the_body_of_a_function_declaration_function_expression_or_constructor: i(17013, 1, "Meta_property_0_is_only_allowed_in_the_body_of_a_function_declaration_function_expression_or_constru_17013", "Meta-property '{0}' is only allowed in the body of a function declaration, function expression, or constructor."),
                    JSX_fragment_has_no_corresponding_closing_tag: i(17014, 1, "JSX_fragment_has_no_corresponding_closing_tag_17014", "JSX fragment has no corresponding closing tag."),
                    Expected_corresponding_closing_tag_for_JSX_fragment: i(17015, 1, "Expected_corresponding_closing_tag_for_JSX_fragment_17015", "Expected corresponding closing tag for JSX fragment."),
                    The_jsxFragmentFactory_compiler_option_must_be_provided_to_use_JSX_fragments_with_the_jsxFactory_compiler_option: i(17016, 1, "The_jsxFragmentFactory_compiler_option_must_be_provided_to_use_JSX_fragments_with_the_jsxFactory_com_17016", "The 'jsxFragmentFactory' compiler option must be provided to use JSX fragments with the 'jsxFactory' compiler option."),
                    An_jsxFrag_pragma_is_required_when_using_an_jsx_pragma_with_JSX_fragments: i(17017, 1, "An_jsxFrag_pragma_is_required_when_using_an_jsx_pragma_with_JSX_fragments_17017", "An @jsxFrag pragma is required when using an @jsx pragma with JSX fragments."),
                    Unknown_type_acquisition_option_0_Did_you_mean_1: i(17018, 1, "Unknown_type_acquisition_option_0_Did_you_mean_1_17018", "Unknown type acquisition option '{0}'. Did you mean '{1}'?"),
                    _0_at_the_end_of_a_type_is_not_valid_TypeScript_syntax_Did_you_mean_to_write_1: i(17019, 1, "_0_at_the_end_of_a_type_is_not_valid_TypeScript_syntax_Did_you_mean_to_write_1_17019", "'{0}' at the end of a type is not valid TypeScript syntax. Did you mean to write '{1}'?"),
                    _0_at_the_start_of_a_type_is_not_valid_TypeScript_syntax_Did_you_mean_to_write_1: i(17020, 1, "_0_at_the_start_of_a_type_is_not_valid_TypeScript_syntax_Did_you_mean_to_write_1_17020", "'{0}' at the start of a type is not valid TypeScript syntax. Did you mean to write '{1}'?"),
                    Unicode_escape_sequence_cannot_appear_here: i(17021, 1, "Unicode_escape_sequence_cannot_appear_here_17021", "Unicode escape sequence cannot appear here."),
                    Circularity_detected_while_resolving_configuration_Colon_0: i(18e3, 1, "Circularity_detected_while_resolving_configuration_Colon_0_18000", "Circularity detected while resolving configuration: {0}"),
                    The_files_list_in_config_file_0_is_empty: i(18002, 1, "The_files_list_in_config_file_0_is_empty_18002", "The 'files' list in config file '{0}' is empty."),
                    No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2: i(18003, 1, "No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2_18003", "No inputs were found in config file '{0}'. Specified 'include' paths were '{1}' and 'exclude' paths were '{2}'."),
                    File_is_a_CommonJS_module_it_may_be_converted_to_an_ES_module: i(80001, 2, "File_is_a_CommonJS_module_it_may_be_converted_to_an_ES_module_80001", "File is a CommonJS module; it may be converted to an ES module."),
                    This_constructor_function_may_be_converted_to_a_class_declaration: i(80002, 2, "This_constructor_function_may_be_converted_to_a_class_declaration_80002", "This constructor function may be converted to a class declaration."),
                    Import_may_be_converted_to_a_default_import: i(80003, 2, "Import_may_be_converted_to_a_default_import_80003", "Import may be converted to a default import."),
                    JSDoc_types_may_be_moved_to_TypeScript_types: i(80004, 2, "JSDoc_types_may_be_moved_to_TypeScript_types_80004", "JSDoc types may be moved to TypeScript types."),
                    require_call_may_be_converted_to_an_import: i(80005, 2, "require_call_may_be_converted_to_an_import_80005", "'require' call may be converted to an import."),
                    This_may_be_converted_to_an_async_function: i(80006, 2, "This_may_be_converted_to_an_async_function_80006", "This may be converted to an async function."),
                    await_has_no_effect_on_the_type_of_this_expression: i(80007, 2, "await_has_no_effect_on_the_type_of_this_expression_80007", "'await' has no effect on the type of this expression."),
                    Numeric_literals_with_absolute_values_equal_to_2_53_or_greater_are_too_large_to_be_represented_accurately_as_integers: i(80008, 2, "Numeric_literals_with_absolute_values_equal_to_2_53_or_greater_are_too_large_to_be_represented_accur_80008", "Numeric literals with absolute values equal to 2^53 or greater are too large to be represented accurately as integers."),
                    JSDoc_typedef_may_be_converted_to_TypeScript_type: i(80009, 2, "JSDoc_typedef_may_be_converted_to_TypeScript_type_80009", "JSDoc typedef may be converted to TypeScript type."),
                    JSDoc_typedefs_may_be_converted_to_TypeScript_types: i(80010, 2, "JSDoc_typedefs_may_be_converted_to_TypeScript_types_80010", "JSDoc typedefs may be converted to TypeScript types."),
                    Add_missing_super_call: i(90001, 3, "Add_missing_super_call_90001", "Add missing 'super()' call"),
                    Make_super_call_the_first_statement_in_the_constructor: i(90002, 3, "Make_super_call_the_first_statement_in_the_constructor_90002", "Make 'super()' call the first statement in the constructor"),
                    Change_extends_to_implements: i(90003, 3, "Change_extends_to_implements_90003", "Change 'extends' to 'implements'"),
                    Remove_unused_declaration_for_Colon_0: i(90004, 3, "Remove_unused_declaration_for_Colon_0_90004", "Remove unused declaration for: '{0}'"),
                    Remove_import_from_0: i(90005, 3, "Remove_import_from_0_90005", "Remove import from '{0}'"),
                    Implement_interface_0: i(90006, 3, "Implement_interface_0_90006", "Implement interface '{0}'"),
                    Implement_inherited_abstract_class: i(90007, 3, "Implement_inherited_abstract_class_90007", "Implement inherited abstract class"),
                    Add_0_to_unresolved_variable: i(90008, 3, "Add_0_to_unresolved_variable_90008", "Add '{0}.' to unresolved variable"),
                    Remove_variable_statement: i(90010, 3, "Remove_variable_statement_90010", "Remove variable statement"),
                    Remove_template_tag: i(90011, 3, "Remove_template_tag_90011", "Remove template tag"),
                    Remove_type_parameters: i(90012, 3, "Remove_type_parameters_90012", "Remove type parameters"),
                    Import_0_from_1: i(90013, 3, "Import_0_from_1_90013", `Import '{0}' from "{1}"`),
                    Change_0_to_1: i(90014, 3, "Change_0_to_1_90014", "Change '{0}' to '{1}'"),
                    Declare_property_0: i(90016, 3, "Declare_property_0_90016", "Declare property '{0}'"),
                    Add_index_signature_for_property_0: i(90017, 3, "Add_index_signature_for_property_0_90017", "Add index signature for property '{0}'"),
                    Disable_checking_for_this_file: i(90018, 3, "Disable_checking_for_this_file_90018", "Disable checking for this file"),
                    Ignore_this_error_message: i(90019, 3, "Ignore_this_error_message_90019", "Ignore this error message"),
                    Initialize_property_0_in_the_constructor: i(90020, 3, "Initialize_property_0_in_the_constructor_90020", "Initialize property '{0}' in the constructor"),
                    Initialize_static_property_0: i(90021, 3, "Initialize_static_property_0_90021", "Initialize static property '{0}'"),
                    Change_spelling_to_0: i(90022, 3, "Change_spelling_to_0_90022", "Change spelling to '{0}'"),
                    Declare_method_0: i(90023, 3, "Declare_method_0_90023", "Declare method '{0}'"),
                    Declare_static_method_0: i(90024, 3, "Declare_static_method_0_90024", "Declare static method '{0}'"),
                    Prefix_0_with_an_underscore: i(90025, 3, "Prefix_0_with_an_underscore_90025", "Prefix '{0}' with an underscore"),
                    Rewrite_as_the_indexed_access_type_0: i(90026, 3, "Rewrite_as_the_indexed_access_type_0_90026", "Rewrite as the indexed access type '{0}'"),
                    Declare_static_property_0: i(90027, 3, "Declare_static_property_0_90027", "Declare static property '{0}'"),
                    Call_decorator_expression: i(90028, 3, "Call_decorator_expression_90028", "Call decorator expression"),
                    Add_async_modifier_to_containing_function: i(90029, 3, "Add_async_modifier_to_containing_function_90029", "Add async modifier to containing function"),
                    Replace_infer_0_with_unknown: i(90030, 3, "Replace_infer_0_with_unknown_90030", "Replace 'infer {0}' with 'unknown'"),
                    Replace_all_unused_infer_with_unknown: i(90031, 3, "Replace_all_unused_infer_with_unknown_90031", "Replace all unused 'infer' with 'unknown'"),
                    Add_parameter_name: i(90034, 3, "Add_parameter_name_90034", "Add parameter name"),
                    Declare_private_property_0: i(90035, 3, "Declare_private_property_0_90035", "Declare private property '{0}'"),
                    Replace_0_with_Promise_1: i(90036, 3, "Replace_0_with_Promise_1_90036", "Replace '{0}' with 'Promise<{1}>'"),
                    Fix_all_incorrect_return_type_of_an_async_functions: i(90037, 3, "Fix_all_incorrect_return_type_of_an_async_functions_90037", "Fix all incorrect return type of an async functions"),
                    Declare_private_method_0: i(90038, 3, "Declare_private_method_0_90038", "Declare private method '{0}'"),
                    Remove_unused_destructuring_declaration: i(90039, 3, "Remove_unused_destructuring_declaration_90039", "Remove unused destructuring declaration"),
                    Remove_unused_declarations_for_Colon_0: i(90041, 3, "Remove_unused_declarations_for_Colon_0_90041", "Remove unused declarations for: '{0}'"),
                    Declare_a_private_field_named_0: i(90053, 3, "Declare_a_private_field_named_0_90053", "Declare a private field named '{0}'."),
                    Includes_imports_of_types_referenced_by_0: i(90054, 3, "Includes_imports_of_types_referenced_by_0_90054", "Includes imports of types referenced by '{0}'"),
                    Remove_type_from_import_declaration_from_0: i(90055, 3, "Remove_type_from_import_declaration_from_0_90055", `Remove 'type' from import declaration from "{0}"`),
                    Remove_type_from_import_of_0_from_1: i(90056, 3, "Remove_type_from_import_of_0_from_1_90056", `Remove 'type' from import of '{0}' from "{1}"`),
                    Add_import_from_0: i(90057, 3, "Add_import_from_0_90057", 'Add import from "{0}"'),
                    Update_import_from_0: i(90058, 3, "Update_import_from_0_90058", 'Update import from "{0}"'),
                    Export_0_from_module_1: i(90059, 3, "Export_0_from_module_1_90059", "Export '{0}' from module '{1}'"),
                    Export_all_referenced_locals: i(90060, 3, "Export_all_referenced_locals_90060", "Export all referenced locals"),
                    Convert_function_to_an_ES2015_class: i(95001, 3, "Convert_function_to_an_ES2015_class_95001", "Convert function to an ES2015 class"),
                    Convert_0_to_1_in_0: i(95003, 3, "Convert_0_to_1_in_0_95003", "Convert '{0}' to '{1} in {0}'"),
                    Extract_to_0_in_1: i(95004, 3, "Extract_to_0_in_1_95004", "Extract to {0} in {1}"),
                    Extract_function: i(95005, 3, "Extract_function_95005", "Extract function"),
                    Extract_constant: i(95006, 3, "Extract_constant_95006", "Extract constant"),
                    Extract_to_0_in_enclosing_scope: i(95007, 3, "Extract_to_0_in_enclosing_scope_95007", "Extract to {0} in enclosing scope"),
                    Extract_to_0_in_1_scope: i(95008, 3, "Extract_to_0_in_1_scope_95008", "Extract to {0} in {1} scope"),
                    Annotate_with_type_from_JSDoc: i(95009, 3, "Annotate_with_type_from_JSDoc_95009", "Annotate with type from JSDoc"),
                    Infer_type_of_0_from_usage: i(95011, 3, "Infer_type_of_0_from_usage_95011", "Infer type of '{0}' from usage"),
                    Infer_parameter_types_from_usage: i(95012, 3, "Infer_parameter_types_from_usage_95012", "Infer parameter types from usage"),
                    Convert_to_default_import: i(95013, 3, "Convert_to_default_import_95013", "Convert to default import"),
                    Install_0: i(95014, 3, "Install_0_95014", "Install '{0}'"),
                    Replace_import_with_0: i(95015, 3, "Replace_import_with_0_95015", "Replace import with '{0}'."),
                    Use_synthetic_default_member: i(95016, 3, "Use_synthetic_default_member_95016", "Use synthetic 'default' member."),
                    Convert_to_ES_module: i(95017, 3, "Convert_to_ES_module_95017", "Convert to ES module"),
                    Add_undefined_type_to_property_0: i(95018, 3, "Add_undefined_type_to_property_0_95018", "Add 'undefined' type to property '{0}'"),
                    Add_initializer_to_property_0: i(95019, 3, "Add_initializer_to_property_0_95019", "Add initializer to property '{0}'"),
                    Add_definite_assignment_assertion_to_property_0: i(95020, 3, "Add_definite_assignment_assertion_to_property_0_95020", "Add definite assignment assertion to property '{0}'"),
                    Convert_all_type_literals_to_mapped_type: i(95021, 3, "Convert_all_type_literals_to_mapped_type_95021", "Convert all type literals to mapped type"),
                    Add_all_missing_members: i(95022, 3, "Add_all_missing_members_95022", "Add all missing members"),
                    Infer_all_types_from_usage: i(95023, 3, "Infer_all_types_from_usage_95023", "Infer all types from usage"),
                    Delete_all_unused_declarations: i(95024, 3, "Delete_all_unused_declarations_95024", "Delete all unused declarations"),
                    Prefix_all_unused_declarations_with_where_possible: i(95025, 3, "Prefix_all_unused_declarations_with_where_possible_95025", "Prefix all unused declarations with '_' where possible"),
                    Fix_all_detected_spelling_errors: i(95026, 3, "Fix_all_detected_spelling_errors_95026", "Fix all detected spelling errors"),
                    Add_initializers_to_all_uninitialized_properties: i(95027, 3, "Add_initializers_to_all_uninitialized_properties_95027", "Add initializers to all uninitialized properties"),
                    Add_definite_assignment_assertions_to_all_uninitialized_properties: i(95028, 3, "Add_definite_assignment_assertions_to_all_uninitialized_properties_95028", "Add definite assignment assertions to all uninitialized properties"),
                    Add_undefined_type_to_all_uninitialized_properties: i(95029, 3, "Add_undefined_type_to_all_uninitialized_properties_95029", "Add undefined type to all uninitialized properties"),
                    Change_all_jsdoc_style_types_to_TypeScript: i(95030, 3, "Change_all_jsdoc_style_types_to_TypeScript_95030", "Change all jsdoc-style types to TypeScript"),
                    Change_all_jsdoc_style_types_to_TypeScript_and_add_undefined_to_nullable_types: i(95031, 3, "Change_all_jsdoc_style_types_to_TypeScript_and_add_undefined_to_nullable_types_95031", "Change all jsdoc-style types to TypeScript (and add '| undefined' to nullable types)"),
                    Implement_all_unimplemented_interfaces: i(95032, 3, "Implement_all_unimplemented_interfaces_95032", "Implement all unimplemented interfaces"),
                    Install_all_missing_types_packages: i(95033, 3, "Install_all_missing_types_packages_95033", "Install all missing types packages"),
                    Rewrite_all_as_indexed_access_types: i(95034, 3, "Rewrite_all_as_indexed_access_types_95034", "Rewrite all as indexed access types"),
                    Convert_all_to_default_imports: i(95035, 3, "Convert_all_to_default_imports_95035", "Convert all to default imports"),
                    Make_all_super_calls_the_first_statement_in_their_constructor: i(95036, 3, "Make_all_super_calls_the_first_statement_in_their_constructor_95036", "Make all 'super()' calls the first statement in their constructor"),
                    Add_qualifier_to_all_unresolved_variables_matching_a_member_name: i(95037, 3, "Add_qualifier_to_all_unresolved_variables_matching_a_member_name_95037", "Add qualifier to all unresolved variables matching a member name"),
                    Change_all_extended_interfaces_to_implements: i(95038, 3, "Change_all_extended_interfaces_to_implements_95038", "Change all extended interfaces to 'implements'"),
                    Add_all_missing_super_calls: i(95039, 3, "Add_all_missing_super_calls_95039", "Add all missing super calls"),
                    Implement_all_inherited_abstract_classes: i(95040, 3, "Implement_all_inherited_abstract_classes_95040", "Implement all inherited abstract classes"),
                    Add_all_missing_async_modifiers: i(95041, 3, "Add_all_missing_async_modifiers_95041", "Add all missing 'async' modifiers"),
                    Add_ts_ignore_to_all_error_messages: i(95042, 3, "Add_ts_ignore_to_all_error_messages_95042", "Add '@ts-ignore' to all error messages"),
                    Annotate_everything_with_types_from_JSDoc: i(95043, 3, "Annotate_everything_with_types_from_JSDoc_95043", "Annotate everything with types from JSDoc"),
                    Add_to_all_uncalled_decorators: i(95044, 3, "Add_to_all_uncalled_decorators_95044", "Add '()' to all uncalled decorators"),
                    Convert_all_constructor_functions_to_classes: i(95045, 3, "Convert_all_constructor_functions_to_classes_95045", "Convert all constructor functions to classes"),
                    Generate_get_and_set_accessors: i(95046, 3, "Generate_get_and_set_accessors_95046", "Generate 'get' and 'set' accessors"),
                    Convert_require_to_import: i(95047, 3, "Convert_require_to_import_95047", "Convert 'require' to 'import'"),
                    Convert_all_require_to_import: i(95048, 3, "Convert_all_require_to_import_95048", "Convert all 'require' to 'import'"),
                    Move_to_a_new_file: i(95049, 3, "Move_to_a_new_file_95049", "Move to a new file"),
                    Remove_unreachable_code: i(95050, 3, "Remove_unreachable_code_95050", "Remove unreachable code"),
                    Remove_all_unreachable_code: i(95051, 3, "Remove_all_unreachable_code_95051", "Remove all unreachable code"),
                    Add_missing_typeof: i(95052, 3, "Add_missing_typeof_95052", "Add missing 'typeof'"),
                    Remove_unused_label: i(95053, 3, "Remove_unused_label_95053", "Remove unused label"),
                    Remove_all_unused_labels: i(95054, 3, "Remove_all_unused_labels_95054", "Remove all unused labels"),
                    Convert_0_to_mapped_object_type: i(95055, 3, "Convert_0_to_mapped_object_type_95055", "Convert '{0}' to mapped object type"),
                    Convert_namespace_import_to_named_imports: i(95056, 3, "Convert_namespace_import_to_named_imports_95056", "Convert namespace import to named imports"),
                    Convert_named_imports_to_namespace_import: i(95057, 3, "Convert_named_imports_to_namespace_import_95057", "Convert named imports to namespace import"),
                    Add_or_remove_braces_in_an_arrow_function: i(95058, 3, "Add_or_remove_braces_in_an_arrow_function_95058", "Add or remove braces in an arrow function"),
                    Add_braces_to_arrow_function: i(95059, 3, "Add_braces_to_arrow_function_95059", "Add braces to arrow function"),
                    Remove_braces_from_arrow_function: i(95060, 3, "Remove_braces_from_arrow_function_95060", "Remove braces from arrow function"),
                    Convert_default_export_to_named_export: i(95061, 3, "Convert_default_export_to_named_export_95061", "Convert default export to named export"),
                    Convert_named_export_to_default_export: i(95062, 3, "Convert_named_export_to_default_export_95062", "Convert named export to default export"),
                    Add_missing_enum_member_0: i(95063, 3, "Add_missing_enum_member_0_95063", "Add missing enum member '{0}'"),
                    Add_all_missing_imports: i(95064, 3, "Add_all_missing_imports_95064", "Add all missing imports"),
                    Convert_to_async_function: i(95065, 3, "Convert_to_async_function_95065", "Convert to async function"),
                    Convert_all_to_async_functions: i(95066, 3, "Convert_all_to_async_functions_95066", "Convert all to async functions"),
                    Add_missing_call_parentheses: i(95067, 3, "Add_missing_call_parentheses_95067", "Add missing call parentheses"),
                    Add_all_missing_call_parentheses: i(95068, 3, "Add_all_missing_call_parentheses_95068", "Add all missing call parentheses"),
                    Add_unknown_conversion_for_non_overlapping_types: i(95069, 3, "Add_unknown_conversion_for_non_overlapping_types_95069", "Add 'unknown' conversion for non-overlapping types"),
                    Add_unknown_to_all_conversions_of_non_overlapping_types: i(95070, 3, "Add_unknown_to_all_conversions_of_non_overlapping_types_95070", "Add 'unknown' to all conversions of non-overlapping types"),
                    Add_missing_new_operator_to_call: i(95071, 3, "Add_missing_new_operator_to_call_95071", "Add missing 'new' operator to call"),
                    Add_missing_new_operator_to_all_calls: i(95072, 3, "Add_missing_new_operator_to_all_calls_95072", "Add missing 'new' operator to all calls"),
                    Add_names_to_all_parameters_without_names: i(95073, 3, "Add_names_to_all_parameters_without_names_95073", "Add names to all parameters without names"),
                    Enable_the_experimentalDecorators_option_in_your_configuration_file: i(95074, 3, "Enable_the_experimentalDecorators_option_in_your_configuration_file_95074", "Enable the 'experimentalDecorators' option in your configuration file"),
                    Convert_parameters_to_destructured_object: i(95075, 3, "Convert_parameters_to_destructured_object_95075", "Convert parameters to destructured object"),
                    Extract_type: i(95077, 3, "Extract_type_95077", "Extract type"),
                    Extract_to_type_alias: i(95078, 3, "Extract_to_type_alias_95078", "Extract to type alias"),
                    Extract_to_typedef: i(95079, 3, "Extract_to_typedef_95079", "Extract to typedef"),
                    Infer_this_type_of_0_from_usage: i(95080, 3, "Infer_this_type_of_0_from_usage_95080", "Infer 'this' type of '{0}' from usage"),
                    Add_const_to_unresolved_variable: i(95081, 3, "Add_const_to_unresolved_variable_95081", "Add 'const' to unresolved variable"),
                    Add_const_to_all_unresolved_variables: i(95082, 3, "Add_const_to_all_unresolved_variables_95082", "Add 'const' to all unresolved variables"),
                    Add_await: i(95083, 3, "Add_await_95083", "Add 'await'"),
                    Add_await_to_initializer_for_0: i(95084, 3, "Add_await_to_initializer_for_0_95084", "Add 'await' to initializer for '{0}'"),
                    Fix_all_expressions_possibly_missing_await: i(95085, 3, "Fix_all_expressions_possibly_missing_await_95085", "Fix all expressions possibly missing 'await'"),
                    Remove_unnecessary_await: i(95086, 3, "Remove_unnecessary_await_95086", "Remove unnecessary 'await'"),
                    Remove_all_unnecessary_uses_of_await: i(95087, 3, "Remove_all_unnecessary_uses_of_await_95087", "Remove all unnecessary uses of 'await'"),
                    Enable_the_jsx_flag_in_your_configuration_file: i(95088, 3, "Enable_the_jsx_flag_in_your_configuration_file_95088", "Enable the '--jsx' flag in your configuration file"),
                    Add_await_to_initializers: i(95089, 3, "Add_await_to_initializers_95089", "Add 'await' to initializers"),
                    Extract_to_interface: i(95090, 3, "Extract_to_interface_95090", "Extract to interface"),
                    Convert_to_a_bigint_numeric_literal: i(95091, 3, "Convert_to_a_bigint_numeric_literal_95091", "Convert to a bigint numeric literal"),
                    Convert_all_to_bigint_numeric_literals: i(95092, 3, "Convert_all_to_bigint_numeric_literals_95092", "Convert all to bigint numeric literals"),
                    Convert_const_to_let: i(95093, 3, "Convert_const_to_let_95093", "Convert 'const' to 'let'"),
                    Prefix_with_declare: i(95094, 3, "Prefix_with_declare_95094", "Prefix with 'declare'"),
                    Prefix_all_incorrect_property_declarations_with_declare: i(95095, 3, "Prefix_all_incorrect_property_declarations_with_declare_95095", "Prefix all incorrect property declarations with 'declare'"),
                    Convert_to_template_string: i(95096, 3, "Convert_to_template_string_95096", "Convert to template string"),
                    Add_export_to_make_this_file_into_a_module: i(95097, 3, "Add_export_to_make_this_file_into_a_module_95097", "Add 'export {}' to make this file into a module"),
                    Set_the_target_option_in_your_configuration_file_to_0: i(95098, 3, "Set_the_target_option_in_your_configuration_file_to_0_95098", "Set the 'target' option in your configuration file to '{0}'"),
                    Set_the_module_option_in_your_configuration_file_to_0: i(95099, 3, "Set_the_module_option_in_your_configuration_file_to_0_95099", "Set the 'module' option in your configuration file to '{0}'"),
                    Convert_invalid_character_to_its_html_entity_code: i(95100, 3, "Convert_invalid_character_to_its_html_entity_code_95100", "Convert invalid character to its html entity code"),
                    Convert_all_invalid_characters_to_HTML_entity_code: i(95101, 3, "Convert_all_invalid_characters_to_HTML_entity_code_95101", "Convert all invalid characters to HTML entity code"),
                    Convert_all_const_to_let: i(95102, 3, "Convert_all_const_to_let_95102", "Convert all 'const' to 'let'"),
                    Convert_function_expression_0_to_arrow_function: i(95105, 3, "Convert_function_expression_0_to_arrow_function_95105", "Convert function expression '{0}' to arrow function"),
                    Convert_function_declaration_0_to_arrow_function: i(95106, 3, "Convert_function_declaration_0_to_arrow_function_95106", "Convert function declaration '{0}' to arrow function"),
                    Fix_all_implicit_this_errors: i(95107, 3, "Fix_all_implicit_this_errors_95107", "Fix all implicit-'this' errors"),
                    Wrap_invalid_character_in_an_expression_container: i(95108, 3, "Wrap_invalid_character_in_an_expression_container_95108", "Wrap invalid character in an expression container"),
                    Wrap_all_invalid_characters_in_an_expression_container: i(95109, 3, "Wrap_all_invalid_characters_in_an_expression_container_95109", "Wrap all invalid characters in an expression container"),
                    Visit_https_Colon_Slash_Slashaka_ms_Slashtsconfig_to_read_more_about_this_file: i(95110, 3, "Visit_https_Colon_Slash_Slashaka_ms_Slashtsconfig_to_read_more_about_this_file_95110", "Visit https://aka.ms/tsconfig to read more about this file"),
                    Add_a_return_statement: i(95111, 3, "Add_a_return_statement_95111", "Add a return statement"),
                    Remove_braces_from_arrow_function_body: i(95112, 3, "Remove_braces_from_arrow_function_body_95112", "Remove braces from arrow function body"),
                    Wrap_the_following_body_with_parentheses_which_should_be_an_object_literal: i(95113, 3, "Wrap_the_following_body_with_parentheses_which_should_be_an_object_literal_95113", "Wrap the following body with parentheses which should be an object literal"),
                    Add_all_missing_return_statement: i(95114, 3, "Add_all_missing_return_statement_95114", "Add all missing return statement"),
                    Remove_braces_from_all_arrow_function_bodies_with_relevant_issues: i(95115, 3, "Remove_braces_from_all_arrow_function_bodies_with_relevant_issues_95115", "Remove braces from all arrow function bodies with relevant issues"),
                    Wrap_all_object_literal_with_parentheses: i(95116, 3, "Wrap_all_object_literal_with_parentheses_95116", "Wrap all object literal with parentheses"),
                    Move_labeled_tuple_element_modifiers_to_labels: i(95117, 3, "Move_labeled_tuple_element_modifiers_to_labels_95117", "Move labeled tuple element modifiers to labels"),
                    Convert_overload_list_to_single_signature: i(95118, 3, "Convert_overload_list_to_single_signature_95118", "Convert overload list to single signature"),
                    Generate_get_and_set_accessors_for_all_overriding_properties: i(95119, 3, "Generate_get_and_set_accessors_for_all_overriding_properties_95119", "Generate 'get' and 'set' accessors for all overriding properties"),
                    Wrap_in_JSX_fragment: i(95120, 3, "Wrap_in_JSX_fragment_95120", "Wrap in JSX fragment"),
                    Wrap_all_unparented_JSX_in_JSX_fragment: i(95121, 3, "Wrap_all_unparented_JSX_in_JSX_fragment_95121", "Wrap all unparented JSX in JSX fragment"),
                    Convert_arrow_function_or_function_expression: i(95122, 3, "Convert_arrow_function_or_function_expression_95122", "Convert arrow function or function expression"),
                    Convert_to_anonymous_function: i(95123, 3, "Convert_to_anonymous_function_95123", "Convert to anonymous function"),
                    Convert_to_named_function: i(95124, 3, "Convert_to_named_function_95124", "Convert to named function"),
                    Convert_to_arrow_function: i(95125, 3, "Convert_to_arrow_function_95125", "Convert to arrow function"),
                    Remove_parentheses: i(95126, 3, "Remove_parentheses_95126", "Remove parentheses"),
                    Could_not_find_a_containing_arrow_function: i(95127, 3, "Could_not_find_a_containing_arrow_function_95127", "Could not find a containing arrow function"),
                    Containing_function_is_not_an_arrow_function: i(95128, 3, "Containing_function_is_not_an_arrow_function_95128", "Containing function is not an arrow function"),
                    Could_not_find_export_statement: i(95129, 3, "Could_not_find_export_statement_95129", "Could not find export statement"),
                    This_file_already_has_a_default_export: i(95130, 3, "This_file_already_has_a_default_export_95130", "This file already has a default export"),
                    Could_not_find_import_clause: i(95131, 3, "Could_not_find_import_clause_95131", "Could not find import clause"),
                    Could_not_find_namespace_import_or_named_imports: i(95132, 3, "Could_not_find_namespace_import_or_named_imports_95132", "Could not find namespace import or named imports"),
                    Selection_is_not_a_valid_type_node: i(95133, 3, "Selection_is_not_a_valid_type_node_95133", "Selection is not a valid type node"),
                    No_type_could_be_extracted_from_this_type_node: i(95134, 3, "No_type_could_be_extracted_from_this_type_node_95134", "No type could be extracted from this type node"),
                    Could_not_find_property_for_which_to_generate_accessor: i(95135, 3, "Could_not_find_property_for_which_to_generate_accessor_95135", "Could not find property for which to generate accessor"),
                    Name_is_not_valid: i(95136, 3, "Name_is_not_valid_95136", "Name is not valid"),
                    Can_only_convert_property_with_modifier: i(95137, 3, "Can_only_convert_property_with_modifier_95137", "Can only convert property with modifier"),
                    Switch_each_misused_0_to_1: i(95138, 3, "Switch_each_misused_0_to_1_95138", "Switch each misused '{0}' to '{1}'"),
                    Convert_to_optional_chain_expression: i(95139, 3, "Convert_to_optional_chain_expression_95139", "Convert to optional chain expression"),
                    Could_not_find_convertible_access_expression: i(95140, 3, "Could_not_find_convertible_access_expression_95140", "Could not find convertible access expression"),
                    Could_not_find_matching_access_expressions: i(95141, 3, "Could_not_find_matching_access_expressions_95141", "Could not find matching access expressions"),
                    Can_only_convert_logical_AND_access_chains: i(95142, 3, "Can_only_convert_logical_AND_access_chains_95142", "Can only convert logical AND access chains"),
                    Add_void_to_Promise_resolved_without_a_value: i(95143, 3, "Add_void_to_Promise_resolved_without_a_value_95143", "Add 'void' to Promise resolved without a value"),
                    Add_void_to_all_Promises_resolved_without_a_value: i(95144, 3, "Add_void_to_all_Promises_resolved_without_a_value_95144", "Add 'void' to all Promises resolved without a value"),
                    Use_element_access_for_0: i(95145, 3, "Use_element_access_for_0_95145", "Use element access for '{0}'"),
                    Use_element_access_for_all_undeclared_properties: i(95146, 3, "Use_element_access_for_all_undeclared_properties_95146", "Use element access for all undeclared properties."),
                    Delete_all_unused_imports: i(95147, 3, "Delete_all_unused_imports_95147", "Delete all unused imports"),
                    Infer_function_return_type: i(95148, 3, "Infer_function_return_type_95148", "Infer function return type"),
                    Return_type_must_be_inferred_from_a_function: i(95149, 3, "Return_type_must_be_inferred_from_a_function_95149", "Return type must be inferred from a function"),
                    Could_not_determine_function_return_type: i(95150, 3, "Could_not_determine_function_return_type_95150", "Could not determine function return type"),
                    Could_not_convert_to_arrow_function: i(95151, 3, "Could_not_convert_to_arrow_function_95151", "Could not convert to arrow function"),
                    Could_not_convert_to_named_function: i(95152, 3, "Could_not_convert_to_named_function_95152", "Could not convert to named function"),
                    Could_not_convert_to_anonymous_function: i(95153, 3, "Could_not_convert_to_anonymous_function_95153", "Could not convert to anonymous function"),
                    Can_only_convert_string_concatenations_and_string_literals: i(95154, 3, "Can_only_convert_string_concatenations_and_string_literals_95154", "Can only convert string concatenations and string literals"),
                    Selection_is_not_a_valid_statement_or_statements: i(95155, 3, "Selection_is_not_a_valid_statement_or_statements_95155", "Selection is not a valid statement or statements"),
                    Add_missing_function_declaration_0: i(95156, 3, "Add_missing_function_declaration_0_95156", "Add missing function declaration '{0}'"),
                    Add_all_missing_function_declarations: i(95157, 3, "Add_all_missing_function_declarations_95157", "Add all missing function declarations"),
                    Method_not_implemented: i(95158, 3, "Method_not_implemented_95158", "Method not implemented."),
                    Function_not_implemented: i(95159, 3, "Function_not_implemented_95159", "Function not implemented."),
                    Add_override_modifier: i(95160, 3, "Add_override_modifier_95160", "Add 'override' modifier"),
                    Remove_override_modifier: i(95161, 3, "Remove_override_modifier_95161", "Remove 'override' modifier"),
                    Add_all_missing_override_modifiers: i(95162, 3, "Add_all_missing_override_modifiers_95162", "Add all missing 'override' modifiers"),
                    Remove_all_unnecessary_override_modifiers: i(95163, 3, "Remove_all_unnecessary_override_modifiers_95163", "Remove all unnecessary 'override' modifiers"),
                    Can_only_convert_named_export: i(95164, 3, "Can_only_convert_named_export_95164", "Can only convert named export"),
                    Add_missing_properties: i(95165, 3, "Add_missing_properties_95165", "Add missing properties"),
                    Add_all_missing_properties: i(95166, 3, "Add_all_missing_properties_95166", "Add all missing properties"),
                    Add_missing_attributes: i(95167, 3, "Add_missing_attributes_95167", "Add missing attributes"),
                    Add_all_missing_attributes: i(95168, 3, "Add_all_missing_attributes_95168", "Add all missing attributes"),
                    Add_undefined_to_optional_property_type: i(95169, 3, "Add_undefined_to_optional_property_type_95169", "Add 'undefined' to optional property type"),
                    Convert_named_imports_to_default_import: i(95170, 3, "Convert_named_imports_to_default_import_95170", "Convert named imports to default import"),
                    Delete_unused_param_tag_0: i(95171, 3, "Delete_unused_param_tag_0_95171", "Delete unused '@param' tag '{0}'"),
                    Delete_all_unused_param_tags: i(95172, 3, "Delete_all_unused_param_tags_95172", "Delete all unused '@param' tags"),
                    Rename_param_tag_name_0_to_1: i(95173, 3, "Rename_param_tag_name_0_to_1_95173", "Rename '@param' tag name '{0}' to '{1}'"),
                    Use_0: i(95174, 3, "Use_0_95174", "Use `{0}`."),
                    Use_Number_isNaN_in_all_conditions: i(95175, 3, "Use_Number_isNaN_in_all_conditions_95175", "Use `Number.isNaN` in all conditions."),
                    Convert_typedef_to_TypeScript_type: i(95176, 3, "Convert_typedef_to_TypeScript_type_95176", "Convert typedef to TypeScript type."),
                    Convert_all_typedef_to_TypeScript_types: i(95177, 3, "Convert_all_typedef_to_TypeScript_types_95177", "Convert all typedef to TypeScript types."),
                    Move_to_file: i(95178, 3, "Move_to_file_95178", "Move to file"),
                    Cannot_move_to_file_selected_file_is_invalid: i(95179, 3, "Cannot_move_to_file_selected_file_is_invalid_95179", "Cannot move to file, selected file is invalid"),
                    Use_import_type: i(95180, 3, "Use_import_type_95180", "Use 'import type'"),
                    Use_type_0: i(95181, 3, "Use_type_0_95181", "Use 'type {0}'"),
                    Fix_all_with_type_only_imports: i(95182, 3, "Fix_all_with_type_only_imports_95182", "Fix all with type-only imports"),
                    Cannot_move_statements_to_the_selected_file: i(95183, 3, "Cannot_move_statements_to_the_selected_file_95183", "Cannot move statements to the selected file"),
                    Inline_variable: i(95184, 3, "Inline_variable_95184", "Inline variable"),
                    Could_not_find_variable_to_inline: i(95185, 3, "Could_not_find_variable_to_inline_95185", "Could not find variable to inline."),
                    Variables_with_multiple_declarations_cannot_be_inlined: i(95186, 3, "Variables_with_multiple_declarations_cannot_be_inlined_95186", "Variables with multiple declarations cannot be inlined."),
                    Add_missing_comma_for_object_member_completion_0: i(95187, 3, "Add_missing_comma_for_object_member_completion_0_95187", "Add missing comma for object member completion '{0}'."),
                    No_value_exists_in_scope_for_the_shorthand_property_0_Either_declare_one_or_provide_an_initializer: i(18004, 1, "No_value_exists_in_scope_for_the_shorthand_property_0_Either_declare_one_or_provide_an_initializer_18004", "No value exists in scope for the shorthand property '{0}'. Either declare one or provide an initializer."),
                    Classes_may_not_have_a_field_named_constructor: i(18006, 1, "Classes_may_not_have_a_field_named_constructor_18006", "Classes may not have a field named 'constructor'."),
                    JSX_expressions_may_not_use_the_comma_operator_Did_you_mean_to_write_an_array: i(18007, 1, "JSX_expressions_may_not_use_the_comma_operator_Did_you_mean_to_write_an_array_18007", "JSX expressions may not use the comma operator. Did you mean to write an array?"),
                    Private_identifiers_cannot_be_used_as_parameters: i(18009, 1, "Private_identifiers_cannot_be_used_as_parameters_18009", "Private identifiers cannot be used as parameters."),
                    An_accessibility_modifier_cannot_be_used_with_a_private_identifier: i(18010, 1, "An_accessibility_modifier_cannot_be_used_with_a_private_identifier_18010", "An accessibility modifier cannot be used with a private identifier."),
                    The_operand_of_a_delete_operator_cannot_be_a_private_identifier: i(18011, 1, "The_operand_of_a_delete_operator_cannot_be_a_private_identifier_18011", "The operand of a 'delete' operator cannot be a private identifier."),
                    constructor_is_a_reserved_word: i(18012, 1, "constructor_is_a_reserved_word_18012", "'#constructor' is a reserved word."),
                    Property_0_is_not_accessible_outside_class_1_because_it_has_a_private_identifier: i(18013, 1, "Property_0_is_not_accessible_outside_class_1_because_it_has_a_private_identifier_18013", "Property '{0}' is not accessible outside class '{1}' because it has a private identifier."),
                    The_property_0_cannot_be_accessed_on_type_1_within_this_class_because_it_is_shadowed_by_another_private_identifier_with_the_same_spelling: i(18014, 1, "The_property_0_cannot_be_accessed_on_type_1_within_this_class_because_it_is_shadowed_by_another_priv_18014", "The property '{0}' cannot be accessed on type '{1}' within this class because it is shadowed by another private identifier with the same spelling."),
                    Property_0_in_type_1_refers_to_a_different_member_that_cannot_be_accessed_from_within_type_2: i(18015, 1, "Property_0_in_type_1_refers_to_a_different_member_that_cannot_be_accessed_from_within_type_2_18015", "Property '{0}' in type '{1}' refers to a different member that cannot be accessed from within type '{2}'."),
                    Private_identifiers_are_not_allowed_outside_class_bodies: i(18016, 1, "Private_identifiers_are_not_allowed_outside_class_bodies_18016", "Private identifiers are not allowed outside class bodies."),
                    The_shadowing_declaration_of_0_is_defined_here: i(18017, 1, "The_shadowing_declaration_of_0_is_defined_here_18017", "The shadowing declaration of '{0}' is defined here"),
                    The_declaration_of_0_that_you_probably_intended_to_use_is_defined_here: i(18018, 1, "The_declaration_of_0_that_you_probably_intended_to_use_is_defined_here_18018", "The declaration of '{0}' that you probably intended to use is defined here"),
                    _0_modifier_cannot_be_used_with_a_private_identifier: i(18019, 1, "_0_modifier_cannot_be_used_with_a_private_identifier_18019", "'{0}' modifier cannot be used with a private identifier."),
                    An_enum_member_cannot_be_named_with_a_private_identifier: i(18024, 1, "An_enum_member_cannot_be_named_with_a_private_identifier_18024", "An enum member cannot be named with a private identifier."),
                    can_only_be_used_at_the_start_of_a_file: i(18026, 1, "can_only_be_used_at_the_start_of_a_file_18026", "'#!' can only be used at the start of a file."),
                    Compiler_reserves_name_0_when_emitting_private_identifier_downlevel: i(18027, 1, "Compiler_reserves_name_0_when_emitting_private_identifier_downlevel_18027", "Compiler reserves name '{0}' when emitting private identifier downlevel."),
                    Private_identifiers_are_only_available_when_targeting_ECMAScript_2015_and_higher: i(18028, 1, "Private_identifiers_are_only_available_when_targeting_ECMAScript_2015_and_higher_18028", "Private identifiers are only available when targeting ECMAScript 2015 and higher."),
                    Private_identifiers_are_not_allowed_in_variable_declarations: i(18029, 1, "Private_identifiers_are_not_allowed_in_variable_declarations_18029", "Private identifiers are not allowed in variable declarations."),
                    An_optional_chain_cannot_contain_private_identifiers: i(18030, 1, "An_optional_chain_cannot_contain_private_identifiers_18030", "An optional chain cannot contain private identifiers."),
                    The_intersection_0_was_reduced_to_never_because_property_1_has_conflicting_types_in_some_constituents: i(18031, 1, "The_intersection_0_was_reduced_to_never_because_property_1_has_conflicting_types_in_some_constituent_18031", "The intersection '{0}' was reduced to 'never' because property '{1}' has conflicting types in some constituents."),
                    The_intersection_0_was_reduced_to_never_because_property_1_exists_in_multiple_constituents_and_is_private_in_some: i(18032, 1, "The_intersection_0_was_reduced_to_never_because_property_1_exists_in_multiple_constituents_and_is_pr_18032", "The intersection '{0}' was reduced to 'never' because property '{1}' exists in multiple constituents and is private in some."),
                    Type_0_is_not_assignable_to_type_1_as_required_for_computed_enum_member_values: i(18033, 1, "Type_0_is_not_assignable_to_type_1_as_required_for_computed_enum_member_values_18033", "Type '{0}' is not assignable to type '{1}' as required for computed enum member values."),
                    Specify_the_JSX_fragment_factory_function_to_use_when_targeting_react_JSX_emit_with_jsxFactory_compiler_option_is_specified_e_g_Fragment: i(18034, 3, "Specify_the_JSX_fragment_factory_function_to_use_when_targeting_react_JSX_emit_with_jsxFactory_compi_18034", "Specify the JSX fragment factory function to use when targeting 'react' JSX emit with 'jsxFactory' compiler option is specified, e.g. 'Fragment'."),
                    Invalid_value_for_jsxFragmentFactory_0_is_not_a_valid_identifier_or_qualified_name: i(18035, 1, "Invalid_value_for_jsxFragmentFactory_0_is_not_a_valid_identifier_or_qualified_name_18035", "Invalid value for 'jsxFragmentFactory'. '{0}' is not a valid identifier or qualified-name."),
                    Class_decorators_can_t_be_used_with_static_private_identifier_Consider_removing_the_experimental_decorator: i(18036, 1, "Class_decorators_can_t_be_used_with_static_private_identifier_Consider_removing_the_experimental_dec_18036", "Class decorators can't be used with static private identifier. Consider removing the experimental decorator."),
                    await_expression_cannot_be_used_inside_a_class_static_block: i(18037, 1, "await_expression_cannot_be_used_inside_a_class_static_block_18037", "'await' expression cannot be used inside a class static block."),
                    for_await_loops_cannot_be_used_inside_a_class_static_block: i(18038, 1, "for_await_loops_cannot_be_used_inside_a_class_static_block_18038", "'for await' loops cannot be used inside a class static block."),
                    Invalid_use_of_0_It_cannot_be_used_inside_a_class_static_block: i(18039, 1, "Invalid_use_of_0_It_cannot_be_used_inside_a_class_static_block_18039", "Invalid use of '{0}'. It cannot be used inside a class static block."),
                    A_return_statement_cannot_be_used_inside_a_class_static_block: i(18041, 1, "A_return_statement_cannot_be_used_inside_a_class_static_block_18041", "A 'return' statement cannot be used inside a class static block."),
                    _0_is_a_type_and_cannot_be_imported_in_JavaScript_files_Use_1_in_a_JSDoc_type_annotation: i(18042, 1, "_0_is_a_type_and_cannot_be_imported_in_JavaScript_files_Use_1_in_a_JSDoc_type_annotation_18042", "'{0}' is a type and cannot be imported in JavaScript files. Use '{1}' in a JSDoc type annotation."),
                    Types_cannot_appear_in_export_declarations_in_JavaScript_files: i(18043, 1, "Types_cannot_appear_in_export_declarations_in_JavaScript_files_18043", "Types cannot appear in export declarations in JavaScript files."),
                    _0_is_automatically_exported_here: i(18044, 3, "_0_is_automatically_exported_here_18044", "'{0}' is automatically exported here."),
                    Properties_with_the_accessor_modifier_are_only_available_when_targeting_ECMAScript_2015_and_higher: i(18045, 1, "Properties_with_the_accessor_modifier_are_only_available_when_targeting_ECMAScript_2015_and_higher_18045", "Properties with the 'accessor' modifier are only available when targeting ECMAScript 2015 and higher."),
                    _0_is_of_type_unknown: i(18046, 1, "_0_is_of_type_unknown_18046", "'{0}' is of type 'unknown'."),
                    _0_is_possibly_null: i(18047, 1, "_0_is_possibly_null_18047", "'{0}' is possibly 'null'."),
                    _0_is_possibly_undefined: i(18048, 1, "_0_is_possibly_undefined_18048", "'{0}' is possibly 'undefined'."),
                    _0_is_possibly_null_or_undefined: i(18049, 1, "_0_is_possibly_null_or_undefined_18049", "'{0}' is possibly 'null' or 'undefined'."),
                    The_value_0_cannot_be_used_here: i(18050, 1, "The_value_0_cannot_be_used_here_18050", "The value '{0}' cannot be used here."),
                    Compiler_option_0_cannot_be_given_an_empty_string: i(18051, 1, "Compiler_option_0_cannot_be_given_an_empty_string_18051", "Compiler option '{0}' cannot be given an empty string."),
                    Non_abstract_class_0_does_not_implement_all_abstract_members_of_1: i(18052, 1, "Non_abstract_class_0_does_not_implement_all_abstract_members_of_1_18052", "Non-abstract class '{0}' does not implement all abstract members of '{1}'"),
                    Its_type_0_is_not_a_valid_JSX_element_type: i(18053, 1, "Its_type_0_is_not_a_valid_JSX_element_type_18053", "Its type '{0}' is not a valid JSX element type."),
                    await_using_statements_cannot_be_used_inside_a_class_static_block: i(18054, 1, "await_using_statements_cannot_be_used_inside_a_class_static_block_18054", "'await using' statements cannot be used inside a class static block.")
                };
            }
        });
        function wt(e) {
            return e >= 80;
        }
        function Qv(e) {
            return e === 32 || wt(e);
        }
        function i_(e, t) {
            if (e < t[0]) return !1;
            let n = 0, a = t.length, _;
            for(; n + 1 < a;){
                if (_ = n + (a - n) / 2, _ -= _ % 2, t[_] <= e && e <= t[_ + 1]) return !0;
                e < t[_] ? a = _ : n = _ + 2;
            }
            return !1;
        }
        function Yv(e, t) {
            return t >= 2 ? i_(e, _4) : t === 1 ? i_(e, o4) : i_(e, i4);
        }
        function nC(e, t) {
            return t >= 2 ? i_(e, c4) : t === 1 ? i_(e, s4) : i_(e, a4);
        }
        function rC(e) {
            let t = [];
            return e.forEach((n, a)=>{
                t[n] = a;
            }), t;
        }
        function en(e) {
            return f4[e];
        }
        function Fl(e) {
            return v0.get(e);
        }
        function Xd(e) {
            let t = [], n = 0, a = 0;
            for(; n < e.length;){
                let _ = e.charCodeAt(n);
                switch(n++, _){
                    case 13:
                        e.charCodeAt(n) === 10 && n++;
                    case 10:
                        t.push(a), a = n;
                        break;
                    default:
                        _ > 127 && On(_) && (t.push(a), a = n);
                        break;
                }
            }
            return t.push(a), t;
        }
        function iC(e, t, n, a) {
            return e.getPositionOfLineAndCharacter ? e.getPositionOfLineAndCharacter(t, n, a) : Ag(Aa(e), t, n, e.text, a);
        }
        function Ag(e, t, n, a, _) {
            (t < 0 || t >= e.length) && (_ ? t = t < 0 ? 0 : t >= e.length ? e.length - 1 : t : I.fail(`Bad line number. Line: ${t}, lineStarts.length: ${e.length} , line map is correct? ${a !== void 0 ? pv(e, Xd(a)) : "unknown"}`));
            let p = e[t] + n;
            return _ ? p > e[t + 1] ? e[t + 1] : typeof a == "string" && p > a.length ? a.length : p : (t < e.length - 1 ? I.assert(p < e[t + 1]) : a !== void 0 && I.assert(p <= a.length), p);
        }
        function Aa(e) {
            return e.lineMap || (e.lineMap = Xd(e.text));
        }
        function kg(e, t) {
            let n = __(e, t);
            return {
                line: n,
                character: t - e[n]
            };
        }
        function __(e, t, n) {
            let a = Jl(e, t, bt, Mn, n);
            return a < 0 && (a = ~a - 1, I.assert(a !== -1, "position cannot precede the beginning of the file")), a;
        }
        function T_(e, t, n) {
            if (t === n) return 0;
            let a = Aa(e), _ = Math.min(t, n), p = _ === n, m = p ? t : n, y = __(a, _), u = __(a, m, y);
            return p ? y - u : u - y;
        }
        function no(e, t) {
            return kg(Aa(e), t);
        }
        function ka(e) {
            return Mo(e) || On(e);
        }
        function Mo(e) {
            return e === 32 || e === 9 || e === 11 || e === 12 || e === 160 || e === 133 || e === 5760 || e >= 8192 && e <= 8203 || e === 8239 || e === 8287 || e === 12288 || e === 65279;
        }
        function On(e) {
            return e === 10 || e === 13 || e === 8232 || e === 8233;
        }
        function Do(e) {
            return e >= 48 && e <= 57;
        }
        function P6(e) {
            return Do(e) || e >= 65 && e <= 70 || e >= 97 && e <= 102;
        }
        function aC(e) {
            return e <= 1114111;
        }
        function Of(e) {
            return e >= 48 && e <= 55;
        }
        function oC(e, t) {
            let n = e.charCodeAt(t);
            switch(n){
                case 13:
                case 10:
                case 9:
                case 11:
                case 12:
                case 32:
                case 47:
                case 60:
                case 124:
                case 61:
                case 62:
                    return !0;
                case 35:
                    return t === 0;
                default:
                    return n > 127;
            }
        }
        function Mt(e, t, n, a, _) {
            if (Da(t)) return t;
            let p = !1;
            for(;;){
                let m = e.charCodeAt(t);
                switch(m){
                    case 13:
                        e.charCodeAt(t + 1) === 10 && t++;
                    case 10:
                        if (t++, n) return t;
                        p = !!_;
                        continue;
                    case 9:
                    case 11:
                    case 12:
                    case 32:
                        t++;
                        continue;
                    case 47:
                        if (a) break;
                        if (e.charCodeAt(t + 1) === 47) {
                            for(t += 2; t < e.length && !On(e.charCodeAt(t));)t++;
                            p = !1;
                            continue;
                        }
                        if (e.charCodeAt(t + 1) === 42) {
                            for(t += 2; t < e.length;){
                                if (e.charCodeAt(t) === 42 && e.charCodeAt(t + 1) === 47) {
                                    t += 2;
                                    break;
                                }
                                t++;
                            }
                            p = !1;
                            continue;
                        }
                        break;
                    case 60:
                    case 124:
                    case 61:
                    case 62:
                        if (Io(e, t)) {
                            t = Qs(e, t), p = !1;
                            continue;
                        }
                        break;
                    case 35:
                        if (t === 0 && Dg(e, t)) {
                            t = Pg(e, t), p = !1;
                            continue;
                        }
                        break;
                    case 42:
                        if (p) {
                            t++, p = !1;
                            continue;
                        }
                        break;
                    default:
                        if (m > 127 && ka(m)) {
                            t++;
                            continue;
                        }
                        break;
                }
                return t;
            }
        }
        function Io(e, t) {
            if (I.assert(t >= 0), t === 0 || On(e.charCodeAt(t - 1))) {
                let n = e.charCodeAt(t);
                if (t + fl < e.length) {
                    for(let a = 0; a < fl; a++)if (e.charCodeAt(t + a) !== n) return !1;
                    return n === 61 || e.charCodeAt(t + fl) === 32;
                }
            }
            return !1;
        }
        function Qs(e, t, n) {
            n && n(B.Merge_conflict_marker_encountered, t, fl);
            let a = e.charCodeAt(t), _ = e.length;
            if (a === 60 || a === 62) for(; t < _ && !On(e.charCodeAt(t));)t++;
            else for(I.assert(a === 124 || a === 61); t < _;){
                let p = e.charCodeAt(t);
                if ((p === 61 || p === 62) && p !== a && Io(e, t)) break;
                t++;
            }
            return t;
        }
        function Dg(e, t) {
            return I.assert(t === 0), Qd.test(e);
        }
        function Pg(e, t) {
            let n = Qd.exec(e)[0];
            return t = t + n.length, t;
        }
        function $d(e, t, n, a, _, p, m) {
            let y, u, x, d, S = !1, T = a, A = m;
            if (n === 0) {
                T = !0;
                let N = n4(t);
                N && (n = N.length);
            }
            e: for(; n >= 0 && n < t.length;){
                let N = t.charCodeAt(n);
                switch(N){
                    case 13:
                        t.charCodeAt(n + 1) === 10 && n++;
                    case 10:
                        if (n++, a) break e;
                        T = !0, S && (d = !0);
                        continue;
                    case 9:
                    case 11:
                    case 12:
                    case 32:
                        n++;
                        continue;
                    case 47:
                        let q = t.charCodeAt(n + 1), Q = !1;
                        if (q === 47 || q === 42) {
                            let se = q === 47 ? 2 : 3, fe = n;
                            if (n += 2, q === 47) for(; n < t.length;){
                                if (On(t.charCodeAt(n))) {
                                    Q = !0;
                                    break;
                                }
                                n++;
                            }
                            else for(; n < t.length;){
                                if (t.charCodeAt(n) === 42 && t.charCodeAt(n + 1) === 47) {
                                    n += 2;
                                    break;
                                }
                                n++;
                            }
                            if (T) {
                                if (S && (A = _(y, u, x, d, p, A), !e && A)) return A;
                                y = fe, u = n, x = se, d = Q, S = !0;
                            }
                            continue;
                        }
                        break e;
                    default:
                        if (N > 127 && ka(N)) {
                            S && On(N) && (d = !0), n++;
                            continue;
                        }
                        break e;
                }
            }
            return S && (A = _(y, u, x, d, p, A)), A;
        }
        function sC(e, t, n, a) {
            return $d(!1, e, t, !1, n, a);
        }
        function _C(e, t, n, a) {
            return $d(!1, e, t, !0, n, a);
        }
        function Kv(e, t, n, a, _) {
            return $d(!0, e, t, !1, n, a, _);
        }
        function Zv(e, t, n, a, _) {
            return $d(!0, e, t, !0, n, a, _);
        }
        function e4(e, t, n, a, _, p = []) {
            return p.push({
                kind: n,
                pos: e,
                end: t,
                hasTrailingNewLine: a
            }), p;
        }
        function Ho(e, t) {
            return Kv(e, t, e4, void 0, void 0);
        }
        function t4(e, t) {
            return Zv(e, t, e4, void 0, void 0);
        }
        function n4(e) {
            let t = Qd.exec(e);
            if (t) return t[0];
        }
        function yr(e, t) {
            return e >= 65 && e <= 90 || e >= 97 && e <= 122 || e === 36 || e === 95 || e > 127 && Yv(e, t);
        }
        function Ka(e, t, n) {
            return e >= 65 && e <= 90 || e >= 97 && e <= 122 || e >= 48 && e <= 57 || e === 36 || e === 95 || (n === 1 ? e === 45 || e === 58 : !1) || e > 127 && nC(e, t);
        }
        function Ig(e, t, n) {
            let a = Br(e, 0);
            if (!yr(a, t)) return !1;
            for(let _ = ti(a); _ < e.length; _ += ti(a))if (!Ka(a = Br(e, _), t, n)) return !1;
            return !0;
        }
        function ss(e, t, n = 0, a, _, p, m) {
            var y = a, u, x, d, S, T, A, N, q, Q = 0, se = 0, fe = 0;
            ye(y, p, m);
            var F = {
                getTokenFullStart: ()=>d,
                getStartPos: ()=>d,
                getTokenEnd: ()=>u,
                getTextPos: ()=>u,
                getToken: ()=>T,
                getTokenStart: ()=>S,
                getTokenPos: ()=>S,
                getTokenText: ()=>y.substring(S, u),
                getTokenValue: ()=>A,
                hasUnicodeEscape: ()=>(N & 1024) !== 0,
                hasExtendedUnicodeEscape: ()=>(N & 8) !== 0,
                hasPrecedingLineBreak: ()=>(N & 1) !== 0,
                hasPrecedingJSDocComment: ()=>(N & 2) !== 0,
                isIdentifier: ()=>T === 80 || T > 118,
                isReservedWord: ()=>T >= 83 && T <= 118,
                isUnterminated: ()=>(N & 4) !== 0,
                getCommentDirectives: ()=>q,
                getNumericLiteralFlags: ()=>N & 25584,
                getTokenFlags: ()=>N,
                reScanGreaterToken: xt,
                reScanAsteriskEqualsToken: ut,
                reScanSlashToken: Gt,
                reScanTemplateToken: Dr,
                reScanTemplateHeadOrNoSubstitutionTemplate: Tt,
                scanJsxIdentifier: Zt,
                scanJsxAttributeValue: lr,
                reScanJsxAttributeValue: di,
                reScanJsxToken: Rn,
                reScanLessThanToken: yt,
                reScanHashToken: jn,
                reScanQuestionToken: ct,
                reScanInvalidIdentifier: kr,
                scanJsxToken: Kt,
                scanJsDocToken: Yn,
                scanJSDocCommentTextToken: Xr,
                scan: rn,
                getText: U,
                clearCommentDirectives: ie,
                setText: ye,
                setScriptTarget: tt,
                setLanguageVariant: $e,
                setScriptKind: Ut,
                setJSDocParsingMode: St,
                setOnError: Te,
                resetTokenState: Jt,
                setTextPos: Jt,
                setInJSDocType: Rt,
                tryScan: De,
                lookAhead: Pr,
                scanRange: Ji
            };
            return I.isDebugging && Object.defineProperty(F, "__debugShowCurrentPositionInText", {
                get: ()=>{
                    let z = F.getText();
                    return z.slice(0, F.getTokenFullStart()) + "\u2551" + z.slice(F.getTokenFullStart());
                }
            }), F;
            function W(z, K = u, te, Ee) {
                if (_) {
                    let je = u;
                    u = K, _(z, te || 0, Ee), u = je;
                }
            }
            function Se() {
                let z = u, K = !1, te = !1, Ee = "";
                for(;;){
                    let je = y.charCodeAt(u);
                    if (je === 95) {
                        N |= 512, K ? (K = !1, te = !0, Ee += y.substring(z, u)) : (N |= 16384, W(te ? B.Multiple_consecutive_numeric_separators_are_not_permitted : B.Numeric_separators_are_not_allowed_here, u, 1)), u++, z = u;
                        continue;
                    }
                    if (Do(je)) {
                        K = !0, te = !1, u++;
                        continue;
                    }
                    break;
                }
                return y.charCodeAt(u - 1) === 95 && (N |= 16384, W(B.Numeric_separators_are_not_allowed_here, u - 1, 1)), Ee + y.substring(z, u);
            }
            function Qe() {
                let z = u, K;
                if (y.charCodeAt(u) === 48) {
                    if (u++, y.charCodeAt(u) === 95) N |= 16896, W(B.Numeric_separators_are_not_allowed_here, u, 1), u--, K = Se();
                    else if (!st()) N |= 8192, K = "" + +A;
                    else if (!A) K = "0";
                    else {
                        A = "" + parseInt(A, 8), N |= 32;
                        let nt = T === 41, kt = (nt ? "-" : "") + "0o" + (+A).toString(8);
                        return nt && z--, W(B.Octal_literals_are_not_allowed_Use_the_syntax_0, z, u - z, kt), 9;
                    }
                } else K = Se();
                let te, Ee;
                y.charCodeAt(u) === 46 && (u++, te = Se());
                let je = u;
                if (y.charCodeAt(u) === 69 || y.charCodeAt(u) === 101) {
                    u++, N |= 16, (y.charCodeAt(u) === 43 || y.charCodeAt(u) === 45) && u++;
                    let nt = u, kt = Se();
                    kt ? (Ee = y.substring(je, nt) + kt, je = u) : W(B.Digit_expected);
                }
                let pt;
                if (N & 512 ? (pt = K, te && (pt += "." + te), Ee && (pt += Ee)) : pt = y.substring(z, je), N & 8192) return W(B.Decimals_with_leading_zeros_are_not_allowed, z, je - z), A = "" + +pt, 9;
                if (te !== void 0 || N & 16) return Be(z, te === void 0 && !!(N & 16)), A = "" + +pt, 9;
                {
                    A = pt;
                    let nt = Ht();
                    return Be(z), nt;
                }
            }
            function Be(z, K) {
                if (!yr(Br(y, u), e)) return;
                let te = u, { length: Ee } = vt();
                Ee === 1 && y[te] === "n" ? W(K ? B.A_bigint_literal_cannot_use_exponential_notation : B.A_bigint_literal_must_be_an_integer, z, te - z + 1) : (W(B.An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal, te, Ee), u = te);
            }
            function st() {
                let z = u, K = !0;
                for(; Do(y.charCodeAt(u));)Of(y.charCodeAt(u)) || (K = !1), u++;
                return A = y.substring(z, u), K;
            }
            function _t(z, K) {
                let te = yn(z, !1, K);
                return te ? parseInt(te, 16) : -1;
            }
            function hn(z, K) {
                return yn(z, !0, K);
            }
            function yn(z, K, te) {
                let Ee = [], je = !1, pt = !1;
                for(; Ee.length < z || K;){
                    let nt = y.charCodeAt(u);
                    if (te && nt === 95) {
                        N |= 512, je ? (je = !1, pt = !0) : W(pt ? B.Multiple_consecutive_numeric_separators_are_not_permitted : B.Numeric_separators_are_not_allowed_here, u, 1), u++;
                        continue;
                    }
                    if (je = te, nt >= 65 && nt <= 70) nt += 32;
                    else if (!(nt >= 48 && nt <= 57 || nt >= 97 && nt <= 102)) break;
                    Ee.push(nt), u++, pt = !1;
                }
                return Ee.length < z && (Ee = []), y.charCodeAt(u - 1) === 95 && W(B.Numeric_separators_are_not_allowed_here, u - 1, 1), String.fromCharCode(...Ee);
            }
            function fi(z = !1) {
                let K = y.charCodeAt(u);
                u++;
                let te = "", Ee = u;
                for(;;){
                    if (u >= x) {
                        te += y.substring(Ee, u), N |= 4, W(B.Unterminated_string_literal);
                        break;
                    }
                    let je = y.charCodeAt(u);
                    if (je === K) {
                        te += y.substring(Ee, u), u++;
                        break;
                    }
                    if (je === 92 && !z) {
                        te += y.substring(Ee, u), te += cr(!0), Ee = u;
                        continue;
                    }
                    if ((je === 10 || je === 13) && !z) {
                        te += y.substring(Ee, u), N |= 4, W(B.Unterminated_string_literal);
                        break;
                    }
                    u++;
                }
                return te;
            }
            function gn(z) {
                let K = y.charCodeAt(u) === 96;
                u++;
                let te = u, Ee = "", je;
                for(;;){
                    if (u >= x) {
                        Ee += y.substring(te, u), N |= 4, W(B.Unterminated_template_literal), je = K ? 15 : 18;
                        break;
                    }
                    let pt = y.charCodeAt(u);
                    if (pt === 96) {
                        Ee += y.substring(te, u), u++, je = K ? 15 : 18;
                        break;
                    }
                    if (pt === 36 && u + 1 < x && y.charCodeAt(u + 1) === 123) {
                        Ee += y.substring(te, u), u += 2, je = K ? 16 : 17;
                        break;
                    }
                    if (pt === 92) {
                        Ee += y.substring(te, u), Ee += cr(z), te = u;
                        continue;
                    }
                    if (pt === 13) {
                        Ee += y.substring(te, u), u++, u < x && y.charCodeAt(u) === 10 && u++, Ee += `
`, te = u;
                        continue;
                    }
                    u++;
                }
                return I.assert(je !== void 0), A = Ee, je;
            }
            function cr(z) {
                let K = u;
                if (u++, u >= x) return W(B.Unexpected_end_of_text), "";
                let te = y.charCodeAt(u);
                switch(u++, te){
                    case 48:
                        if (u >= x || !Do(y.charCodeAt(u))) return "\0";
                    case 49:
                    case 50:
                    case 51:
                        u < x && Of(y.charCodeAt(u)) && u++;
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                        if (u < x && Of(y.charCodeAt(u)) && u++, N |= 2048, z) {
                            let Ee = parseInt(y.substring(K + 1, u), 8);
                            return W(B.Octal_escape_sequences_are_not_allowed_Use_the_syntax_0, K, u - K, "\\x" + Ee.toString(16).padStart(2, "0")), String.fromCharCode(Ee);
                        }
                        return y.substring(K, u);
                    case 56:
                    case 57:
                        return N |= 2048, z ? (W(B.Escape_sequence_0_is_not_allowed, K, u - K, y.substring(K, u)), String.fromCharCode(te)) : y.substring(K, u);
                    case 98:
                        return "\b";
                    case 116:
                        return "	";
                    case 110:
                        return `
`;
                    case 118:
                        return "\v";
                    case 102:
                        return "\f";
                    case 114:
                        return "\r";
                    case 39:
                        return "'";
                    case 34:
                        return '"';
                    case 117:
                        if (u < x && y.charCodeAt(u) === 123) {
                            u++;
                            let Ee = hn(1, !1), je = Ee ? parseInt(Ee, 16) : -1;
                            return je < 0 ? (N |= 2048, z && W(B.Hexadecimal_digit_expected), y.substring(K, u)) : aC(je) ? u >= x ? (N |= 2048, z && W(B.Unexpected_end_of_text), y.substring(K, u)) : y.charCodeAt(u) !== 125 ? (N |= 2048, z && W(B.Unterminated_Unicode_escape_sequence), y.substring(K, u)) : (u++, N |= 8, Mf(je)) : (N |= 2048, z && W(B.An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive), y.substring(K, u));
                        }
                        for(; u < K + 6; u++)if (!(u < x && P6(y.charCodeAt(u)))) return N |= 2048, z && W(B.Hexadecimal_digit_expected), y.substring(K, u);
                        return N |= 1024, String.fromCharCode(parseInt(y.substring(K + 2, u), 16));
                    case 120:
                        for(; u < K + 4; u++)if (!(u < x && P6(y.charCodeAt(u)))) return N |= 2048, z && W(B.Hexadecimal_digit_expected), y.substring(K, u);
                        return N |= 4096, String.fromCharCode(parseInt(y.substring(K + 2, u), 16));
                    case 13:
                        u < x && y.charCodeAt(u) === 10 && u++;
                    case 10:
                    case 8232:
                    case 8233:
                        return "";
                    default:
                        return String.fromCharCode(te);
                }
            }
            function He() {
                let z = hn(1, !1), K = z ? parseInt(z, 16) : -1, te = !1;
                return K < 0 ? (W(B.Hexadecimal_digit_expected), te = !0) : K > 1114111 && (W(B.An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive), te = !0), u >= x ? (W(B.Unexpected_end_of_text), te = !0) : y.charCodeAt(u) === 125 ? u++ : (W(B.Unterminated_Unicode_escape_sequence), te = !0), te ? "" : Mf(K);
            }
            function Qn() {
                if (u + 5 < x && y.charCodeAt(u + 1) === 117) {
                    let z = u;
                    u += 2;
                    let K = _t(4, !1);
                    return u = z, K;
                }
                return -1;
            }
            function Gr() {
                if (Br(y, u + 1) === 117 && Br(y, u + 2) === 123) {
                    let z = u;
                    u += 3;
                    let K = hn(1, !1), te = K ? parseInt(K, 16) : -1;
                    return u = z, te;
                }
                return -1;
            }
            function vt() {
                let z = "", K = u;
                for(; u < x;){
                    let te = Br(y, u);
                    if (Ka(te, e)) u += ti(te);
                    else if (te === 92) {
                        if (te = Gr(), te >= 0 && Ka(te, e)) {
                            u += 3, N |= 8, z += He(), K = u;
                            continue;
                        }
                        if (te = Qn(), !(te >= 0 && Ka(te, e))) break;
                        N |= 1024, z += y.substring(K, u), z += Mf(te), u += 6, K = u;
                    } else break;
                }
                return z += y.substring(K, u), z;
            }
            function Jn() {
                let z = A.length;
                if (z >= 2 && z <= 12) {
                    let K = A.charCodeAt(0);
                    if (K >= 97 && K <= 122) {
                        let te = r4.get(A);
                        if (te !== void 0) return T = te;
                    }
                }
                return T = 80;
            }
            function Ar(z) {
                let K = "", te = !1, Ee = !1;
                for(;;){
                    let je = y.charCodeAt(u);
                    if (je === 95) {
                        N |= 512, te ? (te = !1, Ee = !0) : W(Ee ? B.Multiple_consecutive_numeric_separators_are_not_permitted : B.Numeric_separators_are_not_allowed_here, u, 1), u++;
                        continue;
                    }
                    if (te = !0, !Do(je) || je - 48 >= z) break;
                    K += y[u], u++, Ee = !1;
                }
                return y.charCodeAt(u - 1) === 95 && W(B.Numeric_separators_are_not_allowed_here, u - 1, 1), K;
            }
            function Ht() {
                return y.charCodeAt(u) === 110 ? (A += "n", N & 384 && (A = Am(A) + "n"), u++, 10) : (A = "" + (N & 128 ? parseInt(A.slice(2), 2) : N & 256 ? parseInt(A.slice(2), 8) : +A), 9);
            }
            function rn() {
                d = u, N = 0;
                let z = !1;
                for(;;){
                    if (S = u, u >= x) return T = 1;
                    let K = Br(y, u);
                    if (u === 0) {
                        if (K === 65533) return W(B.File_appears_to_be_binary), u = x, T = 8;
                        if (K === 35 && Dg(y, u)) {
                            if (u = Pg(y, u), t) continue;
                            return T = 6;
                        }
                    }
                    switch(K){
                        case 10:
                        case 13:
                            if (N |= 1, t) {
                                u++;
                                continue;
                            } else return K === 13 && u + 1 < x && y.charCodeAt(u + 1) === 10 ? u += 2 : u++, T = 4;
                        case 9:
                        case 11:
                        case 12:
                        case 32:
                        case 160:
                        case 5760:
                        case 8192:
                        case 8193:
                        case 8194:
                        case 8195:
                        case 8196:
                        case 8197:
                        case 8198:
                        case 8199:
                        case 8200:
                        case 8201:
                        case 8202:
                        case 8203:
                        case 8239:
                        case 8287:
                        case 12288:
                        case 65279:
                            if (t) {
                                u++;
                                continue;
                            } else {
                                for(; u < x && Mo(y.charCodeAt(u));)u++;
                                return T = 5;
                            }
                        case 33:
                            return y.charCodeAt(u + 1) === 61 ? y.charCodeAt(u + 2) === 61 ? (u += 3, T = 38) : (u += 2, T = 36) : (u++, T = 54);
                        case 34:
                        case 39:
                            return A = fi(), T = 11;
                        case 96:
                            return T = gn(!1);
                        case 37:
                            return y.charCodeAt(u + 1) === 61 ? (u += 2, T = 70) : (u++, T = 45);
                        case 38:
                            return y.charCodeAt(u + 1) === 38 ? y.charCodeAt(u + 2) === 61 ? (u += 3, T = 77) : (u += 2, T = 56) : y.charCodeAt(u + 1) === 61 ? (u += 2, T = 74) : (u++, T = 51);
                        case 40:
                            return u++, T = 21;
                        case 41:
                            return u++, T = 22;
                        case 42:
                            if (y.charCodeAt(u + 1) === 61) return u += 2, T = 67;
                            if (y.charCodeAt(u + 1) === 42) return y.charCodeAt(u + 2) === 61 ? (u += 3, T = 68) : (u += 2, T = 43);
                            if (u++, Q && !z && N & 1) {
                                z = !0;
                                continue;
                            }
                            return T = 42;
                        case 43:
                            return y.charCodeAt(u + 1) === 43 ? (u += 2, T = 46) : y.charCodeAt(u + 1) === 61 ? (u += 2, T = 65) : (u++, T = 40);
                        case 44:
                            return u++, T = 28;
                        case 45:
                            return y.charCodeAt(u + 1) === 45 ? (u += 2, T = 47) : y.charCodeAt(u + 1) === 61 ? (u += 2, T = 66) : (u++, T = 41);
                        case 46:
                            return Do(y.charCodeAt(u + 1)) ? (Qe(), T = 9) : y.charCodeAt(u + 1) === 46 && y.charCodeAt(u + 2) === 46 ? (u += 3, T = 26) : (u++, T = 25);
                        case 47:
                            if (y.charCodeAt(u + 1) === 47) {
                                for(u += 2; u < x && !On(y.charCodeAt(u));)u++;
                                if (q = cn(q, y.slice(S, u), l4, S), t) continue;
                                return T = 2;
                            }
                            if (y.charCodeAt(u + 1) === 42) {
                                u += 2;
                                let kt = y.charCodeAt(u) === 42 && y.charCodeAt(u + 1) !== 47, qt = !1, Zn = S;
                                for(; u < x;){
                                    let kn = y.charCodeAt(u);
                                    if (kn === 42 && y.charCodeAt(u + 1) === 47) {
                                        u += 2, qt = !0;
                                        break;
                                    }
                                    u++, On(kn) && (Zn = u, N |= 1);
                                }
                                if (kt && at() && (N |= 2), q = cn(q, y.slice(Zn, u), u4, Zn), qt || W(B.Asterisk_Slash_expected), t) continue;
                                return qt || (N |= 4), T = 3;
                            }
                            return y.charCodeAt(u + 1) === 61 ? (u += 2, T = 69) : (u++, T = 44);
                        case 48:
                            if (u + 2 < x && (y.charCodeAt(u + 1) === 88 || y.charCodeAt(u + 1) === 120)) return u += 2, A = hn(1, !0), A || (W(B.Hexadecimal_digit_expected), A = "0"), A = "0x" + A, N |= 64, T = Ht();
                            if (u + 2 < x && (y.charCodeAt(u + 1) === 66 || y.charCodeAt(u + 1) === 98)) return u += 2, A = Ar(2), A || (W(B.Binary_digit_expected), A = "0"), A = "0b" + A, N |= 128, T = Ht();
                            if (u + 2 < x && (y.charCodeAt(u + 1) === 79 || y.charCodeAt(u + 1) === 111)) return u += 2, A = Ar(8), A || (W(B.Octal_digit_expected), A = "0"), A = "0o" + A, N |= 256, T = Ht();
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            return T = Qe();
                        case 58:
                            return u++, T = 59;
                        case 59:
                            return u++, T = 27;
                        case 60:
                            if (Io(y, u)) {
                                if (u = Qs(y, u, W), t) continue;
                                return T = 7;
                            }
                            return y.charCodeAt(u + 1) === 60 ? y.charCodeAt(u + 2) === 61 ? (u += 3, T = 71) : (u += 2, T = 48) : y.charCodeAt(u + 1) === 61 ? (u += 2, T = 33) : n === 1 && y.charCodeAt(u + 1) === 47 && y.charCodeAt(u + 2) !== 42 ? (u += 2, T = 31) : (u++, T = 30);
                        case 61:
                            if (Io(y, u)) {
                                if (u = Qs(y, u, W), t) continue;
                                return T = 7;
                            }
                            return y.charCodeAt(u + 1) === 61 ? y.charCodeAt(u + 2) === 61 ? (u += 3, T = 37) : (u += 2, T = 35) : y.charCodeAt(u + 1) === 62 ? (u += 2, T = 39) : (u++, T = 64);
                        case 62:
                            if (Io(y, u)) {
                                if (u = Qs(y, u, W), t) continue;
                                return T = 7;
                            }
                            return u++, T = 32;
                        case 63:
                            return y.charCodeAt(u + 1) === 46 && !Do(y.charCodeAt(u + 2)) ? (u += 2, T = 29) : y.charCodeAt(u + 1) === 63 ? y.charCodeAt(u + 2) === 61 ? (u += 3, T = 78) : (u += 2, T = 61) : (u++, T = 58);
                        case 91:
                            return u++, T = 23;
                        case 93:
                            return u++, T = 24;
                        case 94:
                            return y.charCodeAt(u + 1) === 61 ? (u += 2, T = 79) : (u++, T = 53);
                        case 123:
                            return u++, T = 19;
                        case 124:
                            if (Io(y, u)) {
                                if (u = Qs(y, u, W), t) continue;
                                return T = 7;
                            }
                            return y.charCodeAt(u + 1) === 124 ? y.charCodeAt(u + 2) === 61 ? (u += 3, T = 76) : (u += 2, T = 57) : y.charCodeAt(u + 1) === 61 ? (u += 2, T = 75) : (u++, T = 52);
                        case 125:
                            return u++, T = 20;
                        case 126:
                            return u++, T = 55;
                        case 64:
                            return u++, T = 60;
                        case 92:
                            let te = Gr();
                            if (te >= 0 && yr(te, e)) return u += 3, N |= 8, A = He() + vt(), T = Jn();
                            let Ee = Qn();
                            return Ee >= 0 && yr(Ee, e) ? (u += 6, N |= 1024, A = String.fromCharCode(Ee) + vt(), T = Jn()) : (W(B.Invalid_character), u++, T = 0);
                        case 35:
                            if (u !== 0 && y[u + 1] === "!") return W(B.can_only_be_used_at_the_start_of_a_file), u++, T = 0;
                            let je = Br(y, u + 1);
                            if (je === 92) {
                                u++;
                                let kt = Gr();
                                if (kt >= 0 && yr(kt, e)) return u += 3, N |= 8, A = "#" + He() + vt(), T = 81;
                                let qt = Qn();
                                if (qt >= 0 && yr(qt, e)) return u += 6, N |= 1024, A = "#" + String.fromCharCode(qt) + vt(), T = 81;
                                u--;
                            }
                            return yr(je, e) ? (u++, an(je, e)) : (A = "#", W(B.Invalid_character, u++, ti(K))), T = 81;
                        default:
                            let pt = an(K, e);
                            if (pt) return T = pt;
                            if (Mo(K)) {
                                u += ti(K);
                                continue;
                            } else if (On(K)) {
                                N |= 1, u += ti(K);
                                continue;
                            }
                            let nt = ti(K);
                            return W(B.Invalid_character, u, nt), u += nt, T = 0;
                    }
                }
            }
            function at() {
                switch(fe){
                    case 0:
                        return !0;
                    case 1:
                        return !1;
                }
                return se !== 3 && se !== 4 ? !0 : fe === 3 ? !1 : p4.test(y.slice(d, u));
            }
            function kr() {
                I.assert(T === 0, "'reScanInvalidIdentifier' should only be called when the current token is 'SyntaxKind.Unknown'."), u = S = d, N = 0;
                let z = Br(y, u), K = an(z, 99);
                return K ? T = K : (u += ti(z), T);
            }
            function an(z, K) {
                let te = z;
                if (yr(te, K)) {
                    for(u += ti(te); u < x && Ka(te = Br(y, u), K);)u += ti(te);
                    return A = y.substring(S, u), te === 92 && (A += vt()), Jn();
                }
            }
            function xt() {
                if (T === 32) {
                    if (y.charCodeAt(u) === 62) return y.charCodeAt(u + 1) === 62 ? y.charCodeAt(u + 2) === 61 ? (u += 3, T = 73) : (u += 2, T = 50) : y.charCodeAt(u + 1) === 61 ? (u += 2, T = 72) : (u++, T = 49);
                    if (y.charCodeAt(u) === 61) return u++, T = 34;
                }
                return T;
            }
            function ut() {
                return I.assert(T === 67, "'reScanAsteriskEqualsToken' should only be called on a '*='"), u = S + 1, T = 64;
            }
            function Gt() {
                if (T === 44 || T === 69) {
                    let z = S + 1, K = !1, te = !1;
                    for(;;){
                        if (z >= x) {
                            N |= 4, W(B.Unterminated_regular_expression_literal);
                            break;
                        }
                        let Ee = y.charCodeAt(z);
                        if (On(Ee)) {
                            N |= 4, W(B.Unterminated_regular_expression_literal);
                            break;
                        }
                        if (K) K = !1;
                        else if (Ee === 47 && !te) {
                            z++;
                            break;
                        } else Ee === 91 ? te = !0 : Ee === 92 ? K = !0 : Ee === 93 && (te = !1);
                        z++;
                    }
                    for(; z < x && Ka(y.charCodeAt(z), e);)z++;
                    u = z, A = y.substring(S, u), T = 14;
                }
                return T;
            }
            function cn(z, K, te, Ee) {
                let je = ht(K.trimStart(), te);
                return je === void 0 ? z : Et(z, {
                    range: {
                        pos: Ee,
                        end: u
                    },
                    type: je
                });
            }
            function ht(z, K) {
                let te = K.exec(z);
                if (te) switch(te[1]){
                    case "ts-expect-error":
                        return 0;
                    case "ts-ignore":
                        return 1;
                }
            }
            function Dr(z) {
                return u = S, T = gn(!z);
            }
            function Tt() {
                return u = S, T = gn(!0);
            }
            function Rn(z = !0) {
                return u = S = d, T = Kt(z);
            }
            function yt() {
                return T === 48 ? (u = S + 1, T = 30) : T;
            }
            function jn() {
                return T === 81 ? (u = S + 1, T = 63) : T;
            }
            function ct() {
                return I.assert(T === 61, "'reScanQuestionToken' should only be called on a '??'"), u = S + 1, T = 58;
            }
            function Kt(z = !0) {
                if (d = S = u, u >= x) return T = 1;
                let K = y.charCodeAt(u);
                if (K === 60) return y.charCodeAt(u + 1) === 47 ? (u += 2, T = 31) : (u++, T = 30);
                if (K === 123) return u++, T = 19;
                let te = 0;
                for(; u < x && (K = y.charCodeAt(u), K !== 123);){
                    if (K === 60) {
                        if (Io(y, u)) return u = Qs(y, u, W), T = 7;
                        break;
                    }
                    if (K === 62 && W(B.Unexpected_token_Did_you_mean_or_gt, u, 1), K === 125 && W(B.Unexpected_token_Did_you_mean_or_rbrace, u, 1), On(K) && te === 0) te = -1;
                    else {
                        if (!z && On(K) && te > 0) break;
                        ka(K) || (te = u);
                    }
                    u++;
                }
                return A = y.substring(d, u), te === -1 ? 13 : 12;
            }
            function Zt() {
                if (wt(T)) {
                    for(; u < x;){
                        if (y.charCodeAt(u) === 45) {
                            A += "-", u++;
                            continue;
                        }
                        let K = u;
                        if (A += vt(), u === K) break;
                    }
                    return Jn();
                }
                return T;
            }
            function lr() {
                switch(d = u, y.charCodeAt(u)){
                    case 34:
                    case 39:
                        return A = fi(!0), T = 11;
                    default:
                        return rn();
                }
            }
            function di() {
                return u = S = d, lr();
            }
            function Xr(z) {
                if (d = S = u, N = 0, u >= x) return T = 1;
                for(let K = y.charCodeAt(u); u < x && !On(K) && K !== 96; K = Br(y, ++u))if (!z) {
                    if (K === 123) break;
                    if (K === 64 && u - 1 >= 0 && Mo(y.charCodeAt(u - 1)) && !(u + 1 < x && ka(y.charCodeAt(u + 1)))) break;
                }
                return u === S ? Yn() : (A = y.substring(S, u), T = 82);
            }
            function Yn() {
                if (d = S = u, N = 0, u >= x) return T = 1;
                let z = Br(y, u);
                switch(u += ti(z), z){
                    case 9:
                    case 11:
                    case 12:
                    case 32:
                        for(; u < x && Mo(y.charCodeAt(u));)u++;
                        return T = 5;
                    case 64:
                        return T = 60;
                    case 13:
                        y.charCodeAt(u) === 10 && u++;
                    case 10:
                        return N |= 1, T = 4;
                    case 42:
                        return T = 42;
                    case 123:
                        return T = 19;
                    case 125:
                        return T = 20;
                    case 91:
                        return T = 23;
                    case 93:
                        return T = 24;
                    case 60:
                        return T = 30;
                    case 62:
                        return T = 32;
                    case 61:
                        return T = 64;
                    case 44:
                        return T = 28;
                    case 46:
                        return T = 25;
                    case 96:
                        return T = 62;
                    case 35:
                        return T = 63;
                    case 92:
                        u--;
                        let K = Gr();
                        if (K >= 0 && yr(K, e)) return u += 3, N |= 8, A = He() + vt(), T = Jn();
                        let te = Qn();
                        return te >= 0 && yr(te, e) ? (u += 6, N |= 1024, A = String.fromCharCode(te) + vt(), T = Jn()) : (u++, T = 0);
                }
                if (yr(z, e)) {
                    let K = z;
                    for(; u < x && Ka(K = Br(y, u), e) || y.charCodeAt(u) === 45;)u += ti(K);
                    return A = y.substring(S, u), K === 92 && (A += vt()), T = Jn();
                } else return T = 0;
            }
            function Kn(z, K) {
                let te = u, Ee = d, je = S, pt = T, nt = A, kt = N, qt = z();
                return (!qt || K) && (u = te, d = Ee, S = je, T = pt, A = nt, N = kt), qt;
            }
            function Ji(z, K, te) {
                let Ee = x, je = u, pt = d, nt = S, kt = T, qt = A, Zn = N, kn = q;
                ye(y, z, K);
                let er = te();
                return x = Ee, u = je, d = pt, S = nt, T = kt, A = qt, N = Zn, q = kn, er;
            }
            function Pr(z) {
                return Kn(z, !0);
            }
            function De(z) {
                return Kn(z, !1);
            }
            function U() {
                return y;
            }
            function ie() {
                q = void 0;
            }
            function ye(z, K, te) {
                y = z || "", x = te === void 0 ? y.length : K + te, Jt(K || 0);
            }
            function Te(z) {
                _ = z;
            }
            function tt(z) {
                e = z;
            }
            function $e(z) {
                n = z;
            }
            function Ut(z) {
                se = z;
            }
            function St(z) {
                fe = z;
            }
            function Jt(z) {
                I.assert(z >= 0), u = z, d = z, S = z, T = 0, A = void 0, N = 0;
            }
            function Rt(z) {
                Q += z ? 1 : -1;
            }
        }
        function Br(e, t) {
            return e.codePointAt(t);
        }
        function ti(e) {
            return e >= 65536 ? 2 : 1;
        }
        function cC(e) {
            if (I.assert(0 <= e && e <= 1114111), e <= 65535) return String.fromCharCode(e);
            let t = Math.floor((e - 65536) / 1024) + 55296, n = (e - 65536) % 1024 + 56320;
            return String.fromCharCode(t, n);
        }
        function Mf(e) {
            return d4(e);
        }
        var pl, r4, v0, i4, a4, o4, s4, _4, c4, l4, u4, p4, f4, fl, Qd, d4, lC = It({
            "src/compiler/scanner.ts" () {
                "use strict";
                En(), pl = {
                    abstract: 128,
                    accessor: 129,
                    any: 133,
                    as: 130,
                    asserts: 131,
                    assert: 132,
                    bigint: 163,
                    boolean: 136,
                    break: 83,
                    case: 84,
                    catch: 85,
                    class: 86,
                    continue: 88,
                    const: 87,
                    constructor: 137,
                    debugger: 89,
                    declare: 138,
                    default: 90,
                    delete: 91,
                    do: 92,
                    else: 93,
                    enum: 94,
                    export: 95,
                    extends: 96,
                    false: 97,
                    finally: 98,
                    for: 99,
                    from: 161,
                    function: 100,
                    get: 139,
                    if: 101,
                    implements: 119,
                    import: 102,
                    in: 103,
                    infer: 140,
                    instanceof: 104,
                    interface: 120,
                    intrinsic: 141,
                    is: 142,
                    keyof: 143,
                    let: 121,
                    module: 144,
                    namespace: 145,
                    never: 146,
                    new: 105,
                    null: 106,
                    number: 150,
                    object: 151,
                    package: 122,
                    private: 123,
                    protected: 124,
                    public: 125,
                    override: 164,
                    out: 147,
                    readonly: 148,
                    require: 149,
                    global: 162,
                    return: 107,
                    satisfies: 152,
                    set: 153,
                    static: 126,
                    string: 154,
                    super: 108,
                    switch: 109,
                    symbol: 155,
                    this: 110,
                    throw: 111,
                    true: 112,
                    try: 113,
                    type: 156,
                    typeof: 114,
                    undefined: 157,
                    unique: 158,
                    unknown: 159,
                    using: 160,
                    var: 115,
                    void: 116,
                    while: 117,
                    with: 118,
                    yield: 127,
                    async: 134,
                    await: 135,
                    of: 165
                }, r4 = new Map(Object.entries(pl)), v0 = new Map(Object.entries({
                    ...pl,
                    "{": 19,
                    "}": 20,
                    "(": 21,
                    ")": 22,
                    "[": 23,
                    "]": 24,
                    ".": 25,
                    "...": 26,
                    ";": 27,
                    ",": 28,
                    "<": 30,
                    ">": 32,
                    "<=": 33,
                    ">=": 34,
                    "==": 35,
                    "!=": 36,
                    "===": 37,
                    "!==": 38,
                    "=>": 39,
                    "+": 40,
                    "-": 41,
                    "**": 43,
                    "*": 42,
                    "/": 44,
                    "%": 45,
                    "++": 46,
                    "--": 47,
                    "<<": 48,
                    "</": 31,
                    ">>": 49,
                    ">>>": 50,
                    "&": 51,
                    "|": 52,
                    "^": 53,
                    "!": 54,
                    "~": 55,
                    "&&": 56,
                    "||": 57,
                    "?": 58,
                    "??": 61,
                    "?.": 29,
                    ":": 59,
                    "=": 64,
                    "+=": 65,
                    "-=": 66,
                    "*=": 67,
                    "**=": 68,
                    "/=": 69,
                    "%=": 70,
                    "<<=": 71,
                    ">>=": 72,
                    ">>>=": 73,
                    "&=": 74,
                    "|=": 75,
                    "^=": 79,
                    "||=": 76,
                    "&&=": 77,
                    "??=": 78,
                    "@": 60,
                    "#": 63,
                    "`": 62
                })), i4 = [
                    170,
                    170,
                    181,
                    181,
                    186,
                    186,
                    192,
                    214,
                    216,
                    246,
                    248,
                    543,
                    546,
                    563,
                    592,
                    685,
                    688,
                    696,
                    699,
                    705,
                    720,
                    721,
                    736,
                    740,
                    750,
                    750,
                    890,
                    890,
                    902,
                    902,
                    904,
                    906,
                    908,
                    908,
                    910,
                    929,
                    931,
                    974,
                    976,
                    983,
                    986,
                    1011,
                    1024,
                    1153,
                    1164,
                    1220,
                    1223,
                    1224,
                    1227,
                    1228,
                    1232,
                    1269,
                    1272,
                    1273,
                    1329,
                    1366,
                    1369,
                    1369,
                    1377,
                    1415,
                    1488,
                    1514,
                    1520,
                    1522,
                    1569,
                    1594,
                    1600,
                    1610,
                    1649,
                    1747,
                    1749,
                    1749,
                    1765,
                    1766,
                    1786,
                    1788,
                    1808,
                    1808,
                    1810,
                    1836,
                    1920,
                    1957,
                    2309,
                    2361,
                    2365,
                    2365,
                    2384,
                    2384,
                    2392,
                    2401,
                    2437,
                    2444,
                    2447,
                    2448,
                    2451,
                    2472,
                    2474,
                    2480,
                    2482,
                    2482,
                    2486,
                    2489,
                    2524,
                    2525,
                    2527,
                    2529,
                    2544,
                    2545,
                    2565,
                    2570,
                    2575,
                    2576,
                    2579,
                    2600,
                    2602,
                    2608,
                    2610,
                    2611,
                    2613,
                    2614,
                    2616,
                    2617,
                    2649,
                    2652,
                    2654,
                    2654,
                    2674,
                    2676,
                    2693,
                    2699,
                    2701,
                    2701,
                    2703,
                    2705,
                    2707,
                    2728,
                    2730,
                    2736,
                    2738,
                    2739,
                    2741,
                    2745,
                    2749,
                    2749,
                    2768,
                    2768,
                    2784,
                    2784,
                    2821,
                    2828,
                    2831,
                    2832,
                    2835,
                    2856,
                    2858,
                    2864,
                    2866,
                    2867,
                    2870,
                    2873,
                    2877,
                    2877,
                    2908,
                    2909,
                    2911,
                    2913,
                    2949,
                    2954,
                    2958,
                    2960,
                    2962,
                    2965,
                    2969,
                    2970,
                    2972,
                    2972,
                    2974,
                    2975,
                    2979,
                    2980,
                    2984,
                    2986,
                    2990,
                    2997,
                    2999,
                    3001,
                    3077,
                    3084,
                    3086,
                    3088,
                    3090,
                    3112,
                    3114,
                    3123,
                    3125,
                    3129,
                    3168,
                    3169,
                    3205,
                    3212,
                    3214,
                    3216,
                    3218,
                    3240,
                    3242,
                    3251,
                    3253,
                    3257,
                    3294,
                    3294,
                    3296,
                    3297,
                    3333,
                    3340,
                    3342,
                    3344,
                    3346,
                    3368,
                    3370,
                    3385,
                    3424,
                    3425,
                    3461,
                    3478,
                    3482,
                    3505,
                    3507,
                    3515,
                    3517,
                    3517,
                    3520,
                    3526,
                    3585,
                    3632,
                    3634,
                    3635,
                    3648,
                    3654,
                    3713,
                    3714,
                    3716,
                    3716,
                    3719,
                    3720,
                    3722,
                    3722,
                    3725,
                    3725,
                    3732,
                    3735,
                    3737,
                    3743,
                    3745,
                    3747,
                    3749,
                    3749,
                    3751,
                    3751,
                    3754,
                    3755,
                    3757,
                    3760,
                    3762,
                    3763,
                    3773,
                    3773,
                    3776,
                    3780,
                    3782,
                    3782,
                    3804,
                    3805,
                    3840,
                    3840,
                    3904,
                    3911,
                    3913,
                    3946,
                    3976,
                    3979,
                    4096,
                    4129,
                    4131,
                    4135,
                    4137,
                    4138,
                    4176,
                    4181,
                    4256,
                    4293,
                    4304,
                    4342,
                    4352,
                    4441,
                    4447,
                    4514,
                    4520,
                    4601,
                    4608,
                    4614,
                    4616,
                    4678,
                    4680,
                    4680,
                    4682,
                    4685,
                    4688,
                    4694,
                    4696,
                    4696,
                    4698,
                    4701,
                    4704,
                    4742,
                    4744,
                    4744,
                    4746,
                    4749,
                    4752,
                    4782,
                    4784,
                    4784,
                    4786,
                    4789,
                    4792,
                    4798,
                    4800,
                    4800,
                    4802,
                    4805,
                    4808,
                    4814,
                    4816,
                    4822,
                    4824,
                    4846,
                    4848,
                    4878,
                    4880,
                    4880,
                    4882,
                    4885,
                    4888,
                    4894,
                    4896,
                    4934,
                    4936,
                    4954,
                    5024,
                    5108,
                    5121,
                    5740,
                    5743,
                    5750,
                    5761,
                    5786,
                    5792,
                    5866,
                    6016,
                    6067,
                    6176,
                    6263,
                    6272,
                    6312,
                    7680,
                    7835,
                    7840,
                    7929,
                    7936,
                    7957,
                    7960,
                    7965,
                    7968,
                    8005,
                    8008,
                    8013,
                    8016,
                    8023,
                    8025,
                    8025,
                    8027,
                    8027,
                    8029,
                    8029,
                    8031,
                    8061,
                    8064,
                    8116,
                    8118,
                    8124,
                    8126,
                    8126,
                    8130,
                    8132,
                    8134,
                    8140,
                    8144,
                    8147,
                    8150,
                    8155,
                    8160,
                    8172,
                    8178,
                    8180,
                    8182,
                    8188,
                    8319,
                    8319,
                    8450,
                    8450,
                    8455,
                    8455,
                    8458,
                    8467,
                    8469,
                    8469,
                    8473,
                    8477,
                    8484,
                    8484,
                    8486,
                    8486,
                    8488,
                    8488,
                    8490,
                    8493,
                    8495,
                    8497,
                    8499,
                    8505,
                    8544,
                    8579,
                    12293,
                    12295,
                    12321,
                    12329,
                    12337,
                    12341,
                    12344,
                    12346,
                    12353,
                    12436,
                    12445,
                    12446,
                    12449,
                    12538,
                    12540,
                    12542,
                    12549,
                    12588,
                    12593,
                    12686,
                    12704,
                    12727,
                    13312,
                    19893,
                    19968,
                    40869,
                    40960,
                    42124,
                    44032,
                    55203,
                    63744,
                    64045,
                    64256,
                    64262,
                    64275,
                    64279,
                    64285,
                    64285,
                    64287,
                    64296,
                    64298,
                    64310,
                    64312,
                    64316,
                    64318,
                    64318,
                    64320,
                    64321,
                    64323,
                    64324,
                    64326,
                    64433,
                    64467,
                    64829,
                    64848,
                    64911,
                    64914,
                    64967,
                    65008,
                    65019,
                    65136,
                    65138,
                    65140,
                    65140,
                    65142,
                    65276,
                    65313,
                    65338,
                    65345,
                    65370,
                    65382,
                    65470,
                    65474,
                    65479,
                    65482,
                    65487,
                    65490,
                    65495,
                    65498,
                    65500
                ], a4 = [
                    170,
                    170,
                    181,
                    181,
                    186,
                    186,
                    192,
                    214,
                    216,
                    246,
                    248,
                    543,
                    546,
                    563,
                    592,
                    685,
                    688,
                    696,
                    699,
                    705,
                    720,
                    721,
                    736,
                    740,
                    750,
                    750,
                    768,
                    846,
                    864,
                    866,
                    890,
                    890,
                    902,
                    902,
                    904,
                    906,
                    908,
                    908,
                    910,
                    929,
                    931,
                    974,
                    976,
                    983,
                    986,
                    1011,
                    1024,
                    1153,
                    1155,
                    1158,
                    1164,
                    1220,
                    1223,
                    1224,
                    1227,
                    1228,
                    1232,
                    1269,
                    1272,
                    1273,
                    1329,
                    1366,
                    1369,
                    1369,
                    1377,
                    1415,
                    1425,
                    1441,
                    1443,
                    1465,
                    1467,
                    1469,
                    1471,
                    1471,
                    1473,
                    1474,
                    1476,
                    1476,
                    1488,
                    1514,
                    1520,
                    1522,
                    1569,
                    1594,
                    1600,
                    1621,
                    1632,
                    1641,
                    1648,
                    1747,
                    1749,
                    1756,
                    1759,
                    1768,
                    1770,
                    1773,
                    1776,
                    1788,
                    1808,
                    1836,
                    1840,
                    1866,
                    1920,
                    1968,
                    2305,
                    2307,
                    2309,
                    2361,
                    2364,
                    2381,
                    2384,
                    2388,
                    2392,
                    2403,
                    2406,
                    2415,
                    2433,
                    2435,
                    2437,
                    2444,
                    2447,
                    2448,
                    2451,
                    2472,
                    2474,
                    2480,
                    2482,
                    2482,
                    2486,
                    2489,
                    2492,
                    2492,
                    2494,
                    2500,
                    2503,
                    2504,
                    2507,
                    2509,
                    2519,
                    2519,
                    2524,
                    2525,
                    2527,
                    2531,
                    2534,
                    2545,
                    2562,
                    2562,
                    2565,
                    2570,
                    2575,
                    2576,
                    2579,
                    2600,
                    2602,
                    2608,
                    2610,
                    2611,
                    2613,
                    2614,
                    2616,
                    2617,
                    2620,
                    2620,
                    2622,
                    2626,
                    2631,
                    2632,
                    2635,
                    2637,
                    2649,
                    2652,
                    2654,
                    2654,
                    2662,
                    2676,
                    2689,
                    2691,
                    2693,
                    2699,
                    2701,
                    2701,
                    2703,
                    2705,
                    2707,
                    2728,
                    2730,
                    2736,
                    2738,
                    2739,
                    2741,
                    2745,
                    2748,
                    2757,
                    2759,
                    2761,
                    2763,
                    2765,
                    2768,
                    2768,
                    2784,
                    2784,
                    2790,
                    2799,
                    2817,
                    2819,
                    2821,
                    2828,
                    2831,
                    2832,
                    2835,
                    2856,
                    2858,
                    2864,
                    2866,
                    2867,
                    2870,
                    2873,
                    2876,
                    2883,
                    2887,
                    2888,
                    2891,
                    2893,
                    2902,
                    2903,
                    2908,
                    2909,
                    2911,
                    2913,
                    2918,
                    2927,
                    2946,
                    2947,
                    2949,
                    2954,
                    2958,
                    2960,
                    2962,
                    2965,
                    2969,
                    2970,
                    2972,
                    2972,
                    2974,
                    2975,
                    2979,
                    2980,
                    2984,
                    2986,
                    2990,
                    2997,
                    2999,
                    3001,
                    3006,
                    3010,
                    3014,
                    3016,
                    3018,
                    3021,
                    3031,
                    3031,
                    3047,
                    3055,
                    3073,
                    3075,
                    3077,
                    3084,
                    3086,
                    3088,
                    3090,
                    3112,
                    3114,
                    3123,
                    3125,
                    3129,
                    3134,
                    3140,
                    3142,
                    3144,
                    3146,
                    3149,
                    3157,
                    3158,
                    3168,
                    3169,
                    3174,
                    3183,
                    3202,
                    3203,
                    3205,
                    3212,
                    3214,
                    3216,
                    3218,
                    3240,
                    3242,
                    3251,
                    3253,
                    3257,
                    3262,
                    3268,
                    3270,
                    3272,
                    3274,
                    3277,
                    3285,
                    3286,
                    3294,
                    3294,
                    3296,
                    3297,
                    3302,
                    3311,
                    3330,
                    3331,
                    3333,
                    3340,
                    3342,
                    3344,
                    3346,
                    3368,
                    3370,
                    3385,
                    3390,
                    3395,
                    3398,
                    3400,
                    3402,
                    3405,
                    3415,
                    3415,
                    3424,
                    3425,
                    3430,
                    3439,
                    3458,
                    3459,
                    3461,
                    3478,
                    3482,
                    3505,
                    3507,
                    3515,
                    3517,
                    3517,
                    3520,
                    3526,
                    3530,
                    3530,
                    3535,
                    3540,
                    3542,
                    3542,
                    3544,
                    3551,
                    3570,
                    3571,
                    3585,
                    3642,
                    3648,
                    3662,
                    3664,
                    3673,
                    3713,
                    3714,
                    3716,
                    3716,
                    3719,
                    3720,
                    3722,
                    3722,
                    3725,
                    3725,
                    3732,
                    3735,
                    3737,
                    3743,
                    3745,
                    3747,
                    3749,
                    3749,
                    3751,
                    3751,
                    3754,
                    3755,
                    3757,
                    3769,
                    3771,
                    3773,
                    3776,
                    3780,
                    3782,
                    3782,
                    3784,
                    3789,
                    3792,
                    3801,
                    3804,
                    3805,
                    3840,
                    3840,
                    3864,
                    3865,
                    3872,
                    3881,
                    3893,
                    3893,
                    3895,
                    3895,
                    3897,
                    3897,
                    3902,
                    3911,
                    3913,
                    3946,
                    3953,
                    3972,
                    3974,
                    3979,
                    3984,
                    3991,
                    3993,
                    4028,
                    4038,
                    4038,
                    4096,
                    4129,
                    4131,
                    4135,
                    4137,
                    4138,
                    4140,
                    4146,
                    4150,
                    4153,
                    4160,
                    4169,
                    4176,
                    4185,
                    4256,
                    4293,
                    4304,
                    4342,
                    4352,
                    4441,
                    4447,
                    4514,
                    4520,
                    4601,
                    4608,
                    4614,
                    4616,
                    4678,
                    4680,
                    4680,
                    4682,
                    4685,
                    4688,
                    4694,
                    4696,
                    4696,
                    4698,
                    4701,
                    4704,
                    4742,
                    4744,
                    4744,
                    4746,
                    4749,
                    4752,
                    4782,
                    4784,
                    4784,
                    4786,
                    4789,
                    4792,
                    4798,
                    4800,
                    4800,
                    4802,
                    4805,
                    4808,
                    4814,
                    4816,
                    4822,
                    4824,
                    4846,
                    4848,
                    4878,
                    4880,
                    4880,
                    4882,
                    4885,
                    4888,
                    4894,
                    4896,
                    4934,
                    4936,
                    4954,
                    4969,
                    4977,
                    5024,
                    5108,
                    5121,
                    5740,
                    5743,
                    5750,
                    5761,
                    5786,
                    5792,
                    5866,
                    6016,
                    6099,
                    6112,
                    6121,
                    6160,
                    6169,
                    6176,
                    6263,
                    6272,
                    6313,
                    7680,
                    7835,
                    7840,
                    7929,
                    7936,
                    7957,
                    7960,
                    7965,
                    7968,
                    8005,
                    8008,
                    8013,
                    8016,
                    8023,
                    8025,
                    8025,
                    8027,
                    8027,
                    8029,
                    8029,
                    8031,
                    8061,
                    8064,
                    8116,
                    8118,
                    8124,
                    8126,
                    8126,
                    8130,
                    8132,
                    8134,
                    8140,
                    8144,
                    8147,
                    8150,
                    8155,
                    8160,
                    8172,
                    8178,
                    8180,
                    8182,
                    8188,
                    8255,
                    8256,
                    8319,
                    8319,
                    8400,
                    8412,
                    8417,
                    8417,
                    8450,
                    8450,
                    8455,
                    8455,
                    8458,
                    8467,
                    8469,
                    8469,
                    8473,
                    8477,
                    8484,
                    8484,
                    8486,
                    8486,
                    8488,
                    8488,
                    8490,
                    8493,
                    8495,
                    8497,
                    8499,
                    8505,
                    8544,
                    8579,
                    12293,
                    12295,
                    12321,
                    12335,
                    12337,
                    12341,
                    12344,
                    12346,
                    12353,
                    12436,
                    12441,
                    12442,
                    12445,
                    12446,
                    12449,
                    12542,
                    12549,
                    12588,
                    12593,
                    12686,
                    12704,
                    12727,
                    13312,
                    19893,
                    19968,
                    40869,
                    40960,
                    42124,
                    44032,
                    55203,
                    63744,
                    64045,
                    64256,
                    64262,
                    64275,
                    64279,
                    64285,
                    64296,
                    64298,
                    64310,
                    64312,
                    64316,
                    64318,
                    64318,
                    64320,
                    64321,
                    64323,
                    64324,
                    64326,
                    64433,
                    64467,
                    64829,
                    64848,
                    64911,
                    64914,
                    64967,
                    65008,
                    65019,
                    65056,
                    65059,
                    65075,
                    65076,
                    65101,
                    65103,
                    65136,
                    65138,
                    65140,
                    65140,
                    65142,
                    65276,
                    65296,
                    65305,
                    65313,
                    65338,
                    65343,
                    65343,
                    65345,
                    65370,
                    65381,
                    65470,
                    65474,
                    65479,
                    65482,
                    65487,
                    65490,
                    65495,
                    65498,
                    65500
                ], o4 = [
                    170,
                    170,
                    181,
                    181,
                    186,
                    186,
                    192,
                    214,
                    216,
                    246,
                    248,
                    705,
                    710,
                    721,
                    736,
                    740,
                    748,
                    748,
                    750,
                    750,
                    880,
                    884,
                    886,
                    887,
                    890,
                    893,
                    902,
                    902,
                    904,
                    906,
                    908,
                    908,
                    910,
                    929,
                    931,
                    1013,
                    1015,
                    1153,
                    1162,
                    1319,
                    1329,
                    1366,
                    1369,
                    1369,
                    1377,
                    1415,
                    1488,
                    1514,
                    1520,
                    1522,
                    1568,
                    1610,
                    1646,
                    1647,
                    1649,
                    1747,
                    1749,
                    1749,
                    1765,
                    1766,
                    1774,
                    1775,
                    1786,
                    1788,
                    1791,
                    1791,
                    1808,
                    1808,
                    1810,
                    1839,
                    1869,
                    1957,
                    1969,
                    1969,
                    1994,
                    2026,
                    2036,
                    2037,
                    2042,
                    2042,
                    2048,
                    2069,
                    2074,
                    2074,
                    2084,
                    2084,
                    2088,
                    2088,
                    2112,
                    2136,
                    2208,
                    2208,
                    2210,
                    2220,
                    2308,
                    2361,
                    2365,
                    2365,
                    2384,
                    2384,
                    2392,
                    2401,
                    2417,
                    2423,
                    2425,
                    2431,
                    2437,
                    2444,
                    2447,
                    2448,
                    2451,
                    2472,
                    2474,
                    2480,
                    2482,
                    2482,
                    2486,
                    2489,
                    2493,
                    2493,
                    2510,
                    2510,
                    2524,
                    2525,
                    2527,
                    2529,
                    2544,
                    2545,
                    2565,
                    2570,
                    2575,
                    2576,
                    2579,
                    2600,
                    2602,
                    2608,
                    2610,
                    2611,
                    2613,
                    2614,
                    2616,
                    2617,
                    2649,
                    2652,
                    2654,
                    2654,
                    2674,
                    2676,
                    2693,
                    2701,
                    2703,
                    2705,
                    2707,
                    2728,
                    2730,
                    2736,
                    2738,
                    2739,
                    2741,
                    2745,
                    2749,
                    2749,
                    2768,
                    2768,
                    2784,
                    2785,
                    2821,
                    2828,
                    2831,
                    2832,
                    2835,
                    2856,
                    2858,
                    2864,
                    2866,
                    2867,
                    2869,
                    2873,
                    2877,
                    2877,
                    2908,
                    2909,
                    2911,
                    2913,
                    2929,
                    2929,
                    2947,
                    2947,
                    2949,
                    2954,
                    2958,
                    2960,
                    2962,
                    2965,
                    2969,
                    2970,
                    2972,
                    2972,
                    2974,
                    2975,
                    2979,
                    2980,
                    2984,
                    2986,
                    2990,
                    3001,
                    3024,
                    3024,
                    3077,
                    3084,
                    3086,
                    3088,
                    3090,
                    3112,
                    3114,
                    3123,
                    3125,
                    3129,
                    3133,
                    3133,
                    3160,
                    3161,
                    3168,
                    3169,
                    3205,
                    3212,
                    3214,
                    3216,
                    3218,
                    3240,
                    3242,
                    3251,
                    3253,
                    3257,
                    3261,
                    3261,
                    3294,
                    3294,
                    3296,
                    3297,
                    3313,
                    3314,
                    3333,
                    3340,
                    3342,
                    3344,
                    3346,
                    3386,
                    3389,
                    3389,
                    3406,
                    3406,
                    3424,
                    3425,
                    3450,
                    3455,
                    3461,
                    3478,
                    3482,
                    3505,
                    3507,
                    3515,
                    3517,
                    3517,
                    3520,
                    3526,
                    3585,
                    3632,
                    3634,
                    3635,
                    3648,
                    3654,
                    3713,
                    3714,
                    3716,
                    3716,
                    3719,
                    3720,
                    3722,
                    3722,
                    3725,
                    3725,
                    3732,
                    3735,
                    3737,
                    3743,
                    3745,
                    3747,
                    3749,
                    3749,
                    3751,
                    3751,
                    3754,
                    3755,
                    3757,
                    3760,
                    3762,
                    3763,
                    3773,
                    3773,
                    3776,
                    3780,
                    3782,
                    3782,
                    3804,
                    3807,
                    3840,
                    3840,
                    3904,
                    3911,
                    3913,
                    3948,
                    3976,
                    3980,
                    4096,
                    4138,
                    4159,
                    4159,
                    4176,
                    4181,
                    4186,
                    4189,
                    4193,
                    4193,
                    4197,
                    4198,
                    4206,
                    4208,
                    4213,
                    4225,
                    4238,
                    4238,
                    4256,
                    4293,
                    4295,
                    4295,
                    4301,
                    4301,
                    4304,
                    4346,
                    4348,
                    4680,
                    4682,
                    4685,
                    4688,
                    4694,
                    4696,
                    4696,
                    4698,
                    4701,
                    4704,
                    4744,
                    4746,
                    4749,
                    4752,
                    4784,
                    4786,
                    4789,
                    4792,
                    4798,
                    4800,
                    4800,
                    4802,
                    4805,
                    4808,
                    4822,
                    4824,
                    4880,
                    4882,
                    4885,
                    4888,
                    4954,
                    4992,
                    5007,
                    5024,
                    5108,
                    5121,
                    5740,
                    5743,
                    5759,
                    5761,
                    5786,
                    5792,
                    5866,
                    5870,
                    5872,
                    5888,
                    5900,
                    5902,
                    5905,
                    5920,
                    5937,
                    5952,
                    5969,
                    5984,
                    5996,
                    5998,
                    6e3,
                    6016,
                    6067,
                    6103,
                    6103,
                    6108,
                    6108,
                    6176,
                    6263,
                    6272,
                    6312,
                    6314,
                    6314,
                    6320,
                    6389,
                    6400,
                    6428,
                    6480,
                    6509,
                    6512,
                    6516,
                    6528,
                    6571,
                    6593,
                    6599,
                    6656,
                    6678,
                    6688,
                    6740,
                    6823,
                    6823,
                    6917,
                    6963,
                    6981,
                    6987,
                    7043,
                    7072,
                    7086,
                    7087,
                    7098,
                    7141,
                    7168,
                    7203,
                    7245,
                    7247,
                    7258,
                    7293,
                    7401,
                    7404,
                    7406,
                    7409,
                    7413,
                    7414,
                    7424,
                    7615,
                    7680,
                    7957,
                    7960,
                    7965,
                    7968,
                    8005,
                    8008,
                    8013,
                    8016,
                    8023,
                    8025,
                    8025,
                    8027,
                    8027,
                    8029,
                    8029,
                    8031,
                    8061,
                    8064,
                    8116,
                    8118,
                    8124,
                    8126,
                    8126,
                    8130,
                    8132,
                    8134,
                    8140,
                    8144,
                    8147,
                    8150,
                    8155,
                    8160,
                    8172,
                    8178,
                    8180,
                    8182,
                    8188,
                    8305,
                    8305,
                    8319,
                    8319,
                    8336,
                    8348,
                    8450,
                    8450,
                    8455,
                    8455,
                    8458,
                    8467,
                    8469,
                    8469,
                    8473,
                    8477,
                    8484,
                    8484,
                    8486,
                    8486,
                    8488,
                    8488,
                    8490,
                    8493,
                    8495,
                    8505,
                    8508,
                    8511,
                    8517,
                    8521,
                    8526,
                    8526,
                    8544,
                    8584,
                    11264,
                    11310,
                    11312,
                    11358,
                    11360,
                    11492,
                    11499,
                    11502,
                    11506,
                    11507,
                    11520,
                    11557,
                    11559,
                    11559,
                    11565,
                    11565,
                    11568,
                    11623,
                    11631,
                    11631,
                    11648,
                    11670,
                    11680,
                    11686,
                    11688,
                    11694,
                    11696,
                    11702,
                    11704,
                    11710,
                    11712,
                    11718,
                    11720,
                    11726,
                    11728,
                    11734,
                    11736,
                    11742,
                    11823,
                    11823,
                    12293,
                    12295,
                    12321,
                    12329,
                    12337,
                    12341,
                    12344,
                    12348,
                    12353,
                    12438,
                    12445,
                    12447,
                    12449,
                    12538,
                    12540,
                    12543,
                    12549,
                    12589,
                    12593,
                    12686,
                    12704,
                    12730,
                    12784,
                    12799,
                    13312,
                    19893,
                    19968,
                    40908,
                    40960,
                    42124,
                    42192,
                    42237,
                    42240,
                    42508,
                    42512,
                    42527,
                    42538,
                    42539,
                    42560,
                    42606,
                    42623,
                    42647,
                    42656,
                    42735,
                    42775,
                    42783,
                    42786,
                    42888,
                    42891,
                    42894,
                    42896,
                    42899,
                    42912,
                    42922,
                    43e3,
                    43009,
                    43011,
                    43013,
                    43015,
                    43018,
                    43020,
                    43042,
                    43072,
                    43123,
                    43138,
                    43187,
                    43250,
                    43255,
                    43259,
                    43259,
                    43274,
                    43301,
                    43312,
                    43334,
                    43360,
                    43388,
                    43396,
                    43442,
                    43471,
                    43471,
                    43520,
                    43560,
                    43584,
                    43586,
                    43588,
                    43595,
                    43616,
                    43638,
                    43642,
                    43642,
                    43648,
                    43695,
                    43697,
                    43697,
                    43701,
                    43702,
                    43705,
                    43709,
                    43712,
                    43712,
                    43714,
                    43714,
                    43739,
                    43741,
                    43744,
                    43754,
                    43762,
                    43764,
                    43777,
                    43782,
                    43785,
                    43790,
                    43793,
                    43798,
                    43808,
                    43814,
                    43816,
                    43822,
                    43968,
                    44002,
                    44032,
                    55203,
                    55216,
                    55238,
                    55243,
                    55291,
                    63744,
                    64109,
                    64112,
                    64217,
                    64256,
                    64262,
                    64275,
                    64279,
                    64285,
                    64285,
                    64287,
                    64296,
                    64298,
                    64310,
                    64312,
                    64316,
                    64318,
                    64318,
                    64320,
                    64321,
                    64323,
                    64324,
                    64326,
                    64433,
                    64467,
                    64829,
                    64848,
                    64911,
                    64914,
                    64967,
                    65008,
                    65019,
                    65136,
                    65140,
                    65142,
                    65276,
                    65313,
                    65338,
                    65345,
                    65370,
                    65382,
                    65470,
                    65474,
                    65479,
                    65482,
                    65487,
                    65490,
                    65495,
                    65498,
                    65500
                ], s4 = [
                    170,
                    170,
                    181,
                    181,
                    186,
                    186,
                    192,
                    214,
                    216,
                    246,
                    248,
                    705,
                    710,
                    721,
                    736,
                    740,
                    748,
                    748,
                    750,
                    750,
                    768,
                    884,
                    886,
                    887,
                    890,
                    893,
                    902,
                    902,
                    904,
                    906,
                    908,
                    908,
                    910,
                    929,
                    931,
                    1013,
                    1015,
                    1153,
                    1155,
                    1159,
                    1162,
                    1319,
                    1329,
                    1366,
                    1369,
                    1369,
                    1377,
                    1415,
                    1425,
                    1469,
                    1471,
                    1471,
                    1473,
                    1474,
                    1476,
                    1477,
                    1479,
                    1479,
                    1488,
                    1514,
                    1520,
                    1522,
                    1552,
                    1562,
                    1568,
                    1641,
                    1646,
                    1747,
                    1749,
                    1756,
                    1759,
                    1768,
                    1770,
                    1788,
                    1791,
                    1791,
                    1808,
                    1866,
                    1869,
                    1969,
                    1984,
                    2037,
                    2042,
                    2042,
                    2048,
                    2093,
                    2112,
                    2139,
                    2208,
                    2208,
                    2210,
                    2220,
                    2276,
                    2302,
                    2304,
                    2403,
                    2406,
                    2415,
                    2417,
                    2423,
                    2425,
                    2431,
                    2433,
                    2435,
                    2437,
                    2444,
                    2447,
                    2448,
                    2451,
                    2472,
                    2474,
                    2480,
                    2482,
                    2482,
                    2486,
                    2489,
                    2492,
                    2500,
                    2503,
                    2504,
                    2507,
                    2510,
                    2519,
                    2519,
                    2524,
                    2525,
                    2527,
                    2531,
                    2534,
                    2545,
                    2561,
                    2563,
                    2565,
                    2570,
                    2575,
                    2576,
                    2579,
                    2600,
                    2602,
                    2608,
                    2610,
                    2611,
                    2613,
                    2614,
                    2616,
                    2617,
                    2620,
                    2620,
                    2622,
                    2626,
                    2631,
                    2632,
                    2635,
                    2637,
                    2641,
                    2641,
                    2649,
                    2652,
                    2654,
                    2654,
                    2662,
                    2677,
                    2689,
                    2691,
                    2693,
                    2701,
                    2703,
                    2705,
                    2707,
                    2728,
                    2730,
                    2736,
                    2738,
                    2739,
                    2741,
                    2745,
                    2748,
                    2757,
                    2759,
                    2761,
                    2763,
                    2765,
                    2768,
                    2768,
                    2784,
                    2787,
                    2790,
                    2799,
                    2817,
                    2819,
                    2821,
                    2828,
                    2831,
                    2832,
                    2835,
                    2856,
                    2858,
                    2864,
                    2866,
                    2867,
                    2869,
                    2873,
                    2876,
                    2884,
                    2887,
                    2888,
                    2891,
                    2893,
                    2902,
                    2903,
                    2908,
                    2909,
                    2911,
                    2915,
                    2918,
                    2927,
                    2929,
                    2929,
                    2946,
                    2947,
                    2949,
                    2954,
                    2958,
                    2960,
                    2962,
                    2965,
                    2969,
                    2970,
                    2972,
                    2972,
                    2974,
                    2975,
                    2979,
                    2980,
                    2984,
                    2986,
                    2990,
                    3001,
                    3006,
                    3010,
                    3014,
                    3016,
                    3018,
                    3021,
                    3024,
                    3024,
                    3031,
                    3031,
                    3046,
                    3055,
                    3073,
                    3075,
                    3077,
                    3084,
                    3086,
                    3088,
                    3090,
                    3112,
                    3114,
                    3123,
                    3125,
                    3129,
                    3133,
                    3140,
                    3142,
                    3144,
                    3146,
                    3149,
                    3157,
                    3158,
                    3160,
                    3161,
                    3168,
                    3171,
                    3174,
                    3183,
                    3202,
                    3203,
                    3205,
                    3212,
                    3214,
                    3216,
                    3218,
                    3240,
                    3242,
                    3251,
                    3253,
                    3257,
                    3260,
                    3268,
                    3270,
                    3272,
                    3274,
                    3277,
                    3285,
                    3286,
                    3294,
                    3294,
                    3296,
                    3299,
                    3302,
                    3311,
                    3313,
                    3314,
                    3330,
                    3331,
                    3333,
                    3340,
                    3342,
                    3344,
                    3346,
                    3386,
                    3389,
                    3396,
                    3398,
                    3400,
                    3402,
                    3406,
                    3415,
                    3415,
                    3424,
                    3427,
                    3430,
                    3439,
                    3450,
                    3455,
                    3458,
                    3459,
                    3461,
                    3478,
                    3482,
                    3505,
                    3507,
                    3515,
                    3517,
                    3517,
                    3520,
                    3526,
                    3530,
                    3530,
                    3535,
                    3540,
                    3542,
                    3542,
                    3544,
                    3551,
                    3570,
                    3571,
                    3585,
                    3642,
                    3648,
                    3662,
                    3664,
                    3673,
                    3713,
                    3714,
                    3716,
                    3716,
                    3719,
                    3720,
                    3722,
                    3722,
                    3725,
                    3725,
                    3732,
                    3735,
                    3737,
                    3743,
                    3745,
                    3747,
                    3749,
                    3749,
                    3751,
                    3751,
                    3754,
                    3755,
                    3757,
                    3769,
                    3771,
                    3773,
                    3776,
                    3780,
                    3782,
                    3782,
                    3784,
                    3789,
                    3792,
                    3801,
                    3804,
                    3807,
                    3840,
                    3840,
                    3864,
                    3865,
                    3872,
                    3881,
                    3893,
                    3893,
                    3895,
                    3895,
                    3897,
                    3897,
                    3902,
                    3911,
                    3913,
                    3948,
                    3953,
                    3972,
                    3974,
                    3991,
                    3993,
                    4028,
                    4038,
                    4038,
                    4096,
                    4169,
                    4176,
                    4253,
                    4256,
                    4293,
                    4295,
                    4295,
                    4301,
                    4301,
                    4304,
                    4346,
                    4348,
                    4680,
                    4682,
                    4685,
                    4688,
                    4694,
                    4696,
                    4696,
                    4698,
                    4701,
                    4704,
                    4744,
                    4746,
                    4749,
                    4752,
                    4784,
                    4786,
                    4789,
                    4792,
                    4798,
                    4800,
                    4800,
                    4802,
                    4805,
                    4808,
                    4822,
                    4824,
                    4880,
                    4882,
                    4885,
                    4888,
                    4954,
                    4957,
                    4959,
                    4992,
                    5007,
                    5024,
                    5108,
                    5121,
                    5740,
                    5743,
                    5759,
                    5761,
                    5786,
                    5792,
                    5866,
                    5870,
                    5872,
                    5888,
                    5900,
                    5902,
                    5908,
                    5920,
                    5940,
                    5952,
                    5971,
                    5984,
                    5996,
                    5998,
                    6e3,
                    6002,
                    6003,
                    6016,
                    6099,
                    6103,
                    6103,
                    6108,
                    6109,
                    6112,
                    6121,
                    6155,
                    6157,
                    6160,
                    6169,
                    6176,
                    6263,
                    6272,
                    6314,
                    6320,
                    6389,
                    6400,
                    6428,
                    6432,
                    6443,
                    6448,
                    6459,
                    6470,
                    6509,
                    6512,
                    6516,
                    6528,
                    6571,
                    6576,
                    6601,
                    6608,
                    6617,
                    6656,
                    6683,
                    6688,
                    6750,
                    6752,
                    6780,
                    6783,
                    6793,
                    6800,
                    6809,
                    6823,
                    6823,
                    6912,
                    6987,
                    6992,
                    7001,
                    7019,
                    7027,
                    7040,
                    7155,
                    7168,
                    7223,
                    7232,
                    7241,
                    7245,
                    7293,
                    7376,
                    7378,
                    7380,
                    7414,
                    7424,
                    7654,
                    7676,
                    7957,
                    7960,
                    7965,
                    7968,
                    8005,
                    8008,
                    8013,
                    8016,
                    8023,
                    8025,
                    8025,
                    8027,
                    8027,
                    8029,
                    8029,
                    8031,
                    8061,
                    8064,
                    8116,
                    8118,
                    8124,
                    8126,
                    8126,
                    8130,
                    8132,
                    8134,
                    8140,
                    8144,
                    8147,
                    8150,
                    8155,
                    8160,
                    8172,
                    8178,
                    8180,
                    8182,
                    8188,
                    8204,
                    8205,
                    8255,
                    8256,
                    8276,
                    8276,
                    8305,
                    8305,
                    8319,
                    8319,
                    8336,
                    8348,
                    8400,
                    8412,
                    8417,
                    8417,
                    8421,
                    8432,
                    8450,
                    8450,
                    8455,
                    8455,
                    8458,
                    8467,
                    8469,
                    8469,
                    8473,
                    8477,
                    8484,
                    8484,
                    8486,
                    8486,
                    8488,
                    8488,
                    8490,
                    8493,
                    8495,
                    8505,
                    8508,
                    8511,
                    8517,
                    8521,
                    8526,
                    8526,
                    8544,
                    8584,
                    11264,
                    11310,
                    11312,
                    11358,
                    11360,
                    11492,
                    11499,
                    11507,
                    11520,
                    11557,
                    11559,
                    11559,
                    11565,
                    11565,
                    11568,
                    11623,
                    11631,
                    11631,
                    11647,
                    11670,
                    11680,
                    11686,
                    11688,
                    11694,
                    11696,
                    11702,
                    11704,
                    11710,
                    11712,
                    11718,
                    11720,
                    11726,
                    11728,
                    11734,
                    11736,
                    11742,
                    11744,
                    11775,
                    11823,
                    11823,
                    12293,
                    12295,
                    12321,
                    12335,
                    12337,
                    12341,
                    12344,
                    12348,
                    12353,
                    12438,
                    12441,
                    12442,
                    12445,
                    12447,
                    12449,
                    12538,
                    12540,
                    12543,
                    12549,
                    12589,
                    12593,
                    12686,
                    12704,
                    12730,
                    12784,
                    12799,
                    13312,
                    19893,
                    19968,
                    40908,
                    40960,
                    42124,
                    42192,
                    42237,
                    42240,
                    42508,
                    42512,
                    42539,
                    42560,
                    42607,
                    42612,
                    42621,
                    42623,
                    42647,
                    42655,
                    42737,
                    42775,
                    42783,
                    42786,
                    42888,
                    42891,
                    42894,
                    42896,
                    42899,
                    42912,
                    42922,
                    43e3,
                    43047,
                    43072,
                    43123,
                    43136,
                    43204,
                    43216,
                    43225,
                    43232,
                    43255,
                    43259,
                    43259,
                    43264,
                    43309,
                    43312,
                    43347,
                    43360,
                    43388,
                    43392,
                    43456,
                    43471,
                    43481,
                    43520,
                    43574,
                    43584,
                    43597,
                    43600,
                    43609,
                    43616,
                    43638,
                    43642,
                    43643,
                    43648,
                    43714,
                    43739,
                    43741,
                    43744,
                    43759,
                    43762,
                    43766,
                    43777,
                    43782,
                    43785,
                    43790,
                    43793,
                    43798,
                    43808,
                    43814,
                    43816,
                    43822,
                    43968,
                    44010,
                    44012,
                    44013,
                    44016,
                    44025,
                    44032,
                    55203,
                    55216,
                    55238,
                    55243,
                    55291,
                    63744,
                    64109,
                    64112,
                    64217,
                    64256,
                    64262,
                    64275,
                    64279,
                    64285,
                    64296,
                    64298,
                    64310,
                    64312,
                    64316,
                    64318,
                    64318,
                    64320,
                    64321,
                    64323,
                    64324,
                    64326,
                    64433,
                    64467,
                    64829,
                    64848,
                    64911,
                    64914,
                    64967,
                    65008,
                    65019,
                    65024,
                    65039,
                    65056,
                    65062,
                    65075,
                    65076,
                    65101,
                    65103,
                    65136,
                    65140,
                    65142,
                    65276,
                    65296,
                    65305,
                    65313,
                    65338,
                    65343,
                    65343,
                    65345,
                    65370,
                    65382,
                    65470,
                    65474,
                    65479,
                    65482,
                    65487,
                    65490,
                    65495,
                    65498,
                    65500
                ], _4 = [
                    65,
                    90,
                    97,
                    122,
                    170,
                    170,
                    181,
                    181,
                    186,
                    186,
                    192,
                    214,
                    216,
                    246,
                    248,
                    705,
                    710,
                    721,
                    736,
                    740,
                    748,
                    748,
                    750,
                    750,
                    880,
                    884,
                    886,
                    887,
                    890,
                    893,
                    895,
                    895,
                    902,
                    902,
                    904,
                    906,
                    908,
                    908,
                    910,
                    929,
                    931,
                    1013,
                    1015,
                    1153,
                    1162,
                    1327,
                    1329,
                    1366,
                    1369,
                    1369,
                    1376,
                    1416,
                    1488,
                    1514,
                    1519,
                    1522,
                    1568,
                    1610,
                    1646,
                    1647,
                    1649,
                    1747,
                    1749,
                    1749,
                    1765,
                    1766,
                    1774,
                    1775,
                    1786,
                    1788,
                    1791,
                    1791,
                    1808,
                    1808,
                    1810,
                    1839,
                    1869,
                    1957,
                    1969,
                    1969,
                    1994,
                    2026,
                    2036,
                    2037,
                    2042,
                    2042,
                    2048,
                    2069,
                    2074,
                    2074,
                    2084,
                    2084,
                    2088,
                    2088,
                    2112,
                    2136,
                    2144,
                    2154,
                    2208,
                    2228,
                    2230,
                    2237,
                    2308,
                    2361,
                    2365,
                    2365,
                    2384,
                    2384,
                    2392,
                    2401,
                    2417,
                    2432,
                    2437,
                    2444,
                    2447,
                    2448,
                    2451,
                    2472,
                    2474,
                    2480,
                    2482,
                    2482,
                    2486,
                    2489,
                    2493,
                    2493,
                    2510,
                    2510,
                    2524,
                    2525,
                    2527,
                    2529,
                    2544,
                    2545,
                    2556,
                    2556,
                    2565,
                    2570,
                    2575,
                    2576,
                    2579,
                    2600,
                    2602,
                    2608,
                    2610,
                    2611,
                    2613,
                    2614,
                    2616,
                    2617,
                    2649,
                    2652,
                    2654,
                    2654,
                    2674,
                    2676,
                    2693,
                    2701,
                    2703,
                    2705,
                    2707,
                    2728,
                    2730,
                    2736,
                    2738,
                    2739,
                    2741,
                    2745,
                    2749,
                    2749,
                    2768,
                    2768,
                    2784,
                    2785,
                    2809,
                    2809,
                    2821,
                    2828,
                    2831,
                    2832,
                    2835,
                    2856,
                    2858,
                    2864,
                    2866,
                    2867,
                    2869,
                    2873,
                    2877,
                    2877,
                    2908,
                    2909,
                    2911,
                    2913,
                    2929,
                    2929,
                    2947,
                    2947,
                    2949,
                    2954,
                    2958,
                    2960,
                    2962,
                    2965,
                    2969,
                    2970,
                    2972,
                    2972,
                    2974,
                    2975,
                    2979,
                    2980,
                    2984,
                    2986,
                    2990,
                    3001,
                    3024,
                    3024,
                    3077,
                    3084,
                    3086,
                    3088,
                    3090,
                    3112,
                    3114,
                    3129,
                    3133,
                    3133,
                    3160,
                    3162,
                    3168,
                    3169,
                    3200,
                    3200,
                    3205,
                    3212,
                    3214,
                    3216,
                    3218,
                    3240,
                    3242,
                    3251,
                    3253,
                    3257,
                    3261,
                    3261,
                    3294,
                    3294,
                    3296,
                    3297,
                    3313,
                    3314,
                    3333,
                    3340,
                    3342,
                    3344,
                    3346,
                    3386,
                    3389,
                    3389,
                    3406,
                    3406,
                    3412,
                    3414,
                    3423,
                    3425,
                    3450,
                    3455,
                    3461,
                    3478,
                    3482,
                    3505,
                    3507,
                    3515,
                    3517,
                    3517,
                    3520,
                    3526,
                    3585,
                    3632,
                    3634,
                    3635,
                    3648,
                    3654,
                    3713,
                    3714,
                    3716,
                    3716,
                    3718,
                    3722,
                    3724,
                    3747,
                    3749,
                    3749,
                    3751,
                    3760,
                    3762,
                    3763,
                    3773,
                    3773,
                    3776,
                    3780,
                    3782,
                    3782,
                    3804,
                    3807,
                    3840,
                    3840,
                    3904,
                    3911,
                    3913,
                    3948,
                    3976,
                    3980,
                    4096,
                    4138,
                    4159,
                    4159,
                    4176,
                    4181,
                    4186,
                    4189,
                    4193,
                    4193,
                    4197,
                    4198,
                    4206,
                    4208,
                    4213,
                    4225,
                    4238,
                    4238,
                    4256,
                    4293,
                    4295,
                    4295,
                    4301,
                    4301,
                    4304,
                    4346,
                    4348,
                    4680,
                    4682,
                    4685,
                    4688,
                    4694,
                    4696,
                    4696,
                    4698,
                    4701,
                    4704,
                    4744,
                    4746,
                    4749,
                    4752,
                    4784,
                    4786,
                    4789,
                    4792,
                    4798,
                    4800,
                    4800,
                    4802,
                    4805,
                    4808,
                    4822,
                    4824,
                    4880,
                    4882,
                    4885,
                    4888,
                    4954,
                    4992,
                    5007,
                    5024,
                    5109,
                    5112,
                    5117,
                    5121,
                    5740,
                    5743,
                    5759,
                    5761,
                    5786,
                    5792,
                    5866,
                    5870,
                    5880,
                    5888,
                    5900,
                    5902,
                    5905,
                    5920,
                    5937,
                    5952,
                    5969,
                    5984,
                    5996,
                    5998,
                    6e3,
                    6016,
                    6067,
                    6103,
                    6103,
                    6108,
                    6108,
                    6176,
                    6264,
                    6272,
                    6312,
                    6314,
                    6314,
                    6320,
                    6389,
                    6400,
                    6430,
                    6480,
                    6509,
                    6512,
                    6516,
                    6528,
                    6571,
                    6576,
                    6601,
                    6656,
                    6678,
                    6688,
                    6740,
                    6823,
                    6823,
                    6917,
                    6963,
                    6981,
                    6987,
                    7043,
                    7072,
                    7086,
                    7087,
                    7098,
                    7141,
                    7168,
                    7203,
                    7245,
                    7247,
                    7258,
                    7293,
                    7296,
                    7304,
                    7312,
                    7354,
                    7357,
                    7359,
                    7401,
                    7404,
                    7406,
                    7411,
                    7413,
                    7414,
                    7418,
                    7418,
                    7424,
                    7615,
                    7680,
                    7957,
                    7960,
                    7965,
                    7968,
                    8005,
                    8008,
                    8013,
                    8016,
                    8023,
                    8025,
                    8025,
                    8027,
                    8027,
                    8029,
                    8029,
                    8031,
                    8061,
                    8064,
                    8116,
                    8118,
                    8124,
                    8126,
                    8126,
                    8130,
                    8132,
                    8134,
                    8140,
                    8144,
                    8147,
                    8150,
                    8155,
                    8160,
                    8172,
                    8178,
                    8180,
                    8182,
                    8188,
                    8305,
                    8305,
                    8319,
                    8319,
                    8336,
                    8348,
                    8450,
                    8450,
                    8455,
                    8455,
                    8458,
                    8467,
                    8469,
                    8469,
                    8472,
                    8477,
                    8484,
                    8484,
                    8486,
                    8486,
                    8488,
                    8488,
                    8490,
                    8505,
                    8508,
                    8511,
                    8517,
                    8521,
                    8526,
                    8526,
                    8544,
                    8584,
                    11264,
                    11310,
                    11312,
                    11358,
                    11360,
                    11492,
                    11499,
                    11502,
                    11506,
                    11507,
                    11520,
                    11557,
                    11559,
                    11559,
                    11565,
                    11565,
                    11568,
                    11623,
                    11631,
                    11631,
                    11648,
                    11670,
                    11680,
                    11686,
                    11688,
                    11694,
                    11696,
                    11702,
                    11704,
                    11710,
                    11712,
                    11718,
                    11720,
                    11726,
                    11728,
                    11734,
                    11736,
                    11742,
                    12293,
                    12295,
                    12321,
                    12329,
                    12337,
                    12341,
                    12344,
                    12348,
                    12353,
                    12438,
                    12443,
                    12447,
                    12449,
                    12538,
                    12540,
                    12543,
                    12549,
                    12591,
                    12593,
                    12686,
                    12704,
                    12730,
                    12784,
                    12799,
                    13312,
                    19893,
                    19968,
                    40943,
                    40960,
                    42124,
                    42192,
                    42237,
                    42240,
                    42508,
                    42512,
                    42527,
                    42538,
                    42539,
                    42560,
                    42606,
                    42623,
                    42653,
                    42656,
                    42735,
                    42775,
                    42783,
                    42786,
                    42888,
                    42891,
                    42943,
                    42946,
                    42950,
                    42999,
                    43009,
                    43011,
                    43013,
                    43015,
                    43018,
                    43020,
                    43042,
                    43072,
                    43123,
                    43138,
                    43187,
                    43250,
                    43255,
                    43259,
                    43259,
                    43261,
                    43262,
                    43274,
                    43301,
                    43312,
                    43334,
                    43360,
                    43388,
                    43396,
                    43442,
                    43471,
                    43471,
                    43488,
                    43492,
                    43494,
                    43503,
                    43514,
                    43518,
                    43520,
                    43560,
                    43584,
                    43586,
                    43588,
                    43595,
                    43616,
                    43638,
                    43642,
                    43642,
                    43646,
                    43695,
                    43697,
                    43697,
                    43701,
                    43702,
                    43705,
                    43709,
                    43712,
                    43712,
                    43714,
                    43714,
                    43739,
                    43741,
                    43744,
                    43754,
                    43762,
                    43764,
                    43777,
                    43782,
                    43785,
                    43790,
                    43793,
                    43798,
                    43808,
                    43814,
                    43816,
                    43822,
                    43824,
                    43866,
                    43868,
                    43879,
                    43888,
                    44002,
                    44032,
                    55203,
                    55216,
                    55238,
                    55243,
                    55291,
                    63744,
                    64109,
                    64112,
                    64217,
                    64256,
                    64262,
                    64275,
                    64279,
                    64285,
                    64285,
                    64287,
                    64296,
                    64298,
                    64310,
                    64312,
                    64316,
                    64318,
                    64318,
                    64320,
                    64321,
                    64323,
                    64324,
                    64326,
                    64433,
                    64467,
                    64829,
                    64848,
                    64911,
                    64914,
                    64967,
                    65008,
                    65019,
                    65136,
                    65140,
                    65142,
                    65276,
                    65313,
                    65338,
                    65345,
                    65370,
                    65382,
                    65470,
                    65474,
                    65479,
                    65482,
                    65487,
                    65490,
                    65495,
                    65498,
                    65500,
                    65536,
                    65547,
                    65549,
                    65574,
                    65576,
                    65594,
                    65596,
                    65597,
                    65599,
                    65613,
                    65616,
                    65629,
                    65664,
                    65786,
                    65856,
                    65908,
                    66176,
                    66204,
                    66208,
                    66256,
                    66304,
                    66335,
                    66349,
                    66378,
                    66384,
                    66421,
                    66432,
                    66461,
                    66464,
                    66499,
                    66504,
                    66511,
                    66513,
                    66517,
                    66560,
                    66717,
                    66736,
                    66771,
                    66776,
                    66811,
                    66816,
                    66855,
                    66864,
                    66915,
                    67072,
                    67382,
                    67392,
                    67413,
                    67424,
                    67431,
                    67584,
                    67589,
                    67592,
                    67592,
                    67594,
                    67637,
                    67639,
                    67640,
                    67644,
                    67644,
                    67647,
                    67669,
                    67680,
                    67702,
                    67712,
                    67742,
                    67808,
                    67826,
                    67828,
                    67829,
                    67840,
                    67861,
                    67872,
                    67897,
                    67968,
                    68023,
                    68030,
                    68031,
                    68096,
                    68096,
                    68112,
                    68115,
                    68117,
                    68119,
                    68121,
                    68149,
                    68192,
                    68220,
                    68224,
                    68252,
                    68288,
                    68295,
                    68297,
                    68324,
                    68352,
                    68405,
                    68416,
                    68437,
                    68448,
                    68466,
                    68480,
                    68497,
                    68608,
                    68680,
                    68736,
                    68786,
                    68800,
                    68850,
                    68864,
                    68899,
                    69376,
                    69404,
                    69415,
                    69415,
                    69424,
                    69445,
                    69600,
                    69622,
                    69635,
                    69687,
                    69763,
                    69807,
                    69840,
                    69864,
                    69891,
                    69926,
                    69956,
                    69956,
                    69968,
                    70002,
                    70006,
                    70006,
                    70019,
                    70066,
                    70081,
                    70084,
                    70106,
                    70106,
                    70108,
                    70108,
                    70144,
                    70161,
                    70163,
                    70187,
                    70272,
                    70278,
                    70280,
                    70280,
                    70282,
                    70285,
                    70287,
                    70301,
                    70303,
                    70312,
                    70320,
                    70366,
                    70405,
                    70412,
                    70415,
                    70416,
                    70419,
                    70440,
                    70442,
                    70448,
                    70450,
                    70451,
                    70453,
                    70457,
                    70461,
                    70461,
                    70480,
                    70480,
                    70493,
                    70497,
                    70656,
                    70708,
                    70727,
                    70730,
                    70751,
                    70751,
                    70784,
                    70831,
                    70852,
                    70853,
                    70855,
                    70855,
                    71040,
                    71086,
                    71128,
                    71131,
                    71168,
                    71215,
                    71236,
                    71236,
                    71296,
                    71338,
                    71352,
                    71352,
                    71424,
                    71450,
                    71680,
                    71723,
                    71840,
                    71903,
                    71935,
                    71935,
                    72096,
                    72103,
                    72106,
                    72144,
                    72161,
                    72161,
                    72163,
                    72163,
                    72192,
                    72192,
                    72203,
                    72242,
                    72250,
                    72250,
                    72272,
                    72272,
                    72284,
                    72329,
                    72349,
                    72349,
                    72384,
                    72440,
                    72704,
                    72712,
                    72714,
                    72750,
                    72768,
                    72768,
                    72818,
                    72847,
                    72960,
                    72966,
                    72968,
                    72969,
                    72971,
                    73008,
                    73030,
                    73030,
                    73056,
                    73061,
                    73063,
                    73064,
                    73066,
                    73097,
                    73112,
                    73112,
                    73440,
                    73458,
                    73728,
                    74649,
                    74752,
                    74862,
                    74880,
                    75075,
                    77824,
                    78894,
                    82944,
                    83526,
                    92160,
                    92728,
                    92736,
                    92766,
                    92880,
                    92909,
                    92928,
                    92975,
                    92992,
                    92995,
                    93027,
                    93047,
                    93053,
                    93071,
                    93760,
                    93823,
                    93952,
                    94026,
                    94032,
                    94032,
                    94099,
                    94111,
                    94176,
                    94177,
                    94179,
                    94179,
                    94208,
                    100343,
                    100352,
                    101106,
                    110592,
                    110878,
                    110928,
                    110930,
                    110948,
                    110951,
                    110960,
                    111355,
                    113664,
                    113770,
                    113776,
                    113788,
                    113792,
                    113800,
                    113808,
                    113817,
                    119808,
                    119892,
                    119894,
                    119964,
                    119966,
                    119967,
                    119970,
                    119970,
                    119973,
                    119974,
                    119977,
                    119980,
                    119982,
                    119993,
                    119995,
                    119995,
                    119997,
                    120003,
                    120005,
                    120069,
                    120071,
                    120074,
                    120077,
                    120084,
                    120086,
                    120092,
                    120094,
                    120121,
                    120123,
                    120126,
                    120128,
                    120132,
                    120134,
                    120134,
                    120138,
                    120144,
                    120146,
                    120485,
                    120488,
                    120512,
                    120514,
                    120538,
                    120540,
                    120570,
                    120572,
                    120596,
                    120598,
                    120628,
                    120630,
                    120654,
                    120656,
                    120686,
                    120688,
                    120712,
                    120714,
                    120744,
                    120746,
                    120770,
                    120772,
                    120779,
                    123136,
                    123180,
                    123191,
                    123197,
                    123214,
                    123214,
                    123584,
                    123627,
                    124928,
                    125124,
                    125184,
                    125251,
                    125259,
                    125259,
                    126464,
                    126467,
                    126469,
                    126495,
                    126497,
                    126498,
                    126500,
                    126500,
                    126503,
                    126503,
                    126505,
                    126514,
                    126516,
                    126519,
                    126521,
                    126521,
                    126523,
                    126523,
                    126530,
                    126530,
                    126535,
                    126535,
                    126537,
                    126537,
                    126539,
                    126539,
                    126541,
                    126543,
                    126545,
                    126546,
                    126548,
                    126548,
                    126551,
                    126551,
                    126553,
                    126553,
                    126555,
                    126555,
                    126557,
                    126557,
                    126559,
                    126559,
                    126561,
                    126562,
                    126564,
                    126564,
                    126567,
                    126570,
                    126572,
                    126578,
                    126580,
                    126583,
                    126585,
                    126588,
                    126590,
                    126590,
                    126592,
                    126601,
                    126603,
                    126619,
                    126625,
                    126627,
                    126629,
                    126633,
                    126635,
                    126651,
                    131072,
                    173782,
                    173824,
                    177972,
                    177984,
                    178205,
                    178208,
                    183969,
                    183984,
                    191456,
                    194560,
                    195101
                ], c4 = [
                    48,
                    57,
                    65,
                    90,
                    95,
                    95,
                    97,
                    122,
                    170,
                    170,
                    181,
                    181,
                    183,
                    183,
                    186,
                    186,
                    192,
                    214,
                    216,
                    246,
                    248,
                    705,
                    710,
                    721,
                    736,
                    740,
                    748,
                    748,
                    750,
                    750,
                    768,
                    884,
                    886,
                    887,
                    890,
                    893,
                    895,
                    895,
                    902,
                    906,
                    908,
                    908,
                    910,
                    929,
                    931,
                    1013,
                    1015,
                    1153,
                    1155,
                    1159,
                    1162,
                    1327,
                    1329,
                    1366,
                    1369,
                    1369,
                    1376,
                    1416,
                    1425,
                    1469,
                    1471,
                    1471,
                    1473,
                    1474,
                    1476,
                    1477,
                    1479,
                    1479,
                    1488,
                    1514,
                    1519,
                    1522,
                    1552,
                    1562,
                    1568,
                    1641,
                    1646,
                    1747,
                    1749,
                    1756,
                    1759,
                    1768,
                    1770,
                    1788,
                    1791,
                    1791,
                    1808,
                    1866,
                    1869,
                    1969,
                    1984,
                    2037,
                    2042,
                    2042,
                    2045,
                    2045,
                    2048,
                    2093,
                    2112,
                    2139,
                    2144,
                    2154,
                    2208,
                    2228,
                    2230,
                    2237,
                    2259,
                    2273,
                    2275,
                    2403,
                    2406,
                    2415,
                    2417,
                    2435,
                    2437,
                    2444,
                    2447,
                    2448,
                    2451,
                    2472,
                    2474,
                    2480,
                    2482,
                    2482,
                    2486,
                    2489,
                    2492,
                    2500,
                    2503,
                    2504,
                    2507,
                    2510,
                    2519,
                    2519,
                    2524,
                    2525,
                    2527,
                    2531,
                    2534,
                    2545,
                    2556,
                    2556,
                    2558,
                    2558,
                    2561,
                    2563,
                    2565,
                    2570,
                    2575,
                    2576,
                    2579,
                    2600,
                    2602,
                    2608,
                    2610,
                    2611,
                    2613,
                    2614,
                    2616,
                    2617,
                    2620,
                    2620,
                    2622,
                    2626,
                    2631,
                    2632,
                    2635,
                    2637,
                    2641,
                    2641,
                    2649,
                    2652,
                    2654,
                    2654,
                    2662,
                    2677,
                    2689,
                    2691,
                    2693,
                    2701,
                    2703,
                    2705,
                    2707,
                    2728,
                    2730,
                    2736,
                    2738,
                    2739,
                    2741,
                    2745,
                    2748,
                    2757,
                    2759,
                    2761,
                    2763,
                    2765,
                    2768,
                    2768,
                    2784,
                    2787,
                    2790,
                    2799,
                    2809,
                    2815,
                    2817,
                    2819,
                    2821,
                    2828,
                    2831,
                    2832,
                    2835,
                    2856,
                    2858,
                    2864,
                    2866,
                    2867,
                    2869,
                    2873,
                    2876,
                    2884,
                    2887,
                    2888,
                    2891,
                    2893,
                    2902,
                    2903,
                    2908,
                    2909,
                    2911,
                    2915,
                    2918,
                    2927,
                    2929,
                    2929,
                    2946,
                    2947,
                    2949,
                    2954,
                    2958,
                    2960,
                    2962,
                    2965,
                    2969,
                    2970,
                    2972,
                    2972,
                    2974,
                    2975,
                    2979,
                    2980,
                    2984,
                    2986,
                    2990,
                    3001,
                    3006,
                    3010,
                    3014,
                    3016,
                    3018,
                    3021,
                    3024,
                    3024,
                    3031,
                    3031,
                    3046,
                    3055,
                    3072,
                    3084,
                    3086,
                    3088,
                    3090,
                    3112,
                    3114,
                    3129,
                    3133,
                    3140,
                    3142,
                    3144,
                    3146,
                    3149,
                    3157,
                    3158,
                    3160,
                    3162,
                    3168,
                    3171,
                    3174,
                    3183,
                    3200,
                    3203,
                    3205,
                    3212,
                    3214,
                    3216,
                    3218,
                    3240,
                    3242,
                    3251,
                    3253,
                    3257,
                    3260,
                    3268,
                    3270,
                    3272,
                    3274,
                    3277,
                    3285,
                    3286,
                    3294,
                    3294,
                    3296,
                    3299,
                    3302,
                    3311,
                    3313,
                    3314,
                    3328,
                    3331,
                    3333,
                    3340,
                    3342,
                    3344,
                    3346,
                    3396,
                    3398,
                    3400,
                    3402,
                    3406,
                    3412,
                    3415,
                    3423,
                    3427,
                    3430,
                    3439,
                    3450,
                    3455,
                    3458,
                    3459,
                    3461,
                    3478,
                    3482,
                    3505,
                    3507,
                    3515,
                    3517,
                    3517,
                    3520,
                    3526,
                    3530,
                    3530,
                    3535,
                    3540,
                    3542,
                    3542,
                    3544,
                    3551,
                    3558,
                    3567,
                    3570,
                    3571,
                    3585,
                    3642,
                    3648,
                    3662,
                    3664,
                    3673,
                    3713,
                    3714,
                    3716,
                    3716,
                    3718,
                    3722,
                    3724,
                    3747,
                    3749,
                    3749,
                    3751,
                    3773,
                    3776,
                    3780,
                    3782,
                    3782,
                    3784,
                    3789,
                    3792,
                    3801,
                    3804,
                    3807,
                    3840,
                    3840,
                    3864,
                    3865,
                    3872,
                    3881,
                    3893,
                    3893,
                    3895,
                    3895,
                    3897,
                    3897,
                    3902,
                    3911,
                    3913,
                    3948,
                    3953,
                    3972,
                    3974,
                    3991,
                    3993,
                    4028,
                    4038,
                    4038,
                    4096,
                    4169,
                    4176,
                    4253,
                    4256,
                    4293,
                    4295,
                    4295,
                    4301,
                    4301,
                    4304,
                    4346,
                    4348,
                    4680,
                    4682,
                    4685,
                    4688,
                    4694,
                    4696,
                    4696,
                    4698,
                    4701,
                    4704,
                    4744,
                    4746,
                    4749,
                    4752,
                    4784,
                    4786,
                    4789,
                    4792,
                    4798,
                    4800,
                    4800,
                    4802,
                    4805,
                    4808,
                    4822,
                    4824,
                    4880,
                    4882,
                    4885,
                    4888,
                    4954,
                    4957,
                    4959,
                    4969,
                    4977,
                    4992,
                    5007,
                    5024,
                    5109,
                    5112,
                    5117,
                    5121,
                    5740,
                    5743,
                    5759,
                    5761,
                    5786,
                    5792,
                    5866,
                    5870,
                    5880,
                    5888,
                    5900,
                    5902,
                    5908,
                    5920,
                    5940,
                    5952,
                    5971,
                    5984,
                    5996,
                    5998,
                    6e3,
                    6002,
                    6003,
                    6016,
                    6099,
                    6103,
                    6103,
                    6108,
                    6109,
                    6112,
                    6121,
                    6155,
                    6157,
                    6160,
                    6169,
                    6176,
                    6264,
                    6272,
                    6314,
                    6320,
                    6389,
                    6400,
                    6430,
                    6432,
                    6443,
                    6448,
                    6459,
                    6470,
                    6509,
                    6512,
                    6516,
                    6528,
                    6571,
                    6576,
                    6601,
                    6608,
                    6618,
                    6656,
                    6683,
                    6688,
                    6750,
                    6752,
                    6780,
                    6783,
                    6793,
                    6800,
                    6809,
                    6823,
                    6823,
                    6832,
                    6845,
                    6912,
                    6987,
                    6992,
                    7001,
                    7019,
                    7027,
                    7040,
                    7155,
                    7168,
                    7223,
                    7232,
                    7241,
                    7245,
                    7293,
                    7296,
                    7304,
                    7312,
                    7354,
                    7357,
                    7359,
                    7376,
                    7378,
                    7380,
                    7418,
                    7424,
                    7673,
                    7675,
                    7957,
                    7960,
                    7965,
                    7968,
                    8005,
                    8008,
                    8013,
                    8016,
                    8023,
                    8025,
                    8025,
                    8027,
                    8027,
                    8029,
                    8029,
                    8031,
                    8061,
                    8064,
                    8116,
                    8118,
                    8124,
                    8126,
                    8126,
                    8130,
                    8132,
                    8134,
                    8140,
                    8144,
                    8147,
                    8150,
                    8155,
                    8160,
                    8172,
                    8178,
                    8180,
                    8182,
                    8188,
                    8255,
                    8256,
                    8276,
                    8276,
                    8305,
                    8305,
                    8319,
                    8319,
                    8336,
                    8348,
                    8400,
                    8412,
                    8417,
                    8417,
                    8421,
                    8432,
                    8450,
                    8450,
                    8455,
                    8455,
                    8458,
                    8467,
                    8469,
                    8469,
                    8472,
                    8477,
                    8484,
                    8484,
                    8486,
                    8486,
                    8488,
                    8488,
                    8490,
                    8505,
                    8508,
                    8511,
                    8517,
                    8521,
                    8526,
                    8526,
                    8544,
                    8584,
                    11264,
                    11310,
                    11312,
                    11358,
                    11360,
                    11492,
                    11499,
                    11507,
                    11520,
                    11557,
                    11559,
                    11559,
                    11565,
                    11565,
                    11568,
                    11623,
                    11631,
                    11631,
                    11647,
                    11670,
                    11680,
                    11686,
                    11688,
                    11694,
                    11696,
                    11702,
                    11704,
                    11710,
                    11712,
                    11718,
                    11720,
                    11726,
                    11728,
                    11734,
                    11736,
                    11742,
                    11744,
                    11775,
                    12293,
                    12295,
                    12321,
                    12335,
                    12337,
                    12341,
                    12344,
                    12348,
                    12353,
                    12438,
                    12441,
                    12447,
                    12449,
                    12538,
                    12540,
                    12543,
                    12549,
                    12591,
                    12593,
                    12686,
                    12704,
                    12730,
                    12784,
                    12799,
                    13312,
                    19893,
                    19968,
                    40943,
                    40960,
                    42124,
                    42192,
                    42237,
                    42240,
                    42508,
                    42512,
                    42539,
                    42560,
                    42607,
                    42612,
                    42621,
                    42623,
                    42737,
                    42775,
                    42783,
                    42786,
                    42888,
                    42891,
                    42943,
                    42946,
                    42950,
                    42999,
                    43047,
                    43072,
                    43123,
                    43136,
                    43205,
                    43216,
                    43225,
                    43232,
                    43255,
                    43259,
                    43259,
                    43261,
                    43309,
                    43312,
                    43347,
                    43360,
                    43388,
                    43392,
                    43456,
                    43471,
                    43481,
                    43488,
                    43518,
                    43520,
                    43574,
                    43584,
                    43597,
                    43600,
                    43609,
                    43616,
                    43638,
                    43642,
                    43714,
                    43739,
                    43741,
                    43744,
                    43759,
                    43762,
                    43766,
                    43777,
                    43782,
                    43785,
                    43790,
                    43793,
                    43798,
                    43808,
                    43814,
                    43816,
                    43822,
                    43824,
                    43866,
                    43868,
                    43879,
                    43888,
                    44010,
                    44012,
                    44013,
                    44016,
                    44025,
                    44032,
                    55203,
                    55216,
                    55238,
                    55243,
                    55291,
                    63744,
                    64109,
                    64112,
                    64217,
                    64256,
                    64262,
                    64275,
                    64279,
                    64285,
                    64296,
                    64298,
                    64310,
                    64312,
                    64316,
                    64318,
                    64318,
                    64320,
                    64321,
                    64323,
                    64324,
                    64326,
                    64433,
                    64467,
                    64829,
                    64848,
                    64911,
                    64914,
                    64967,
                    65008,
                    65019,
                    65024,
                    65039,
                    65056,
                    65071,
                    65075,
                    65076,
                    65101,
                    65103,
                    65136,
                    65140,
                    65142,
                    65276,
                    65296,
                    65305,
                    65313,
                    65338,
                    65343,
                    65343,
                    65345,
                    65370,
                    65382,
                    65470,
                    65474,
                    65479,
                    65482,
                    65487,
                    65490,
                    65495,
                    65498,
                    65500,
                    65536,
                    65547,
                    65549,
                    65574,
                    65576,
                    65594,
                    65596,
                    65597,
                    65599,
                    65613,
                    65616,
                    65629,
                    65664,
                    65786,
                    65856,
                    65908,
                    66045,
                    66045,
                    66176,
                    66204,
                    66208,
                    66256,
                    66272,
                    66272,
                    66304,
                    66335,
                    66349,
                    66378,
                    66384,
                    66426,
                    66432,
                    66461,
                    66464,
                    66499,
                    66504,
                    66511,
                    66513,
                    66517,
                    66560,
                    66717,
                    66720,
                    66729,
                    66736,
                    66771,
                    66776,
                    66811,
                    66816,
                    66855,
                    66864,
                    66915,
                    67072,
                    67382,
                    67392,
                    67413,
                    67424,
                    67431,
                    67584,
                    67589,
                    67592,
                    67592,
                    67594,
                    67637,
                    67639,
                    67640,
                    67644,
                    67644,
                    67647,
                    67669,
                    67680,
                    67702,
                    67712,
                    67742,
                    67808,
                    67826,
                    67828,
                    67829,
                    67840,
                    67861,
                    67872,
                    67897,
                    67968,
                    68023,
                    68030,
                    68031,
                    68096,
                    68099,
                    68101,
                    68102,
                    68108,
                    68115,
                    68117,
                    68119,
                    68121,
                    68149,
                    68152,
                    68154,
                    68159,
                    68159,
                    68192,
                    68220,
                    68224,
                    68252,
                    68288,
                    68295,
                    68297,
                    68326,
                    68352,
                    68405,
                    68416,
                    68437,
                    68448,
                    68466,
                    68480,
                    68497,
                    68608,
                    68680,
                    68736,
                    68786,
                    68800,
                    68850,
                    68864,
                    68903,
                    68912,
                    68921,
                    69376,
                    69404,
                    69415,
                    69415,
                    69424,
                    69456,
                    69600,
                    69622,
                    69632,
                    69702,
                    69734,
                    69743,
                    69759,
                    69818,
                    69840,
                    69864,
                    69872,
                    69881,
                    69888,
                    69940,
                    69942,
                    69951,
                    69956,
                    69958,
                    69968,
                    70003,
                    70006,
                    70006,
                    70016,
                    70084,
                    70089,
                    70092,
                    70096,
                    70106,
                    70108,
                    70108,
                    70144,
                    70161,
                    70163,
                    70199,
                    70206,
                    70206,
                    70272,
                    70278,
                    70280,
                    70280,
                    70282,
                    70285,
                    70287,
                    70301,
                    70303,
                    70312,
                    70320,
                    70378,
                    70384,
                    70393,
                    70400,
                    70403,
                    70405,
                    70412,
                    70415,
                    70416,
                    70419,
                    70440,
                    70442,
                    70448,
                    70450,
                    70451,
                    70453,
                    70457,
                    70459,
                    70468,
                    70471,
                    70472,
                    70475,
                    70477,
                    70480,
                    70480,
                    70487,
                    70487,
                    70493,
                    70499,
                    70502,
                    70508,
                    70512,
                    70516,
                    70656,
                    70730,
                    70736,
                    70745,
                    70750,
                    70751,
                    70784,
                    70853,
                    70855,
                    70855,
                    70864,
                    70873,
                    71040,
                    71093,
                    71096,
                    71104,
                    71128,
                    71133,
                    71168,
                    71232,
                    71236,
                    71236,
                    71248,
                    71257,
                    71296,
                    71352,
                    71360,
                    71369,
                    71424,
                    71450,
                    71453,
                    71467,
                    71472,
                    71481,
                    71680,
                    71738,
                    71840,
                    71913,
                    71935,
                    71935,
                    72096,
                    72103,
                    72106,
                    72151,
                    72154,
                    72161,
                    72163,
                    72164,
                    72192,
                    72254,
                    72263,
                    72263,
                    72272,
                    72345,
                    72349,
                    72349,
                    72384,
                    72440,
                    72704,
                    72712,
                    72714,
                    72758,
                    72760,
                    72768,
                    72784,
                    72793,
                    72818,
                    72847,
                    72850,
                    72871,
                    72873,
                    72886,
                    72960,
                    72966,
                    72968,
                    72969,
                    72971,
                    73014,
                    73018,
                    73018,
                    73020,
                    73021,
                    73023,
                    73031,
                    73040,
                    73049,
                    73056,
                    73061,
                    73063,
                    73064,
                    73066,
                    73102,
                    73104,
                    73105,
                    73107,
                    73112,
                    73120,
                    73129,
                    73440,
                    73462,
                    73728,
                    74649,
                    74752,
                    74862,
                    74880,
                    75075,
                    77824,
                    78894,
                    82944,
                    83526,
                    92160,
                    92728,
                    92736,
                    92766,
                    92768,
                    92777,
                    92880,
                    92909,
                    92912,
                    92916,
                    92928,
                    92982,
                    92992,
                    92995,
                    93008,
                    93017,
                    93027,
                    93047,
                    93053,
                    93071,
                    93760,
                    93823,
                    93952,
                    94026,
                    94031,
                    94087,
                    94095,
                    94111,
                    94176,
                    94177,
                    94179,
                    94179,
                    94208,
                    100343,
                    100352,
                    101106,
                    110592,
                    110878,
                    110928,
                    110930,
                    110948,
                    110951,
                    110960,
                    111355,
                    113664,
                    113770,
                    113776,
                    113788,
                    113792,
                    113800,
                    113808,
                    113817,
                    113821,
                    113822,
                    119141,
                    119145,
                    119149,
                    119154,
                    119163,
                    119170,
                    119173,
                    119179,
                    119210,
                    119213,
                    119362,
                    119364,
                    119808,
                    119892,
                    119894,
                    119964,
                    119966,
                    119967,
                    119970,
                    119970,
                    119973,
                    119974,
                    119977,
                    119980,
                    119982,
                    119993,
                    119995,
                    119995,
                    119997,
                    120003,
                    120005,
                    120069,
                    120071,
                    120074,
                    120077,
                    120084,
                    120086,
                    120092,
                    120094,
                    120121,
                    120123,
                    120126,
                    120128,
                    120132,
                    120134,
                    120134,
                    120138,
                    120144,
                    120146,
                    120485,
                    120488,
                    120512,
                    120514,
                    120538,
                    120540,
                    120570,
                    120572,
                    120596,
                    120598,
                    120628,
                    120630,
                    120654,
                    120656,
                    120686,
                    120688,
                    120712,
                    120714,
                    120744,
                    120746,
                    120770,
                    120772,
                    120779,
                    120782,
                    120831,
                    121344,
                    121398,
                    121403,
                    121452,
                    121461,
                    121461,
                    121476,
                    121476,
                    121499,
                    121503,
                    121505,
                    121519,
                    122880,
                    122886,
                    122888,
                    122904,
                    122907,
                    122913,
                    122915,
                    122916,
                    122918,
                    122922,
                    123136,
                    123180,
                    123184,
                    123197,
                    123200,
                    123209,
                    123214,
                    123214,
                    123584,
                    123641,
                    124928,
                    125124,
                    125136,
                    125142,
                    125184,
                    125259,
                    125264,
                    125273,
                    126464,
                    126467,
                    126469,
                    126495,
                    126497,
                    126498,
                    126500,
                    126500,
                    126503,
                    126503,
                    126505,
                    126514,
                    126516,
                    126519,
                    126521,
                    126521,
                    126523,
                    126523,
                    126530,
                    126530,
                    126535,
                    126535,
                    126537,
                    126537,
                    126539,
                    126539,
                    126541,
                    126543,
                    126545,
                    126546,
                    126548,
                    126548,
                    126551,
                    126551,
                    126553,
                    126553,
                    126555,
                    126555,
                    126557,
                    126557,
                    126559,
                    126559,
                    126561,
                    126562,
                    126564,
                    126564,
                    126567,
                    126570,
                    126572,
                    126578,
                    126580,
                    126583,
                    126585,
                    126588,
                    126590,
                    126590,
                    126592,
                    126601,
                    126603,
                    126619,
                    126625,
                    126627,
                    126629,
                    126633,
                    126635,
                    126651,
                    131072,
                    173782,
                    173824,
                    177972,
                    177984,
                    178205,
                    178208,
                    183969,
                    183984,
                    191456,
                    194560,
                    195101,
                    917760,
                    917999
                ], l4 = /^\/\/\/?\s*@(ts-expect-error|ts-ignore)/, u4 = /^(?:\/|\*)*\s*@(ts-expect-error|ts-ignore)/, p4 = /@(?:see|link)/i, f4 = rC(v0), fl = 7, Qd = /^#!.*/, d4 = String.fromCodePoint ? (e)=>String.fromCodePoint(e) : cC;
            }
        });
        function uC(e) {
            return as(e) || b_(e);
        }
        function pC(e) {
            return yv(e, H2);
        }
        function m4(e) {
            switch(Ql(e)){
                case 99:
                    return "lib.esnext.full.d.ts";
                case 9:
                    return "lib.es2022.full.d.ts";
                case 8:
                    return "lib.es2021.full.d.ts";
                case 7:
                    return "lib.es2020.full.d.ts";
                case 6:
                    return "lib.es2019.full.d.ts";
                case 5:
                    return "lib.es2018.full.d.ts";
                case 4:
                    return "lib.es2017.full.d.ts";
                case 3:
                    return "lib.es2016.full.d.ts";
                case 2:
                    return "lib.es6.d.ts";
                default:
                    return "lib.d.ts";
            }
        }
        function tn(e) {
            return e.start + e.length;
        }
        function h4(e) {
            return e.length === 0;
        }
        function fC(e, t) {
            return t >= e.start && t < tn(e);
        }
        function dC(e, t) {
            return t >= e.pos && t <= e.end;
        }
        function mC(e, t) {
            return t.start >= e.start && tn(t) <= tn(e);
        }
        function hC(e, t) {
            return y4(e, t) !== void 0;
        }
        function y4(e, t) {
            let n = g4(e, t);
            return n && n.length === 0 ? void 0 : n;
        }
        function yC(e, t) {
            return Ng(e.start, e.length, t.start, t.length);
        }
        function gC(e, t, n) {
            return Ng(e.start, e.length, t, n);
        }
        function Ng(e, t, n, a) {
            let _ = e + t, p = n + a;
            return n <= _ && p >= e;
        }
        function bC(e, t) {
            return t <= tn(e) && t >= e.start;
        }
        function g4(e, t) {
            let n = Math.max(e.start, t.start), a = Math.min(tn(e), tn(t));
            return n <= a ? Xi(n, a) : void 0;
        }
        function S_(e, t) {
            if (e < 0) throw new Error("start < 0");
            if (t < 0) throw new Error("length < 0");
            return {
                start: e,
                length: t
            };
        }
        function Xi(e, t) {
            return S_(e, t - e);
        }
        function Ys(e) {
            return S_(e.span.start, e.newLength);
        }
        function b4(e) {
            return h4(e.span) && e.newLength === 0;
        }
        function Yd(e, t) {
            if (t < 0) throw new Error("newLength < 0");
            return {
                span: e,
                newLength: t
            };
        }
        function vC(e) {
            if (e.length === 0) return Yg;
            if (e.length === 1) return e[0];
            let t = e[0], n = t.span.start, a = tn(t.span), _ = n + t.newLength;
            for(let p = 1; p < e.length; p++){
                let m = e[p], y = n, u = a, x = _, d = m.span.start, S = tn(m.span), T = d + m.newLength;
                n = Math.min(y, d), a = Math.max(u, u + (S - x)), _ = Math.max(T, T + (x - S));
            }
            return Yd(Xi(n, a), _ - n);
        }
        function TC(e) {
            if (e && e.kind === 168) {
                for(let t = e; t; t = t.parent)if ($i(t) || ar(t) || t.kind === 264) return t;
            }
        }
        function v4(e, t) {
            return Pa(e) && Cn(e, 31) && t.kind === 176;
        }
        function T4(e) {
            return sm(e) ? so(e.elements, S4) : !1;
        }
        function S4(e) {
            return Lm(e) ? !0 : T4(e.name);
        }
        function x4(e) {
            let t = e.parent;
            for(; ru(t.parent);)t = t.parent.parent;
            return t.parent;
        }
        function Og(e, t) {
            ru(e) && (e = x4(e));
            let n = t(e);
            return e.kind === 260 && (e = e.parent), e && e.kind === 261 && (n |= t(e), e = e.parent), e && e.kind === 243 && (n |= t(e)), n;
        }
        function Kd(e) {
            return Og(e, wm);
        }
        function SC(e) {
            return Og(e, tS);
        }
        function x_(e) {
            return Og(e, xC);
        }
        function xC(e) {
            return e.flags;
        }
        function wC(e, t, n) {
            let a = e.toLowerCase(), _ = /^([a-z]+)([_-]([a-z]+))?$/.exec(a);
            if (!_) {
                n && n.push(hl(B.Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1, "en", "ja-jp"));
                return;
            }
            let p = _[1], m = _[3];
            rs(Kg, a) && !y(p, m, n) && y(p, void 0, n), Dv(e);
            function y(u, x, d) {
                let S = br(t.getExecutingFilePath()), T = Mi(S), A = Qt(T, u);
                if (x && (A = A + "-" + x), A = t.resolvePath(Qt(A, "diagnosticMessages.generated.json")), !t.fileExists(A)) return !1;
                let N = "";
                try {
                    N = t.readFile(A);
                } catch  {
                    return d && d.push(hl(B.Unable_to_open_file_0, A)), !1;
                }
                try {
                    CS(JSON.parse(N));
                } catch  {
                    return d && d.push(hl(B.Corrupted_locale_file_0, A)), !1;
                }
                return !0;
            }
        }
        function Bl(e, t) {
            if (e) for(; e.original !== void 0;)e = e.original;
            return !e || !t || t(e) ? e : void 0;
        }
        function or(e, t) {
            for(; e;){
                let n = t(e);
                if (n === "quit") return;
                if (n) return e;
                e = e.parent;
            }
        }
        function xl(e) {
            return (e.flags & 16) === 0;
        }
        function Ul(e, t) {
            if (e === void 0 || xl(e)) return e;
            for(e = e.original; e;){
                if (xl(e)) return !t || t(e) ? e : void 0;
                e = e.original;
            }
        }
        function qr(e) {
            return e.length >= 2 && e.charCodeAt(0) === 95 && e.charCodeAt(1) === 95 ? "_" + e : e;
        }
        function Go(e) {
            let t = e;
            return t.length >= 3 && t.charCodeAt(0) === 95 && t.charCodeAt(1) === 95 && t.charCodeAt(2) === 95 ? t.substr(1) : t;
        }
        function Lt(e) {
            return Go(e.escapedText);
        }
        function w4(e) {
            let t = Fl(e.escapedText);
            return t ? Ur(t, ki) : void 0;
        }
        function gd(e) {
            return e.valueDeclaration && Z4(e.valueDeclaration) ? Lt(e.valueDeclaration.name) : Go(e.escapedName);
        }
        function E4(e) {
            let t = e.parent.parent;
            if (t) {
                if (Xo(t)) return kf(t);
                switch(t.kind){
                    case 243:
                        if (t.declarationList && t.declarationList.declarations[0]) return kf(t.declarationList.declarations[0]);
                        break;
                    case 244:
                        let n = t.expression;
                        switch(n.kind === 226 && n.operatorToken.kind === 64 && (n = n.left), n.kind){
                            case 211:
                                return n.name;
                            case 212:
                                let a = n.argumentExpression;
                                if (Ae(a)) return a;
                        }
                        break;
                    case 217:
                        return kf(t.expression);
                    case 256:
                        if (Xo(t.statement) || _m(t.statement)) return kf(t.statement);
                        break;
                }
            }
        }
        function kf(e) {
            let t = ql(e);
            return t && Ae(t) ? t : void 0;
        }
        function C4(e, t) {
            return !!(Zd(e) && Ae(e.name) && Lt(e.name) === Lt(t) || ls(e) && Ze(e.declarationList.declarations, (n)=>C4(n, t)));
        }
        function A4(e) {
            return e.name || E4(e);
        }
        function Zd(e) {
            return !!e.name;
        }
        function em(e) {
            switch(e.kind){
                case 80:
                    return e;
                case 355:
                case 348:
                    {
                        let { name: n } = e;
                        if (n.kind === 166) return n.right;
                        break;
                    }
                case 213:
                case 226:
                    {
                        let n = e;
                        switch(Oa(n)){
                            case 1:
                            case 4:
                            case 5:
                            case 3:
                                return hm(n.left);
                            case 7:
                            case 8:
                            case 9:
                                return n.arguments[1];
                            default:
                                return;
                        }
                    }
                case 353:
                    return A4(e);
                case 347:
                    return E4(e);
                case 277:
                    {
                        let { expression: n } = e;
                        return Ae(n) ? n : void 0;
                    }
                case 212:
                    let t = e;
                    if (v2(t)) return t.argumentExpression;
            }
            return e.name;
        }
        function ql(e) {
            if (e !== void 0) return em(e) || (Nm(e) || Om(e) || Ol(e) ? k4(e) : void 0);
        }
        function k4(e) {
            if (e.parent) {
                if (fs(e.parent) || ru(e.parent)) return e.parent.name;
                if (At(e.parent) && e === e.parent.right) {
                    if (Ae(e.parent.left)) return e.parent.left;
                    if (Ko(e.parent.left)) return hm(e.parent.left);
                } else if (Li(e.parent) && Ae(e.parent.name)) return e.parent.name;
            } else return;
        }
        function EC(e) {
            if (kl(e)) return rr(e.modifiers, M_);
        }
        function bd(e) {
            if (Cn(e, 98303)) return rr(e.modifiers, Ug);
        }
        function D4(e, t) {
            if (e.name) {
                if (Ae(e.name)) {
                    let n = e.name.escapedText;
                    return c_(e.parent, t).filter((a)=>m_(a) && Ae(a.name) && a.name.escapedText === n);
                } else {
                    let n = e.parent.parameters.indexOf(e);
                    I.assert(n > -1, "Parameters should always be in their parents' parameter list");
                    let a = c_(e.parent, t).filter(m_);
                    if (n < a.length) return [
                        a[n]
                    ];
                }
            }
            return Je;
        }
        function tm(e) {
            return D4(e, !1);
        }
        function P4(e) {
            return D4(e, !0);
        }
        function I4(e, t) {
            let n = e.name.escapedText;
            return c_(e.parent, t).filter((a)=>ts(a) && a.typeParameters.some((_)=>_.name.escapedText === n));
        }
        function N4(e) {
            return I4(e, !1);
        }
        function O4(e) {
            return I4(e, !0);
        }
        function CC(e) {
            return !!nn(e, m_);
        }
        function M4(e) {
            return nn(e, Fm);
        }
        function L4(e) {
            return W4(e, T8);
        }
        function AC(e) {
            return nn(e, y8);
        }
        function kC(e) {
            return nn(e, Fb);
        }
        function J4(e) {
            return nn(e, Fb, !0);
        }
        function DC(e) {
            return nn(e, Bb);
        }
        function R4(e) {
            return nn(e, Bb, !0);
        }
        function PC(e) {
            return nn(e, Ub);
        }
        function j4(e) {
            return nn(e, Ub, !0);
        }
        function IC(e) {
            return nn(e, qb);
        }
        function F4(e) {
            return nn(e, qb, !0);
        }
        function B4(e) {
            return nn(e, g8, !0);
        }
        function NC(e) {
            return nn(e, Wb);
        }
        function U4(e) {
            return nn(e, Wb, !0);
        }
        function OC(e) {
            return nn(e, b8);
        }
        function MC(e) {
            return nn(e, v8);
        }
        function q4(e) {
            return nn(e, Vb);
        }
        function LC(e) {
            return nn(e, ts);
        }
        function Mg(e) {
            return nn(e, Hb);
        }
        function nm(e) {
            let t = nn(e, lu);
            if (t && t.typeExpression && t.typeExpression.type) return t;
        }
        function rm(e) {
            let t = nn(e, lu);
            return !t && Pa(e) && (t = ir(tm(e), (n)=>!!n.typeExpression)), t && t.typeExpression && t.typeExpression.type;
        }
        function z4(e) {
            let t = q4(e);
            if (t && t.typeExpression) return t.typeExpression.type;
            let n = nm(e);
            if (n && n.typeExpression) {
                let a = n.typeExpression.type;
                if (Im(a)) {
                    let _ = ir(a.members, yb);
                    return _ && _.type;
                }
                if (tu(a) || jm(a)) return a.type;
            }
        }
        function c_(e, t) {
            var n;
            if (!ym(e)) return Je;
            let a = (n = e.jsDoc) == null ? void 0 : n.jsDocCache;
            if (a === void 0 || t) {
                let _ = p3(e, t);
                I.assert(_.length < 2 || _[0] !== _[1]), a = zo(_, (p)=>ds(p) ? p.tags : p), t || (e.jsDoc ?? (e.jsDoc = []), e.jsDoc.jsDocCache = a);
            }
            return a;
        }
        function zl(e) {
            return c_(e, !1);
        }
        function JC(e) {
            return c_(e, !0);
        }
        function nn(e, t, n) {
            return ir(c_(e, n), t);
        }
        function W4(e, t) {
            return zl(e).filter(t);
        }
        function RC(e, t) {
            return zl(e).filter((n)=>n.kind === t);
        }
        function jC(e) {
            return typeof e == "string" ? e : e == null ? void 0 : e.map((t)=>t.kind === 328 ? t.text : FC(t)).join("");
        }
        function FC(e) {
            let t = e.kind === 331 ? "link" : e.kind === 332 ? "linkcode" : "linkplain", n = e.name ? Ci(e.name) : "", a = e.name && e.text.startsWith("://") ? "" : " ";
            return `{@${t} ${n}${a}${e.text}}`;
        }
        function BC(e) {
            if (cu(e)) {
                if (zb(e.parent)) {
                    let t = E2(e.parent);
                    if (t && eo(t.tags)) return zo(t.tags, (n)=>ts(n) ? n.typeParameters : void 0);
                }
                return Je;
            }
            if (Xl(e)) return I.assert(e.parent.kind === 327), zo(e.parent.tags, (t)=>ts(t) ? t.typeParameters : void 0);
            if (e.typeParameters || L8(e) && e.typeParameters) return e.typeParameters;
            if (Vt(e)) {
                let t = G3(e);
                if (t.length) return t;
                let n = rm(e);
                if (n && tu(n) && n.typeParameters) return n.typeParameters;
            }
            return Je;
        }
        function UC(e) {
            return e.constraint ? e.constraint : ts(e.parent) && e === e.parent.typeParameters[0] ? e.parent.constraint : void 0;
        }
        function ro(e) {
            return e.kind === 80 || e.kind === 81;
        }
        function qC(e) {
            return e.kind === 178 || e.kind === 177;
        }
        function V4(e) {
            return Ln(e) && !!(e.flags & 64);
        }
        function H4(e) {
            return Ki(e) && !!(e.flags & 64);
        }
        function T0(e) {
            return R_(e) && !!(e.flags & 64);
        }
        function Lg(e) {
            let t = e.kind;
            return !!(e.flags & 64) && (t === 211 || t === 212 || t === 213 || t === 235);
        }
        function Jg(e) {
            return Lg(e) && !Uo(e) && !!e.questionDotToken;
        }
        function zC(e) {
            return Jg(e.parent) && e.parent.expression === e;
        }
        function WC(e) {
            return !Lg(e.parent) || Jg(e.parent) || e !== e.parent.expression;
        }
        function VC(e) {
            return e.kind === 226 && e.operatorToken.kind === 61;
        }
        function G4(e) {
            return J_(e) && Ae(e.typeName) && e.typeName.escapedText === "const" && !e.typeArguments;
        }
        function im(e) {
            return ms(e, 8);
        }
        function X4(e) {
            return Uo(e) && !!(e.flags & 64);
        }
        function HC(e) {
            return e.kind === 252 || e.kind === 251;
        }
        function GC(e) {
            return e.kind === 280 || e.kind === 279;
        }
        function $4(e) {
            switch(e.kind){
                case 309:
                case 310:
                    return !0;
                default:
                    return !1;
            }
        }
        function XC(e) {
            return $4(e) || e.kind === 307 || e.kind === 311;
        }
        function Rg(e) {
            return e.kind === 355 || e.kind === 348;
        }
        function $C(e) {
            return Wl(e.kind);
        }
        function Wl(e) {
            return e >= 166;
        }
        function Q4(e) {
            return e >= 0 && e <= 165;
        }
        function QC(e) {
            return Q4(e.kind);
        }
        function ha(e) {
            return Wn(e, "pos") && Wn(e, "end");
        }
        function jg(e) {
            return 9 <= e && e <= 15;
        }
        function Fg(e) {
            return jg(e.kind);
        }
        function YC(e) {
            switch(e.kind){
                case 210:
                case 209:
                case 14:
                case 218:
                case 231:
                    return !0;
            }
            return !1;
        }
        function wl(e) {
            return 15 <= e && e <= 18;
        }
        function KC(e) {
            return wl(e.kind);
        }
        function ZC(e) {
            let t = e.kind;
            return t === 17 || t === 18;
        }
        function eA(e) {
            return c8(e) || u8(e);
        }
        function Y4(e) {
            switch(e.kind){
                case 276:
                    return e.isTypeOnly || e.parent.parent.isTypeOnly;
                case 274:
                    return e.parent.isTypeOnly;
                case 273:
                case 271:
                    return e.isTypeOnly;
            }
            return !1;
        }
        function K4(e) {
            switch(e.kind){
                case 281:
                    return e.isTypeOnly || e.parent.parent.isTypeOnly;
                case 278:
                    return e.isTypeOnly && !!e.moduleSpecifier && !e.exportClause;
                case 280:
                    return e.parent.isTypeOnly;
            }
            return !1;
        }
        function tA(e) {
            return Y4(e) || K4(e);
        }
        function nA(e) {
            return e.kind === 11 || wl(e.kind);
        }
        function rA(e) {
            return Tr(e) || Ae(e);
        }
        function va(e) {
            var t;
            return Ae(e) && ((t = e.emitNode) == null ? void 0 : t.autoGenerate) !== void 0;
        }
        function Bg(e) {
            var t;
            return Vn(e) && ((t = e.emitNode) == null ? void 0 : t.autoGenerate) !== void 0;
        }
        function iA(e) {
            let t = e.emitNode.autoGenerate.flags;
            return !!(t & 32) && !!(t & 16) && !!(t & 8);
        }
        function Z4(e) {
            return (Ia(e) || zg(e)) && Vn(e.name);
        }
        function aA(e) {
            return Ln(e) && Vn(e.name);
        }
        function Ei(e) {
            switch(e){
                case 128:
                case 129:
                case 134:
                case 87:
                case 138:
                case 90:
                case 95:
                case 103:
                case 125:
                case 123:
                case 124:
                case 148:
                case 126:
                case 147:
                case 164:
                    return !0;
            }
            return !1;
        }
        function eT(e) {
            return !!(z2(e) & 31);
        }
        function tT(e) {
            return eT(e) || e === 126 || e === 164 || e === 129;
        }
        function Ug(e) {
            return Ei(e.kind);
        }
        function oA(e) {
            let t = e.kind;
            return t === 166 || t === 80;
        }
        function Vl(e) {
            let t = e.kind;
            return t === 80 || t === 81 || t === 11 || t === 9 || t === 167;
        }
        function sA(e) {
            let t = e.kind;
            return t === 80 || t === 206 || t === 207;
        }
        function $i(e) {
            return !!e && qg(e.kind);
        }
        function am(e) {
            return !!e && (qg(e.kind) || eu(e));
        }
        function nT(e) {
            return e && rT(e.kind);
        }
        function _A(e) {
            return e.kind === 112 || e.kind === 97;
        }
        function rT(e) {
            switch(e){
                case 262:
                case 174:
                case 176:
                case 177:
                case 178:
                case 218:
                case 219:
                    return !0;
                default:
                    return !1;
            }
        }
        function qg(e) {
            switch(e){
                case 173:
                case 179:
                case 330:
                case 180:
                case 181:
                case 184:
                case 324:
                case 185:
                    return !0;
                default:
                    return rT(e);
            }
        }
        function cA(e) {
            return ci(e) || _8(e) || au(e) && $i(e.parent);
        }
        function io(e) {
            let t = e.kind;
            return t === 176 || t === 172 || t === 174 || t === 177 || t === 178 || t === 181 || t === 175 || t === 240;
        }
        function ar(e) {
            return e && (e.kind === 263 || e.kind === 231);
        }
        function om(e) {
            return e && (e.kind === 177 || e.kind === 178);
        }
        function iT(e) {
            return Ia(e) && F2(e);
        }
        function lA(e) {
            return Vt(e) && ox(e) ? (!_s(e) || !k_(e.expression)) && !Yo(e, !0) : e.parent && ar(e.parent) && Ia(e) && !F2(e);
        }
        function zg(e) {
            switch(e.kind){
                case 174:
                case 177:
                case 178:
                    return !0;
                default:
                    return !1;
            }
        }
        function uA(e) {
            switch(e.kind){
                case 174:
                case 177:
                case 178:
                case 172:
                    return !0;
                default:
                    return !1;
            }
        }
        function Lf(e) {
            return Ug(e) || M_(e);
        }
        function Wg(e) {
            let t = e.kind;
            return t === 180 || t === 179 || t === 171 || t === 173 || t === 181 || t === 177 || t === 178;
        }
        function pA(e) {
            return Wg(e) || io(e);
        }
        function Vg(e) {
            let t = e.kind;
            return t === 303 || t === 304 || t === 305 || t === 174 || t === 177 || t === 178;
        }
        function S0(e) {
            return wS(e.kind);
        }
        function fA(e) {
            switch(e.kind){
                case 184:
                case 185:
                    return !0;
            }
            return !1;
        }
        function sm(e) {
            if (e) {
                let t = e.kind;
                return t === 207 || t === 206;
            }
            return !1;
        }
        function aT(e) {
            let t = e.kind;
            return t === 209 || t === 210;
        }
        function dA(e) {
            let t = e.kind;
            return t === 208 || t === 232;
        }
        function Hg(e) {
            switch(e.kind){
                case 260:
                case 169:
                case 208:
                    return !0;
            }
            return !1;
        }
        function mA(e) {
            return Li(e) || Pa(e) || sT(e) || cT(e);
        }
        function hA(e) {
            return oT(e) || _T(e);
        }
        function oT(e) {
            switch(e.kind){
                case 206:
                case 210:
                    return !0;
            }
            return !1;
        }
        function sT(e) {
            switch(e.kind){
                case 208:
                case 303:
                case 304:
                case 305:
                    return !0;
            }
            return !1;
        }
        function _T(e) {
            switch(e.kind){
                case 207:
                case 209:
                    return !0;
            }
            return !1;
        }
        function cT(e) {
            switch(e.kind){
                case 208:
                case 232:
                case 230:
                case 209:
                case 210:
                case 80:
                case 211:
                case 212:
                    return !0;
            }
            return si(e, !0);
        }
        function yA(e) {
            let t = e.kind;
            return t === 211 || t === 166 || t === 205;
        }
        function gA(e) {
            let t = e.kind;
            return t === 211 || t === 166;
        }
        function bA(e) {
            return lT(e) || KS(e);
        }
        function lT(e) {
            switch(e.kind){
                case 286:
                case 285:
                case 213:
                case 214:
                case 215:
                case 170:
                    return !0;
                default:
                    return !1;
            }
        }
        function vA(e) {
            return e.kind === 213 || e.kind === 214;
        }
        function TA(e) {
            let t = e.kind;
            return t === 228 || t === 15;
        }
        function jo(e) {
            return uT(im(e).kind);
        }
        function uT(e) {
            switch(e){
                case 211:
                case 212:
                case 214:
                case 213:
                case 284:
                case 285:
                case 288:
                case 215:
                case 209:
                case 217:
                case 210:
                case 231:
                case 218:
                case 80:
                case 81:
                case 14:
                case 9:
                case 10:
                case 11:
                case 15:
                case 228:
                case 97:
                case 106:
                case 110:
                case 112:
                case 108:
                case 235:
                case 233:
                case 236:
                case 102:
                case 282:
                    return !0;
                default:
                    return !1;
            }
        }
        function pT(e) {
            return fT(im(e).kind);
        }
        function fT(e) {
            switch(e){
                case 224:
                case 225:
                case 220:
                case 221:
                case 222:
                case 223:
                case 216:
                    return !0;
                default:
                    return uT(e);
            }
        }
        function SA(e) {
            switch(e.kind){
                case 225:
                    return !0;
                case 224:
                    return e.operator === 46 || e.operator === 47;
                default:
                    return !1;
            }
        }
        function xA(e) {
            switch(e.kind){
                case 106:
                case 112:
                case 97:
                case 224:
                    return !0;
                default:
                    return Fg(e);
            }
        }
        function _m(e) {
            return wA(im(e).kind);
        }
        function wA(e) {
            switch(e){
                case 227:
                case 229:
                case 219:
                case 226:
                case 230:
                case 234:
                case 232:
                case 361:
                case 360:
                case 238:
                    return !0;
                default:
                    return fT(e);
            }
        }
        function EA(e) {
            let t = e.kind;
            return t === 216 || t === 234;
        }
        function CA(e) {
            return Lb(e) || a8(e);
        }
        function dT(e, t) {
            switch(e.kind){
                case 248:
                case 249:
                case 250:
                case 246:
                case 247:
                    return !0;
                case 256:
                    return t && dT(e.statement, t);
            }
            return !1;
        }
        function mT(e) {
            return ps(e) || F_(e);
        }
        function AA(e) {
            return Ze(e, mT);
        }
        function kA(e) {
            return !fm(e) && !ps(e) && !Cn(e, 32) && !um(e);
        }
        function DA(e) {
            return fm(e) || ps(e) || Cn(e, 32);
        }
        function PA(e) {
            return e.kind === 249 || e.kind === 250;
        }
        function IA(e) {
            return au(e) || _m(e);
        }
        function NA(e) {
            return au(e);
        }
        function OA(e) {
            return kb(e) || _m(e);
        }
        function MA(e) {
            let t = e.kind;
            return t === 268 || t === 267 || t === 80;
        }
        function LA(e) {
            let t = e.kind;
            return t === 268 || t === 267;
        }
        function JA(e) {
            let t = e.kind;
            return t === 80 || t === 267;
        }
        function RA(e) {
            let t = e.kind;
            return t === 275 || t === 274;
        }
        function jA(e) {
            return e.kind === 267 || e.kind === 266;
        }
        function FA(e) {
            switch(e.kind){
                case 219:
                case 226:
                case 208:
                case 213:
                case 179:
                case 263:
                case 231:
                case 175:
                case 176:
                case 185:
                case 180:
                case 212:
                case 266:
                case 306:
                case 277:
                case 278:
                case 281:
                case 262:
                case 218:
                case 184:
                case 177:
                case 80:
                case 273:
                case 271:
                case 276:
                case 181:
                case 264:
                case 345:
                case 347:
                case 324:
                case 348:
                case 355:
                case 330:
                case 353:
                case 329:
                case 291:
                case 292:
                case 293:
                case 200:
                case 174:
                case 173:
                case 267:
                case 202:
                case 280:
                case 270:
                case 274:
                case 214:
                case 15:
                case 9:
                case 210:
                case 169:
                case 211:
                case 303:
                case 172:
                case 171:
                case 178:
                case 304:
                case 312:
                case 305:
                case 11:
                case 265:
                case 187:
                case 168:
                case 260:
                    return !0;
                default:
                    return !1;
            }
        }
        function BA(e) {
            switch(e.kind){
                case 219:
                case 241:
                case 179:
                case 269:
                case 299:
                case 175:
                case 194:
                case 176:
                case 185:
                case 180:
                case 248:
                case 249:
                case 250:
                case 262:
                case 218:
                case 184:
                case 177:
                case 181:
                case 345:
                case 347:
                case 324:
                case 330:
                case 353:
                case 200:
                case 174:
                case 173:
                case 267:
                case 178:
                case 312:
                case 265:
                    return !0;
                default:
                    return !1;
            }
        }
        function UA(e) {
            return e === 219 || e === 208 || e === 263 || e === 231 || e === 175 || e === 176 || e === 266 || e === 306 || e === 281 || e === 262 || e === 218 || e === 177 || e === 273 || e === 271 || e === 276 || e === 264 || e === 291 || e === 174 || e === 173 || e === 267 || e === 270 || e === 274 || e === 280 || e === 169 || e === 303 || e === 172 || e === 171 || e === 178 || e === 304 || e === 265 || e === 168 || e === 260 || e === 353 || e === 345 || e === 355;
        }
        function Gg(e) {
            return e === 262 || e === 282 || e === 263 || e === 264 || e === 265 || e === 266 || e === 267 || e === 272 || e === 271 || e === 278 || e === 277 || e === 270;
        }
        function Xg(e) {
            return e === 252 || e === 251 || e === 259 || e === 246 || e === 244 || e === 242 || e === 249 || e === 250 || e === 248 || e === 245 || e === 256 || e === 253 || e === 255 || e === 257 || e === 258 || e === 243 || e === 247 || e === 254 || e === 359;
        }
        function Xo(e) {
            return e.kind === 168 ? e.parent && e.parent.kind !== 352 || Vt(e) : UA(e.kind);
        }
        function qA(e) {
            return Gg(e.kind);
        }
        function zA(e) {
            return Xg(e.kind);
        }
        function hT(e) {
            let t = e.kind;
            return Xg(t) || Gg(t) || WA(e);
        }
        function WA(e) {
            return e.kind !== 241 || e.parent !== void 0 && (e.parent.kind === 258 || e.parent.kind === 299) ? !1 : !zT(e);
        }
        function yT(e) {
            let t = e.kind;
            return Xg(t) || Gg(t) || t === 241;
        }
        function VA(e) {
            let t = e.kind;
            return t === 283 || t === 166 || t === 80;
        }
        function HA(e) {
            let t = e.kind;
            return t === 110 || t === 80 || t === 211 || t === 295;
        }
        function gT(e) {
            let t = e.kind;
            return t === 284 || t === 294 || t === 285 || t === 12 || t === 288;
        }
        function GA(e) {
            let t = e.kind;
            return t === 291 || t === 293;
        }
        function XA(e) {
            let t = e.kind;
            return t === 11 || t === 294;
        }
        function bT(e) {
            let t = e.kind;
            return t === 286 || t === 285;
        }
        function $A(e) {
            let t = e.kind;
            return t === 296 || t === 297;
        }
        function $g(e) {
            return e.kind >= 316 && e.kind <= 357;
        }
        function vT(e) {
            return e.kind === 327 || e.kind === 326 || e.kind === 328 || dl(e) || Qg(e) || jb(e) || cu(e);
        }
        function Qg(e) {
            return e.kind >= 334 && e.kind <= 357;
        }
        function nl(e) {
            return e.kind === 178;
        }
        function rl(e) {
            return e.kind === 177;
        }
        function Hi(e) {
            if (!ym(e)) return !1;
            let { jsDoc: t } = e;
            return !!t && t.length > 0;
        }
        function QA(e) {
            return !!e.type;
        }
        function TT(e) {
            return !!e.initializer;
        }
        function YA(e) {
            switch(e.kind){
                case 260:
                case 169:
                case 208:
                case 172:
                case 303:
                case 306:
                    return !0;
                default:
                    return !1;
            }
        }
        function x0(e) {
            return e.kind === 291 || e.kind === 293 || Vg(e);
        }
        function KA(e) {
            return e.kind === 183 || e.kind === 233;
        }
        function ZA(e) {
            let t = w0;
            for (let n of e){
                if (!n.length) continue;
                let a = 0;
                for(; a < n.length && a < t && ka(n.charCodeAt(a)); a++);
                if (a < t && (t = a), t === 0) return 0;
            }
            return t === w0 ? void 0 : t;
        }
        function ni(e) {
            return e.kind === 11 || e.kind === 15;
        }
        function dl(e) {
            return e.kind === 331 || e.kind === 332 || e.kind === 333;
        }
        function ek(e) {
            let t = Pi(e.parameters);
            return !!t && ST(t);
        }
        function ST(e) {
            let t = m_(e) ? e.typeExpression && e.typeExpression.type : e.type;
            return e.dotDotDotToken !== void 0 || !!t && t.kind === 325;
        }
        var Yg, Kg, w0, tk = It({
            "src/compiler/utilitiesPublic.ts" () {
                "use strict";
                En(), Yg = Yd(S_(0, 0), 0), Kg = [
                    "cs",
                    "de",
                    "es",
                    "fr",
                    "it",
                    "ja",
                    "ko",
                    "pl",
                    "pt-br",
                    "ru",
                    "tr",
                    "zh-cn",
                    "zh-tw"
                ], w0 = 1073741823;
            }
        });
        function nk(e, t) {
            let n = e.declarations;
            if (n) {
                for (let a of n)if (a.kind === t) return a;
            }
        }
        function rk(e, t) {
            return rr(e.declarations || Je, (n)=>n.kind === t);
        }
        function ik(e) {
            let t = new Map;
            if (e) for (let n of e)t.set(n.escapedName, n);
            return t;
        }
        function E0(e) {
            return (e.flags & 33554432) !== 0;
        }
        function ak() {
            var e = "";
            let t = (n)=>e += n;
            return {
                getText: ()=>e,
                write: t,
                rawWrite: t,
                writeKeyword: t,
                writeOperator: t,
                writePunctuation: t,
                writeSpace: t,
                writeStringLiteral: t,
                writeLiteral: t,
                writeParameter: t,
                writeProperty: t,
                writeSymbol: (n, a)=>t(n),
                writeTrailingSemicolon: t,
                writeComment: t,
                getTextPos: ()=>e.length,
                getLine: ()=>0,
                getColumn: ()=>0,
                getIndent: ()=>0,
                isAtStartOfLine: ()=>!1,
                hasTrailingComment: ()=>!1,
                hasTrailingWhitespace: ()=>!!e.length && ka(e.charCodeAt(e.length - 1)),
                writeLine: ()=>e += " ",
                increaseIndent: gr,
                decreaseIndent: gr,
                clear: ()=>e = ""
            };
        }
        function ok(e, t) {
            return e.configFilePath !== t.configFilePath || xT(e, t);
        }
        function xT(e, t) {
            return w_(e, t, moduleResolutionOptionDeclarations);
        }
        function sk(e, t) {
            return w_(e, t, optionsAffectingProgramStructure);
        }
        function w_(e, t, n) {
            return e !== t && n.some((a)=>!rb(z0(e, a), z0(t, a)));
        }
        function _k(e, t) {
            for(;;){
                let n = t(e);
                if (n === "quit") return;
                if (n !== void 0) return n;
                if (ci(e)) return;
                e = e.parent;
            }
        }
        function ck(e, t) {
            let n = e.entries();
            for (let [a, _] of n){
                let p = t(_, a);
                if (p) return p;
            }
        }
        function C0(e, t) {
            let n = e.keys();
            for (let a of n){
                let _ = t(a);
                if (_) return _;
            }
        }
        function lk(e, t) {
            e.forEach((n, a)=>{
                t.set(a, n);
            });
        }
        function uk(e) {
            let t = e_.getText();
            try {
                return e(e_), e_.getText();
            } finally{
                e_.clear(), e_.writeKeyword(t);
            }
        }
        function cm(e) {
            return e.end - e.pos;
        }
        function pk(e, t) {
            return e.path === t.path && !e.prepend == !t.prepend && !e.circular == !t.circular;
        }
        function fk(e, t) {
            return e === t || e.resolvedModule === t.resolvedModule || !!e.resolvedModule && !!t.resolvedModule && e.resolvedModule.isExternalLibraryImport === t.resolvedModule.isExternalLibraryImport && e.resolvedModule.extension === t.resolvedModule.extension && e.resolvedModule.resolvedFileName === t.resolvedModule.resolvedFileName && e.resolvedModule.originalPath === t.resolvedModule.originalPath && mk(e.resolvedModule.packageId, t.resolvedModule.packageId) && e.node10Result === t.node10Result;
        }
        function dk(e, t, n, a, _) {
            var p;
            let m = (p = t.getResolvedModule(e, n, a)) == null ? void 0 : p.node10Result, y = m ? il(void 0, B.There_are_types_at_0_but_this_result_could_not_be_resolved_when_respecting_package_json_exports_The_1_library_may_need_to_update_its_package_json_or_typings, m, m.includes(nodeModulesPathPart + "@types/") ? `@types/${mangleScopedPackageName(_)}` : _) : t.typesPackageExists(_) ? il(void 0, B.If_the_0_package_actually_exposes_this_module_consider_sending_a_pull_request_to_amend_https_Colon_Slash_Slashgithub_com_SlashDefinitelyTyped_SlashDefinitelyTyped_Slashtree_Slashmaster_Slashtypes_Slash_1, _, mangleScopedPackageName(_)) : t.packageBundlesTypes(_) ? il(void 0, B.If_the_0_package_actually_exposes_this_module_try_adding_a_new_declaration_d_ts_file_containing_declare_module_1, _, n) : il(void 0, B.Try_npm_i_save_dev_types_Slash_1_if_it_exists_or_add_a_new_declaration_d_ts_file_containing_declare_module_0, n, mangleScopedPackageName(_));
            return y && (y.repopulateInfo = ()=>({
                    moduleReference: n,
                    mode: a,
                    packageName: _ === n ? void 0 : _
                })), y;
        }
        function mk(e, t) {
            return e === t || !!e && !!t && e.name === t.name && e.subModuleName === t.subModuleName && e.version === t.version;
        }
        function wT({ name: e, subModuleName: t }) {
            return t ? `${e}/${t}` : e;
        }
        function hk(e) {
            return `${wT(e)}@${e.version}`;
        }
        function yk(e, t) {
            return e === t || e.resolvedTypeReferenceDirective === t.resolvedTypeReferenceDirective || !!e.resolvedTypeReferenceDirective && !!t.resolvedTypeReferenceDirective && e.resolvedTypeReferenceDirective.resolvedFileName === t.resolvedTypeReferenceDirective.resolvedFileName && !!e.resolvedTypeReferenceDirective.primary == !!t.resolvedTypeReferenceDirective.primary && e.resolvedTypeReferenceDirective.originalPath === t.resolvedTypeReferenceDirective.originalPath;
        }
        function gk(e, t, n, a, _, p) {
            I.assert(e.length === n.length);
            for(let m = 0; m < e.length; m++){
                let y = n[m], u = e[m], x = p.getName(u), d = p.getMode(u, t), S = a(x, d);
                if (S ? !y || !_(S, y) : y) return !0;
            }
            return !1;
        }
        function El(e) {
            return bk(e), (e.flags & 1048576) !== 0;
        }
        function bk(e) {
            e.flags & 2097152 || ((e.flags & 262144 || Wt(e, El)) && (e.flags |= 1048576), e.flags |= 2097152);
        }
        function oi(e) {
            for(; e && e.kind !== 312;)e = e.parent;
            return e;
        }
        function vk(e) {
            return oi(e.valueDeclaration || LT(e));
        }
        function Tk(e, t) {
            return !!e && (e.scriptKind === 1 || e.scriptKind === 2) && !e.checkJsDirective && t === void 0;
        }
        function Sk(e) {
            switch(e.kind){
                case 241:
                case 269:
                case 248:
                case 249:
                case 250:
                    return !0;
            }
            return !1;
        }
        function xk(e, t) {
            return I.assert(e >= 0), Aa(t)[e];
        }
        function wk(e) {
            let t = oi(e), n = no(t, e.pos);
            return `${t.fileName}(${n.line + 1},${n.character + 1})`;
        }
        function ET(e, t) {
            I.assert(e >= 0);
            let n = Aa(t), a = e, _ = t.text;
            if (a + 1 === n.length) return _.length - 1;
            {
                let p = n[a], m = n[a + 1] - 1;
                for(I.assert(On(_.charCodeAt(m))); p <= m && On(_.charCodeAt(m));)m--;
                return m;
            }
        }
        function CT(e, t, n) {
            return !(n && n(t)) && !e.identifiers.has(t);
        }
        function Vi(e) {
            return e === void 0 ? !0 : e.pos === e.end && e.pos >= 0 && e.kind !== 1;
        }
        function Cl(e) {
            return !Vi(e);
        }
        function Ek(e, t) {
            return Lo(e) ? t === e.expression : eu(e) ? t === e.modifiers : Zl(e) ? t === e.initializer : Ia(e) ? t === e.questionToken && iT(e) : fs(e) ? t === e.modifiers || t === e.questionToken || t === e.exclamationToken || Xs(e.modifiers, t, Lf) : _u(e) ? t === e.equalsToken || t === e.modifiers || t === e.questionToken || t === e.exclamationToken || Xs(e.modifiers, t, Lf) : f_(e) ? t === e.exclamationToken : L_(e) ? t === e.typeParameters || t === e.type || Xs(e.typeParameters, t, Lo) : d_(e) ? t === e.typeParameters || Xs(e.typeParameters, t, Lo) : Zo(e) ? t === e.typeParameters || t === e.type || Xs(e.typeParameters, t, Lo) : Ib(e) ? t === e.modifiers || Xs(e.modifiers, t, Lf) : !1;
        }
        function Xs(e, t, n) {
            return !e || $t(t) || !n(t) ? !1 : rs(e, t);
        }
        function AT(e, t, n) {
            if (t === void 0 || t.length === 0) return e;
            let a = 0;
            for(; a < e.length && n(e[a]); ++a);
            return e.splice(a, 0, ...t), e;
        }
        function kT(e, t, n) {
            if (t === void 0) return e;
            let a = 0;
            for(; a < e.length && n(e[a]); ++a);
            return e.splice(a, 0, t), e;
        }
        function DT(e) {
            return Sa(e) || !!(ai(e) & 2097152);
        }
        function Ck(e, t) {
            return AT(e, t, Sa);
        }
        function Ak(e, t) {
            return AT(e, t, DT);
        }
        function kk(e, t) {
            return kT(e, t, Sa);
        }
        function Dk(e, t) {
            return kT(e, t, DT);
        }
        function Pk(e, t, n) {
            if (e.charCodeAt(t + 1) === 47 && t + 2 < n && e.charCodeAt(t + 2) === 47) {
                let a = e.substring(t, n);
                return !!(ab.test(a) || ob.test(a) || fx.test(a) || ux.test(a) || px.test(a) || dx.test(a));
            }
            return !1;
        }
        function PT(e, t) {
            return e.charCodeAt(t + 1) === 42 && e.charCodeAt(t + 2) === 33;
        }
        function Ik(e, t) {
            let n = new Map(t.map((m)=>[
                    `${no(e, m.range.end).line}`,
                    m
                ])), a = new Map;
            return {
                getUnusedExpectations: _,
                markUsed: p
            };
            function _() {
                return Ud(n.entries()).filter(([m, y])=>y.type === 0 && !a.get(m)).map(([m, y])=>y);
            }
            function p(m) {
                return n.has(`${m}`) ? (a.set(`${m}`, !0), !0) : !1;
            }
        }
        function $o(e, t, n) {
            return Vi(e) ? e.pos : $g(e) || e.kind === 12 ? Mt((t || oi(e)).text, e.pos, !1, !0) : n && Hi(e) ? $o(e.jsDoc[0], t) : e.kind === 358 && e._children.length > 0 ? $o(e._children[0], t, n) : Mt((t || oi(e)).text, e.pos, !1, !1, YT(e));
        }
        function Nk(e, t) {
            let n = !Vi(e) && U_(e) ? lg(e.modifiers, M_) : void 0;
            return n ? Mt((t || oi(e)).text, n.end) : $o(e, t);
        }
        function Qo(e, t, n = !1) {
            return n_(e.text, t, n);
        }
        function Ok(e) {
            return !!or(e, m8);
        }
        function IT(e) {
            return !!(F_(e) && e.exportClause && Jm(e.exportClause) && e.exportClause.name.escapedText === "default");
        }
        function n_(e, t, n = !1) {
            if (Vi(t)) return "";
            let a = e.substring(n ? t.pos : Mt(e, t.pos), t.end);
            return Ok(t) && (a = a.split(/\r\n|\n|\r/).map((_)=>_.replace(/^\s*\*/, "").trimStart()).join(`
`)), a;
        }
        function lm(e, t = !1) {
            return Qo(oi(e), e, t);
        }
        function Mk(e) {
            return e.pos;
        }
        function Lk(e, t) {
            return Jl(e, t, Mk, Mn);
        }
        function ai(e) {
            let t = e.emitNode;
            return t && t.flags || 0;
        }
        function Jk(e) {
            let t = e.emitNode;
            return t && t.internalFlags || 0;
        }
        function Rk(e, t, n) {
            if (t && jk(e, n)) return Qo(t, e);
            switch(e.kind){
                case 11:
                    {
                        let a = n & 2 ? J3 : n & 1 || ai(e) & 16777216 ? xd : wd;
                        return e.singleQuote ? "'" + a(e.text, 39) + "'" : '"' + a(e.text, 34) + '"';
                    }
                case 15:
                case 16:
                case 17:
                case 18:
                    {
                        let a = n & 1 || ai(e) & 16777216 ? xd : wd, _ = e.rawText ?? TI(a(e.text, 96));
                        switch(e.kind){
                            case 15:
                                return "`" + _ + "`";
                            case 16:
                                return "`" + _ + "${";
                            case 17:
                                return "}" + _ + "${";
                            case 18:
                                return "}" + _ + "`";
                        }
                        break;
                    }
                case 9:
                case 10:
                    return e.text;
                case 14:
                    return n & 4 && e.isUnterminated ? e.text + (e.text.charCodeAt(e.text.length - 1) === 92 ? " /" : "/") : e.text;
            }
            return I.fail(`Literal kind '${e.kind}' not accounted for.`);
        }
        function jk(e, t) {
            if (ya(e) || !e.parent || t & 4 && e.isUnterminated) return !1;
            if (lo(e)) {
                if (e.numericLiteralFlags & 26656) return !1;
                if (e.numericLiteralFlags & 512) return !!(t & 8);
            }
            return !db(e);
        }
        function Fk(e) {
            return g_(e) ? '"' + wd(e) + '"' : "" + e;
        }
        function Bk(e) {
            return os(e).replace(/^(\d)/, "_$1").replace(/\W/g, "_");
        }
        function Uk(e) {
            return (x_(e) & 7) !== 0 || NT(e);
        }
        function NT(e) {
            let t = bm(e);
            return t.kind === 260 && t.parent.kind === 299;
        }
        function um(e) {
            return Zi(e) && (e.name.kind === 11 || pm(e));
        }
        function qk(e) {
            return Zi(e) && e.name.kind === 11;
        }
        function zk(e) {
            return Zi(e) && Tr(e.name);
        }
        function OT(e) {
            return Zi(e) || Ae(e);
        }
        function Wk(e) {
            return Vk(e.valueDeclaration);
        }
        function Vk(e) {
            return !!e && e.kind === 267 && !e.body;
        }
        function Hk(e) {
            return e.kind === 312 || e.kind === 267 || am(e);
        }
        function pm(e) {
            return !!(e.flags & 2048);
        }
        function Zg(e) {
            return um(e) && MT(e);
        }
        function MT(e) {
            switch(e.parent.kind){
                case 312:
                    return ns(e.parent);
                case 268:
                    return um(e.parent.parent) && ci(e.parent.parent.parent) && !ns(e.parent.parent.parent);
            }
            return !1;
        }
        function LT(e) {
            var t;
            return (t = e.declarations) == null ? void 0 : t.find((n)=>!Zg(n) && !(Zi(n) && pm(n)));
        }
        function Gk(e) {
            return e === 1 || e === 100 || e === 199;
        }
        function e2(e, t) {
            return ns(e) || Gk(_i(t)) && !!e.commonJsModuleIndicator;
        }
        function Xk(e, t) {
            switch(e.scriptKind){
                case 1:
                case 3:
                case 2:
                case 4:
                    break;
                default:
                    return !1;
            }
            return e.isDeclarationFile ? !1 : Y2(t, "alwaysStrict") || A8(e.statements) ? !0 : ns(e) || G2(t) ? _i(t) >= 5 ? !0 : !t.noImplicitUseStrict : !1;
        }
        function $k(e) {
            return !!(e.flags & 33554432) || Cn(e, 128);
        }
        function JT(e, t) {
            switch(e.kind){
                case 312:
                case 269:
                case 299:
                case 267:
                case 248:
                case 249:
                case 250:
                case 176:
                case 174:
                case 177:
                case 178:
                case 262:
                case 218:
                case 219:
                case 172:
                case 175:
                    return !0;
                case 241:
                    return !am(t);
            }
            return !1;
        }
        function Qk(e) {
            switch(I.type(e), e.kind){
                case 345:
                case 353:
                case 330:
                    return !0;
                default:
                    return RT(e);
            }
        }
        function RT(e) {
            switch(I.type(e), e.kind){
                case 179:
                case 180:
                case 173:
                case 181:
                case 184:
                case 185:
                case 324:
                case 263:
                case 231:
                case 264:
                case 265:
                case 352:
                case 262:
                case 174:
                case 176:
                case 177:
                case 178:
                case 218:
                case 219:
                    return !0;
                default:
                    return !1;
            }
        }
        function t2(e) {
            switch(e.kind){
                case 272:
                case 271:
                    return !0;
                default:
                    return !1;
            }
        }
        function Yk(e) {
            return t2(e) || mm(e);
        }
        function Kk(e) {
            switch(e.kind){
                case 272:
                case 271:
                case 243:
                case 263:
                case 262:
                case 267:
                case 265:
                case 264:
                case 266:
                    return !0;
                default:
                    return !1;
            }
        }
        function Zk(e) {
            return fm(e) || Zi(e) || nu(e) || s2(e);
        }
        function fm(e) {
            return t2(e) || F_(e);
        }
        function eD(e) {
            return or(e.parent, (t)=>!!(getContainerFlags(t) & 1));
        }
        function A0(e) {
            return or(e.parent, (t)=>JT(t, t.parent));
        }
        function tD(e, t) {
            let n = A0(e);
            for(; n;)t(n), n = A0(n);
        }
        function jT(e) {
            return !e || cm(e) === 0 ? "(Missing)" : lm(e);
        }
        function nD(e) {
            return e.declaration ? jT(e.declaration.parameters[0].name) : void 0;
        }
        function rD(e) {
            return e.kind === 167 && !Yi(e.expression);
        }
        function n2(e) {
            var t;
            switch(e.kind){
                case 80:
                case 81:
                    return (t = e.emitNode) != null && t.autoGenerate ? void 0 : e.escapedText;
                case 11:
                case 9:
                case 15:
                    return qr(e.text);
                case 167:
                    return Yi(e.expression) ? qr(e.expression.text) : void 0;
                case 295:
                    return Yl(e);
                default:
                    return I.assertNever(e);
            }
        }
        function iD(e) {
            return I.checkDefined(n2(e));
        }
        function Ci(e) {
            switch(e.kind){
                case 110:
                    return "this";
                case 81:
                case 80:
                    return cm(e) === 0 ? Lt(e) : lm(e);
                case 166:
                    return Ci(e.left) + "." + Ci(e.right);
                case 211:
                    return Ae(e.name) || Vn(e.name) ? Ci(e.expression) + "." + Ci(e.name) : I.assertNever(e.name);
                case 318:
                    return Ci(e.left) + Ci(e.right);
                case 295:
                    return Ci(e.namespace) + ":" + Ci(e.name);
                default:
                    return I.assertNever(e);
            }
        }
        function aD(e, t, ...n) {
            let a = oi(e);
            return FT(a, e, t, ...n);
        }
        function oD(e, t, n, ...a) {
            let _ = Mt(e.text, t.pos);
            return V2(e, _, t.end - _, n, ...a);
        }
        function FT(e, t, n, ...a) {
            let _ = a2(e, t);
            return V2(e, _.start, _.length, n, ...a);
        }
        function sD(e, t, n, a) {
            let _ = a2(e, t);
            return i2(e, _.start, _.length, n, a);
        }
        function _D(e, t, n, a) {
            let _ = Mt(e.text, t.pos);
            return i2(e, _, t.end - _, n, a);
        }
        function r2(e, t, n) {
            I.assertGreaterThanOrEqual(t, 0), I.assertGreaterThanOrEqual(n, 0), I.assertLessThanOrEqual(t, e.length), I.assertLessThanOrEqual(t + n, e.length);
        }
        function i2(e, t, n, a, _) {
            return r2(e.text, t, n), {
                file: e,
                start: t,
                length: n,
                code: a.code,
                category: a.category,
                messageText: a.next ? a : a.messageText,
                relatedInformation: _
            };
        }
        function cD(e, t, n) {
            return {
                file: e,
                start: 0,
                length: 0,
                code: t.code,
                category: t.category,
                messageText: t.next ? t : t.messageText,
                relatedInformation: n
            };
        }
        function lD(e) {
            return typeof e.messageText == "string" ? {
                code: e.code,
                category: e.category,
                messageText: e.messageText,
                next: e.next
            } : e.messageText;
        }
        function uD(e, t, n) {
            return {
                file: e,
                start: t.pos,
                length: t.end - t.pos,
                code: n.code,
                category: n.category,
                messageText: n.message
            };
        }
        function Ks(e, t) {
            let n = ss(e.languageVersion, !0, e.languageVariant, e.text, void 0, t);
            n.scan();
            let a = n.getTokenStart();
            return Xi(a, n.getTokenEnd());
        }
        function pD(e, t) {
            let n = ss(e.languageVersion, !0, e.languageVariant, e.text, void 0, t);
            return n.scan(), n.getToken();
        }
        function fD(e, t) {
            let n = Mt(e.text, t.pos);
            if (t.body && t.body.kind === 241) {
                let { line: a } = no(e, t.body.pos), { line: _ } = no(e, t.body.end);
                if (a < _) return S_(n, ET(a, e) - n + 1);
            }
            return Xi(n, t.end);
        }
        function a2(e, t) {
            let n = t;
            switch(t.kind){
                case 312:
                    {
                        let p = Mt(e.text, 0, !1);
                        return p === e.text.length ? S_(0, 0) : Ks(e, p);
                    }
                case 260:
                case 208:
                case 263:
                case 231:
                case 264:
                case 267:
                case 266:
                case 306:
                case 262:
                case 218:
                case 174:
                case 177:
                case 178:
                case 265:
                case 172:
                case 171:
                case 274:
                    n = t.name;
                    break;
                case 219:
                    return fD(e, t);
                case 296:
                case 297:
                    {
                        let p = Mt(e.text, t.pos), m = t.statements.length > 0 ? t.statements[0].pos : t.end;
                        return Xi(p, m);
                    }
                case 253:
                case 229:
                    {
                        let p = Mt(e.text, t.pos);
                        return Ks(e, p);
                    }
                case 238:
                    {
                        let p = Mt(e.text, t.expression.end);
                        return Ks(e, p);
                    }
                case 357:
                    {
                        let p = Mt(e.text, t.tagName.pos);
                        return Ks(e, p);
                    }
            }
            if (n === void 0) return Ks(e, t.pos);
            I.assert(!ds(n));
            let a = Vi(n), _ = a || Id(t) ? n.pos : Mt(e.text, n.pos);
            return a ? (I.assert(_ === n.pos, "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809"), I.assert(_ === n.end, "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809")) : (I.assert(_ >= n.pos, "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809"), I.assert(_ <= n.end, "This failure could trigger https://github.com/Microsoft/TypeScript/issues/20809")), Xi(_, n.end);
        }
        function dD(e) {
            return (e.externalModuleIndicator || e.commonJsModuleIndicator) !== void 0;
        }
        function o2(e) {
            return e.scriptKind === 6;
        }
        function mD(e) {
            return !!(Kd(e) & 4096);
        }
        function hD(e) {
            return !!(Kd(e) & 8 && !v4(e, e.parent));
        }
        function yD(e) {
            return (x_(e) & 7) === 6;
        }
        function gD(e) {
            return (x_(e) & 7) === 4;
        }
        function BT(e) {
            return (x_(e) & 7) === 2;
        }
        function bD(e) {
            return (x_(e) & 7) === 1;
        }
        function vD(e) {
            return e.kind === 213 && e.expression.kind === 108;
        }
        function s2(e) {
            return e.kind === 213 && e.expression.kind === 102;
        }
        function k0(e) {
            return Ab(e) && e.keywordToken === 102 && e.name.escapedText === "meta";
        }
        function _2(e) {
            return nu(e) && xb(e.argument) && Tr(e.argument.literal);
        }
        function Sa(e) {
            return e.kind === 244 && e.expression.kind === 11;
        }
        function dm(e) {
            return !!(ai(e) & 2097152);
        }
        function D0(e) {
            return dm(e) && us(e);
        }
        function TD(e) {
            return Ae(e.name) && !e.initializer;
        }
        function P0(e) {
            return dm(e) && ls(e) && so(e.declarationList.declarations, TD);
        }
        function SD(e, t) {
            return e.kind !== 12 ? Ho(t.text, e.pos) : void 0;
        }
        function UT(e, t) {
            let n = e.kind === 169 || e.kind === 168 || e.kind === 218 || e.kind === 219 || e.kind === 217 || e.kind === 260 || e.kind === 281 ? h_(t4(t, e.pos), Ho(t, e.pos)) : Ho(t, e.pos);
            return rr(n, (a)=>t.charCodeAt(a.pos + 1) === 42 && t.charCodeAt(a.pos + 2) === 42 && t.charCodeAt(a.pos + 3) !== 47);
        }
        function c2(e) {
            if (182 <= e.kind && e.kind <= 205) return !0;
            switch(e.kind){
                case 133:
                case 159:
                case 150:
                case 163:
                case 154:
                case 136:
                case 155:
                case 151:
                case 157:
                case 106:
                case 146:
                    return !0;
                case 116:
                    return e.parent.kind !== 222;
                case 233:
                    return Ml(e.parent) && !F0(e);
                case 168:
                    return e.parent.kind === 200 || e.parent.kind === 195;
                case 80:
                    (e.parent.kind === 166 && e.parent.right === e || e.parent.kind === 211 && e.parent.name === e) && (e = e.parent), I.assert(e.kind === 80 || e.kind === 166 || e.kind === 211, "'node' was expected to be a qualified name, identifier or property access in 'isPartOfTypeNode'.");
                case 166:
                case 211:
                case 110:
                    {
                        let { parent: t } = e;
                        if (t.kind === 186) return !1;
                        if (t.kind === 205) return !t.isTypeOf;
                        if (182 <= t.kind && t.kind <= 205) return !0;
                        switch(t.kind){
                            case 233:
                                return Ml(t.parent) && !F0(t);
                            case 168:
                                return e === t.constraint;
                            case 352:
                                return e === t.constraint;
                            case 172:
                            case 171:
                            case 169:
                            case 260:
                                return e === t.type;
                            case 262:
                            case 218:
                            case 219:
                            case 176:
                            case 174:
                            case 173:
                            case 177:
                            case 178:
                                return e === t.type;
                            case 179:
                            case 180:
                            case 181:
                                return e === t.type;
                            case 216:
                                return e === t.type;
                            case 213:
                            case 214:
                            case 215:
                                return rs(t.typeArguments, e);
                        }
                    }
            }
            return !1;
        }
        function xD(e, t) {
            for(; e;){
                if (e.kind === t) return !0;
                e = e.parent;
            }
            return !1;
        }
        function wD(e, t) {
            return n(e);
            function n(a) {
                switch(a.kind){
                    case 253:
                        return t(a);
                    case 269:
                    case 241:
                    case 245:
                    case 246:
                    case 247:
                    case 248:
                    case 249:
                    case 250:
                    case 254:
                    case 255:
                    case 296:
                    case 297:
                    case 256:
                    case 258:
                    case 299:
                        return Wt(a, n);
                }
            }
        }
        function ED(e, t) {
            return n(e);
            function n(a) {
                switch(a.kind){
                    case 229:
                        t(a);
                        let _ = a.expression;
                        _ && n(_);
                        return;
                    case 266:
                    case 264:
                    case 267:
                    case 265:
                        return;
                    default:
                        if ($i(a)) {
                            if (a.name && a.name.kind === 167) {
                                n(a.name.expression);
                                return;
                            }
                        } else c2(a) || Wt(a, n);
                }
            }
        }
        function CD(e) {
            return e && e.kind === 188 ? e.elementType : e && e.kind === 183 ? Fd(e.typeArguments) : void 0;
        }
        function AD(e) {
            switch(e.kind){
                case 264:
                case 263:
                case 231:
                case 187:
                    return e.members;
                case 210:
                    return e.properties;
            }
        }
        function l2(e) {
            if (e) switch(e.kind){
                case 208:
                case 306:
                case 169:
                case 303:
                case 172:
                case 171:
                case 304:
                case 260:
                    return !0;
            }
            return !1;
        }
        function kD(e) {
            return l2(e) || om(e);
        }
        function qT(e) {
            return e.parent.kind === 261 && e.parent.parent.kind === 243;
        }
        function DD(e) {
            return Vt(e) ? uo(e.parent) && At(e.parent.parent) && Oa(e.parent.parent) === 2 || u2(e.parent) : !1;
        }
        function u2(e) {
            return Vt(e) ? At(e) && Oa(e) === 1 : !1;
        }
        function PD(e) {
            return (Li(e) ? BT(e) && Ae(e.name) && qT(e) : Ia(e) ? j0(e) && xm(e) : Zl(e) && j0(e)) || u2(e);
        }
        function ID(e) {
            switch(e.kind){
                case 174:
                case 173:
                case 176:
                case 177:
                case 178:
                case 262:
                case 218:
                    return !0;
            }
            return !1;
        }
        function ND(e, t) {
            for(;;){
                if (t && t(e), e.statement.kind !== 256) return e.statement;
                e = e.statement;
            }
        }
        function zT(e) {
            return e && e.kind === 241 && $i(e.parent);
        }
        function OD(e) {
            return e && e.kind === 174 && e.parent.kind === 210;
        }
        function MD(e) {
            return (e.kind === 174 || e.kind === 177 || e.kind === 178) && (e.parent.kind === 210 || e.parent.kind === 231);
        }
        function LD(e) {
            return e && e.kind === 1;
        }
        function JD(e) {
            return e && e.kind === 0;
        }
        function p2(e, t, n, a) {
            return wn(e == null ? void 0 : e.properties, (_)=>{
                if (!fs(_)) return;
                let p = n2(_.name);
                return t === p || a && a === p ? n(_) : void 0;
            });
        }
        function RD(e, t, n) {
            return p2(e, t, (a)=>iu(a.initializer) ? ir(a.initializer.elements, (_)=>Tr(_) && _.text === n) : void 0);
        }
        function WT(e) {
            if (e && e.statements.length) {
                let t = e.statements[0].expression;
                return Ur(t, uo);
            }
        }
        function jD(e, t, n) {
            return VT(e, t, (a)=>iu(a.initializer) ? ir(a.initializer.elements, (_)=>Tr(_) && _.text === n) : void 0);
        }
        function VT(e, t, n) {
            return p2(WT(e), t, n);
        }
        function FD(e) {
            return or(e.parent, $i);
        }
        function BD(e) {
            return or(e.parent, nT);
        }
        function I0(e) {
            return or(e.parent, ar);
        }
        function UD(e) {
            return or(e.parent, (t)=>ar(t) || $i(t) ? "quit" : eu(t));
        }
        function qD(e) {
            return or(e.parent, am);
        }
        function zD(e) {
            let t = or(e.parent, (n)=>ar(n) ? "quit" : M_(n));
            return t && ar(t.parent) ? I0(t.parent) : I0(t ?? e);
        }
        function f2(e, t, n) {
            for(I.assert(e.kind !== 312);;){
                if (e = e.parent, !e) return I.fail();
                switch(e.kind){
                    case 167:
                        if (n && ar(e.parent.parent)) return e;
                        e = e.parent.parent;
                        break;
                    case 170:
                        e.parent.kind === 169 && io(e.parent.parent) ? e = e.parent.parent : io(e.parent) && (e = e.parent);
                        break;
                    case 219:
                        if (!t) continue;
                    case 262:
                    case 218:
                    case 267:
                    case 175:
                    case 172:
                    case 171:
                    case 174:
                    case 173:
                    case 176:
                    case 177:
                    case 178:
                    case 179:
                    case 180:
                    case 181:
                    case 266:
                    case 312:
                        return e;
                }
            }
        }
        function WD(e) {
            switch(e.kind){
                case 219:
                case 262:
                case 218:
                case 172:
                    return !0;
                case 241:
                    switch(e.parent.kind){
                        case 176:
                        case 174:
                        case 177:
                        case 178:
                            return !0;
                        default:
                            return !1;
                    }
                default:
                    return !1;
            }
        }
        function VD(e) {
            Ae(e) && (es(e.parent) || us(e.parent)) && e.parent.name === e && (e = e.parent);
            let t = f2(e, !0, !1);
            return ci(t);
        }
        function HD(e) {
            let t = f2(e, !1, !1);
            if (t) switch(t.kind){
                case 176:
                case 262:
                case 218:
                    return t;
            }
        }
        function GD(e, t) {
            for(;;){
                if (e = e.parent, !e) return;
                switch(e.kind){
                    case 167:
                        e = e.parent;
                        break;
                    case 262:
                    case 218:
                    case 219:
                        if (!t) continue;
                    case 172:
                    case 171:
                    case 174:
                    case 173:
                    case 176:
                    case 177:
                    case 178:
                    case 175:
                        return e;
                    case 170:
                        e.parent.kind === 169 && io(e.parent.parent) ? e = e.parent.parent : io(e.parent) && (e = e.parent);
                        break;
                }
            }
        }
        function XD(e) {
            if (e.kind === 218 || e.kind === 219) {
                let t = e, n = e.parent;
                for(; n.kind === 217;)t = n, n = n.parent;
                if (n.kind === 213 && n.expression === t) return n;
            }
        }
        function $D(e) {
            return e.kind === 108 || vd(e);
        }
        function vd(e) {
            let t = e.kind;
            return (t === 211 || t === 212) && e.expression.kind === 108;
        }
        function QD(e) {
            let t = e.kind;
            return (t === 211 || t === 212) && e.expression.kind === 110;
        }
        function YD(e) {
            var t;
            return !!e && Li(e) && ((t = e.initializer) == null ? void 0 : t.kind) === 110;
        }
        function KD(e) {
            return !!e && (_u(e) || fs(e)) && At(e.parent.parent) && e.parent.parent.operatorToken.kind === 64 && e.parent.parent.right.kind === 110;
        }
        function ZD(e) {
            switch(e.kind){
                case 183:
                    return e.typeName;
                case 233:
                    return co(e.expression) ? e.expression : void 0;
                case 80:
                case 166:
                    return e;
            }
        }
        function eP(e) {
            switch(e.kind){
                case 215:
                    return e.tag;
                case 286:
                case 285:
                    return e.tagName;
                case 226:
                    return e.right;
                default:
                    return e.expression;
            }
        }
        function HT(e, t, n, a) {
            if (e && Zd(t) && Vn(t.name)) return !1;
            switch(t.kind){
                case 263:
                    return !0;
                case 231:
                    return !e;
                case 172:
                    return n !== void 0 && (e ? es(n) : ar(n) && !Y3(t) && !K3(t));
                case 177:
                case 178:
                case 174:
                    return t.body !== void 0 && n !== void 0 && (e ? es(n) : ar(n));
                case 169:
                    return e ? n !== void 0 && n.body !== void 0 && (n.kind === 176 || n.kind === 174 || n.kind === 178) && V3(n) !== t && a !== void 0 && a.kind === 263 : !1;
            }
            return !1;
        }
        function l_(e, t, n, a) {
            return kl(t) && HT(e, t, n, a);
        }
        function N0(e, t, n, a) {
            return l_(e, t, n, a) || d2(e, t, n);
        }
        function d2(e, t, n) {
            switch(t.kind){
                case 263:
                    return Ze(t.members, (a)=>N0(e, a, t, n));
                case 231:
                    return !e && Ze(t.members, (a)=>N0(e, a, t, n));
                case 174:
                case 178:
                case 176:
                    return Ze(t.parameters, (a)=>l_(e, a, t, n));
                default:
                    return !1;
            }
        }
        function tP(e, t) {
            if (l_(e, t)) return !0;
            let n = W3(t);
            return !!n && d2(e, n, t);
        }
        function nP(e, t, n) {
            let a;
            if (om(t)) {
                let { firstAccessor: _, secondAccessor: p, setAccessor: m } = J2(n.members, t), y = kl(_) ? _ : p && kl(p) ? p : void 0;
                if (!y || t !== y) return !1;
                a = m == null ? void 0 : m.parameters;
            } else f_(t) && (a = t.parameters);
            if (l_(e, t, n)) return !0;
            if (a) {
                for (let _ of a)if (!$l(_) && l_(e, _, t, n)) return !0;
            }
            return !1;
        }
        function GT(e) {
            if (e.textSourceNode) {
                switch(e.textSourceNode.kind){
                    case 11:
                        return GT(e.textSourceNode);
                    case 15:
                        return e.text === "";
                }
                return !1;
            }
            return e.text === "";
        }
        function Jf(e) {
            let { parent: t } = e;
            return t.kind === 286 || t.kind === 285 || t.kind === 287 ? t.tagName === e : !1;
        }
        function m2(e) {
            switch(e.kind){
                case 108:
                case 106:
                case 112:
                case 97:
                case 14:
                case 209:
                case 210:
                case 211:
                case 212:
                case 213:
                case 214:
                case 215:
                case 234:
                case 216:
                case 238:
                case 235:
                case 217:
                case 218:
                case 231:
                case 219:
                case 222:
                case 220:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 230:
                case 228:
                case 232:
                case 284:
                case 285:
                case 288:
                case 229:
                case 223:
                case 236:
                    return !0;
                case 233:
                    return !Ml(e.parent) && !Fm(e.parent);
                case 166:
                    for(; e.parent.kind === 166;)e = e.parent;
                    return e.parent.kind === 186 || dl(e.parent) || Vf(e.parent) || r_(e.parent) || Jf(e);
                case 318:
                    for(; r_(e.parent);)e = e.parent;
                    return e.parent.kind === 186 || dl(e.parent) || Vf(e.parent) || r_(e.parent) || Jf(e);
                case 81:
                    return At(e.parent) && e.parent.left === e && e.parent.operatorToken.kind === 103;
                case 80:
                    if (e.parent.kind === 186 || dl(e.parent) || Vf(e.parent) || r_(e.parent) || Jf(e)) return !0;
                case 9:
                case 10:
                case 11:
                case 15:
                case 110:
                    return XT(e);
                default:
                    return !1;
            }
        }
        function XT(e) {
            let { parent: t } = e;
            switch(t.kind){
                case 260:
                case 169:
                case 172:
                case 171:
                case 306:
                case 303:
                case 208:
                    return t.initializer === e;
                case 244:
                case 245:
                case 246:
                case 247:
                case 253:
                case 254:
                case 255:
                case 296:
                case 257:
                    return t.expression === e;
                case 248:
                    let n = t;
                    return n.initializer === e && n.initializer.kind !== 261 || n.condition === e || n.incrementor === e;
                case 249:
                case 250:
                    let a = t;
                    return a.initializer === e && a.initializer.kind !== 261 || a.expression === e;
                case 216:
                case 234:
                    return e === t.expression;
                case 239:
                    return e === t.expression;
                case 167:
                    return e === t.expression;
                case 170:
                case 294:
                case 293:
                case 305:
                    return !0;
                case 233:
                    return t.expression === e && !c2(t);
                case 304:
                    return t.objectAssignmentInitializer === e;
                case 238:
                    return e === t.expression;
                default:
                    return m2(t);
            }
        }
        function $T(e) {
            for(; e.kind === 166 || e.kind === 80;)e = e.parent;
            return e.kind === 186;
        }
        function rP(e) {
            return Jm(e) && !!e.parent.moduleSpecifier;
        }
        function QT(e) {
            return e.kind === 271 && e.moduleReference.kind === 283;
        }
        function iP(e) {
            return I.assert(QT(e)), e.moduleReference.expression;
        }
        function aP(e) {
            return mm(e) && W2(e.initializer).arguments[0];
        }
        function oP(e) {
            return e.kind === 271 && e.moduleReference.kind !== 283;
        }
        function h2(e) {
            return Vt(e);
        }
        function sP(e) {
            return !Vt(e);
        }
        function Vt(e) {
            return !!e && !!(e.flags & 524288);
        }
        function _P(e) {
            return !!e && !!(e.flags & 134217728);
        }
        function cP(e) {
            return !o2(e);
        }
        function YT(e) {
            return !!e && !!(e.flags & 16777216);
        }
        function lP(e) {
            return J_(e) && Ae(e.typeName) && e.typeName.escapedText === "Object" && e.typeArguments && e.typeArguments.length === 2 && (e.typeArguments[0].kind === 154 || e.typeArguments[0].kind === 150);
        }
        function Hl(e, t) {
            if (e.kind !== 213) return !1;
            let { expression: n, arguments: a } = e;
            if (n.kind !== 80 || n.escapedText !== "require" || a.length !== 1) return !1;
            let _ = a[0];
            return !t || ni(_);
        }
        function KT(e) {
            return ZT(e, !1);
        }
        function mm(e) {
            return ZT(e, !0);
        }
        function uP(e) {
            return ru(e) && mm(e.parent.parent);
        }
        function ZT(e, t) {
            return Li(e) && !!e.initializer && Hl(t ? W2(e.initializer) : e.initializer, !0);
        }
        function e3(e) {
            return ls(e) && e.declarationList.declarations.length > 0 && so(e.declarationList.declarations, (t)=>KT(t));
        }
        function pP(e) {
            return e === 39 || e === 34;
        }
        function fP(e, t) {
            return Qo(t, e).charCodeAt(0) === 34;
        }
        function O0(e) {
            return At(e) || Ko(e) || Ae(e) || R_(e);
        }
        function t3(e) {
            return Vt(e) && e.initializer && At(e.initializer) && (e.initializer.operatorToken.kind === 57 || e.initializer.operatorToken.kind === 61) && e.name && co(e.name) && u_(e.name, e.initializer.left) ? e.initializer.right : e.initializer;
        }
        function dP(e) {
            let t = t3(e);
            return t && E_(t, k_(e.name));
        }
        function mP(e, t) {
            return wn(e.properties, (n)=>fs(n) && Ae(n.name) && n.name.escapedText === "value" && n.initializer && E_(n.initializer, t));
        }
        function hP(e) {
            if (e && e.parent && At(e.parent) && e.parent.operatorToken.kind === 64) {
                let t = k_(e.parent.left);
                return E_(e.parent.right, t) || yP(e.parent.left, e.parent.right, t);
            }
            if (e && R_(e) && b2(e)) {
                let t = mP(e.arguments[2], e.arguments[1].text === "prototype");
                if (t) return t;
            }
        }
        function E_(e, t) {
            if (R_(e)) {
                let n = C_(e.expression);
                return n.kind === 218 || n.kind === 219 ? e : void 0;
            }
            if (e.kind === 218 || e.kind === 231 || e.kind === 219 || uo(e) && (e.properties.length === 0 || t)) return e;
        }
        function yP(e, t, n) {
            let a = At(t) && (t.operatorToken.kind === 57 || t.operatorToken.kind === 61) && E_(t.right, n);
            if (a && u_(e, t.left)) return a;
        }
        function gP(e) {
            let t = Li(e.parent) ? e.parent.name : At(e.parent) && e.parent.operatorToken.kind === 64 ? e.parent.left : void 0;
            return t && E_(e.right, k_(t)) && co(t) && u_(t, e.left);
        }
        function bP(e) {
            if (At(e.parent)) {
                let t = (e.parent.operatorToken.kind === 57 || e.parent.operatorToken.kind === 61) && At(e.parent.parent) ? e.parent.parent : e.parent;
                if (t.operatorToken.kind === 64 && Ae(t.left)) return t.left;
            } else if (Li(e.parent)) return e.parent.name;
        }
        function u_(e, t) {
            return L0(e) && L0(t) ? Sd(e) === Sd(t) : ro(e) && Rf(t) && (t.expression.kind === 110 || Ae(t.expression) && (t.expression.escapedText === "window" || t.expression.escapedText === "self" || t.expression.escapedText === "global")) ? u_(e, i3(t)) : Rf(e) && Rf(t) ? ao(e) === ao(t) && u_(e.expression, t.expression) : !1;
        }
        function y2(e) {
            for(; si(e, !0);)e = e.right;
            return e;
        }
        function n3(e) {
            return Ae(e) && e.escapedText === "exports";
        }
        function r3(e) {
            return Ae(e) && e.escapedText === "module";
        }
        function g2(e) {
            return (Ln(e) || Gl(e)) && r3(e.expression) && ao(e) === "exports";
        }
        function Oa(e) {
            let t = vP(e);
            return t === 5 || Vt(e) ? t : 0;
        }
        function b2(e) {
            return eo(e.arguments) === 3 && Ln(e.expression) && Ae(e.expression.expression) && Lt(e.expression.expression) === "Object" && Lt(e.expression.name) === "defineProperty" && Yi(e.arguments[1]) && Yo(e.arguments[0], !0);
        }
        function Rf(e) {
            return Ln(e) || Gl(e);
        }
        function Gl(e) {
            return Ki(e) && Yi(e.argumentExpression);
        }
        function _s(e, t) {
            return Ln(e) && (!t && e.expression.kind === 110 || Ae(e.name) && Yo(e.expression, !0)) || v2(e, t);
        }
        function v2(e, t) {
            return Gl(e) && (!t && e.expression.kind === 110 || co(e.expression) || _s(e.expression, !0));
        }
        function Yo(e, t) {
            return co(e) || _s(e, t);
        }
        function i3(e) {
            return Ln(e) ? e.name : e.argumentExpression;
        }
        function vP(e) {
            if (R_(e)) {
                if (!b2(e)) return 0;
                let t = e.arguments[0];
                return n3(t) || g2(t) ? 8 : _s(t) && ao(t) === "prototype" ? 9 : 7;
            }
            return e.operatorToken.kind !== 64 || !Ko(e.left) || TP(y2(e)) ? 0 : Yo(e.left.expression, !0) && ao(e.left) === "prototype" && uo(o3(e)) ? 6 : a3(e.left);
        }
        function TP(e) {
            return wb(e) && lo(e.expression) && e.expression.text === "0";
        }
        function hm(e) {
            if (Ln(e)) return e.name;
            let t = C_(e.argumentExpression);
            return lo(t) || ni(t) ? t : e;
        }
        function ao(e) {
            let t = hm(e);
            if (t) {
                if (Ae(t)) return t.escapedText;
                if (ni(t) || lo(t)) return qr(t.text);
            }
        }
        function a3(e) {
            if (e.expression.kind === 110) return 4;
            if (g2(e)) return 2;
            if (Yo(e.expression, !0)) {
                if (k_(e.expression)) return 3;
                let t = e;
                for(; !Ae(t.expression);)t = t.expression;
                let n = t.expression;
                if ((n.escapedText === "exports" || n.escapedText === "module" && ao(t) === "exports") && _s(e)) return 1;
                if (Yo(e, !0) || Ki(e) && P2(e)) return 5;
            }
            return 0;
        }
        function o3(e) {
            for(; At(e.right);)e = e.right;
            return e.right;
        }
        function SP(e) {
            return At(e) && Oa(e) === 3;
        }
        function xP(e) {
            return Vt(e) && e.parent && e.parent.kind === 244 && (!Ki(e) || Gl(e)) && !!nm(e.parent);
        }
        function wP(e, t) {
            let { valueDeclaration: n } = e;
            (!n || !(t.flags & 33554432 && !Vt(t) && !(n.flags & 33554432)) && O0(n) && !O0(t) || n.kind !== t.kind && OT(n)) && (e.valueDeclaration = t);
        }
        function EP(e) {
            if (!e || !e.valueDeclaration) return !1;
            let t = e.valueDeclaration;
            return t.kind === 262 || Li(t) && t.initializer && $i(t.initializer);
        }
        function CP(e) {
            var t, n;
            switch(e.kind){
                case 260:
                case 208:
                    return (t = or(e.initializer, (a)=>Hl(a, !0))) == null ? void 0 : t.arguments[0];
                case 272:
                case 278:
                    return Ur(e.moduleSpecifier, ni);
                case 271:
                    return Ur((n = Ur(e.moduleReference, Rm)) == null ? void 0 : n.expression, ni);
                case 273:
                case 280:
                    return Ur(e.parent.moduleSpecifier, ni);
                case 274:
                case 281:
                    return Ur(e.parent.parent.moduleSpecifier, ni);
                case 276:
                    return Ur(e.parent.parent.parent.moduleSpecifier, ni);
                case 205:
                    return _2(e) ? e.argument.literal : void 0;
                default:
                    I.assertNever(e);
            }
        }
        function AP(e) {
            return s3(e) || I.failBadSyntaxKind(e.parent);
        }
        function s3(e) {
            switch(e.parent.kind){
                case 272:
                case 278:
                    return e.parent;
                case 283:
                    return e.parent.parent;
                case 213:
                    return s2(e.parent) || Hl(e.parent, !1) ? e.parent : void 0;
                case 201:
                    return I.assert(Tr(e)), Ur(e.parent.parent, nu);
                default:
                    return;
            }
        }
        function T2(e) {
            switch(e.kind){
                case 272:
                case 278:
                    return e.moduleSpecifier;
                case 271:
                    return e.moduleReference.kind === 283 ? e.moduleReference.expression : void 0;
                case 205:
                    return _2(e) ? e.argument.literal : void 0;
                case 213:
                    return e.arguments[0];
                case 267:
                    return e.name.kind === 11 ? e.name : void 0;
                default:
                    return I.assertNever(e);
            }
        }
        function _3(e) {
            switch(e.kind){
                case 272:
                    return e.importClause && Ur(e.importClause.namedBindings, Mb);
                case 271:
                    return e;
                case 278:
                    return e.exportClause && Ur(e.exportClause, Jm);
                default:
                    return I.assertNever(e);
            }
        }
        function c3(e) {
            return e.kind === 272 && !!e.importClause && !!e.importClause.name;
        }
        function kP(e, t) {
            if (e.name) {
                let n = t(e);
                if (n) return n;
            }
            if (e.namedBindings) {
                let n = Mb(e.namedBindings) ? t(e.namedBindings) : wn(e.namedBindings.elements, t);
                if (n) return n;
            }
        }
        function DP(e) {
            if (e) switch(e.kind){
                case 169:
                case 174:
                case 173:
                case 304:
                case 303:
                case 172:
                case 171:
                    return e.questionToken !== void 0;
            }
            return !1;
        }
        function PP(e) {
            let t = jm(e) ? y_(e.parameters) : void 0, n = Ur(t && t.name, Ae);
            return !!n && n.escapedText === "new";
        }
        function Xl(e) {
            return e.kind === 353 || e.kind === 345 || e.kind === 347;
        }
        function IP(e) {
            return Xl(e) || Db(e);
        }
        function NP(e) {
            return ou(e) && At(e.expression) && e.expression.operatorToken.kind === 64 ? y2(e.expression) : void 0;
        }
        function l3(e) {
            return ou(e) && At(e.expression) && Oa(e.expression) !== 0 && At(e.expression.right) && (e.expression.right.operatorToken.kind === 57 || e.expression.right.operatorToken.kind === 61) ? e.expression.right.right : void 0;
        }
        function S2(e) {
            switch(e.kind){
                case 243:
                    let t = Al(e);
                    return t && t.initializer;
                case 172:
                    return e.initializer;
                case 303:
                    return e.initializer;
            }
        }
        function Al(e) {
            return ls(e) ? y_(e.declarationList.declarations) : void 0;
        }
        function u3(e) {
            return Zi(e) && e.body && e.body.kind === 267 ? e.body : void 0;
        }
        function OP(e) {
            if (e.kind >= 243 && e.kind <= 259) return !0;
            switch(e.kind){
                case 80:
                case 110:
                case 108:
                case 166:
                case 236:
                case 212:
                case 211:
                case 208:
                case 218:
                case 219:
                case 174:
                case 177:
                case 178:
                    return !0;
                default:
                    return !1;
            }
        }
        function ym(e) {
            switch(e.kind){
                case 219:
                case 226:
                case 241:
                case 252:
                case 179:
                case 296:
                case 263:
                case 231:
                case 175:
                case 176:
                case 185:
                case 180:
                case 251:
                case 259:
                case 246:
                case 212:
                case 242:
                case 1:
                case 266:
                case 306:
                case 277:
                case 278:
                case 281:
                case 244:
                case 249:
                case 250:
                case 248:
                case 262:
                case 218:
                case 184:
                case 177:
                case 80:
                case 245:
                case 272:
                case 271:
                case 181:
                case 264:
                case 324:
                case 330:
                case 256:
                case 174:
                case 173:
                case 267:
                case 202:
                case 270:
                case 210:
                case 169:
                case 217:
                case 211:
                case 303:
                case 172:
                case 171:
                case 253:
                case 240:
                case 178:
                case 304:
                case 305:
                case 255:
                case 257:
                case 258:
                case 265:
                case 168:
                case 260:
                case 243:
                case 247:
                case 254:
                    return !0;
                default:
                    return !1;
            }
        }
        function p3(e, t) {
            let n;
            l2(e) && TT(e) && Hi(e.initializer) && (n = zn(n, I6(e, Ea(e.initializer.jsDoc))));
            let a = e;
            for(; a && a.parent;){
                if (Hi(a) && (n = zn(n, I6(e, Ea(a.jsDoc)))), a.kind === 169) {
                    n = zn(n, (t ? P4 : tm)(a));
                    break;
                }
                if (a.kind === 168) {
                    n = zn(n, (t ? O4 : N4)(a));
                    break;
                }
                a = f3(a);
            }
            return n || Je;
        }
        function I6(e, t) {
            if (ds(t)) {
                let n = rr(t.tags, (a)=>N6(e, a));
                return t.tags === n ? [
                    t
                ] : n;
            }
            return N6(e, t) ? [
                t
            ] : void 0;
        }
        function N6(e, t) {
            return !(lu(t) || Hb(t)) || !t.parent || !ds(t.parent) || !cs(t.parent.parent) || t.parent.parent === e;
        }
        function f3(e) {
            let t = e.parent;
            if (t.kind === 303 || t.kind === 277 || t.kind === 172 || t.kind === 244 && e.kind === 211 || t.kind === 253 || u3(t) || si(e)) return t;
            if (t.parent && (Al(t.parent) === e || si(t))) return t.parent;
            if (t.parent && t.parent.parent && (Al(t.parent.parent) || S2(t.parent.parent) === e || l3(t.parent.parent))) return t.parent.parent;
        }
        function MP(e) {
            if (e.symbol) return e.symbol;
            if (!Ae(e.name)) return;
            let t = e.name.escapedText, n = x2(e);
            if (!n) return;
            let a = ir(n.parameters, (_)=>_.name.kind === 80 && _.name.escapedText === t);
            return a && a.symbol;
        }
        function LP(e) {
            if (ds(e.parent) && e.parent.tags) {
                let t = ir(e.parent.tags, Xl);
                if (t) return t;
            }
            return x2(e);
        }
        function x2(e) {
            let t = w2(e);
            if (t) return Zl(t) && t.type && $i(t.type) ? t.type : $i(t) ? t : void 0;
        }
        function w2(e) {
            let t = d3(e);
            if (t) return l3(t) || NP(t) || S2(t) || Al(t) || u3(t) || t;
        }
        function d3(e) {
            let t = E2(e);
            if (!t) return;
            let n = t.parent;
            if (n && n.jsDoc && t === Pi(n.jsDoc)) return n;
        }
        function E2(e) {
            return or(e.parent, ds);
        }
        function JP(e) {
            let t = e.name.escapedText, { typeParameters: n } = e.parent.parent.parent;
            return n && ir(n, (a)=>a.name.escapedText === t);
        }
        function RP(e) {
            return !!e.typeArguments;
        }
        function C2(e) {
            let t = e.parent;
            for(;;){
                switch(t.kind){
                    case 226:
                        let n = t, a = n.operatorToken.kind;
                        return A_(a) && n.left === e ? n : void 0;
                    case 224:
                    case 225:
                        let _ = t, p = _.operator;
                        return p === 46 || p === 47 ? _ : void 0;
                    case 249:
                    case 250:
                        let m = t;
                        return m.initializer === e ? m : void 0;
                    case 217:
                    case 209:
                    case 230:
                    case 235:
                        e = t;
                        break;
                    case 305:
                        e = t.parent;
                        break;
                    case 304:
                        if (t.name !== e) return;
                        e = t.parent;
                        break;
                    case 303:
                        if (t.name === e) return;
                        e = t.parent;
                        break;
                    default:
                        return;
                }
                t = e.parent;
            }
        }
        function jP(e) {
            let t = C2(e);
            if (!t) return 0;
            switch(t.kind){
                case 226:
                    let n = t.operatorToken.kind;
                    return n === 64 || Em(n) ? 1 : 2;
                case 224:
                case 225:
                    return 2;
                case 249:
                case 250:
                    return 1;
            }
        }
        function FP(e) {
            return !!C2(e);
        }
        function BP(e) {
            let t = C_(e.right);
            return t.kind === 226 && $b(t.operatorToken.kind);
        }
        function UP(e) {
            let t = C2(e);
            return !!t && si(t, !0) && BP(t);
        }
        function qP(e) {
            switch(e.kind){
                case 241:
                case 243:
                case 254:
                case 245:
                case 255:
                case 269:
                case 296:
                case 297:
                case 256:
                case 248:
                case 249:
                case 250:
                case 246:
                case 247:
                case 258:
                case 299:
                    return !0;
            }
            return !1;
        }
        function zP(e) {
            return Nm(e) || Om(e) || zg(e) || us(e) || L_(e);
        }
        function m3(e, t) {
            for(; e && e.kind === t;)e = e.parent;
            return e;
        }
        function WP(e) {
            return m3(e, 196);
        }
        function h3(e) {
            return m3(e, 217);
        }
        function VP(e) {
            let t;
            for(; e && e.kind === 196;)t = e, e = e.parent;
            return [
                t,
                e
            ];
        }
        function HP(e) {
            for(; Tb(e);)e = e.type;
            return e;
        }
        function C_(e, t) {
            return ms(e, t ? 17 : 1);
        }
        function GP(e) {
            return e.kind !== 211 && e.kind !== 212 ? !1 : (e = h3(e.parent), e && e.kind === 220);
        }
        function XP(e, t) {
            for(; e;){
                if (e === t) return !0;
                e = e.parent;
            }
            return !1;
        }
        function y3(e) {
            return !ci(e) && !sm(e) && Xo(e.parent) && e.parent.name === e;
        }
        function $P(e) {
            let t = e.parent;
            switch(e.kind){
                case 11:
                case 15:
                case 9:
                    if (oo(t)) return t.parent;
                case 80:
                    if (Xo(t)) return t.name === e ? t : void 0;
                    if (O_(t)) {
                        let n = t.parent;
                        return m_(n) && n.name === t ? n : void 0;
                    } else {
                        let n = t.parent;
                        return At(n) && Oa(n) !== 0 && (n.left.symbol || n.symbol) && ql(n) === e ? n : void 0;
                    }
                case 81:
                    return Xo(t) && t.name === e ? t : void 0;
                default:
                    return;
            }
        }
        function g3(e) {
            return Yi(e) && e.parent.kind === 167 && Xo(e.parent.parent);
        }
        function QP(e) {
            let t = e.parent;
            switch(t.kind){
                case 172:
                case 171:
                case 174:
                case 173:
                case 177:
                case 178:
                case 306:
                case 303:
                case 211:
                    return t.name === e;
                case 166:
                    return t.right === e;
                case 208:
                case 276:
                    return t.propertyName === e;
                case 281:
                case 291:
                case 285:
                case 286:
                case 287:
                    return !0;
            }
            return !1;
        }
        function YP(e) {
            return e.kind === 271 || e.kind === 270 || e.kind === 273 && e.name || e.kind === 274 || e.kind === 280 || e.kind === 276 || e.kind === 281 || e.kind === 277 && M0(e) ? !0 : Vt(e) && (At(e) && Oa(e) === 2 && M0(e) || Ln(e) && At(e.parent) && e.parent.left === e && e.parent.operatorToken.kind === 64 && A2(e.parent.right));
        }
        function b3(e) {
            switch(e.parent.kind){
                case 273:
                case 276:
                case 274:
                case 281:
                case 277:
                case 271:
                case 280:
                    return e.parent;
                case 166:
                    do e = e.parent;
                    while (e.parent.kind === 166);
                    return b3(e);
            }
        }
        function A2(e) {
            return co(e) || Ol(e);
        }
        function M0(e) {
            let t = v3(e);
            return A2(t);
        }
        function v3(e) {
            return ps(e) ? e.expression : e.right;
        }
        function KP(e) {
            return e.kind === 304 ? e.name : e.kind === 303 ? e.initializer : e.parent.right;
        }
        function T3(e) {
            let t = S3(e);
            if (t && Vt(e)) {
                let n = M4(e);
                if (n) return n.class;
            }
            return t;
        }
        function S3(e) {
            let t = gm(e.heritageClauses, 96);
            return t && t.types.length > 0 ? t.types[0] : void 0;
        }
        function x3(e) {
            if (Vt(e)) return L4(e).map((t)=>t.class);
            {
                let t = gm(e.heritageClauses, 119);
                return t == null ? void 0 : t.types;
            }
        }
        function w3(e) {
            return su(e) ? E3(e) || Je : ar(e) && h_(Kf(T3(e)), x3(e)) || Je;
        }
        function E3(e) {
            let t = gm(e.heritageClauses, 96);
            return t ? t.types : void 0;
        }
        function gm(e, t) {
            if (e) {
                for (let n of e)if (n.token === t) return n;
            }
        }
        function ZP(e, t) {
            for(; e;){
                if (e.kind === t) return e;
                e = e.parent;
            }
        }
        function ki(e) {
            return 83 <= e && e <= 165;
        }
        function C3(e) {
            return 19 <= e && e <= 79;
        }
        function jf(e) {
            return ki(e) || C3(e);
        }
        function k2(e) {
            return 128 <= e && e <= 165;
        }
        function A3(e) {
            return ki(e) && !k2(e);
        }
        function eI(e) {
            return 119 <= e && e <= 127;
        }
        function tI(e) {
            let t = Fl(e);
            return t !== void 0 && A3(t);
        }
        function nI(e) {
            let t = Fl(e);
            return t !== void 0 && ki(t);
        }
        function rI(e) {
            let t = w4(e);
            return !!t && !k2(t);
        }
        function iI(e) {
            return 2 <= e && e <= 7;
        }
        function aI(e) {
            if (!e) return 4;
            let t = 0;
            switch(e.kind){
                case 262:
                case 218:
                case 174:
                    e.asteriskToken && (t |= 1);
                case 219:
                    Cn(e, 1024) && (t |= 2);
                    break;
            }
            return e.body || (t |= 4), t;
        }
        function oI(e) {
            switch(e.kind){
                case 262:
                case 218:
                case 219:
                case 174:
                    return e.body !== void 0 && e.asteriskToken === void 0 && Cn(e, 1024);
            }
            return !1;
        }
        function Yi(e) {
            return ni(e) || lo(e);
        }
        function D2(e) {
            return Mm(e) && (e.operator === 40 || e.operator === 41) && lo(e.operand);
        }
        function k3(e) {
            let t = ql(e);
            return !!t && P2(t);
        }
        function P2(e) {
            if (!(e.kind === 167 || e.kind === 212)) return !1;
            let t = Ki(e) ? C_(e.argumentExpression) : e.expression;
            return !Yi(t) && !D2(t);
        }
        function Td(e) {
            switch(e.kind){
                case 80:
                case 81:
                    return e.escapedText;
                case 11:
                case 15:
                case 9:
                    return qr(e.text);
                case 167:
                    let t = e.expression;
                    return Yi(t) ? qr(t.text) : D2(t) ? t.operator === 41 ? en(t.operator) + t.operand.text : t.operand.text : void 0;
                case 295:
                    return Yl(e);
                default:
                    return I.assertNever(e);
            }
        }
        function L0(e) {
            switch(e.kind){
                case 80:
                case 11:
                case 15:
                case 9:
                    return !0;
                default:
                    return !1;
            }
        }
        function Sd(e) {
            return ro(e) ? Lt(e) : B_(e) ? Kl(e) : e.text;
        }
        function D3(e) {
            return ro(e) ? e.escapedText : B_(e) ? Yl(e) : qr(e.text);
        }
        function sI(e) {
            return `__@${getSymbolId(e)}@${e.escapedName}`;
        }
        function _I(e, t) {
            return `__#${getSymbolId(e)}@${t}`;
        }
        function cI(e) {
            return Hn(e.escapedName, "__@");
        }
        function lI(e) {
            return Hn(e.escapedName, "__#");
        }
        function uI(e) {
            return e.kind === 80 && e.escapedText === "Symbol";
        }
        function P3(e) {
            return Ae(e) ? Lt(e) === "__proto__" : Tr(e) && e.text === "__proto__";
        }
        function Zs(e, t) {
            switch(e = ms(e), e.kind){
                case 231:
                    if (classHasDeclaredOrExplicitlyAssignedName(e)) return !1;
                    break;
                case 218:
                    if (e.name) return !1;
                    break;
                case 219:
                    break;
                default:
                    return !1;
            }
            return typeof t == "function" ? t(e) : !0;
        }
        function I3(e) {
            switch(e.kind){
                case 303:
                    return !P3(e.name);
                case 304:
                    return !!e.objectAssignmentInitializer;
                case 260:
                    return Ae(e.name) && !!e.initializer;
                case 169:
                    return Ae(e.name) && !!e.initializer && !e.dotDotDotToken;
                case 208:
                    return Ae(e.name) && !!e.initializer && !e.dotDotDotToken;
                case 172:
                    return !!e.initializer;
                case 226:
                    switch(e.operatorToken.kind){
                        case 64:
                        case 77:
                        case 76:
                        case 78:
                            return Ae(e.left);
                    }
                    break;
                case 277:
                    return !0;
            }
            return !1;
        }
        function pI(e, t) {
            if (!I3(e)) return !1;
            switch(e.kind){
                case 303:
                    return Zs(e.initializer, t);
                case 304:
                    return Zs(e.objectAssignmentInitializer, t);
                case 260:
                case 169:
                case 208:
                case 172:
                    return Zs(e.initializer, t);
                case 226:
                    return Zs(e.right, t);
                case 277:
                    return Zs(e.expression, t);
            }
        }
        function fI(e) {
            return e.escapedText === "push" || e.escapedText === "unshift";
        }
        function dI(e) {
            return bm(e).kind === 169;
        }
        function bm(e) {
            for(; e.kind === 208;)e = e.parent.parent;
            return e;
        }
        function mI(e) {
            let t = e.kind;
            return t === 176 || t === 218 || t === 262 || t === 219 || t === 174 || t === 177 || t === 178 || t === 267 || t === 312;
        }
        function ya(e) {
            return Da(e.pos) || Da(e.end);
        }
        function hI(e) {
            return Ul(e, ci) || e;
        }
        function yI(e) {
            let t = I2(e), n = e.kind === 214 && e.arguments !== void 0;
            return N3(e.kind, t, n);
        }
        function N3(e, t, n) {
            switch(e){
                case 214:
                    return n ? 0 : 1;
                case 224:
                case 221:
                case 222:
                case 220:
                case 223:
                case 227:
                case 229:
                    return 1;
                case 226:
                    switch(t){
                        case 43:
                        case 64:
                        case 65:
                        case 66:
                        case 68:
                        case 67:
                        case 69:
                        case 70:
                        case 71:
                        case 72:
                        case 73:
                        case 74:
                        case 79:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                            return 1;
                    }
            }
            return 0;
        }
        function gI(e) {
            let t = I2(e), n = e.kind === 214 && e.arguments !== void 0;
            return O3(e.kind, t, n);
        }
        function I2(e) {
            return e.kind === 226 ? e.operatorToken.kind : e.kind === 224 || e.kind === 225 ? e.operator : e.kind;
        }
        function O3(e, t, n) {
            switch(e){
                case 361:
                    return 0;
                case 230:
                    return 1;
                case 229:
                    return 2;
                case 227:
                    return 4;
                case 226:
                    switch(t){
                        case 28:
                            return 0;
                        case 64:
                        case 65:
                        case 66:
                        case 68:
                        case 67:
                        case 69:
                        case 70:
                        case 71:
                        case 72:
                        case 73:
                        case 74:
                        case 79:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                            return 3;
                        default:
                            return ml(t);
                    }
                case 216:
                case 235:
                case 224:
                case 221:
                case 222:
                case 220:
                case 223:
                    return 16;
                case 225:
                    return 17;
                case 213:
                    return 18;
                case 214:
                    return n ? 19 : 18;
                case 215:
                case 211:
                case 212:
                case 236:
                    return 19;
                case 234:
                case 238:
                    return 11;
                case 110:
                case 108:
                case 80:
                case 81:
                case 106:
                case 112:
                case 97:
                case 9:
                case 10:
                case 11:
                case 209:
                case 210:
                case 218:
                case 219:
                case 231:
                case 14:
                case 15:
                case 228:
                case 217:
                case 232:
                case 284:
                case 285:
                case 288:
                    return 20;
                default:
                    return -1;
            }
        }
        function ml(e) {
            switch(e){
                case 61:
                    return 4;
                case 57:
                    return 5;
                case 56:
                    return 6;
                case 52:
                    return 7;
                case 53:
                    return 8;
                case 51:
                    return 9;
                case 35:
                case 36:
                case 37:
                case 38:
                    return 10;
                case 30:
                case 32:
                case 33:
                case 34:
                case 104:
                case 103:
                case 130:
                case 152:
                    return 11;
                case 48:
                case 49:
                case 50:
                    return 12;
                case 40:
                case 41:
                    return 13;
                case 42:
                case 44:
                case 45:
                    return 14;
                case 43:
                    return 15;
            }
            return -1;
        }
        function bI(e) {
            return rr(e, (t)=>{
                switch(t.kind){
                    case 294:
                        return !!t.expression;
                    case 12:
                        return !t.containsOnlyTriviaWhiteSpaces;
                    default:
                        return !0;
                }
            });
        }
        function vI() {
            let e = [], t = [], n = new Map, a = !1;
            return {
                add: p,
                lookup: _,
                getGlobalDiagnostics: m,
                getDiagnostics: y
            };
            function _(u) {
                let x;
                if (u.file ? x = n.get(u.file.fileName) : x = e, !x) return;
                let d = Jl(x, u, bt, Cd);
                if (d >= 0) return x[d];
            }
            function p(u) {
                let x;
                u.file ? (x = n.get(u.file.fileName), x || (x = [], n.set(u.file.fileName, x), vl(t, u.file.fileName, Ii))) : (a && (a = !1, e = e.slice()), x = e), vl(x, u, Cd);
            }
            function m() {
                return a = !0, e;
            }
            function y(u) {
                if (u) return n.get(u) || [];
                let x = dv(t, (d)=>n.get(d));
                return e.length && x.unshift(...e), x;
            }
        }
        function TI(e) {
            return e.replace(mx, "\\${");
        }
        function Qh(e) {
            return !!((e.templateFlags || 0) & 2048);
        }
        function M3(e) {
            return e && !!(Jx(e) ? Qh(e) : Qh(e.head) || Ze(e.templateSpans, (t)=>Qh(t.literal)));
        }
        function L3(e) {
            return "\\u" + ("0000" + e.toString(16).toUpperCase()).slice(-4);
        }
        function SI(e, t, n) {
            if (e.charCodeAt(0) === 0) {
                let a = n.charCodeAt(t + e.length);
                return a >= 48 && a <= 57 ? "\\x00" : "\\0";
            }
            return bx.get(e) || L3(e.charCodeAt(0));
        }
        function xd(e, t) {
            let n = t === 96 ? gx : t === 39 ? yx : hx;
            return e.replace(n, SI);
        }
        function wd(e, t) {
            return e = xd(e, t), $0.test(e) ? e.replace($0, (n)=>L3(n.charCodeAt(0))) : e;
        }
        function xI(e) {
            return "&#x" + e.toString(16).toUpperCase() + ";";
        }
        function wI(e) {
            return e.charCodeAt(0) === 0 ? "&#0;" : Sx.get(e) || xI(e.charCodeAt(0));
        }
        function J3(e, t) {
            let n = t === 39 ? Tx : vx;
            return e.replace(n, wI);
        }
        function EI(e) {
            let t = e.length;
            return t >= 2 && e.charCodeAt(0) === e.charCodeAt(t - 1) && CI(e.charCodeAt(0)) ? e.substring(1, t - 1) : e;
        }
        function CI(e) {
            return e === 39 || e === 34 || e === 96;
        }
        function R3(e) {
            let t = e.charCodeAt(0);
            return t >= 97 && t <= 122 || e.includes("-");
        }
        function N2(e) {
            let t = Oo[1];
            for(let n = Oo.length; n <= e; n++)Oo.push(Oo[n - 1] + t);
            return Oo[e];
        }
        function Fo() {
            return Oo[1].length;
        }
        function AI(e) {
            var t, n, a, _, p, m = !1;
            function y(Q) {
                let se = Xd(Q);
                se.length > 1 ? (_ = _ + se.length - 1, p = t.length - Q.length + Ea(se), a = p - t.length === 0) : a = !1;
            }
            function u(Q) {
                Q && Q.length && (a && (Q = N2(n) + Q, a = !1), t += Q, y(Q));
            }
            function x(Q) {
                Q && (m = !1), u(Q);
            }
            function d(Q) {
                Q && (m = !0), u(Q);
            }
            function S() {
                t = "", n = 0, a = !0, _ = 0, p = 0, m = !1;
            }
            function T(Q) {
                Q !== void 0 && (t += Q, y(Q), m = !1);
            }
            function A(Q) {
                Q && Q.length && x(Q);
            }
            function N(Q) {
                (!a || Q) && (t += e, _++, p = t.length, a = !0, m = !1);
            }
            function q() {
                return a ? t.length : t.length + e.length;
            }
            return S(), {
                write: x,
                rawWrite: T,
                writeLiteral: A,
                writeLine: N,
                increaseIndent: ()=>{
                    n++;
                },
                decreaseIndent: ()=>{
                    n--;
                },
                getIndent: ()=>n,
                getTextPos: ()=>t.length,
                getLine: ()=>_,
                getColumn: ()=>a ? n * Fo() : t.length - p,
                getText: ()=>t,
                isAtStartOfLine: ()=>a,
                hasTrailingComment: ()=>m,
                hasTrailingWhitespace: ()=>!!t.length && ka(t.charCodeAt(t.length - 1)),
                clear: S,
                writeKeyword: x,
                writeOperator: x,
                writeParameter: x,
                writeProperty: x,
                writePunctuation: x,
                writeSpace: x,
                writeStringLiteral: x,
                writeSymbol: (Q, se)=>x(Q),
                writeTrailingSemicolon: x,
                writeComment: d,
                getTextPosWithWriteLine: q
            };
        }
        function kI(e) {
            let t = !1;
            function n() {
                t && (e.writeTrailingSemicolon(";"), t = !1);
            }
            return {
                ...e,
                writeTrailingSemicolon () {
                    t = !0;
                },
                writeLiteral (a) {
                    n(), e.writeLiteral(a);
                },
                writeStringLiteral (a) {
                    n(), e.writeStringLiteral(a);
                },
                writeSymbol (a, _) {
                    n(), e.writeSymbol(a, _);
                },
                writePunctuation (a) {
                    n(), e.writePunctuation(a);
                },
                writeKeyword (a) {
                    n(), e.writeKeyword(a);
                },
                writeOperator (a) {
                    n(), e.writeOperator(a);
                },
                writeParameter (a) {
                    n(), e.writeParameter(a);
                },
                writeSpace (a) {
                    n(), e.writeSpace(a);
                },
                writeProperty (a) {
                    n(), e.writeProperty(a);
                },
                writeComment (a) {
                    n(), e.writeComment(a);
                },
                writeLine () {
                    n(), e.writeLine();
                },
                increaseIndent () {
                    n(), e.increaseIndent();
                },
                decreaseIndent () {
                    n(), e.decreaseIndent();
                }
            };
        }
        function O2(e) {
            return e.useCaseSensitiveFileNames ? e.useCaseSensitiveFileNames() : !1;
        }
        function j3(e) {
            return Wd(O2(e));
        }
        function F3(e, t, n) {
            return t.moduleName || M2(e, t.fileName, n && n.fileName);
        }
        function O6(e, t) {
            return e.getCanonicalFileName(Gi(t, e.getCurrentDirectory()));
        }
        function DI(e, t, n) {
            let a = t.getExternalModuleFileFromDeclaration(n);
            if (!a || a.isDeclarationFile) return;
            let _ = T2(n);
            if (!(_ && ni(_) && !as(_.text) && !O6(e, a.path).includes(O6(e, to(e.getCommonSourceDirectory()))))) return F3(e, a);
        }
        function M2(e, t, n) {
            let a = (u)=>e.getCanonicalFileName(u), _ = Di(n ? Mi(n) : e.getCommonSourceDirectory(), e.getCurrentDirectory(), a), p = Gi(t, e.getCurrentDirectory()), m = Eg(_, p, _, a, !1), y = Dl(m);
            return n ? Sg(y) : y;
        }
        function PI(e, t, n) {
            let a = t.getCompilerOptions(), _;
            return a.outDir ? _ = Dl(q3(e, t, a.outDir)) : _ = Dl(e), _ + n;
        }
        function II(e, t) {
            return B3(e, t.getCompilerOptions(), t.getCurrentDirectory(), t.getCommonSourceDirectory(), (n)=>t.getCanonicalFileName(n));
        }
        function B3(e, t, n, a, _) {
            let p = t.declarationDir || t.outDir, m = p ? Tm(e, p, n, a, _) : e, y = U3(m);
            return Dl(m) + y;
        }
        function U3(e) {
            return ii(e, [
                ".mjs",
                ".mts"
            ]) ? ".d.mts" : ii(e, [
                ".cjs",
                ".cts"
            ]) ? ".d.cts" : ii(e, [
                ".json"
            ]) ? ".d.json.ts" : ".d.ts";
        }
        function NI(e) {
            return ii(e, [
                ".d.mts",
                ".mjs",
                ".mts"
            ]) ? [
                ".mts",
                ".mjs"
            ] : ii(e, [
                ".d.cts",
                ".cjs",
                ".cts"
            ]) ? [
                ".cts",
                ".cjs"
            ] : ii(e, [
                ".d.json.ts"
            ]) ? [
                ".json"
            ] : [
                ".tsx",
                ".ts",
                ".jsx",
                ".js"
            ];
        }
        function vm(e) {
            return e.outFile || e.out;
        }
        function OI(e, t) {
            var n;
            if (e.paths) return e.baseUrl ?? I.checkDefined(e.pathsBasePath || ((n = t.getCurrentDirectory) == null ? void 0 : n.call(t)), "Encountered 'paths' without a 'baseUrl', config file, or host 'getCurrentDirectory'.");
        }
        function MI(e, t, n) {
            let a = e.getCompilerOptions();
            if (vm(a)) {
                let _ = _i(a), p = a.emitDeclarationOnly || _ === 2 || _ === 4;
                return rr(e.getSourceFiles(), (m)=>(p || !ns(m)) && J0(m, e, n));
            } else {
                let _ = t === void 0 ? e.getSourceFiles() : [
                    t
                ];
                return rr(_, (p)=>J0(p, e, n));
            }
        }
        function J0(e, t, n) {
            let a = t.getCompilerOptions();
            if (a.noEmitForJsFiles && h2(e) || e.isDeclarationFile || t.isSourceFileFromExternalLibrary(e)) return !1;
            if (n) return !0;
            if (t.isSourceOfProjectReferenceRedirect(e.fileName)) return !1;
            if (!o2(e)) return !0;
            if (t.getResolvedProjectReferenceToRedirect(e.fileName)) return !1;
            if (vm(a)) return !0;
            if (!a.outDir) return !1;
            if (a.rootDir || a.composite && a.configFilePath) {
                let _ = Gi(getCommonSourceDirectory(a, ()=>[], t.getCurrentDirectory(), t.getCanonicalFileName), t.getCurrentDirectory()), p = Tm(e.fileName, a.outDir, t.getCurrentDirectory(), _, t.getCanonicalFileName);
                if (Vv(e.fileName, p, t.getCurrentDirectory(), !t.useCaseSensitiveFileNames()) === 0) return !1;
            }
            return !0;
        }
        function q3(e, t, n) {
            return Tm(e, n, t.getCurrentDirectory(), t.getCommonSourceDirectory(), (a)=>t.getCanonicalFileName(a));
        }
        function Tm(e, t, n, a, _) {
            let p = Gi(e, n);
            return p = _(p).indexOf(_(a)) === 0 ? p.substring(a.length) : p, Qt(t, p);
        }
        function LI(e, t, n, a, _, p, m) {
            e.writeFile(n, a, _, (y)=>{
                t.add(hl(B.Could_not_write_file_0_Colon_1, n, y));
            }, p, m);
        }
        function z3(e, t, n) {
            if (e.length > Ni(e) && !n(e)) {
                let a = Mi(e);
                z3(a, t, n), t(e);
            }
        }
        function JI(e, t, n, a, _, p) {
            try {
                a(e, t, n);
            } catch  {
                z3(Mi(br(e)), _, p), a(e, t, n);
            }
        }
        function RI(e, t) {
            let n = Aa(e);
            return __(n, t);
        }
        function Ta(e, t) {
            return __(e, t);
        }
        function W3(e) {
            return ir(e.members, (t)=>L_(t) && Cl(t.body));
        }
        function L2(e) {
            if (e && e.parameters.length > 0) {
                let t = e.parameters.length === 2 && $l(e.parameters[0]);
                return e.parameters[t ? 1 : 0];
            }
        }
        function jI(e) {
            let t = L2(e);
            return t && t.type;
        }
        function V3(e) {
            if (e.parameters.length && !cu(e)) {
                let t = e.parameters[0];
                if ($l(t)) return t;
            }
        }
        function $l(e) {
            return Sm(e.name);
        }
        function Sm(e) {
            return !!e && e.kind === 80 && H3(e);
        }
        function FI(e) {
            return !!or(e, (t)=>t.kind === 186 ? !0 : t.kind === 80 || t.kind === 166 ? !1 : "quit");
        }
        function BI(e) {
            if (!Sm(e)) return !1;
            for(; O_(e.parent) && e.parent.left === e;)e = e.parent;
            return e.parent.kind === 186;
        }
        function H3(e) {
            return e.escapedText === "this";
        }
        function J2(e, t) {
            let n, a, _, p;
            return k3(t) ? (n = t, t.kind === 177 ? _ = t : t.kind === 178 ? p = t : I.fail("Accessor has wrong kind")) : wn(e, (m)=>{
                if (om(m) && R0(m) === R0(t)) {
                    let y = Td(m.name), u = Td(t.name);
                    y === u && (n ? a || (a = m) : n = m, m.kind === 177 && !_ && (_ = m), m.kind === 178 && !p && (p = m));
                }
            }), {
                firstAccessor: n,
                secondAccessor: a,
                getAccessor: _,
                setAccessor: p
            };
        }
        function R2(e) {
            if (!Vt(e) && us(e)) return;
            let t = e.type;
            return t || !Vt(e) ? t : Rg(e) ? e.typeExpression && e.typeExpression.type : rm(e);
        }
        function UI(e) {
            return e.type;
        }
        function qI(e) {
            return cu(e) ? e.type && e.type.typeExpression && e.type.typeExpression.type : e.type || (Vt(e) ? z4(e) : void 0);
        }
        function G3(e) {
            return zo(zl(e), (t)=>zI(t) ? t.typeParameters : void 0);
        }
        function zI(e) {
            return ts(e) && !(e.parent.kind === 327 && (e.parent.tags.some(Xl) || e.parent.tags.some(zb)));
        }
        function WI(e) {
            let t = L2(e);
            return t && R2(t);
        }
        function X3(e, t, n, a) {
            $3(e, t, n.pos, a);
        }
        function $3(e, t, n, a) {
            a && a.length && n !== a[0].pos && Ta(e, n) !== Ta(e, a[0].pos) && t.writeLine();
        }
        function VI(e, t, n, a) {
            n !== a && Ta(e, n) !== Ta(e, a) && t.writeLine();
        }
        function Q3(e, t, n, a, _, p, m, y) {
            if (a && a.length > 0) {
                _ && n.writeSpace(" ");
                let u = !1;
                for (let x of a)u && (n.writeSpace(" "), u = !1), y(e, t, n, x.pos, x.end, m), x.hasTrailingNewLine ? n.writeLine() : u = !0;
                u && p && n.writeSpace(" ");
            }
        }
        function HI(e, t, n, a, _, p, m) {
            let y, u;
            if (m ? _.pos === 0 && (y = rr(Ho(e, _.pos), x)) : y = Ho(e, _.pos), y) {
                let d = [], S;
                for (let T of y){
                    if (S) {
                        let A = Ta(t, S.end);
                        if (Ta(t, T.pos) >= A + 2) break;
                    }
                    d.push(T), S = T;
                }
                if (d.length) {
                    let T = Ta(t, Ea(d).end);
                    Ta(t, Mt(e, _.pos)) >= T + 2 && (X3(t, n, _, y), Q3(e, t, n, d, !1, !0, p, a), u = {
                        nodePos: _.pos,
                        detachedCommentEndPos: Ea(d).end
                    });
                }
            }
            return u;
            function x(d) {
                return PT(e, d.pos);
            }
        }
        function GI(e, t, n, a, _, p) {
            if (e.charCodeAt(a + 1) === 42) {
                let m = kg(t, a), y = t.length, u;
                for(let x = a, d = m.line; x < _; d++){
                    let S = d + 1 === y ? e.length + 1 : t[d + 1];
                    if (x !== a) {
                        u === void 0 && (u = M6(e, t[m.line], a));
                        let A = n.getIndent() * Fo() - u + M6(e, x, S);
                        if (A > 0) {
                            let N = A % Fo(), q = N2((A - N) / Fo());
                            for(n.rawWrite(q); N;)n.rawWrite(" "), N--;
                        } else n.rawWrite("");
                    }
                    XI(e, _, n, p, x, S), x = S;
                }
            } else n.writeComment(e.substring(a, _));
        }
        function XI(e, t, n, a, _, p) {
            let m = Math.min(t, p - 1), y = e.substring(_, m).trim();
            y ? (n.writeComment(y), m !== t && n.writeLine()) : n.rawWrite(a);
        }
        function M6(e, t, n) {
            let a = 0;
            for(; t < n && Mo(e.charCodeAt(t)); t++)e.charCodeAt(t) === 9 ? a += Fo() - a % Fo() : a++;
            return a;
        }
        function $I(e) {
            return wm(e) !== 0;
        }
        function QI(e) {
            return U2(e) !== 0;
        }
        function j2(e, t) {
            return !!Z3(e, t);
        }
        function Cn(e, t) {
            return !!eS(e, t);
        }
        function R0(e) {
            return io(e) && xm(e) || eu(e);
        }
        function xm(e) {
            return Cn(e, 256);
        }
        function YI(e) {
            return j2(e, 16);
        }
        function Y3(e) {
            return Cn(e, 64);
        }
        function K3(e) {
            return Cn(e, 128);
        }
        function F2(e) {
            return Cn(e, 512);
        }
        function j0(e) {
            return j2(e, 8);
        }
        function kl(e) {
            return Cn(e, 32768);
        }
        function Z3(e, t) {
            return wm(e) & t;
        }
        function eS(e, t) {
            return U2(e) & t;
        }
        function B2(e, t, n) {
            return e.kind >= 0 && e.kind <= 165 ? 0 : (e.modifierFlagsCache & 536870912 || (e.modifierFlagsCache = q2(e) | 536870912), n || t && Vt(e) ? (!(e.modifierFlagsCache & 268435456) && e.parent && (e.modifierFlagsCache |= nS(e) | 268435456), rS(e.modifierFlagsCache)) : KI(e.modifierFlagsCache));
        }
        function wm(e) {
            return B2(e, !0);
        }
        function tS(e) {
            return B2(e, !0, !0);
        }
        function U2(e) {
            return B2(e, !1);
        }
        function nS(e) {
            let t = 0;
            return e.parent && !Pa(e) && (Vt(e) && (J4(e) && (t |= 8388608), R4(e) && (t |= 16777216), j4(e) && (t |= 33554432), F4(e) && (t |= 67108864), B4(e) && (t |= 134217728)), U4(e) && (t |= 65536)), t;
        }
        function KI(e) {
            return e & 65535;
        }
        function rS(e) {
            return e & 131071 | (e & 260046848) >>> 23;
        }
        function ZI(e) {
            return rS(nS(e));
        }
        function iS(e) {
            return q2(e) | ZI(e);
        }
        function q2(e) {
            let t = U_(e) ? hr(e.modifiers) : 0;
            return (e.flags & 8 || e.kind === 80 && e.flags & 4096) && (t |= 32), t;
        }
        function hr(e) {
            let t = 0;
            if (e) for (let n of e)t |= z2(n.kind);
            return t;
        }
        function z2(e) {
            switch(e){
                case 126:
                    return 256;
                case 125:
                    return 1;
                case 124:
                    return 4;
                case 123:
                    return 2;
                case 128:
                    return 64;
                case 129:
                    return 512;
                case 95:
                    return 32;
                case 138:
                    return 128;
                case 87:
                    return 4096;
                case 90:
                    return 2048;
                case 134:
                    return 1024;
                case 148:
                    return 8;
                case 164:
                    return 16;
                case 103:
                    return 8192;
                case 147:
                    return 16384;
                case 170:
                    return 32768;
            }
            return 0;
        }
        function aS(e) {
            return e === 57 || e === 56;
        }
        function eN(e) {
            return aS(e) || e === 54;
        }
        function Em(e) {
            return e === 76 || e === 77 || e === 78;
        }
        function tN(e) {
            return At(e) && Em(e.operatorToken.kind);
        }
        function oS(e) {
            return aS(e) || e === 61;
        }
        function nN(e) {
            return At(e) && oS(e.operatorToken.kind);
        }
        function A_(e) {
            return e >= 64 && e <= 79;
        }
        function sS(e) {
            let t = _S(e);
            return t && !t.isImplements ? t.class : void 0;
        }
        function _S(e) {
            if (Cb(e)) {
                if (Ml(e.parent) && ar(e.parent.parent)) return {
                    class: e.parent.parent,
                    isImplements: e.parent.token === 119
                };
                if (Fm(e.parent)) {
                    let t = w2(e.parent);
                    if (t && ar(t)) return {
                        class: t,
                        isImplements: !1
                    };
                }
            }
        }
        function si(e, t) {
            return At(e) && (t ? e.operatorToken.kind === 64 : A_(e.operatorToken.kind)) && jo(e.left);
        }
        function rN(e) {
            return si(e.parent) && e.parent.left === e;
        }
        function iN(e) {
            if (si(e, !0)) {
                let t = e.left.kind;
                return t === 210 || t === 209;
            }
            return !1;
        }
        function F0(e) {
            return sS(e) !== void 0;
        }
        function co(e) {
            return e.kind === 80 || cS(e);
        }
        function aN(e) {
            switch(e.kind){
                case 80:
                    return e;
                case 166:
                    do e = e.left;
                    while (e.kind !== 80);
                    return e;
                case 211:
                    do e = e.expression;
                    while (e.kind !== 80);
                    return e;
            }
        }
        function B0(e) {
            return e.kind === 80 || e.kind === 110 || e.kind === 108 || e.kind === 236 || e.kind === 211 && B0(e.expression) || e.kind === 217 && B0(e.expression);
        }
        function cS(e) {
            return Ln(e) && Ae(e.name) && co(e.expression);
        }
        function U0(e) {
            if (Ln(e)) {
                let t = U0(e.expression);
                if (t !== void 0) return t + "." + Ci(e.name);
            } else if (Ki(e)) {
                let t = U0(e.expression);
                if (t !== void 0 && Vl(e.argumentExpression)) return t + "." + Td(e.argumentExpression);
            } else {
                if (Ae(e)) return Go(e.escapedText);
                if (B_(e)) return Kl(e);
            }
        }
        function k_(e) {
            return _s(e) && ao(e) === "prototype";
        }
        function oN(e) {
            return e.parent.kind === 166 && e.parent.right === e || e.parent.kind === 211 && e.parent.name === e || e.parent.kind === 236 && e.parent.name === e;
        }
        function lS(e) {
            return !!e.parent && (Ln(e.parent) && e.parent.name === e || Ki(e.parent) && e.parent.argumentExpression === e);
        }
        function sN(e) {
            return O_(e.parent) && e.parent.right === e || Ln(e.parent) && e.parent.name === e || r_(e.parent) && e.parent.right === e;
        }
        function uS(e) {
            return At(e) && e.operatorToken.kind === 104;
        }
        function _N(e) {
            return uS(e.parent) && e === e.parent.right;
        }
        function cN(e) {
            return e.kind === 210 && e.properties.length === 0;
        }
        function lN(e) {
            return e.kind === 209 && e.elements.length === 0;
        }
        function uN(e) {
            if (!(!pN(e) || !e.declarations)) {
                for (let t of e.declarations)if (t.localSymbol) return t.localSymbol;
            }
        }
        function pN(e) {
            return e && eo(e.declarations) > 0 && Cn(e.declarations[0], 2048);
        }
        function fN(e) {
            return ir(Ax, (t)=>Na(e, t));
        }
        function dN(e) {
            let t = [], n = e.length;
            for(let a = 0; a < n; a++){
                let _ = e.charCodeAt(a);
                _ < 128 ? t.push(_) : _ < 2048 ? (t.push(_ >> 6 | 192), t.push(_ & 63 | 128)) : _ < 65536 ? (t.push(_ >> 12 | 224), t.push(_ >> 6 & 63 | 128), t.push(_ & 63 | 128)) : _ < 131072 ? (t.push(_ >> 18 | 240), t.push(_ >> 12 & 63 | 128), t.push(_ >> 6 & 63 | 128), t.push(_ & 63 | 128)) : I.assert(!1, "Unexpected code point");
            }
            return t;
        }
        function pS(e) {
            let t = "", n = dN(e), a = 0, _ = n.length, p, m, y, u;
            for(; a < _;)p = n[a] >> 2, m = (n[a] & 3) << 4 | n[a + 1] >> 4, y = (n[a + 1] & 15) << 2 | n[a + 2] >> 6, u = n[a + 2] & 63, a + 1 >= _ ? y = u = 64 : a + 2 >= _ && (u = 64), t += Wi.charAt(p) + Wi.charAt(m) + Wi.charAt(y) + Wi.charAt(u), a += 3;
            return t;
        }
        function mN(e) {
            let t = "", n = 0, a = e.length;
            for(; n < a;){
                let _ = e[n];
                if (_ < 128) t += String.fromCharCode(_), n++;
                else if ((_ & 192) === 192) {
                    let p = _ & 63;
                    n++;
                    let m = e[n];
                    for(; (m & 192) === 128;)p = p << 6 | m & 63, n++, m = e[n];
                    t += String.fromCharCode(p);
                } else t += String.fromCharCode(_), n++;
            }
            return t;
        }
        function hN(e, t) {
            return e && e.base64encode ? e.base64encode(t) : pS(t);
        }
        function yN(e, t) {
            if (e && e.base64decode) return e.base64decode(t);
            let n = t.length, a = [], _ = 0;
            for(; _ < n && t.charCodeAt(_) !== Wi.charCodeAt(64);){
                let p = Wi.indexOf(t[_]), m = Wi.indexOf(t[_ + 1]), y = Wi.indexOf(t[_ + 2]), u = Wi.indexOf(t[_ + 3]), x = (p & 63) << 2 | m >> 4 & 3, d = (m & 15) << 4 | y >> 2 & 15, S = (y & 3) << 6 | u & 63;
                d === 0 && y !== 0 ? a.push(x) : S === 0 && u !== 0 ? a.push(x, d) : a.push(x, d, S), _ += 4;
            }
            return mN(a);
        }
        function fS(e, t) {
            let n = g_(t) ? t : t.readFile(e);
            if (!n) return;
            let a = parseConfigFileTextToJson(e, n);
            return a.error ? void 0 : a.config;
        }
        function gN(e, t) {
            return fS(e, t) || {};
        }
        function dS(e, t) {
            return !t.directoryExists || t.directoryExists(e);
        }
        function mS(e) {
            switch(e.newLine){
                case 0:
                    return xx;
                case 1:
                case void 0:
                    return wx;
            }
        }
        function Cm(e, t = e) {
            return I.assert(t >= e || t === -1), {
                pos: e,
                end: t
            };
        }
        function bN(e, t) {
            return Cm(e.pos, t);
        }
        function Ed(e, t) {
            return Cm(t, e.end);
        }
        function hS(e) {
            let t = U_(e) ? lg(e.modifiers, M_) : void 0;
            return t && !Da(t.end) ? Ed(e, t.end) : e;
        }
        function vN(e) {
            if (Ia(e) || f_(e)) return Ed(e, e.name.pos);
            let t = U_(e) ? Pi(e.modifiers) : void 0;
            return t && !Da(t.end) ? Ed(e, t.end) : hS(e);
        }
        function TN(e) {
            return e.pos === e.end;
        }
        function SN(e, t) {
            return Cm(e, e + en(t).length);
        }
        function xN(e, t) {
            return yS(e, e, t);
        }
        function wN(e, t, n) {
            return D_(p_(e, n, !1), p_(t, n, !1), n);
        }
        function EN(e, t, n) {
            return D_(e.end, t.end, n);
        }
        function yS(e, t, n) {
            return D_(p_(e, n, !1), t.end, n);
        }
        function CN(e, t, n) {
            return D_(e.end, p_(t, n, !1), n);
        }
        function AN(e, t, n, a) {
            let _ = p_(t, n, a);
            return T_(n, e.end, _);
        }
        function kN(e, t, n) {
            return T_(n, e.end, t.end);
        }
        function DN(e, t) {
            return !D_(e.pos, e.end, t);
        }
        function D_(e, t, n) {
            return T_(n, e, t) === 0;
        }
        function p_(e, t, n) {
            return Da(e.pos) ? -1 : Mt(t.text, e.pos, !1, n);
        }
        function PN(e, t, n, a) {
            let _ = Mt(n.text, e, !1, a), p = NN(_, t, n);
            return T_(n, p ?? t, _);
        }
        function IN(e, t, n, a) {
            let _ = Mt(n.text, e, !1, a);
            return T_(n, e, Math.min(t, _));
        }
        function NN(e, t = 0, n) {
            for(; e-- > t;)if (!ka(n.text.charCodeAt(e))) return e;
        }
        function ON(e) {
            let t = Ul(e);
            if (t) switch(t.parent.kind){
                case 266:
                case 267:
                    return t === t.parent.name;
            }
            return !1;
        }
        function MN(e) {
            return rr(e.declarations, gS);
        }
        function gS(e) {
            return Li(e) && e.initializer !== void 0;
        }
        function LN(e) {
            return e.watch && Wn(e, "watch");
        }
        function JN(e) {
            e.close();
        }
        function bS(e) {
            return e.flags & 33554432 ? e.links.checkFlags : 0;
        }
        function RN(e, t = !1) {
            if (e.valueDeclaration) {
                let n = t && e.declarations && ir(e.declarations, Zo) || e.flags & 32768 && ir(e.declarations, d_) || e.valueDeclaration, a = Kd(n);
                return e.parent && e.parent.flags & 32 ? a : a & -8;
            }
            if (bS(e) & 6) {
                let n = e.links.checkFlags, a = n & 1024 ? 2 : n & 256 ? 1 : 4, _ = n & 2048 ? 256 : 0;
                return a | _;
            }
            return e.flags & 4194304 ? 257 : 0;
        }
        function jN(e, t) {
            return e.flags & 2097152 ? t.getAliasedSymbol(e) : e;
        }
        function FN(e) {
            return e.exportSymbol ? e.exportSymbol.flags | e.flags : e.flags;
        }
        function BN(e) {
            return No(e) === 1;
        }
        function UN(e) {
            return No(e) !== 0;
        }
        function No(e) {
            let { parent: t } = e;
            switch(t == null ? void 0 : t.kind){
                case 217:
                    return No(t);
                case 225:
                case 224:
                    let { operator: n } = t;
                    return n === 46 || n === 47 ? 2 : 0;
                case 226:
                    let { left: a, operatorToken: _ } = t;
                    return a === e && A_(_.kind) ? _.kind === 64 ? 1 : 2 : 0;
                case 211:
                    return t.name !== e ? 0 : No(t);
                case 303:
                    {
                        let p = No(t.parent);
                        return e === t.name ? qN(p) : p;
                    }
                case 304:
                    return e === t.objectAssignmentInitializer ? 0 : No(t.parent);
                case 209:
                    return No(t);
                default:
                    return 0;
            }
        }
        function qN(e) {
            switch(e){
                case 0:
                    return 1;
                case 1:
                    return 0;
                case 2:
                    return 2;
                default:
                    return I.assertNever(e);
            }
        }
        function vS(e, t) {
            if (!e || !t || Object.keys(e).length !== Object.keys(t).length) return !1;
            for(let n in e)if (typeof e[n] == "object") {
                if (!vS(e[n], t[n])) return !1;
            } else if (typeof e[n] != "function" && e[n] !== t[n]) return !1;
            return !0;
        }
        function zN(e, t) {
            e.forEach(t), e.clear();
        }
        function TS(e, t, n) {
            let { onDeleteValue: a, onExistingValue: _ } = n;
            e.forEach((p, m)=>{
                let y = t.get(m);
                y === void 0 ? (e.delete(m), a(p, m)) : _ && _(p, y, m);
            });
        }
        function WN(e, t, n) {
            TS(e, t, n);
            let { createNewValue: a } = n;
            t.forEach((_, p)=>{
                e.has(p) || e.set(p, a(p, _));
            });
        }
        function VN(e) {
            if (e.flags & 32) {
                let t = SS(e);
                return !!t && Cn(t, 64);
            }
            return !1;
        }
        function SS(e) {
            var t;
            return (t = e.declarations) == null ? void 0 : t.find(ar);
        }
        function Ff(e) {
            return e.flags & 3899393 ? e.objectFlags : 0;
        }
        function HN(e, t) {
            return !!Xv(e, (n)=>t(n) ? !0 : void 0);
        }
        function GN(e) {
            return !!e && !!e.declarations && !!e.declarations[0] && Ib(e.declarations[0]);
        }
        function XN({ moduleSpecifier: e }) {
            return Tr(e) ? e.text : lm(e);
        }
        function xS(e) {
            let t;
            return Wt(e, (n)=>{
                Cl(n) && (t = n);
            }, (n)=>{
                for(let a = n.length - 1; a >= 0; a--)if (Cl(n[a])) {
                    t = n[a];
                    break;
                }
            }), t;
        }
        function $N(e, t, n = !0) {
            return e.has(t) ? !1 : (e.set(t, n), !0);
        }
        function QN(e) {
            return ar(e) || su(e) || Im(e);
        }
        function wS(e) {
            return e >= 182 && e <= 205 || e === 133 || e === 159 || e === 150 || e === 163 || e === 151 || e === 136 || e === 154 || e === 155 || e === 116 || e === 157 || e === 146 || e === 141 || e === 233 || e === 319 || e === 320 || e === 321 || e === 322 || e === 323 || e === 324 || e === 325;
        }
        function Ko(e) {
            return e.kind === 211 || e.kind === 212;
        }
        function YN(e) {
            return e.kind === 211 ? e.name : (I.assert(e.kind === 212), e.argumentExpression);
        }
        function KN(e) {
            switch(e.kind){
                case "text":
                case "internal":
                    return !0;
                default:
                    return !1;
            }
        }
        function ZN(e) {
            return e.kind === 275 || e.kind === 279;
        }
        function W2(e) {
            for(; Ko(e);)e = e.expression;
            return e;
        }
        function eO(e, t) {
            if (Ko(e.parent) && lS(e)) return n(e.parent);
            function n(a) {
                if (a.kind === 211) {
                    let _ = t(a.name);
                    if (_ !== void 0) return _;
                } else if (a.kind === 212) {
                    if (Ae(a.argumentExpression) || ni(a.argumentExpression)) {
                        let _ = t(a.argumentExpression);
                        if (_ !== void 0) return _;
                    } else return;
                }
                if (Ko(a.expression)) return n(a.expression);
                if (Ae(a.expression)) return t(a.expression);
            }
        }
        function tO(e, t) {
            for(;;){
                switch(e.kind){
                    case 225:
                        e = e.operand;
                        continue;
                    case 226:
                        e = e.left;
                        continue;
                    case 227:
                        e = e.condition;
                        continue;
                    case 215:
                        e = e.tag;
                        continue;
                    case 213:
                        if (t) return e;
                    case 234:
                    case 212:
                    case 211:
                    case 235:
                    case 360:
                    case 238:
                        e = e.expression;
                        continue;
                }
                return e;
            }
        }
        function nO(e, t) {
            this.flags = e, this.escapedName = t, this.declarations = void 0, this.valueDeclaration = void 0, this.id = 0, this.mergeId = 0, this.parent = void 0, this.members = void 0, this.exports = void 0, this.exportSymbol = void 0, this.constEnumOnlyModule = void 0, this.isReferenced = void 0, this.isAssigned = void 0, this.links = void 0;
        }
        function rO(e, t) {
            this.flags = t, (I.isDebugging || ba) && (this.checker = e);
        }
        function iO(e, t) {
            this.flags = t, I.isDebugging && (this.checker = e);
        }
        function Yh(e, t, n) {
            this.pos = t, this.end = n, this.kind = e, this.id = 0, this.flags = 0, this.modifierFlagsCache = 0, this.transformFlags = 0, this.parent = void 0, this.original = void 0, this.emitNode = void 0;
        }
        function aO(e, t, n) {
            this.pos = t, this.end = n, this.kind = e, this.id = 0, this.flags = 0, this.transformFlags = 0, this.parent = void 0, this.emitNode = void 0;
        }
        function oO(e, t, n) {
            this.pos = t, this.end = n, this.kind = e, this.id = 0, this.flags = 0, this.transformFlags = 0, this.parent = void 0, this.original = void 0, this.emitNode = void 0;
        }
        function sO(e, t, n) {
            this.fileName = e, this.text = t, this.skipTrivia = n || ((a)=>a);
        }
        function _O(e) {
            sb.push(e), e(Ct);
        }
        function ES(e) {
            Object.assign(Ct, e), wn(sb, (t)=>t(Ct));
        }
        function P_(e, t) {
            return e.replace(/{(\d+)}/g, (n, a)=>"" + I.checkDefined(t[+a]));
        }
        function CS(e) {
            Pl = e;
        }
        function AS(e) {
            !Pl && e && (Pl = e());
        }
        function I_(e) {
            return Pl && Pl[e.key] || e.message;
        }
        function Po(e, t, n, a, _, ...p) {
            n + a > t.length && (a = t.length - n), r2(t, n, a);
            let m = I_(_);
            return Ze(p) && (m = P_(m, p)), {
                file: void 0,
                start: n,
                length: a,
                messageText: m,
                category: _.category,
                code: _.code,
                reportsUnnecessary: _.reportsUnnecessary,
                fileName: e
            };
        }
        function cO(e) {
            return e.file === void 0 && e.start !== void 0 && e.length !== void 0 && typeof e.fileName == "string";
        }
        function kS(e, t) {
            let n = t.fileName || "", a = t.text.length;
            I.assertEqual(e.fileName, n), I.assertLessThanOrEqual(e.start, a), I.assertLessThanOrEqual(e.start + e.length, a);
            let _ = {
                file: t,
                start: e.start,
                length: e.length,
                messageText: e.messageText,
                category: e.category,
                code: e.code,
                reportsUnnecessary: e.reportsUnnecessary
            };
            if (e.relatedInformation) {
                _.relatedInformation = [];
                for (let p of e.relatedInformation)cO(p) && p.fileName === n ? (I.assertLessThanOrEqual(p.start, a), I.assertLessThanOrEqual(p.start + p.length, a), _.relatedInformation.push(kS(p, t))) : _.relatedInformation.push(p);
            }
            return _;
        }
        function Ya(e, t) {
            let n = [];
            for (let a of e)n.push(kS(a, t));
            return n;
        }
        function V2(e, t, n, a, ..._) {
            r2(e.text, t, n);
            let p = I_(a);
            return Ze(_) && (p = P_(p, _)), {
                file: e,
                start: t,
                length: n,
                messageText: p,
                category: a.category,
                code: a.code,
                reportsUnnecessary: a.reportsUnnecessary,
                reportsDeprecated: a.reportsDeprecated
            };
        }
        function lO(e, ...t) {
            let n = I_(e);
            return Ze(t) && (n = P_(n, t)), n;
        }
        function hl(e, ...t) {
            let n = I_(e);
            return Ze(t) && (n = P_(n, t)), {
                file: void 0,
                start: void 0,
                length: void 0,
                messageText: n,
                category: e.category,
                code: e.code,
                reportsUnnecessary: e.reportsUnnecessary,
                reportsDeprecated: e.reportsDeprecated
            };
        }
        function uO(e, t) {
            return {
                file: void 0,
                start: void 0,
                length: void 0,
                code: e.code,
                category: e.category,
                messageText: e.next ? e : e.messageText,
                relatedInformation: t
            };
        }
        function il(e, t, ...n) {
            let a = I_(t);
            return Ze(n) && (a = P_(a, n)), {
                messageText: a,
                category: t.category,
                code: t.code,
                next: e === void 0 || Array.isArray(e) ? e : [
                    e
                ]
            };
        }
        function pO(e, t) {
            let n = e;
            for(; n.next;)n = n.next[0];
            n.next = [
                t
            ];
        }
        function L6(e) {
            return e.file ? e.file.path : void 0;
        }
        function H2(e, t) {
            return Cd(e, t) || fO(e, t) || 0;
        }
        function Cd(e, t) {
            return Ii(L6(e), L6(t)) || Mn(e.start, t.start) || Mn(e.length, t.length) || Mn(e.code, t.code) || DS(e.messageText, t.messageText) || 0;
        }
        function fO(e, t) {
            return !e.relatedInformation && !t.relatedInformation ? 0 : e.relatedInformation && t.relatedInformation ? Mn(e.relatedInformation.length, t.relatedInformation.length) || wn(e.relatedInformation, (n, a)=>{
                let _ = t.relatedInformation[a];
                return H2(n, _);
            }) || 0 : e.relatedInformation ? -1 : 1;
        }
        function DS(e, t) {
            if (typeof e == "string" && typeof t == "string") return Ii(e, t);
            if (typeof e == "string") return -1;
            if (typeof t == "string") return 1;
            let n = Ii(e.messageText, t.messageText);
            if (n) return n;
            if (!e.next && !t.next) return 0;
            if (!e.next) return -1;
            if (!t.next) return 1;
            let a = Math.min(e.next.length, t.next.length);
            for(let _ = 0; _ < a; _++)if (n = DS(e.next[_], t.next[_]), n) return n;
            return e.next.length < t.next.length ? -1 : e.next.length > t.next.length ? 1 : 0;
        }
        function q0(e) {
            return e === 4 || e === 2 || e === 1 || e === 6 ? 1 : 0;
        }
        function PS(e) {
            if (e.transformFlags & 2) return bT(e) || yl(e) ? e : Wt(e, PS);
        }
        function dO(e) {
            return e.isDeclarationFile ? void 0 : PS(e);
        }
        function mO(e) {
            return (e.impliedNodeFormat === 99 || ii(e.fileName, [
                ".cjs",
                ".cts",
                ".mjs",
                ".mts"
            ])) && !e.isDeclarationFile ? !0 : void 0;
        }
        function IS(e) {
            switch(NS(e)){
                case 3:
                    return (_)=>{
                        _.externalModuleIndicator = gl(_) || !_.isDeclarationFile || void 0;
                    };
                case 1:
                    return (_)=>{
                        _.externalModuleIndicator = gl(_);
                    };
                case 2:
                    let t = [
                        gl
                    ];
                    (e.jsx === 4 || e.jsx === 5) && t.push(dO), t.push(mO);
                    let n = yg(...t);
                    return (_)=>void (_.externalModuleIndicator = n(_));
            }
        }
        function Ql(e) {
            return e.target ?? (e.module === 100 && 9 || e.module === 199 && 99 || 1);
        }
        function _i(e) {
            return typeof e.module == "number" ? e.module : Ql(e) >= 2 ? 5 : 1;
        }
        function hO(e) {
            return e >= 5 && e <= 99;
        }
        function N_(e) {
            let t = e.moduleResolution;
            if (t === void 0) switch(_i(e)){
                case 1:
                    t = 2;
                    break;
                case 100:
                    t = 3;
                    break;
                case 199:
                    t = 99;
                    break;
                default:
                    t = 1;
                    break;
            }
            return t;
        }
        function NS(e) {
            return e.moduleDetection || (_i(e) === 100 || _i(e) === 199 ? 3 : 2);
        }
        function yO(e) {
            switch(_i(e)){
                case 1:
                case 2:
                case 5:
                case 6:
                case 7:
                case 99:
                case 100:
                case 199:
                    return !0;
                default:
                    return !1;
            }
        }
        function G2(e) {
            return !!(e.isolatedModules || e.verbatimModuleSyntax);
        }
        function gO(e) {
            return e.verbatimModuleSyntax || e.isolatedModules && e.preserveValueImports;
        }
        function bO(e) {
            return e.allowUnreachableCode === !1;
        }
        function vO(e) {
            return e.allowUnusedLabels === !1;
        }
        function TO(e) {
            return !!(Q2(e) && e.declarationMap);
        }
        function X2(e) {
            if (e.esModuleInterop !== void 0) return e.esModuleInterop;
            switch(_i(e)){
                case 100:
                case 199:
                    return !0;
            }
        }
        function SO(e) {
            return e.allowSyntheticDefaultImports !== void 0 ? e.allowSyntheticDefaultImports : X2(e) || _i(e) === 4 || N_(e) === 100;
        }
        function $2(e) {
            return e >= 3 && e <= 99 || e === 100;
        }
        function xO(e) {
            return !!e.noDtsResolution || N_(e) !== 100;
        }
        function wO(e) {
            let t = N_(e);
            if (!$2(t)) return !1;
            if (e.resolvePackageJsonExports !== void 0) return e.resolvePackageJsonExports;
            switch(t){
                case 3:
                case 99:
                case 100:
                    return !0;
            }
            return !1;
        }
        function EO(e) {
            let t = N_(e);
            if (!$2(t)) return !1;
            if (e.resolvePackageJsonExports !== void 0) return e.resolvePackageJsonExports;
            switch(t){
                case 3:
                case 99:
                case 100:
                    return !0;
            }
            return !1;
        }
        function OS(e) {
            return e.resolveJsonModule !== void 0 ? e.resolveJsonModule : N_(e) === 100;
        }
        function Q2(e) {
            return !!(e.declaration || e.composite);
        }
        function CO(e) {
            return !!(e.preserveConstEnums || G2(e));
        }
        function AO(e) {
            return !!(e.incremental || e.composite);
        }
        function Y2(e, t) {
            return e[t] === void 0 ? !!e.strict : !!e[t];
        }
        function K2(e) {
            return e.allowJs === void 0 ? !!e.checkJs : e.allowJs;
        }
        function kO(e) {
            return e.useDefineForClassFields === void 0 ? Ql(e) >= 9 : e.useDefineForClassFields;
        }
        function DO(e) {
            return e.useDefineForClassFields !== !1 && Ql(e) >= 9;
        }
        function PO(e, t) {
            return w_(t, e, semanticDiagnosticsOptionDeclarations);
        }
        function IO(e, t) {
            return w_(t, e, affectsEmitOptionDeclarations);
        }
        function NO(e, t) {
            return w_(t, e, affectsDeclarationPathOptionDeclarations);
        }
        function z0(e, t) {
            return t.strictFlag ? Y2(e, t.name) : t.allowJsFlag ? K2(e) : e[t.name];
        }
        function OO(e) {
            let t = e.jsx;
            return t === 2 || t === 4 || t === 5;
        }
        function MO(e, t) {
            let n = t == null ? void 0 : t.pragmas.get("jsximportsource"), a = $t(n) ? n[n.length - 1] : n;
            return e.jsx === 4 || e.jsx === 5 || e.jsxImportSource || a ? (a == null ? void 0 : a.arguments.factory) || e.jsxImportSource || "react" : void 0;
        }
        function LO(e, t) {
            return e ? `${e}/${t.jsx === 5 ? "jsx-dev-runtime" : "jsx-runtime"}` : void 0;
        }
        function JO(e) {
            let t = !1;
            for(let n = 0; n < e.length; n++)if (e.charCodeAt(n) === 42) {
                if (!t) t = !0;
                else return !1;
            }
            return !0;
        }
        function RO(e, t) {
            let n, a, _, p = !1;
            return {
                getSymlinkedFiles: ()=>_,
                getSymlinkedDirectories: ()=>n,
                getSymlinkedDirectoriesByRealpath: ()=>a,
                setSymlinkedFile: (y, u)=>(_ || (_ = new Map)).set(y, u),
                setSymlinkedDirectory: (y, u)=>{
                    let x = Di(y, e, t);
                    QS(x) || (x = to(x), u !== !1 && !(n != null && n.has(x)) && (a || (a = qd())).add(u.realPath, y), (n || (n = new Map)).set(x, u));
                },
                setSymlinksFromResolutions (y, u, x) {
                    I.assert(!p), p = !0, y((d)=>m(this, d.resolvedModule)), u((d)=>m(this, d.resolvedTypeReferenceDirective)), x.forEach((d)=>m(this, d.resolvedTypeReferenceDirective));
                },
                hasProcessedResolutions: ()=>p
            };
            function m(y, u) {
                if (!u || !u.originalPath || !u.resolvedFileName) return;
                let { resolvedFileName: x, originalPath: d } = u;
                y.setSymlinkedFile(Di(d, e, t), x);
                let [S, T] = jO(x, d, e, t) || Je;
                S && T && y.setSymlinkedDirectory(T, {
                    real: to(S),
                    realPath: to(Di(S, e, t))
                });
            }
        }
        function jO(e, t, n, a) {
            let _ = Oi(Gi(e, n)), p = Oi(Gi(t, n)), m = !1;
            for(; _.length >= 2 && p.length >= 2 && !J6(_[_.length - 2], a) && !J6(p[p.length - 2], a) && a(_[_.length - 1]) === a(p[p.length - 1]);)_.pop(), p.pop(), m = !0;
            return m ? [
                Wo(_),
                Wo(p)
            ] : void 0;
        }
        function J6(e, t) {
            return e !== void 0 && (t(e) === "node_modules" || Hn(e, "@"));
        }
        function FO(e) {
            return vg(e.charCodeAt(0)) ? e.slice(1) : void 0;
        }
        function BO(e, t, n) {
            let a = Mv(e, t, n);
            return a === void 0 ? void 0 : FO(a);
        }
        function UO(e) {
            return e.replace(Dd, qO);
        }
        function qO(e) {
            return "\\" + e;
        }
        function Bf(e, t, n) {
            let a = Z2(e, t, n);
            return !a || !a.length ? void 0 : `^(${a.map((m)=>`(${m})`).join("|")})${n === "exclude" ? "($|/)" : "$"}`;
        }
        function Z2(e, t, n) {
            if (!(e === void 0 || e.length === 0)) return zo(e, (a)=>a && LS(a, t, n, _b[n]));
        }
        function MS(e) {
            return !/[.*?]/.test(e);
        }
        function zO(e, t, n) {
            let a = e && LS(e, t, n, _b[n]);
            return a && `^(${a})${n === "exclude" ? "($|/)" : "$"}`;
        }
        function LS(e, t, n, { singleAsteriskRegexFragment: a, doubleAsteriskRegexFragment: _, replaceWildcardCharacter: p }) {
            let m = "", y = !1, u = Gd(e, t), x = Ea(u);
            if (n !== "exclude" && x === "**") return;
            u[0] = v_(u[0]), MS(x) && u.push("**", "*");
            let d = 0;
            for (let S of u){
                if (S === "**") m += _;
                else if (n === "directories" && (m += "(", d++), y && (m += vr), n !== "exclude") {
                    let T = "";
                    S.charCodeAt(0) === 42 ? (T += "([^./]" + a + ")?", S = S.substr(1)) : S.charCodeAt(0) === 63 && (T += "[^./]", S = S.substr(1)), T += S.replace(Dd, p), T !== S && (m += qf), m += T;
                } else m += S.replace(Dd, p);
                y = !0;
            }
            for(; d > 0;)m += ")?", d--;
            return m;
        }
        function Kh(e, t) {
            return e === "*" ? t : e === "?" ? "[^/]" : "\\" + e;
        }
        function JS(e, t, n, a, _) {
            e = br(e), _ = br(_);
            let p = Qt(_, e);
            return {
                includeFilePatterns: xa(Z2(n, p, "files"), (m)=>`^${m}$`),
                includeFilePattern: Bf(n, p, "files"),
                includeDirectoryPattern: Bf(n, p, "directories"),
                excludePattern: Bf(t, p, "exclude"),
                basePaths: VO(e, n, a)
            };
        }
        function Uf(e, t) {
            return new RegExp(e, t ? "" : "i");
        }
        function WO(e, t, n, a, _, p, m, y, u) {
            e = br(e), p = br(p);
            let x = JS(e, n, a, _, p), d = x.includeFilePatterns && x.includeFilePatterns.map((se)=>Uf(se, _)), S = x.includeDirectoryPattern && Uf(x.includeDirectoryPattern, _), T = x.excludePattern && Uf(x.excludePattern, _), A = d ? d.map(()=>[]) : [
                []
            ], N = new Map, q = Wd(_);
            for (let se of x.basePaths)Q(se, Qt(p, se), m);
            return o_(A);
            function Q(se, fe, F) {
                let W = q(u(fe));
                if (N.has(W)) return;
                N.set(W, !0);
                let { files: Se, directories: Qe } = y(se);
                for (let Be of $f(Se, Ii)){
                    let st = Qt(se, Be), _t = Qt(fe, Be);
                    if (!(t && !ii(st, t)) && !(T && T.test(_t))) {
                        if (!d) A[0].push(st);
                        else {
                            let hn = ul(d, (yn)=>yn.test(_t));
                            hn !== -1 && A[hn].push(st);
                        }
                    }
                }
                if (!(F !== void 0 && (F--, F === 0))) for (let Be of $f(Qe, Ii)){
                    let st = Qt(se, Be), _t = Qt(fe, Be);
                    (!S || S.test(_t)) && (!T || !T.test(_t)) && Q(st, _t, F);
                }
            }
        }
        function VO(e, t, n) {
            let a = [
                e
            ];
            if (t) {
                let _ = [];
                for (let p of t){
                    let m = b_(p) ? p : br(Qt(e, p));
                    _.push(HO(m));
                }
                _.sort(dg(!n));
                for (let p of _)so(a, (m)=>!Hv(m, p, e, !n)) && a.push(p);
            }
            return a;
        }
        function HO(e) {
            let t = fv(e, Ex);
            return t < 0 ? zv(e) ? v_(Mi(e)) : e : e.substring(0, e.lastIndexOf(vr, t));
        }
        function RS(e, t) {
            return t || jS(e) || 3;
        }
        function jS(e) {
            switch(e.substr(e.lastIndexOf(".")).toLowerCase()){
                case ".js":
                case ".cjs":
                case ".mjs":
                    return 1;
                case ".jsx":
                    return 2;
                case ".ts":
                case ".cts":
                case ".mts":
                    return 3;
                case ".tsx":
                    return 4;
                case ".json":
                    return 6;
                default:
                    return 0;
            }
        }
        function FS(e, t) {
            let n = e && K2(e);
            if (!t || t.length === 0) return n ? Il : Bo;
            let a = n ? Il : Bo, _ = o_(a);
            return [
                ...a,
                ...wa(t, (m)=>m.scriptKind === 7 || n && GO(m.scriptKind) && !_.includes(m.extension) ? [
                        m.extension
                    ] : void 0)
            ];
        }
        function BS(e, t) {
            return !e || !OS(e) ? t : t === Il ? kx : t === Bo ? Cx : [
                ...t,
                [
                    ".json"
                ]
            ];
        }
        function GO(e) {
            return e === 1 || e === 2;
        }
        function eb(e) {
            return Ze(lb, (t)=>Na(e, t));
        }
        function tb(e) {
            return Ze(cb, (t)=>Na(e, t));
        }
        function US({ imports: e }, t = yg(eb, tb)) {
            return cg(e, ({ text: n })=>as(n) && !ii(n, Dm) ? t(n) : void 0) || !1;
        }
        function XO(e, t, n, a) {
            if (e === "js" || t === 99) return shouldAllowImportingTsExtension(n) && _() !== 2 ? 3 : 2;
            if (e === "minimal") return 0;
            if (e === "index") return 1;
            if (!shouldAllowImportingTsExtension(n)) return US(a) ? 2 : 0;
            return _();
            function _() {
                let p = !1, m = a.imports.length ? a.imports.map((y)=>y.text) : h2(a) ? $O(a).map((y)=>y.arguments[0].text) : Je;
                for (let y of m)if (as(y)) {
                    if (ii(y, Dm)) continue;
                    if (tb(y)) return 3;
                    eb(y) && (p = !0);
                }
                return p ? 2 : 0;
            }
        }
        function $O(e) {
            let t = 0, n;
            for (let a of e.statements){
                if (t > 3) break;
                e3(a) ? n = h_(n, a.declarationList.declarations.map((_)=>_.initializer)) : ou(a) && Hl(a.expression, !0) ? n = Et(n, a.expression) : t++;
            }
            return n || Je;
        }
        function QO(e, t, n) {
            if (!e) return !1;
            let a = FS(t, n);
            for (let _ of o_(BS(t, a)))if (Na(e, _)) return !0;
            return !1;
        }
        function R6(e) {
            let t = e.match(/\//g);
            return t ? t.length : 0;
        }
        function YO(e, t) {
            return Mn(R6(e), R6(t));
        }
        function Dl(e) {
            for (let t of Pm){
                let n = qS(e, t);
                if (n !== void 0) return n;
            }
            return e;
        }
        function qS(e, t) {
            return Na(e, t) ? zS(e, t) : void 0;
        }
        function zS(e, t) {
            return e.substring(0, e.length - t.length);
        }
        function KO(e, t) {
            return Wv(e, t, Pm, !1);
        }
        function WS(e) {
            let t = e.indexOf("*");
            return t === -1 ? e : e.indexOf("*", t + 1) !== -1 ? void 0 : {
                prefix: e.substr(0, t),
                suffix: e.substr(t + 1)
            };
        }
        function ZO(e) {
            return wa(fg(e), (t)=>WS(t));
        }
        function Da(e) {
            return !(e >= 0);
        }
        function VS(e) {
            return e === ".ts" || e === ".tsx" || e === ".d.ts" || e === ".cts" || e === ".mts" || e === ".d.mts" || e === ".d.cts" || Hn(e, ".d.") && is(e, ".ts");
        }
        function eM(e) {
            return VS(e) || e === ".json";
        }
        function al(e) {
            let t = nb(e);
            return t !== void 0 ? t : I.fail(`File ${e} has unknown extension.`);
        }
        function tM(e) {
            return nb(e) !== void 0;
        }
        function nb(e) {
            return ir(Pm, (t)=>Na(e, t));
        }
        function nM(e, t) {
            return e.checkJsDirective ? e.checkJsDirective.enabled : t.checkJs;
        }
        function rM(e, t) {
            let n = [];
            for (let a of e){
                if (a === t) return t;
                g_(a) || n.push(a);
            }
            return Ov(n, (a)=>a, t);
        }
        function iM(e, t) {
            let n = e.indexOf(t);
            return I.assert(n !== -1), e.slice(n);
        }
        function ol(e, ...t) {
            return t.length && (e.relatedInformation || (e.relatedInformation = []), I.assert(e.relatedInformation !== Je, "Diagnostic had empty array singleton for related info, but is still being constructed!"), e.relatedInformation.push(...t)), e;
        }
        function aM(e, t) {
            I.assert(e.length !== 0);
            let n = t(e[0]), a = n;
            for(let _ = 1; _ < e.length; _++){
                let p = t(e[_]);
                p < n ? n = p : p > a && (a = p);
            }
            return {
                min: n,
                max: a
            };
        }
        function oM(e) {
            return {
                pos: $o(e),
                end: e.end
            };
        }
        function sM(e, t) {
            let n = t.pos - 1, a = Math.min(e.text.length, Mt(e.text, t.end) + 1);
            return {
                pos: n,
                end: a
            };
        }
        function _M(e, t, n) {
            return t.skipLibCheck && e.isDeclarationFile || t.skipDefaultLibCheck && e.hasNoDefaultLib || n.isSourceOfProjectReferenceRedirect(e.fileName);
        }
        function rb(e, t) {
            return e === t || typeof e == "object" && e !== null && typeof t == "object" && t !== null && xv(e, t, rb);
        }
        function Am(e) {
            let t;
            switch(e.charCodeAt(1)){
                case 98:
                case 66:
                    t = 1;
                    break;
                case 111:
                case 79:
                    t = 3;
                    break;
                case 120:
                case 88:
                    t = 4;
                    break;
                default:
                    let x = e.length - 1, d = 0;
                    for(; e.charCodeAt(d) === 48;)d++;
                    return e.slice(d, x) || "0";
            }
            let n = 2, a = e.length - 1, _ = (a - n) * t, p = new Uint16Array((_ >>> 4) + (_ & 15 ? 1 : 0));
            for(let x = a - 1, d = 0; x >= n; x--, d += t){
                let S = d >>> 4, T = e.charCodeAt(x), N = (T <= 57 ? T - 48 : 10 + T - (T <= 70 ? 65 : 97)) << (d & 15);
                p[S] |= N;
                let q = N >>> 16;
                q && (p[S + 1] |= q);
            }
            let m = "", y = p.length - 1, u = !0;
            for(; u;){
                let x = 0;
                u = !1;
                for(let d = y; d >= 0; d--){
                    let S = x << 16 | p[d], T = S / 10 | 0;
                    p[d] = T, x = S - T * 10, T && !u && (y = d, u = !0);
                }
                m = x + m;
            }
            return m;
        }
        function ib({ negative: e, base10Value: t }) {
            return (e && t !== "0" ? "-" : "") + t;
        }
        function cM(e) {
            if (GS(e, !1)) return HS(e);
        }
        function HS(e) {
            let t = e.startsWith("-"), n = Am(`${t ? e.slice(1) : e}n`);
            return {
                negative: t,
                base10Value: n
            };
        }
        function GS(e, t) {
            if (e === "") return !1;
            let n = ss(99, !1), a = !0;
            n.setOnError(()=>a = !1), n.setText(e + "n");
            let _ = n.scan(), p = _ === 41;
            p && (_ = n.scan());
            let m = n.getTokenFlags();
            return a && _ === 10 && n.getTokenEnd() === e.length + 1 && !(m & 512) && (!t || e === ib({
                negative: p,
                base10Value: Am(n.getTokenValue())
            }));
        }
        function lM(e) {
            return !!(e.flags & 33554432) || $T(e) || fM(e) || pM(e) || !(m2(e) || uM(e));
        }
        function uM(e) {
            return Ae(e) && _u(e.parent) && e.parent.name === e;
        }
        function pM(e) {
            for(; e.kind === 80 || e.kind === 211;)e = e.parent;
            if (e.kind !== 167) return !1;
            if (Cn(e.parent, 64)) return !0;
            let t = e.parent.parent.kind;
            return t === 264 || t === 187;
        }
        function fM(e) {
            if (e.kind !== 80) return !1;
            let t = or(e.parent, (n)=>{
                switch(n.kind){
                    case 298:
                        return !0;
                    case 211:
                    case 233:
                        return !1;
                    default:
                        return "quit";
                }
            });
            return (t == null ? void 0 : t.token) === 119 || (t == null ? void 0 : t.parent.kind) === 264;
        }
        function dM(e) {
            return J_(e) && Ae(e.typeName);
        }
        function mM(e, t = _o) {
            if (e.length < 2) return !0;
            let n = e[0];
            for(let a = 1, _ = e.length; a < _; a++){
                let p = e[a];
                if (!t(n, p)) return !1;
            }
            return !0;
        }
        function Ad(e, t) {
            return e.pos = t, e;
        }
        function XS(e, t) {
            return e.end = t, e;
        }
        function Za(e, t, n) {
            return XS(Ad(e, t), n);
        }
        function kd(e, t, n) {
            return Za(e, t, t + n);
        }
        function hM(e, t) {
            return e && (e.flags = t), e;
        }
        function Qi(e, t) {
            return e && t && (e.parent = t), e;
        }
        function a_(e, t) {
            if (e) for (let n of e)Qi(n, t);
            return e;
        }
        function $S(e, t) {
            if (!e) return e;
            return ag(e, $g(e) ? n : _), e;
            function n(p, m) {
                if (t && p.parent === m) return "skip";
                Qi(p, m);
            }
            function a(p) {
                if (Hi(p)) for (let m of p.jsDoc)n(m, p), ag(m, n);
            }
            function _(p, m) {
                return n(p, m) || a(p);
            }
        }
        function yM(e) {
            return !Lm(e);
        }
        function gM(e) {
            return iu(e) && so(e.elements, yM);
        }
        function bM(e) {
            for(I.assertIsDefined(e.parent);;){
                let t = e.parent;
                if (cs(t)) {
                    e = t;
                    continue;
                }
                if (ou(t) || wb(t) || o8(t) && (t.initializer === e || t.incrementor === e)) return !0;
                if (j_(t)) {
                    if (e !== Ea(t.elements)) return !0;
                    e = t;
                    continue;
                }
                if (At(t) && t.operatorToken.kind === 28) {
                    if (e === t.left) return !0;
                    e = t;
                    continue;
                }
                return !1;
            }
        }
        function QS(e) {
            return Ze(ignoredPaths, (t)=>e.includes(t));
        }
        function vM(e) {
            if (!e.parent) return;
            switch(e.kind){
                case 168:
                    let { parent: n } = e;
                    return n.kind === 195 ? void 0 : n.typeParameters;
                case 169:
                    return e.parent.parameters;
                case 204:
                    return e.parent.templateSpans;
                case 239:
                    return e.parent.templateSpans;
                case 170:
                    {
                        let { parent: a } = e;
                        return j8(a) ? a.modifiers : void 0;
                    }
                case 298:
                    return e.parent.heritageClauses;
            }
            let { parent: t } = e;
            if (Qg(e)) return jb(e.parent) ? void 0 : e.parent.tags;
            switch(t.kind){
                case 187:
                case 264:
                    return Wg(e) ? t.members : void 0;
                case 192:
                case 193:
                    return t.types;
                case 189:
                case 209:
                case 361:
                case 275:
                case 279:
                    return t.elements;
                case 210:
                case 292:
                    return t.properties;
                case 213:
                case 214:
                    return S0(e) ? t.typeArguments : t.expression === e ? void 0 : t.arguments;
                case 284:
                case 288:
                    return gT(e) ? t.children : void 0;
                case 286:
                case 285:
                    return S0(e) ? t.typeArguments : void 0;
                case 241:
                case 296:
                case 297:
                case 268:
                    return t.statements;
                case 269:
                    return t.clauses;
                case 263:
                case 231:
                    return io(e) ? t.members : void 0;
                case 266:
                    return d8(e) ? t.members : void 0;
                case 312:
                    return t.statements;
            }
        }
        function TM(e) {
            if (!e.typeParameters) {
                if (Ze(e.parameters, (t)=>!R2(t))) return !0;
                if (e.kind !== 219) {
                    let t = y_(e.parameters);
                    if (!(t && $l(t))) return !0;
                }
            }
            return !1;
        }
        function SM(e) {
            return e === "Infinity" || e === "-Infinity" || e === "NaN";
        }
        function YS(e) {
            return e.kind === 260 && e.parent.kind === 299;
        }
        function xM(e) {
            let t = e.valueDeclaration && bm(e.valueDeclaration);
            return !!t && (Pa(t) || YS(t));
        }
        function KS(e) {
            return e.kind === 218 || e.kind === 219;
        }
        function wM(e) {
            return e.replace(/\$/gm, ()=>"\\$");
        }
        function ZS(e) {
            return (+e).toString() === e;
        }
        function EM(e, t, n, a, _) {
            let p = _ && e === "new";
            return !p && Ig(e, t) ? zr.createIdentifier(e) : !a && !p && ZS(e) && +e >= 0 ? zr.createNumericLiteral(+e) : zr.createStringLiteral(e, !!n);
        }
        function ex(e) {
            return !!(e.flags & 262144 && e.isThisType);
        }
        function CM(e) {
            let t = 0, n = 0, a = 0, _ = 0, p;
            ((x)=>{
                x[x.BeforeNodeModules = 0] = "BeforeNodeModules", x[x.NodeModules = 1] = "NodeModules", x[x.Scope = 2] = "Scope", x[x.PackageContent = 3] = "PackageContent";
            })(p || (p = {}));
            let m = 0, y = 0, u = 0;
            for(; y >= 0;)switch(m = y, y = e.indexOf("/", m + 1), u){
                case 0:
                    e.indexOf(nodeModulesPathPart, m) === m && (t = m, n = y, u = 1);
                    break;
                case 1:
                case 2:
                    u === 1 && e.charAt(m + 1) === "@" ? u = 2 : (a = y, u = 3);
                    break;
                case 3:
                    e.indexOf(nodeModulesPathPart, m) === m ? u = 1 : u = 3;
                    break;
            }
            return _ = m, u > 1 ? {
                topLevelNodeModulesIndex: t,
                topLevelPackageNameIndex: n,
                packageRootIndex: a,
                fileNameIndex: _
            } : void 0;
        }
        function AM(e) {
            var t;
            return e.kind === 348 ? (t = e.typeExpression) == null ? void 0 : t.type : e.type;
        }
        function tx(e) {
            switch(e.kind){
                case 168:
                case 263:
                case 264:
                case 265:
                case 266:
                case 353:
                case 345:
                case 347:
                    return !0;
                case 273:
                    return e.isTypeOnly;
                case 276:
                case 281:
                    return e.parent.parent.isTypeOnly;
                default:
                    return !1;
            }
        }
        function kM(e) {
            return Pb(e) || ls(e) || us(e) || es(e) || su(e) || tx(e) || Zi(e) && !Zg(e) && !pm(e);
        }
        function nx(e) {
            if (!Rg(e)) return !1;
            let { isBracketed: t, typeExpression: n } = e;
            return t || !!n && n.type.kind === 323;
        }
        function DM(e, t) {
            if (e.length === 0) return !1;
            let n = e.charCodeAt(0);
            return n === 35 ? e.length > 1 && yr(e.charCodeAt(1), t) : yr(n, t);
        }
        function rx(e) {
            var t;
            return ((t = getSnippetElement(e)) == null ? void 0 : t.kind) === 0;
        }
        function ix(e) {
            return Vt(e) && (e.type && e.type.kind === 323 || tm(e).some(({ isBracketed: t, typeExpression: n })=>t || !!n && n.type.kind === 323));
        }
        function PM(e) {
            switch(e.kind){
                case 172:
                case 171:
                    return !!e.questionToken;
                case 169:
                    return !!e.questionToken || ix(e);
                case 355:
                case 348:
                    return nx(e);
                default:
                    return !1;
            }
        }
        function IM(e) {
            let t = e.kind;
            return (t === 211 || t === 212) && Uo(e.expression);
        }
        function NM(e) {
            return Vt(e) && cs(e) && Hi(e) && !!Mg(e);
        }
        function OM(e) {
            return I.checkDefined(ax(e));
        }
        function ax(e) {
            let t = Mg(e);
            return t && t.typeExpression && t.typeExpression.type;
        }
        function MM(e) {
            return Ae(e) ? e.escapedText : Yl(e);
        }
        function LM(e) {
            return Ae(e) ? Lt(e) : Kl(e);
        }
        function JM(e) {
            let t = e.kind;
            return t === 80 || t === 295;
        }
        function Yl(e) {
            return `${e.namespace.escapedText}:${Lt(e.name)}`;
        }
        function Kl(e) {
            return `${Lt(e.namespace)}:${Lt(e.name)}`;
        }
        function RM(e) {
            return Ae(e) ? Lt(e) : Kl(e);
        }
        function jM(e) {
            return !!(e.flags & 8576);
        }
        function FM(e) {
            return e.flags & 8192 ? e.escapedName : e.flags & 384 ? qr("" + e.value) : I.fail();
        }
        function ox(e) {
            return !!e && (Ln(e) || Ki(e) || At(e));
        }
        function BM(e) {
            return e === void 0 ? !1 : !!getResolutionModeOverride(e.attributes);
        }
        var sx, km, _x, cx, e_, lx, W0, ab, ux, px, ob, fx, dx, V0, H0, G0, X0, mx, hx, yx, gx, bx, $0, vx, Tx, Sx, Oo, Wi, xx, wx, Ct, sb, Pl, Dd, Ex, Q0, qf, Zh, ey, ty, _b, Bo, cb, Cx, Ax, Y0, lb, Il, kx, ub, Dx, Dm, K0, Pm, Px, UM = It({
            "src/compiler/utilities.ts" () {
                "use strict";
                En(), sx = [], km = "tslib", _x = 160, cx = 1e6, e_ = ak(), lx = Yf(()=>new Map(Object.entries({
                        Array: new Map(Object.entries({
                            es2015: [
                                "find",
                                "findIndex",
                                "fill",
                                "copyWithin",
                                "entries",
                                "keys",
                                "values"
                            ],
                            es2016: [
                                "includes"
                            ],
                            es2019: [
                                "flat",
                                "flatMap"
                            ],
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Iterator: new Map(Object.entries({
                            es2015: Je
                        })),
                        AsyncIterator: new Map(Object.entries({
                            es2015: Je
                        })),
                        Atomics: new Map(Object.entries({
                            es2017: Je
                        })),
                        SharedArrayBuffer: new Map(Object.entries({
                            es2017: Je
                        })),
                        AsyncIterable: new Map(Object.entries({
                            es2018: Je
                        })),
                        AsyncIterableIterator: new Map(Object.entries({
                            es2018: Je
                        })),
                        AsyncGenerator: new Map(Object.entries({
                            es2018: Je
                        })),
                        AsyncGeneratorFunction: new Map(Object.entries({
                            es2018: Je
                        })),
                        RegExp: new Map(Object.entries({
                            es2015: [
                                "flags",
                                "sticky",
                                "unicode"
                            ],
                            es2018: [
                                "dotAll"
                            ]
                        })),
                        Reflect: new Map(Object.entries({
                            es2015: [
                                "apply",
                                "construct",
                                "defineProperty",
                                "deleteProperty",
                                "get",
                                "getOwnPropertyDescriptor",
                                "getPrototypeOf",
                                "has",
                                "isExtensible",
                                "ownKeys",
                                "preventExtensions",
                                "set",
                                "setPrototypeOf"
                            ]
                        })),
                        ArrayConstructor: new Map(Object.entries({
                            es2015: [
                                "from",
                                "of"
                            ]
                        })),
                        ObjectConstructor: new Map(Object.entries({
                            es2015: [
                                "assign",
                                "getOwnPropertySymbols",
                                "keys",
                                "is",
                                "setPrototypeOf"
                            ],
                            es2017: [
                                "values",
                                "entries",
                                "getOwnPropertyDescriptors"
                            ],
                            es2019: [
                                "fromEntries"
                            ],
                            es2022: [
                                "hasOwn"
                            ]
                        })),
                        NumberConstructor: new Map(Object.entries({
                            es2015: [
                                "isFinite",
                                "isInteger",
                                "isNaN",
                                "isSafeInteger",
                                "parseFloat",
                                "parseInt"
                            ]
                        })),
                        Math: new Map(Object.entries({
                            es2015: [
                                "clz32",
                                "imul",
                                "sign",
                                "log10",
                                "log2",
                                "log1p",
                                "expm1",
                                "cosh",
                                "sinh",
                                "tanh",
                                "acosh",
                                "asinh",
                                "atanh",
                                "hypot",
                                "trunc",
                                "fround",
                                "cbrt"
                            ]
                        })),
                        Map: new Map(Object.entries({
                            es2015: [
                                "entries",
                                "keys",
                                "values"
                            ]
                        })),
                        Set: new Map(Object.entries({
                            es2015: [
                                "entries",
                                "keys",
                                "values"
                            ]
                        })),
                        PromiseConstructor: new Map(Object.entries({
                            es2015: [
                                "all",
                                "race",
                                "reject",
                                "resolve"
                            ],
                            es2020: [
                                "allSettled"
                            ],
                            es2021: [
                                "any"
                            ]
                        })),
                        Symbol: new Map(Object.entries({
                            es2015: [
                                "for",
                                "keyFor"
                            ],
                            es2019: [
                                "description"
                            ]
                        })),
                        WeakMap: new Map(Object.entries({
                            es2015: [
                                "entries",
                                "keys",
                                "values"
                            ]
                        })),
                        WeakSet: new Map(Object.entries({
                            es2015: [
                                "entries",
                                "keys",
                                "values"
                            ]
                        })),
                        String: new Map(Object.entries({
                            es2015: [
                                "codePointAt",
                                "includes",
                                "endsWith",
                                "normalize",
                                "repeat",
                                "startsWith",
                                "anchor",
                                "big",
                                "blink",
                                "bold",
                                "fixed",
                                "fontcolor",
                                "fontsize",
                                "italics",
                                "link",
                                "small",
                                "strike",
                                "sub",
                                "sup"
                            ],
                            es2017: [
                                "padStart",
                                "padEnd"
                            ],
                            es2019: [
                                "trimStart",
                                "trimEnd",
                                "trimLeft",
                                "trimRight"
                            ],
                            es2020: [
                                "matchAll"
                            ],
                            es2021: [
                                "replaceAll"
                            ],
                            es2022: [
                                "at"
                            ]
                        })),
                        StringConstructor: new Map(Object.entries({
                            es2015: [
                                "fromCodePoint",
                                "raw"
                            ]
                        })),
                        DateTimeFormat: new Map(Object.entries({
                            es2017: [
                                "formatToParts"
                            ]
                        })),
                        Promise: new Map(Object.entries({
                            es2015: Je,
                            es2018: [
                                "finally"
                            ]
                        })),
                        RegExpMatchArray: new Map(Object.entries({
                            es2018: [
                                "groups"
                            ]
                        })),
                        RegExpExecArray: new Map(Object.entries({
                            es2018: [
                                "groups"
                            ]
                        })),
                        Intl: new Map(Object.entries({
                            es2018: [
                                "PluralRules"
                            ]
                        })),
                        NumberFormat: new Map(Object.entries({
                            es2018: [
                                "formatToParts"
                            ]
                        })),
                        SymbolConstructor: new Map(Object.entries({
                            es2020: [
                                "matchAll"
                            ]
                        })),
                        DataView: new Map(Object.entries({
                            es2020: [
                                "setBigInt64",
                                "setBigUint64",
                                "getBigInt64",
                                "getBigUint64"
                            ]
                        })),
                        BigInt: new Map(Object.entries({
                            es2020: Je
                        })),
                        RelativeTimeFormat: new Map(Object.entries({
                            es2020: [
                                "format",
                                "formatToParts",
                                "resolvedOptions"
                            ]
                        })),
                        Int8Array: new Map(Object.entries({
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Uint8Array: new Map(Object.entries({
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Uint8ClampedArray: new Map(Object.entries({
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Int16Array: new Map(Object.entries({
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Uint16Array: new Map(Object.entries({
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Int32Array: new Map(Object.entries({
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Uint32Array: new Map(Object.entries({
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Float32Array: new Map(Object.entries({
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Float64Array: new Map(Object.entries({
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        BigInt64Array: new Map(Object.entries({
                            es2020: Je,
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        BigUint64Array: new Map(Object.entries({
                            es2020: Je,
                            es2022: [
                                "at"
                            ],
                            es2023: [
                                "findLastIndex",
                                "findLast"
                            ]
                        })),
                        Error: new Map(Object.entries({
                            es2022: [
                                "cause"
                            ]
                        }))
                    }))), W0 = ((e)=>(e[e.None = 0] = "None", e[e.NeverAsciiEscape = 1] = "NeverAsciiEscape", e[e.JsxAttributeEscape = 2] = "JsxAttributeEscape", e[e.TerminateUnterminatedLiterals = 4] = "TerminateUnterminatedLiterals", e[e.AllowNumericSeparator = 8] = "AllowNumericSeparator", e))(W0 || {}), ab = /^(\/\/\/\s*<reference\s+path\s*=\s*)(('[^']*')|("[^"]*")).*?\/>/, ux = /^(\/\/\/\s*<reference\s+types\s*=\s*)(('[^']*')|("[^"]*")).*?\/>/, px = /^(\/\/\/\s*<reference\s+lib\s*=\s*)(('[^']*')|("[^"]*")).*?\/>/, ob = /^(\/\/\/\s*<amd-dependency\s+path\s*=\s*)(('[^']*')|("[^"]*")).*?\/>/, fx = /^\/\/\/\s*<amd-module\s+.*?\/>/, dx = /^(\/\/\/\s*<reference\s+no-default-lib\s*=\s*)(('[^']*')|("[^"]*"))\s*\/>/, V0 = ((e)=>(e[e.None = 0] = "None", e[e.Definite = 1] = "Definite", e[e.Compound = 2] = "Compound", e))(V0 || {}), H0 = ((e)=>(e[e.Normal = 0] = "Normal", e[e.Generator = 1] = "Generator", e[e.Async = 2] = "Async", e[e.Invalid = 4] = "Invalid", e[e.AsyncGenerator = 3] = "AsyncGenerator", e))(H0 || {}), G0 = ((e)=>(e[e.Left = 0] = "Left", e[e.Right = 1] = "Right", e))(G0 || {}), X0 = ((e)=>(e[e.Comma = 0] = "Comma", e[e.Spread = 1] = "Spread", e[e.Yield = 2] = "Yield", e[e.Assignment = 3] = "Assignment", e[e.Conditional = 4] = "Conditional", e[e.Coalesce = 4] = "Coalesce", e[e.LogicalOR = 5] = "LogicalOR", e[e.LogicalAND = 6] = "LogicalAND", e[e.BitwiseOR = 7] = "BitwiseOR", e[e.BitwiseXOR = 8] = "BitwiseXOR", e[e.BitwiseAND = 9] = "BitwiseAND", e[e.Equality = 10] = "Equality", e[e.Relational = 11] = "Relational", e[e.Shift = 12] = "Shift", e[e.Additive = 13] = "Additive", e[e.Multiplicative = 14] = "Multiplicative", e[e.Exponentiation = 15] = "Exponentiation", e[e.Unary = 16] = "Unary", e[e.Update = 17] = "Update", e[e.LeftHandSide = 18] = "LeftHandSide", e[e.Member = 19] = "Member", e[e.Primary = 20] = "Primary", e[e.Highest = 20] = "Highest", e[e.Lowest = 0] = "Lowest", e[e.Invalid = -1] = "Invalid", e))(X0 || {}), mx = /\$\{/g, hx = /[\\"\u0000-\u001f\t\v\f\b\r\n\u2028\u2029\u0085]/g, yx = /[\\'\u0000-\u001f\t\v\f\b\r\n\u2028\u2029\u0085]/g, gx = /\r\n|[\\`\u0000-\u001f\t\v\f\b\r\u2028\u2029\u0085]/g, bx = new Map(Object.entries({
                    "	": "\\t",
                    "\v": "\\v",
                    "\f": "\\f",
                    "\b": "\\b",
                    "\r": "\\r",
                    "\n": "\\n",
                    "\\": "\\\\",
                    '"': '\\"',
                    "'": "\\'",
                    "`": "\\`",
                    "\u2028": "\\u2028",
                    "\u2029": "\\u2029",
                    "\x85": "\\u0085",
                    "\r\n": "\\r\\n"
                })), $0 = /[^\u0000-\u007F]/g, vx = /["\u0000-\u001f\u2028\u2029\u0085]/g, Tx = /['\u0000-\u001f\u2028\u2029\u0085]/g, Sx = new Map(Object.entries({
                    '"': "&quot;",
                    "'": "&apos;"
                })), Oo = [
                    "",
                    "    "
                ], Wi = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", xx = `\r
`, wx = `
`, Ct = {
                    getNodeConstructor: ()=>Yh,
                    getTokenConstructor: ()=>aO,
                    getIdentifierConstructor: ()=>oO,
                    getPrivateIdentifierConstructor: ()=>Yh,
                    getSourceFileConstructor: ()=>Yh,
                    getSymbolConstructor: ()=>nO,
                    getTypeConstructor: ()=>rO,
                    getSignatureConstructor: ()=>iO,
                    getSourceMapSourceConstructor: ()=>sO
                }, sb = [], Dd = /[^\w\s/]/g, Ex = [
                    42,
                    63
                ], Q0 = [
                    "node_modules",
                    "bower_components",
                    "jspm_packages"
                ], qf = `(?!(${Q0.join("|")})(/|$))`, Zh = {
                    singleAsteriskRegexFragment: "([^./]|(\\.(?!min\\.js$))?)*",
                    doubleAsteriskRegexFragment: `(/${qf}[^/.][^/]*)*?`,
                    replaceWildcardCharacter: (e)=>Kh(e, Zh.singleAsteriskRegexFragment)
                }, ey = {
                    singleAsteriskRegexFragment: "[^/]*",
                    doubleAsteriskRegexFragment: `(/${qf}[^/.][^/]*)*?`,
                    replaceWildcardCharacter: (e)=>Kh(e, ey.singleAsteriskRegexFragment)
                }, ty = {
                    singleAsteriskRegexFragment: "[^/]*",
                    doubleAsteriskRegexFragment: "(/.+?)?",
                    replaceWildcardCharacter: (e)=>Kh(e, ty.singleAsteriskRegexFragment)
                }, _b = {
                    files: Zh,
                    directories: ey,
                    exclude: ty
                }, Bo = [
                    [
                        ".ts",
                        ".tsx",
                        ".d.ts"
                    ],
                    [
                        ".cts",
                        ".d.cts"
                    ],
                    [
                        ".mts",
                        ".d.mts"
                    ]
                ], cb = o_(Bo), Cx = [
                    ...Bo,
                    [
                        ".json"
                    ]
                ], Ax = [
                    ".d.ts",
                    ".d.cts",
                    ".d.mts",
                    ".cts",
                    ".mts",
                    ".ts",
                    ".tsx"
                ], Y0 = [
                    [
                        ".js",
                        ".jsx"
                    ],
                    [
                        ".mjs"
                    ],
                    [
                        ".cjs"
                    ]
                ], lb = o_(Y0), Il = [
                    [
                        ".ts",
                        ".tsx",
                        ".d.ts",
                        ".js",
                        ".jsx"
                    ],
                    [
                        ".cts",
                        ".d.cts",
                        ".cjs"
                    ],
                    [
                        ".mts",
                        ".d.mts",
                        ".mjs"
                    ]
                ], kx = [
                    ...Il,
                    [
                        ".json"
                    ]
                ], ub = [
                    ".d.ts",
                    ".d.cts",
                    ".d.mts"
                ], Dx = [
                    ".ts",
                    ".cts",
                    ".mts",
                    ".tsx"
                ], Dm = [
                    ".mts",
                    ".d.mts",
                    ".mjs",
                    ".cts",
                    ".d.cts",
                    ".cjs"
                ], K0 = ((e)=>(e[e.Minimal = 0] = "Minimal", e[e.Index = 1] = "Index", e[e.JsExtension = 2] = "JsExtension", e[e.TsExtension = 3] = "TsExtension", e))(K0 || {}), Pm = [
                    ".d.ts",
                    ".d.mts",
                    ".d.cts",
                    ".mjs",
                    ".mts",
                    ".cjs",
                    ".cts",
                    ".ts",
                    ".js",
                    ".tsx",
                    ".jsx",
                    ".json"
                ], Px = {
                    files: Je,
                    directories: Je
                };
            }
        });
        function Ix() {
            let e, t, n, a, _;
            return {
                createBaseSourceFileNode: p,
                createBaseIdentifierNode: m,
                createBasePrivateIdentifierNode: y,
                createBaseTokenNode: u,
                createBaseNode: x
            };
            function p(d) {
                return new (_ || (_ = Ct.getSourceFileConstructor()))(d, -1, -1);
            }
            function m(d) {
                return new (n || (n = Ct.getIdentifierConstructor()))(d, -1, -1);
            }
            function y(d) {
                return new (a || (a = Ct.getPrivateIdentifierConstructor()))(d, -1, -1);
            }
            function u(d) {
                return new (t || (t = Ct.getTokenConstructor()))(d, -1, -1);
            }
            function x(d) {
                return new (e || (e = Ct.getNodeConstructor()))(d, -1, -1);
            }
        }
        var qM = It({
            "src/compiler/factory/baseNodeFactory.ts" () {
                "use strict";
                En();
            }
        }), pb, zM = It({
            "src/compiler/factory/parenthesizerRules.ts" () {
                "use strict";
                En(), pb = {
                    getParenthesizeLeftSideOfBinaryForOperator: (e)=>bt,
                    getParenthesizeRightSideOfBinaryForOperator: (e)=>bt,
                    parenthesizeLeftSideOfBinary: (e, t)=>t,
                    parenthesizeRightSideOfBinary: (e, t, n)=>n,
                    parenthesizeExpressionOfComputedPropertyName: bt,
                    parenthesizeConditionOfConditionalExpression: bt,
                    parenthesizeBranchOfConditionalExpression: bt,
                    parenthesizeExpressionOfExportDefault: bt,
                    parenthesizeExpressionOfNew: (e)=>wi(e, jo),
                    parenthesizeLeftSideOfAccess: (e)=>wi(e, jo),
                    parenthesizeOperandOfPostfixUnary: (e)=>wi(e, jo),
                    parenthesizeOperandOfPrefixUnary: (e)=>wi(e, pT),
                    parenthesizeExpressionsOfCommaDelimitedList: (e)=>wi(e, ha),
                    parenthesizeExpressionForDisallowedComma: bt,
                    parenthesizeExpressionOfExpressionStatement: bt,
                    parenthesizeConciseBodyOfArrowFunction: bt,
                    parenthesizeCheckTypeOfConditionalType: bt,
                    parenthesizeExtendsTypeOfConditionalType: bt,
                    parenthesizeConstituentTypesOfUnionType: (e)=>wi(e, ha),
                    parenthesizeConstituentTypeOfUnionType: bt,
                    parenthesizeConstituentTypesOfIntersectionType: (e)=>wi(e, ha),
                    parenthesizeConstituentTypeOfIntersectionType: bt,
                    parenthesizeOperandOfTypeOperator: bt,
                    parenthesizeOperandOfReadonlyTypeOperator: bt,
                    parenthesizeNonArrayTypeOfPostfixType: bt,
                    parenthesizeElementTypesOfTupleType: (e)=>wi(e, ha),
                    parenthesizeElementTypeOfTupleType: bt,
                    parenthesizeTypeOfOptionalType: bt,
                    parenthesizeTypeArguments: (e)=>e && wi(e, ha),
                    parenthesizeLeadingTypeArgument: bt
                };
            }
        }), WM = ()=>{}, Nx = ()=>new Proxy({}, {
                get: ()=>()=>{}
            });
        function VM(e) {
            fb.push(e);
        }
        function Pd(e, t) {
            let n = e & 8 ? HM : GM, a = Yf(()=>e & 1 ? pb : createParenthesizerRules(se)), _ = Yf(()=>e & 2 ? nullNodeConverters : Nx(se)), p = Fr((r)=>(o, s)=>sc(o, r, s)), m = Fr((r)=>(o)=>ac(r, o)), y = Fr((r)=>(o)=>oc(o, r)), u = Fr((r)=>()=>q1(r)), x = Fr((r)=>(o)=>Mc(r, o)), d = Fr((r)=>(o, s)=>W1(r, o, s)), S = Fr((r)=>(o, s)=>kp(r, o, s)), T = Fr((r)=>(o, s)=>z1(r, o, s)), A = Fr((r)=>(o, s)=>Bp(r, o, s)), N = Fr((r)=>(o, s, l)=>ah(r, o, s, l)), q = Fr((r)=>(o, s, l)=>Up(r, o, s, l)), Q = Fr((r)=>(o, s, l, g)=>oh(r, o, s, l, g)), se = {
                get parenthesizer () {
                    return a();
                },
                get converters () {
                    return _();
                },
                baseFactory: t,
                flags: e,
                createNodeArray: fe,
                createNumericLiteral: Qe,
                createBigIntLiteral: Be,
                createStringLiteral: _t,
                createStringLiteralFromNode: hn,
                createRegularExpressionLiteral: yn,
                createLiteralLikeNode: fi,
                createIdentifier: He,
                createTempVariable: Qn,
                createLoopVariable: Gr,
                createUniqueName: vt,
                getGeneratedNameForNode: Jn,
                createPrivateIdentifier: Ht,
                createUniquePrivateName: at,
                getGeneratedPrivateNameForNode: kr,
                createToken: xt,
                createSuper: ut,
                createThis: Gt,
                createNull: cn,
                createTrue: ht,
                createFalse: Dr,
                createModifier: Tt,
                createModifiersFromModifierFlags: Rn,
                createQualifiedName: yt,
                updateQualifiedName: jn,
                createComputedPropertyName: ct,
                updateComputedPropertyName: Kt,
                createTypeParameterDeclaration: Zt,
                updateTypeParameterDeclaration: lr,
                createParameterDeclaration: di,
                updateParameterDeclaration: Xr,
                createDecorator: Yn,
                updateDecorator: Kn,
                createPropertySignature: Ji,
                updatePropertySignature: Pr,
                createPropertyDeclaration: U,
                updatePropertyDeclaration: ie,
                createMethodSignature: ye,
                updateMethodSignature: Te,
                createMethodDeclaration: tt,
                updateMethodDeclaration: $e,
                createConstructorDeclaration: z,
                updateConstructorDeclaration: K,
                createGetAccessorDeclaration: Ee,
                updateGetAccessorDeclaration: je,
                createSetAccessorDeclaration: nt,
                updateSetAccessorDeclaration: kt,
                createCallSignature: Zn,
                updateCallSignature: kn,
                createConstructSignature: er,
                updateConstructSignature: Ri,
                createIndexSignature: aa,
                updateIndexSignature: $r,
                createClassStaticBlockDeclaration: St,
                updateClassStaticBlockDeclaration: Jt,
                createTemplateLiteralTypeSpan: Dn,
                updateTemplateLiteralTypeSpan: Ne,
                createKeywordTypeNode: oa,
                createTypePredicateNode: jt,
                updateTypePredicateNode: Fn,
                createTypeReferenceNode: R,
                updateTypeReferenceNode: v,
                createFunctionTypeNode: w,
                updateFunctionTypeNode: f,
                createConstructorTypeNode: $,
                updateConstructorTypeNode: be,
                createTypeQueryNode: xe,
                updateTypeQueryNode: Ye,
                createTypeLiteralNode: Ge,
                updateTypeLiteralNode: Xe,
                createArrayTypeNode: Nt,
                updateArrayTypeNode: Xt,
                createTupleTypeNode: ln,
                updateTupleTypeNode: ve,
                createNamedTupleMember: ft,
                updateNamedTupleMember: Ir,
                createOptionalTypeNode: Dt,
                updateOptionalTypeNode: G,
                createRestTypeNode: La,
                updateRestTypeNode: Pe,
                createUnionTypeNode: ur,
                updateUnionTypeNode: Ja,
                createIntersectionTypeNode: Nr,
                updateIntersectionTypeNode: Re,
                createConditionalTypeNode: dt,
                updateConditionalTypeNode: mi,
                createInferTypeNode: Qr,
                updateInferTypeNode: r1,
                createImportTypeNode: hi,
                updateImportTypeNode: Ts,
                createParenthesizedType: Pn,
                updateParenthesizedType: zt,
                createThisTypeNode: M,
                createTypeOperatorNode: Bn,
                updateTypeOperatorNode: sa,
                createIndexedAccessTypeNode: yi,
                updateIndexedAccessTypeNode: X_,
                createMappedTypeNode: Ft,
                updateMappedTypeNode: vn,
                createLiteralTypeNode: Ra,
                updateLiteralTypeNode: _a,
                createTemplateLiteralType: bn,
                updateTemplateLiteralType: i1,
                createObjectBindingPattern: yu,
                updateObjectBindingPattern: a1,
                createArrayBindingPattern: ca,
                updateArrayBindingPattern: o1,
                createBindingElement: Ss,
                updateBindingElement: ja,
                createArrayLiteralExpression: $_,
                updateArrayLiteralExpression: gu,
                createObjectLiteralExpression: fo,
                updateObjectLiteralExpression: s1,
                createPropertyAccessExpression: e & 4 ? (r, o)=>setEmitFlags(gi(r, o), 262144) : gi,
                updatePropertyAccessExpression: vu,
                createPropertyAccessChain: e & 4 ? (r, o, s)=>setEmitFlags(Fa(r, o, s), 262144) : Fa,
                updatePropertyAccessChain: Tu,
                createElementAccessExpression: Q_,
                updateElementAccessExpression: _1,
                createElementAccessChain: Y_,
                updateElementAccessChain: Su,
                createCallExpression: ji,
                updateCallExpression: c1,
                createCallChain: K_,
                updateCallChain: pr,
                createNewExpression: ws,
                updateNewExpression: Z_,
                createTaggedTemplateExpression: ec,
                updateTaggedTemplateExpression: l1,
                createTypeAssertion: wu,
                updateTypeAssertion: Eu,
                createParenthesizedExpression: tc,
                updateParenthesizedExpression: Cu,
                createFunctionExpression: nc,
                updateFunctionExpression: Au,
                createArrowFunction: rc,
                updateArrowFunction: ku,
                createDeleteExpression: ic,
                updateDeleteExpression: u1,
                createTypeOfExpression: Tn,
                updateTypeOfExpression: p1,
                createVoidExpression: Or,
                updateVoidExpression: f1,
                createAwaitExpression: Fi,
                updateAwaitExpression: Ba,
                createPrefixUnaryExpression: ac,
                updatePrefixUnaryExpression: Es,
                createPostfixUnaryExpression: oc,
                updatePostfixUnaryExpression: Du,
                createBinaryExpression: sc,
                updateBinaryExpression: d1,
                createConditionalExpression: _c,
                updateConditionalExpression: m1,
                createTemplateExpression: Yr,
                updateTemplateExpression: Iu,
                createTemplateHead: As,
                createTemplateMiddle: lc,
                createTemplateTail: h1,
                createNoSubstitutionTemplateLiteral: Ou,
                createTemplateLiteralLikeNode: Ua,
                createYieldExpression: Mu,
                updateYieldExpression: y1,
                createSpreadElement: Lu,
                updateSpreadElement: g1,
                createClassExpression: Ju,
                updateClassExpression: ho,
                createOmittedExpression: b1,
                createExpressionWithTypeArguments: Ru,
                updateExpressionWithTypeArguments: fr,
                createAsExpression: ks,
                updateAsExpression: ju,
                createNonNullExpression: Fu,
                updateNonNullExpression: uc,
                createSatisfiesExpression: Bu,
                updateSatisfiesExpression: pc,
                createNonNullChain: Mr,
                updateNonNullChain: Uu,
                createMetaProperty: Ds,
                updateMetaProperty: bi,
                createTemplateSpan: yo,
                updateTemplateSpan: qu,
                createSemicolonClassElement: zu,
                createBlock: qa,
                updateBlock: Wu,
                createVariableStatement: Vu,
                updateVariableStatement: Hu,
                createEmptyStatement: fc,
                createExpressionStatement: go,
                updateExpressionStatement: v1,
                createIfStatement: dc,
                updateIfStatement: T1,
                createDoStatement: mc,
                updateDoStatement: S1,
                createWhileStatement: Gu,
                updateWhileStatement: x1,
                createForStatement: hc,
                updateForStatement: Xu,
                createForInStatement: $u,
                updateForInStatement: w1,
                createForOfStatement: Qu,
                updateForOfStatement: E1,
                createContinueStatement: Yu,
                updateContinueStatement: Ku,
                createBreakStatement: yc,
                updateBreakStatement: Zu,
                createReturnStatement: ep,
                updateReturnStatement: tp,
                createWithStatement: gc,
                updateWithStatement: np,
                createSwitchStatement: la,
                updateSwitchStatement: C1,
                createLabeledStatement: rp,
                updateLabeledStatement: ip,
                createThrowStatement: ap,
                updateThrowStatement: A1,
                createTryStatement: op,
                updateTryStatement: sp,
                createDebuggerStatement: _p,
                createVariableDeclaration: Ps,
                updateVariableDeclaration: k1,
                createVariableDeclarationList: bc,
                updateVariableDeclarationList: D1,
                createFunctionDeclaration: vc,
                updateFunctionDeclaration: cp,
                createClassDeclaration: Tc,
                updateClassDeclaration: Sc,
                createInterfaceDeclaration: lp,
                updateInterfaceDeclaration: gt,
                createTypeAliasDeclaration: Bi,
                updateTypeAliasDeclaration: xc,
                createEnumDeclaration: Ui,
                updateEnumDeclaration: up,
                createModuleDeclaration: Bt,
                updateModuleDeclaration: qi,
                createModuleBlock: on,
                updateModuleBlock: I1,
                createCaseBlock: pp,
                updateCaseBlock: N1,
                createNamespaceExportDeclaration: wc,
                updateNamespaceExportDeclaration: O1,
                createImportEqualsDeclaration: fp,
                updateImportEqualsDeclaration: dp,
                createImportDeclaration: mp,
                updateImportDeclaration: hp,
                createImportClause: Ec,
                updateImportClause: yp,
                createAssertClause: gp,
                updateAssertClause: Is,
                createAssertEntry: Cc,
                updateAssertEntry: bp,
                createImportTypeAssertionContainer: Ac,
                updateImportTypeAssertionContainer: L1,
                createImportAttributes: Ns,
                updateImportAttributes: J1,
                createImportAttribute: kc,
                updateImportAttribute: R1,
                createNamespaceImport: vp,
                updateNamespaceImport: j1,
                createNamespaceExport: Tp,
                updateNamespaceExport: F1,
                createNamedImports: Dc,
                updateNamedImports: ua,
                createImportSpecifier: Sp,
                updateImportSpecifier: xp,
                createExportAssignment: za,
                updateExportAssignment: Pc,
                createExportDeclaration: Ic,
                updateExportDeclaration: Wa,
                createNamedExports: Nc,
                updateNamedExports: wp,
                createExportSpecifier: Oc,
                updateExportSpecifier: U1,
                createMissingDeclaration: Ep,
                createExternalModuleReference: Cp,
                updateExternalModuleReference: Ap,
                get createJSDocAllType () {
                    return u(319);
                },
                get createJSDocUnknownType () {
                    return u(320);
                },
                get createJSDocNonNullableType () {
                    return S(322);
                },
                get updateJSDocNonNullableType () {
                    return T(322);
                },
                get createJSDocNullableType () {
                    return S(321);
                },
                get updateJSDocNullableType () {
                    return T(321);
                },
                get createJSDocOptionalType () {
                    return x(323);
                },
                get updateJSDocOptionalType () {
                    return d(323);
                },
                get createJSDocVariadicType () {
                    return x(325);
                },
                get updateJSDocVariadicType () {
                    return d(325);
                },
                get createJSDocNamepathType () {
                    return x(326);
                },
                get updateJSDocNamepathType () {
                    return d(326);
                },
                createJSDocFunctionType: Dp,
                updateJSDocFunctionType: V1,
                createJSDocTypeLiteral: Pp,
                updateJSDocTypeLiteral: H1,
                createJSDocTypeExpression: Os,
                updateJSDocTypeExpression: G1,
                createJSDocSignature: Ip,
                updateJSDocSignature: Ms,
                createJSDocTemplateTag: Lc,
                updateJSDocTemplateTag: Jc,
                createJSDocTypedefTag: Np,
                updateJSDocTypedefTag: Op,
                createJSDocParameterTag: Mp,
                updateJSDocParameterTag: X1,
                createJSDocPropertyTag: Rc,
                updateJSDocPropertyTag: $1,
                createJSDocCallbackTag: jc,
                updateJSDocCallbackTag: Q1,
                createJSDocOverloadTag: Ls,
                updateJSDocOverloadTag: Lp,
                createJSDocAugmentsTag: Ha,
                updateJSDocAugmentsTag: Y1,
                createJSDocImplementsTag: pa,
                updateJSDocImplementsTag: ih,
                createJSDocSeeTag: bo,
                updateJSDocSeeTag: K1,
                createJSDocNameReference: Jp,
                updateJSDocNameReference: Z1,
                createJSDocMemberName: Rp,
                updateJSDocMemberName: eh,
                createJSDocLink: Fc,
                updateJSDocLink: th,
                createJSDocLinkCode: jp,
                updateJSDocLinkCode: nh,
                createJSDocLinkPlain: Fp,
                updateJSDocLinkPlain: rh,
                get createJSDocTypeTag () {
                    return q(351);
                },
                get updateJSDocTypeTag () {
                    return Q(351);
                },
                get createJSDocReturnTag () {
                    return q(349);
                },
                get updateJSDocReturnTag () {
                    return Q(349);
                },
                get createJSDocThisTag () {
                    return q(350);
                },
                get updateJSDocThisTag () {
                    return Q(350);
                },
                get createJSDocAuthorTag () {
                    return A(337);
                },
                get updateJSDocAuthorTag () {
                    return N(337);
                },
                get createJSDocClassTag () {
                    return A(339);
                },
                get updateJSDocClassTag () {
                    return N(339);
                },
                get createJSDocPublicTag () {
                    return A(340);
                },
                get updateJSDocPublicTag () {
                    return N(340);
                },
                get createJSDocPrivateTag () {
                    return A(341);
                },
                get updateJSDocPrivateTag () {
                    return N(341);
                },
                get createJSDocProtectedTag () {
                    return A(342);
                },
                get updateJSDocProtectedTag () {
                    return N(342);
                },
                get createJSDocReadonlyTag () {
                    return A(343);
                },
                get updateJSDocReadonlyTag () {
                    return N(343);
                },
                get createJSDocOverrideTag () {
                    return A(344);
                },
                get updateJSDocOverrideTag () {
                    return N(344);
                },
                get createJSDocDeprecatedTag () {
                    return A(338);
                },
                get updateJSDocDeprecatedTag () {
                    return N(338);
                },
                get createJSDocThrowsTag () {
                    return q(356);
                },
                get updateJSDocThrowsTag () {
                    return Q(356);
                },
                get createJSDocSatisfiesTag () {
                    return q(357);
                },
                get updateJSDocSatisfiesTag () {
                    return Q(357);
                },
                createJSDocEnumTag: Js,
                updateJSDocEnumTag: _h,
                createJSDocUnknownTag: qp,
                updateJSDocUnknownTag: sh,
                createJSDocText: Bc,
                updateJSDocText: zp,
                createJSDocComment: Wp,
                updateJSDocComment: Rs,
                createJsxElement: Uc,
                updateJsxElement: ch,
                createJsxSelfClosingElement: Vp,
                updateJsxSelfClosingElement: lh,
                createJsxOpeningElement: js,
                updateJsxOpeningElement: Hp,
                createJsxClosingElement: qc,
                updateJsxClosingElement: zc,
                createJsxFragment: Sn,
                createJsxText: vo,
                updateJsxText: uh,
                createJsxOpeningFragment: Xp,
                createJsxJsxClosingFragment: ph,
                updateJsxFragment: Gp,
                createJsxAttribute: $p,
                updateJsxAttribute: Fs,
                createJsxAttributes: Qp,
                updateJsxAttributes: fh,
                createJsxSpreadAttribute: Yp,
                updateJsxSpreadAttribute: dh,
                createJsxExpression: Bs,
                updateJsxExpression: To,
                createJsxNamespacedName: Kp,
                updateJsxNamespacedName: Wc,
                createCaseClause: Vc,
                updateCaseClause: mh,
                createDefaultClause: Ga,
                updateDefaultClause: Zp,
                createHeritageClause: ef,
                updateHeritageClause: hh,
                createCatchClause: Hc,
                updateCatchClause: tf,
                createPropertyAssignment: Us,
                updatePropertyAssignment: fa,
                createShorthandPropertyAssignment: nf,
                updateShorthandPropertyAssignment: gh,
                createSpreadAssignment: Gc,
                updateSpreadAssignment: rf,
                createEnumMember: Lr,
                updateEnumMember: af,
                createSourceFile: vh,
                updateSourceFile: xh,
                createRedirectedSourceFile: of,
                createBundle: Xc,
                updateBundle: wh,
                createUnparsedSource: Eh,
                createUnparsedPrologue: _f,
                createUnparsedPrepend: Ch,
                createUnparsedTextLike: Ah,
                createUnparsedSyntheticReference: kh,
                createInputFiles: Dh,
                createSyntheticExpression: Ph,
                createSyntaxList: cf,
                createNotEmittedStatement: lf,
                createPartiallyEmittedExpression: $c,
                updatePartiallyEmittedExpression: uf,
                createCommaListExpression: zs,
                updateCommaListExpression: pf,
                createSyntheticReferenceExpression: ff,
                updateSyntheticReferenceExpression: Nh,
                cloneNode: Yc,
                get createComma () {
                    return p(28);
                },
                get createAssignment () {
                    return p(64);
                },
                get createLogicalOr () {
                    return p(57);
                },
                get createLogicalAnd () {
                    return p(56);
                },
                get createBitwiseOr () {
                    return p(52);
                },
                get createBitwiseXor () {
                    return p(53);
                },
                get createBitwiseAnd () {
                    return p(51);
                },
                get createStrictEquality () {
                    return p(37);
                },
                get createStrictInequality () {
                    return p(38);
                },
                get createEquality () {
                    return p(35);
                },
                get createInequality () {
                    return p(36);
                },
                get createLessThan () {
                    return p(30);
                },
                get createLessThanEquals () {
                    return p(33);
                },
                get createGreaterThan () {
                    return p(32);
                },
                get createGreaterThanEquals () {
                    return p(34);
                },
                get createLeftShift () {
                    return p(48);
                },
                get createRightShift () {
                    return p(49);
                },
                get createUnsignedRightShift () {
                    return p(50);
                },
                get createAdd () {
                    return p(40);
                },
                get createSubtract () {
                    return p(41);
                },
                get createMultiply () {
                    return p(42);
                },
                get createDivide () {
                    return p(44);
                },
                get createModulo () {
                    return p(45);
                },
                get createExponent () {
                    return p(43);
                },
                get createPrefixPlus () {
                    return m(40);
                },
                get createPrefixMinus () {
                    return m(41);
                },
                get createPrefixIncrement () {
                    return m(46);
                },
                get createPrefixDecrement () {
                    return m(47);
                },
                get createBitwiseNot () {
                    return m(55);
                },
                get createLogicalNot () {
                    return m(54);
                },
                get createPostfixIncrement () {
                    return y(46);
                },
                get createPostfixDecrement () {
                    return y(47);
                },
                createImmediatelyInvokedFunctionExpression: Jh,
                createImmediatelyInvokedArrowFunction: Rh,
                createVoidZero: So,
                createExportDefault: jh,
                createExternalModuleExport: Ws,
                createTypeCheck: Fh,
                createIsNotTypeCheck: df,
                createMethodCall: da,
                createGlobalMethodCall: xo,
                createFunctionBindCall: Bh,
                createFunctionCallCall: mf,
                createFunctionApplyCall: Uh,
                createArraySliceCall: qh,
                createArrayConcatCall: hf,
                createObjectDefinePropertyCall: yf,
                createObjectGetOwnPropertyDescriptorCall: gf,
                createReflectGetCall: c,
                createReflectSetCall: h,
                createPropertyDescriptor: E,
                createCallBinding: ne,
                createAssignmentTargetWrapper: pe,
                inlineExpressions: Ue,
                getInternalName: Oe,
                getLocalName: xn,
                getExportName: qn,
                getDeclarationName: vi,
                getNamespaceMemberName: Zr,
                getExternalModuleOrNamespaceExportName: Jr,
                restoreOuterExpressions: Y,
                restoreEnclosingLabel: _e,
                createUseStrictPrologue: Kc,
                copyPrologue: ma,
                copyStandardPrologue: bf,
                copyCustomPrologue: Zc,
                ensureUseStrict: Wh,
                liftToBlock: vf,
                mergeLexicalEnvironment: zi,
                replaceModifiers: Tf,
                replaceDecoratorsAndModifiers: fn,
                replacePropertyName: Vs
            };
            return wn(fb, (r)=>r(se)), se;
            function fe(r, o) {
                if (r === void 0 || r === Je) r = [];
                else if (ha(r)) {
                    if (o === void 0 || r.hasTrailingComma === o) return r.transformFlags === void 0 && j6(r), I.attachNodeArrayDebugInfo(r), r;
                    let g = r.slice();
                    return g.pos = r.pos, g.end = r.end, g.hasTrailingComma = o, g.transformFlags = r.transformFlags, I.attachNodeArrayDebugInfo(g), g;
                }
                let s = r.length, l = s >= 1 && s <= 4 ? r.slice() : r;
                return l.pos = -1, l.end = -1, l.hasTrailingComma = !!o, l.transformFlags = 0, j6(l), I.attachNodeArrayDebugInfo(l), l;
            }
            function F(r) {
                return t.createBaseNode(r);
            }
            function W(r) {
                let o = F(r);
                return o.symbol = void 0, o.localSymbol = void 0, o;
            }
            function Se(r, o) {
                return r !== o && (r.typeArguments = o.typeArguments), n(r, o);
            }
            function Qe(r, o = 0) {
                let s = W(9);
                return s.text = typeof r == "number" ? r + "" : r, s.numericLiteralFlags = o, o & 384 && (s.transformFlags |= 1024), s;
            }
            function Be(r) {
                let o = an(10);
                return o.text = typeof r == "string" ? r : ib(r) + "n", o.transformFlags |= 32, o;
            }
            function st(r, o) {
                let s = W(11);
                return s.text = r, s.singleQuote = o, s;
            }
            function _t(r, o, s) {
                let l = st(r, o);
                return l.hasExtendedUnicodeEscape = s, s && (l.transformFlags |= 1024), l;
            }
            function hn(r) {
                let o = st(Sd(r), void 0);
                return o.textSourceNode = r, o;
            }
            function yn(r) {
                let o = an(14);
                return o.text = r, o;
            }
            function fi(r, o) {
                switch(r){
                    case 9:
                        return Qe(o, 0);
                    case 10:
                        return Be(o);
                    case 11:
                        return _t(o, void 0);
                    case 12:
                        return vo(o, !1);
                    case 13:
                        return vo(o, !0);
                    case 14:
                        return yn(o);
                    case 15:
                        return Ua(r, o, void 0, 0);
                }
            }
            function gn(r) {
                let o = t.createBaseIdentifierNode(80);
                return o.escapedText = r, o.jsDoc = void 0, o.flowNode = void 0, o.symbol = void 0, o;
            }
            function cr(r, o, s, l) {
                let g = gn(qr(r));
                return setIdentifierAutoGenerate(g, {
                    flags: o,
                    id: sl,
                    prefix: s,
                    suffix: l
                }), sl++, g;
            }
            function He(r, o, s) {
                o === void 0 && r && (o = Fl(r)), o === 80 && (o = void 0);
                let l = gn(qr(r));
                return s && (l.flags |= 256), l.escapedText === "await" && (l.transformFlags |= 67108864), l.flags & 256 && (l.transformFlags |= 1024), l;
            }
            function Qn(r, o, s, l) {
                let g = 1;
                o && (g |= 8);
                let D = cr("", g, s, l);
                return r && r(D), D;
            }
            function Gr(r) {
                let o = 2;
                return r && (o |= 8), cr("", o, void 0, void 0);
            }
            function vt(r, o = 0, s, l) {
                return I.assert(!(o & 7), "Argument out of range: flags"), I.assert((o & 48) !== 32, "GeneratedIdentifierFlags.FileLevel cannot be set without also setting GeneratedIdentifierFlags.Optimistic"), cr(r, 3 | o, s, l);
            }
            function Jn(r, o = 0, s, l) {
                I.assert(!(o & 7), "Argument out of range: flags");
                let g = r ? ro(r) ? Od(!1, s, r, l, Lt) : `generated@${getNodeId(r)}` : "";
                (s || l) && (o |= 16);
                let D = cr(g, 4 | o, s, l);
                return D.original = r, D;
            }
            function Ar(r) {
                let o = t.createBasePrivateIdentifierNode(81);
                return o.escapedText = r, o.transformFlags |= 16777216, o;
            }
            function Ht(r) {
                return Hn(r, "#") || I.fail("First character of private identifier must be #: " + r), Ar(qr(r));
            }
            function rn(r, o, s, l) {
                let g = Ar(qr(r));
                return setIdentifierAutoGenerate(g, {
                    flags: o,
                    id: sl,
                    prefix: s,
                    suffix: l
                }), sl++, g;
            }
            function at(r, o, s) {
                r && !Hn(r, "#") && I.fail("First character of private identifier must be #: " + r);
                let l = 8 | (r ? 3 : 1);
                return rn(r ?? "", l, o, s);
            }
            function kr(r, o, s) {
                let l = ro(r) ? Od(!0, o, r, s, Lt) : `#generated@${getNodeId(r)}`, D = rn(l, 4 | (o || s ? 16 : 0), o, s);
                return D.original = r, D;
            }
            function an(r) {
                return t.createBaseTokenNode(r);
            }
            function xt(r) {
                I.assert(r >= 0 && r <= 165, "Invalid token"), I.assert(r <= 15 || r >= 18, "Invalid token. Use 'createTemplateLiteralLikeNode' to create template literals."), I.assert(r <= 9 || r >= 15, "Invalid token. Use 'createLiteralLikeNode' to create literals."), I.assert(r !== 80, "Invalid token. Use 'createIdentifier' to create identifiers");
                let o = an(r), s = 0;
                switch(r){
                    case 134:
                        s = 384;
                        break;
                    case 160:
                        s = 4;
                        break;
                    case 125:
                    case 123:
                    case 124:
                    case 148:
                    case 128:
                    case 138:
                    case 87:
                    case 133:
                    case 150:
                    case 163:
                    case 146:
                    case 151:
                    case 103:
                    case 147:
                    case 164:
                    case 154:
                    case 136:
                    case 155:
                    case 116:
                    case 159:
                    case 157:
                        s = 1;
                        break;
                    case 108:
                        s = 134218752, o.flowNode = void 0;
                        break;
                    case 126:
                        s = 1024;
                        break;
                    case 129:
                        s = 16777216;
                        break;
                    case 110:
                        s = 16384, o.flowNode = void 0;
                        break;
                }
                return s && (o.transformFlags |= s), o;
            }
            function ut() {
                return xt(108);
            }
            function Gt() {
                return xt(110);
            }
            function cn() {
                return xt(106);
            }
            function ht() {
                return xt(112);
            }
            function Dr() {
                return xt(97);
            }
            function Tt(r) {
                return xt(r);
            }
            function Rn(r) {
                let o = [];
                return r & 32 && o.push(Tt(95)), r & 128 && o.push(Tt(138)), r & 2048 && o.push(Tt(90)), r & 4096 && o.push(Tt(87)), r & 1 && o.push(Tt(125)), r & 2 && o.push(Tt(123)), r & 4 && o.push(Tt(124)), r & 64 && o.push(Tt(128)), r & 256 && o.push(Tt(126)), r & 16 && o.push(Tt(164)), r & 8 && o.push(Tt(148)), r & 512 && o.push(Tt(129)), r & 1024 && o.push(Tt(134)), r & 8192 && o.push(Tt(103)), r & 16384 && o.push(Tt(147)), o.length ? o : void 0;
            }
            function yt(r, o) {
                let s = F(166);
                return s.left = r, s.right = Ke(o), s.transformFlags |= V(s.left) | t_(s.right), s.flowNode = void 0, s;
            }
            function jn(r, o, s) {
                return r.left !== o || r.right !== s ? n(yt(o, s), r) : r;
            }
            function ct(r) {
                let o = F(167);
                return o.expression = a().parenthesizeExpressionOfComputedPropertyName(r), o.transformFlags |= V(o.expression) | 132096, o;
            }
            function Kt(r, o) {
                return r.expression !== o ? n(ct(o), r) : r;
            }
            function Zt(r, o, s, l) {
                let g = W(168);
                return g.modifiers = Ie(r), g.name = Ke(o), g.constraint = s, g.default = l, g.transformFlags = 1, g.expression = void 0, g.jsDoc = void 0, g;
            }
            function lr(r, o, s, l, g) {
                return r.modifiers !== o || r.name !== s || r.constraint !== l || r.default !== g ? n(Zt(o, s, l, g), r) : r;
            }
            function di(r, o, s, l, g, D) {
                let H = W(169);
                return H.modifiers = Ie(r), H.dotDotDotToken = o, H.name = Ke(s), H.questionToken = l, H.type = g, H.initializer = Hs(D), Sm(H.name) ? H.transformFlags = 1 : H.transformFlags = ke(H.modifiers) | V(H.dotDotDotToken) | jr(H.name) | V(H.questionToken) | V(H.initializer) | (H.questionToken ?? H.type ? 1 : 0) | (H.dotDotDotToken ?? H.initializer ? 1024 : 0) | (hr(H.modifiers) & 31 ? 8192 : 0), H.jsDoc = void 0, H;
            }
            function Xr(r, o, s, l, g, D, H) {
                return r.modifiers !== o || r.dotDotDotToken !== s || r.name !== l || r.questionToken !== g || r.type !== D || r.initializer !== H ? n(di(o, s, l, g, D, H), r) : r;
            }
            function Yn(r) {
                let o = F(170);
                return o.expression = a().parenthesizeLeftSideOfAccess(r, !1), o.transformFlags |= V(o.expression) | 33562625, o;
            }
            function Kn(r, o) {
                return r.expression !== o ? n(Yn(o), r) : r;
            }
            function Ji(r, o, s, l) {
                let g = W(171);
                return g.modifiers = Ie(r), g.name = Ke(o), g.type = l, g.questionToken = s, g.transformFlags = 1, g.initializer = void 0, g.jsDoc = void 0, g;
            }
            function Pr(r, o, s, l, g) {
                return r.modifiers !== o || r.name !== s || r.questionToken !== l || r.type !== g ? De(Ji(o, s, l, g), r) : r;
            }
            function De(r, o) {
                return r !== o && (r.initializer = o.initializer), n(r, o);
            }
            function U(r, o, s, l, g) {
                let D = W(172);
                D.modifiers = Ie(r), D.name = Ke(o), D.questionToken = s && Nl(s) ? s : void 0, D.exclamationToken = s && Nd(s) ? s : void 0, D.type = l, D.initializer = Hs(g);
                let H = D.flags & 33554432 || hr(D.modifiers) & 128;
                return D.transformFlags = ke(D.modifiers) | jr(D.name) | V(D.initializer) | (H || D.questionToken || D.exclamationToken || D.type ? 1 : 0) | (oo(D.name) || hr(D.modifiers) & 256 && D.initializer ? 8192 : 0) | 16777216, D.jsDoc = void 0, D;
            }
            function ie(r, o, s, l, g, D) {
                return r.modifiers !== o || r.name !== s || r.questionToken !== (l !== void 0 && Nl(l) ? l : void 0) || r.exclamationToken !== (l !== void 0 && Nd(l) ? l : void 0) || r.type !== g || r.initializer !== D ? n(U(o, s, l, g, D), r) : r;
            }
            function ye(r, o, s, l, g, D) {
                let H = W(173);
                return H.modifiers = Ie(r), H.name = Ke(o), H.questionToken = s, H.typeParameters = Ie(l), H.parameters = Ie(g), H.type = D, H.transformFlags = 1, H.jsDoc = void 0, H.locals = void 0, H.nextContainer = void 0, H.typeArguments = void 0, H;
            }
            function Te(r, o, s, l, g, D, H) {
                return r.modifiers !== o || r.name !== s || r.questionToken !== l || r.typeParameters !== g || r.parameters !== D || r.type !== H ? Se(ye(o, s, l, g, D, H), r) : r;
            }
            function tt(r, o, s, l, g, D, H, me) {
                let ze = W(174);
                if (ze.modifiers = Ie(r), ze.asteriskToken = o, ze.name = Ke(s), ze.questionToken = l, ze.exclamationToken = void 0, ze.typeParameters = Ie(g), ze.parameters = fe(D), ze.type = H, ze.body = me, !ze.body) ze.transformFlags = 1;
                else {
                    let In = hr(ze.modifiers) & 1024, Si = !!ze.asteriskToken, xi = In && Si;
                    ze.transformFlags = ke(ze.modifiers) | V(ze.asteriskToken) | jr(ze.name) | V(ze.questionToken) | ke(ze.typeParameters) | ke(ze.parameters) | V(ze.type) | V(ze.body) & -67108865 | (xi ? 128 : In ? 256 : Si ? 2048 : 0) | (ze.questionToken || ze.typeParameters || ze.type ? 1 : 0) | 1024;
                }
                return ze.typeArguments = void 0, ze.jsDoc = void 0, ze.locals = void 0, ze.nextContainer = void 0, ze.flowNode = void 0, ze.endFlowNode = void 0, ze.returnFlowNode = void 0, ze;
            }
            function $e(r, o, s, l, g, D, H, me, ze) {
                return r.modifiers !== o || r.asteriskToken !== s || r.name !== l || r.questionToken !== g || r.typeParameters !== D || r.parameters !== H || r.type !== me || r.body !== ze ? Ut(tt(o, s, l, g, D, H, me, ze), r) : r;
            }
            function Ut(r, o) {
                return r !== o && (r.exclamationToken = o.exclamationToken), n(r, o);
            }
            function St(r) {
                let o = W(175);
                return o.body = r, o.transformFlags = V(r) | 16777216, o.modifiers = void 0, o.jsDoc = void 0, o.locals = void 0, o.nextContainer = void 0, o.endFlowNode = void 0, o.returnFlowNode = void 0, o;
            }
            function Jt(r, o) {
                return r.body !== o ? Rt(St(o), r) : r;
            }
            function Rt(r, o) {
                return r !== o && (r.modifiers = o.modifiers), n(r, o);
            }
            function z(r, o, s) {
                let l = W(176);
                return l.modifiers = Ie(r), l.parameters = fe(o), l.body = s, l.transformFlags = ke(l.modifiers) | ke(l.parameters) | V(l.body) & -67108865 | 1024, l.typeParameters = void 0, l.type = void 0, l.typeArguments = void 0, l.jsDoc = void 0, l.locals = void 0, l.nextContainer = void 0, l.endFlowNode = void 0, l.returnFlowNode = void 0, l;
            }
            function K(r, o, s, l) {
                return r.modifiers !== o || r.parameters !== s || r.body !== l ? te(z(o, s, l), r) : r;
            }
            function te(r, o) {
                return r !== o && (r.typeParameters = o.typeParameters, r.type = o.type), Se(r, o);
            }
            function Ee(r, o, s, l, g) {
                let D = W(177);
                return D.modifiers = Ie(r), D.name = Ke(o), D.parameters = fe(s), D.type = l, D.body = g, D.body ? D.transformFlags = ke(D.modifiers) | jr(D.name) | ke(D.parameters) | V(D.type) | V(D.body) & -67108865 | (D.type ? 1 : 0) : D.transformFlags = 1, D.typeArguments = void 0, D.typeParameters = void 0, D.jsDoc = void 0, D.locals = void 0, D.nextContainer = void 0, D.flowNode = void 0, D.endFlowNode = void 0, D.returnFlowNode = void 0, D;
            }
            function je(r, o, s, l, g, D) {
                return r.modifiers !== o || r.name !== s || r.parameters !== l || r.type !== g || r.body !== D ? pt(Ee(o, s, l, g, D), r) : r;
            }
            function pt(r, o) {
                return r !== o && (r.typeParameters = o.typeParameters), Se(r, o);
            }
            function nt(r, o, s, l) {
                let g = W(178);
                return g.modifiers = Ie(r), g.name = Ke(o), g.parameters = fe(s), g.body = l, g.body ? g.transformFlags = ke(g.modifiers) | jr(g.name) | ke(g.parameters) | V(g.body) & -67108865 | (g.type ? 1 : 0) : g.transformFlags = 1, g.typeArguments = void 0, g.typeParameters = void 0, g.type = void 0, g.jsDoc = void 0, g.locals = void 0, g.nextContainer = void 0, g.flowNode = void 0, g.endFlowNode = void 0, g.returnFlowNode = void 0, g;
            }
            function kt(r, o, s, l, g) {
                return r.modifiers !== o || r.name !== s || r.parameters !== l || r.body !== g ? qt(nt(o, s, l, g), r) : r;
            }
            function qt(r, o) {
                return r !== o && (r.typeParameters = o.typeParameters, r.type = o.type), Se(r, o);
            }
            function Zn(r, o, s) {
                let l = W(179);
                return l.typeParameters = Ie(r), l.parameters = Ie(o), l.type = s, l.transformFlags = 1, l.jsDoc = void 0, l.locals = void 0, l.nextContainer = void 0, l.typeArguments = void 0, l;
            }
            function kn(r, o, s, l) {
                return r.typeParameters !== o || r.parameters !== s || r.type !== l ? Se(Zn(o, s, l), r) : r;
            }
            function er(r, o, s) {
                let l = W(180);
                return l.typeParameters = Ie(r), l.parameters = Ie(o), l.type = s, l.transformFlags = 1, l.jsDoc = void 0, l.locals = void 0, l.nextContainer = void 0, l.typeArguments = void 0, l;
            }
            function Ri(r, o, s, l) {
                return r.typeParameters !== o || r.parameters !== s || r.type !== l ? Se(er(o, s, l), r) : r;
            }
            function aa(r, o, s) {
                let l = W(181);
                return l.modifiers = Ie(r), l.parameters = Ie(o), l.type = s, l.transformFlags = 1, l.jsDoc = void 0, l.locals = void 0, l.nextContainer = void 0, l.typeArguments = void 0, l;
            }
            function $r(r, o, s, l) {
                return r.parameters !== s || r.type !== l || r.modifiers !== o ? Se(aa(o, s, l), r) : r;
            }
            function Dn(r, o) {
                let s = F(204);
                return s.type = r, s.literal = o, s.transformFlags = 1, s;
            }
            function Ne(r, o, s) {
                return r.type !== o || r.literal !== s ? n(Dn(o, s), r) : r;
            }
            function oa(r) {
                return xt(r);
            }
            function jt(r, o, s) {
                let l = F(182);
                return l.assertsModifier = r, l.parameterName = Ke(o), l.type = s, l.transformFlags = 1, l;
            }
            function Fn(r, o, s, l) {
                return r.assertsModifier !== o || r.parameterName !== s || r.type !== l ? n(jt(o, s, l), r) : r;
            }
            function R(r, o) {
                let s = F(183);
                return s.typeName = Ke(r), s.typeArguments = o && a().parenthesizeTypeArguments(fe(o)), s.transformFlags = 1, s;
            }
            function v(r, o, s) {
                return r.typeName !== o || r.typeArguments !== s ? n(R(o, s), r) : r;
            }
            function w(r, o, s) {
                let l = W(184);
                return l.typeParameters = Ie(r), l.parameters = Ie(o), l.type = s, l.transformFlags = 1, l.modifiers = void 0, l.jsDoc = void 0, l.locals = void 0, l.nextContainer = void 0, l.typeArguments = void 0, l;
            }
            function f(r, o, s, l) {
                return r.typeParameters !== o || r.parameters !== s || r.type !== l ? X(w(o, s, l), r) : r;
            }
            function X(r, o) {
                return r !== o && (r.modifiers = o.modifiers), Se(r, o);
            }
            function $(...r) {
                return r.length === 4 ? O(...r) : r.length === 3 ? ue(...r) : I.fail("Incorrect number of arguments specified.");
            }
            function O(r, o, s, l) {
                let g = W(185);
                return g.modifiers = Ie(r), g.typeParameters = Ie(o), g.parameters = Ie(s), g.type = l, g.transformFlags = 1, g.jsDoc = void 0, g.locals = void 0, g.nextContainer = void 0, g.typeArguments = void 0, g;
            }
            function ue(r, o, s) {
                return O(void 0, r, o, s);
            }
            function be(...r) {
                return r.length === 5 ? ge(...r) : r.length === 4 ? Le(...r) : I.fail("Incorrect number of arguments specified.");
            }
            function ge(r, o, s, l, g) {
                return r.modifiers !== o || r.typeParameters !== s || r.parameters !== l || r.type !== g ? Se($(o, s, l, g), r) : r;
            }
            function Le(r, o, s, l) {
                return ge(r, r.modifiers, o, s, l);
            }
            function xe(r, o) {
                let s = F(186);
                return s.exprName = r, s.typeArguments = o && a().parenthesizeTypeArguments(o), s.transformFlags = 1, s;
            }
            function Ye(r, o, s) {
                return r.exprName !== o || r.typeArguments !== s ? n(xe(o, s), r) : r;
            }
            function Ge(r) {
                let o = W(187);
                return o.members = fe(r), o.transformFlags = 1, o;
            }
            function Xe(r, o) {
                return r.members !== o ? n(Ge(o), r) : r;
            }
            function Nt(r) {
                let o = F(188);
                return o.elementType = a().parenthesizeNonArrayTypeOfPostfixType(r), o.transformFlags = 1, o;
            }
            function Xt(r, o) {
                return r.elementType !== o ? n(Nt(o), r) : r;
            }
            function ln(r) {
                let o = F(189);
                return o.elements = fe(a().parenthesizeElementTypesOfTupleType(r)), o.transformFlags = 1, o;
            }
            function ve(r, o) {
                return r.elements !== o ? n(ln(o), r) : r;
            }
            function ft(r, o, s, l) {
                let g = W(202);
                return g.dotDotDotToken = r, g.name = o, g.questionToken = s, g.type = l, g.transformFlags = 1, g.jsDoc = void 0, g;
            }
            function Ir(r, o, s, l, g) {
                return r.dotDotDotToken !== o || r.name !== s || r.questionToken !== l || r.type !== g ? n(ft(o, s, l, g), r) : r;
            }
            function Dt(r) {
                let o = F(190);
                return o.type = a().parenthesizeTypeOfOptionalType(r), o.transformFlags = 1, o;
            }
            function G(r, o) {
                return r.type !== o ? n(Dt(o), r) : r;
            }
            function La(r) {
                let o = F(191);
                return o.type = r, o.transformFlags = 1, o;
            }
            function Pe(r, o) {
                return r.type !== o ? n(La(o), r) : r;
            }
            function ot(r, o, s) {
                let l = F(r);
                return l.types = se.createNodeArray(s(o)), l.transformFlags = 1, l;
            }
            function un(r, o, s) {
                return r.types !== o ? n(ot(r.kind, o, s), r) : r;
            }
            function ur(r) {
                return ot(192, r, a().parenthesizeConstituentTypesOfUnionType);
            }
            function Ja(r, o) {
                return un(r, o, a().parenthesizeConstituentTypesOfUnionType);
            }
            function Nr(r) {
                return ot(193, r, a().parenthesizeConstituentTypesOfIntersectionType);
            }
            function Re(r, o) {
                return un(r, o, a().parenthesizeConstituentTypesOfIntersectionType);
            }
            function dt(r, o, s, l) {
                let g = F(194);
                return g.checkType = a().parenthesizeCheckTypeOfConditionalType(r), g.extendsType = a().parenthesizeExtendsTypeOfConditionalType(o), g.trueType = s, g.falseType = l, g.transformFlags = 1, g.locals = void 0, g.nextContainer = void 0, g;
            }
            function mi(r, o, s, l, g) {
                return r.checkType !== o || r.extendsType !== s || r.trueType !== l || r.falseType !== g ? n(dt(o, s, l, g), r) : r;
            }
            function Qr(r) {
                let o = F(195);
                return o.typeParameter = r, o.transformFlags = 1, o;
            }
            function r1(r, o) {
                return r.typeParameter !== o ? n(Qr(o), r) : r;
            }
            function bn(r, o) {
                let s = F(203);
                return s.head = r, s.templateSpans = fe(o), s.transformFlags = 1, s;
            }
            function i1(r, o, s) {
                return r.head !== o || r.templateSpans !== s ? n(bn(o, s), r) : r;
            }
            function hi(r, o, s, l, g = !1) {
                let D = F(205);
                return D.argument = r, D.attributes = o, D.assertions && D.assertions.assertClause && D.attributes && (D.assertions.assertClause = D.attributes), D.qualifier = s, D.typeArguments = l && a().parenthesizeTypeArguments(l), D.isTypeOf = g, D.transformFlags = 1, D;
            }
            function Ts(r, o, s, l, g, D = r.isTypeOf) {
                return r.argument !== o || r.attributes !== s || r.qualifier !== l || r.typeArguments !== g || r.isTypeOf !== D ? n(hi(o, s, l, g, D), r) : r;
            }
            function Pn(r) {
                let o = F(196);
                return o.type = r, o.transformFlags = 1, o;
            }
            function zt(r, o) {
                return r.type !== o ? n(Pn(o), r) : r;
            }
            function M() {
                let r = F(197);
                return r.transformFlags = 1, r;
            }
            function Bn(r, o) {
                let s = F(198);
                return s.operator = r, s.type = r === 148 ? a().parenthesizeOperandOfReadonlyTypeOperator(o) : a().parenthesizeOperandOfTypeOperator(o), s.transformFlags = 1, s;
            }
            function sa(r, o) {
                return r.type !== o ? n(Bn(r.operator, o), r) : r;
            }
            function yi(r, o) {
                let s = F(199);
                return s.objectType = a().parenthesizeNonArrayTypeOfPostfixType(r), s.indexType = o, s.transformFlags = 1, s;
            }
            function X_(r, o, s) {
                return r.objectType !== o || r.indexType !== s ? n(yi(o, s), r) : r;
            }
            function Ft(r, o, s, l, g, D) {
                let H = W(200);
                return H.readonlyToken = r, H.typeParameter = o, H.nameType = s, H.questionToken = l, H.type = g, H.members = D && fe(D), H.transformFlags = 1, H.locals = void 0, H.nextContainer = void 0, H;
            }
            function vn(r, o, s, l, g, D, H) {
                return r.readonlyToken !== o || r.typeParameter !== s || r.nameType !== l || r.questionToken !== g || r.type !== D || r.members !== H ? n(Ft(o, s, l, g, D, H), r) : r;
            }
            function Ra(r) {
                let o = F(201);
                return o.literal = r, o.transformFlags = 1, o;
            }
            function _a(r, o) {
                return r.literal !== o ? n(Ra(o), r) : r;
            }
            function yu(r) {
                let o = F(206);
                return o.elements = fe(r), o.transformFlags |= ke(o.elements) | 525312, o.transformFlags & 32768 && (o.transformFlags |= 65664), o;
            }
            function a1(r, o) {
                return r.elements !== o ? n(yu(o), r) : r;
            }
            function ca(r) {
                let o = F(207);
                return o.elements = fe(r), o.transformFlags |= ke(o.elements) | 525312, o;
            }
            function o1(r, o) {
                return r.elements !== o ? n(ca(o), r) : r;
            }
            function Ss(r, o, s, l) {
                let g = W(208);
                return g.dotDotDotToken = r, g.propertyName = Ke(o), g.name = Ke(s), g.initializer = Hs(l), g.transformFlags |= V(g.dotDotDotToken) | jr(g.propertyName) | jr(g.name) | V(g.initializer) | (g.dotDotDotToken ? 32768 : 0) | 1024, g.flowNode = void 0, g;
            }
            function ja(r, o, s, l, g) {
                return r.propertyName !== s || r.dotDotDotToken !== o || r.name !== l || r.initializer !== g ? n(Ss(o, s, l, g), r) : r;
            }
            function $_(r, o) {
                let s = F(209), l = r && Pi(r), g = fe(r, l && Lm(l) ? !0 : void 0);
                return s.elements = a().parenthesizeExpressionsOfCommaDelimitedList(g), s.multiLine = o, s.transformFlags |= ke(s.elements), s;
            }
            function gu(r, o) {
                return r.elements !== o ? n($_(o, r.multiLine), r) : r;
            }
            function fo(r, o) {
                let s = W(210);
                return s.properties = fe(r), s.multiLine = o, s.transformFlags |= ke(s.properties), s.jsDoc = void 0, s;
            }
            function s1(r, o) {
                return r.properties !== o ? n(fo(o, r.multiLine), r) : r;
            }
            function bu(r, o, s) {
                let l = W(211);
                return l.expression = r, l.questionDotToken = o, l.name = s, l.transformFlags = V(l.expression) | V(l.questionDotToken) | (Ae(l.name) ? t_(l.name) : V(l.name) | 536870912), l.jsDoc = void 0, l.flowNode = void 0, l;
            }
            function gi(r, o) {
                let s = bu(a().parenthesizeLeftSideOfAccess(r, !1), void 0, Ke(o));
                return zf(r) && (s.transformFlags |= 384), s;
            }
            function vu(r, o, s) {
                return V4(r) ? Tu(r, o, r.questionDotToken, wi(s, Ae)) : r.expression !== o || r.name !== s ? n(gi(o, s), r) : r;
            }
            function Fa(r, o, s) {
                let l = bu(a().parenthesizeLeftSideOfAccess(r, !0), o, Ke(s));
                return l.flags |= 64, l.transformFlags |= 32, l;
            }
            function Tu(r, o, s, l) {
                return I.assert(!!(r.flags & 64), "Cannot update a PropertyAccessExpression using updatePropertyAccessChain. Use updatePropertyAccess instead."), r.expression !== o || r.questionDotToken !== s || r.name !== l ? n(Fa(o, s, l), r) : r;
            }
            function xs(r, o, s) {
                let l = W(212);
                return l.expression = r, l.questionDotToken = o, l.argumentExpression = s, l.transformFlags |= V(l.expression) | V(l.questionDotToken) | V(l.argumentExpression), l.jsDoc = void 0, l.flowNode = void 0, l;
            }
            function Q_(r, o) {
                let s = xs(a().parenthesizeLeftSideOfAccess(r, !1), void 0, Ti(o));
                return zf(r) && (s.transformFlags |= 384), s;
            }
            function _1(r, o, s) {
                return H4(r) ? Su(r, o, r.questionDotToken, s) : r.expression !== o || r.argumentExpression !== s ? n(Q_(o, s), r) : r;
            }
            function Y_(r, o, s) {
                let l = xs(a().parenthesizeLeftSideOfAccess(r, !0), o, Ti(s));
                return l.flags |= 64, l.transformFlags |= 32, l;
            }
            function Su(r, o, s, l) {
                return I.assert(!!(r.flags & 64), "Cannot update a ElementAccessExpression using updateElementAccessChain. Use updateElementAccess instead."), r.expression !== o || r.questionDotToken !== s || r.argumentExpression !== l ? n(Y_(o, s, l), r) : r;
            }
            function xu(r, o, s, l) {
                let g = W(213);
                return g.expression = r, g.questionDotToken = o, g.typeArguments = s, g.arguments = l, g.transformFlags |= V(g.expression) | V(g.questionDotToken) | ke(g.typeArguments) | ke(g.arguments), g.typeArguments && (g.transformFlags |= 1), vd(g.expression) && (g.transformFlags |= 16384), g;
            }
            function ji(r, o, s) {
                let l = xu(a().parenthesizeLeftSideOfAccess(r, !1), void 0, Ie(o), a().parenthesizeExpressionsOfCommaDelimitedList(fe(s)));
                return Bx(l.expression) && (l.transformFlags |= 8388608), l;
            }
            function c1(r, o, s, l) {
                return T0(r) ? pr(r, o, r.questionDotToken, s, l) : r.expression !== o || r.typeArguments !== s || r.arguments !== l ? n(ji(o, s, l), r) : r;
            }
            function K_(r, o, s, l) {
                let g = xu(a().parenthesizeLeftSideOfAccess(r, !0), o, Ie(s), a().parenthesizeExpressionsOfCommaDelimitedList(fe(l)));
                return g.flags |= 64, g.transformFlags |= 32, g;
            }
            function pr(r, o, s, l, g) {
                return I.assert(!!(r.flags & 64), "Cannot update a CallExpression using updateCallChain. Use updateCall instead."), r.expression !== o || r.questionDotToken !== s || r.typeArguments !== l || r.arguments !== g ? n(K_(o, s, l, g), r) : r;
            }
            function ws(r, o, s) {
                let l = W(214);
                return l.expression = a().parenthesizeExpressionOfNew(r), l.typeArguments = Ie(o), l.arguments = s ? a().parenthesizeExpressionsOfCommaDelimitedList(s) : void 0, l.transformFlags |= V(l.expression) | ke(l.typeArguments) | ke(l.arguments) | 32, l.typeArguments && (l.transformFlags |= 1), l;
            }
            function Z_(r, o, s, l) {
                return r.expression !== o || r.typeArguments !== s || r.arguments !== l ? n(ws(o, s, l), r) : r;
            }
            function ec(r, o, s) {
                let l = F(215);
                return l.tag = a().parenthesizeLeftSideOfAccess(r, !1), l.typeArguments = Ie(o), l.template = s, l.transformFlags |= V(l.tag) | ke(l.typeArguments) | V(l.template) | 1024, l.typeArguments && (l.transformFlags |= 1), M3(l.template) && (l.transformFlags |= 128), l;
            }
            function l1(r, o, s, l) {
                return r.tag !== o || r.typeArguments !== s || r.template !== l ? n(ec(o, s, l), r) : r;
            }
            function wu(r, o) {
                let s = F(216);
                return s.expression = a().parenthesizeOperandOfPrefixUnary(o), s.type = r, s.transformFlags |= V(s.expression) | V(s.type) | 1, s;
            }
            function Eu(r, o, s) {
                return r.type !== o || r.expression !== s ? n(wu(o, s), r) : r;
            }
            function tc(r) {
                let o = F(217);
                return o.expression = r, o.transformFlags = V(o.expression), o.jsDoc = void 0, o;
            }
            function Cu(r, o) {
                return r.expression !== o ? n(tc(o), r) : r;
            }
            function nc(r, o, s, l, g, D, H) {
                let me = W(218);
                me.modifiers = Ie(r), me.asteriskToken = o, me.name = Ke(s), me.typeParameters = Ie(l), me.parameters = fe(g), me.type = D, me.body = H;
                let ze = hr(me.modifiers) & 1024, In = !!me.asteriskToken, Si = ze && In;
                return me.transformFlags = ke(me.modifiers) | V(me.asteriskToken) | jr(me.name) | ke(me.typeParameters) | ke(me.parameters) | V(me.type) | V(me.body) & -67108865 | (Si ? 128 : ze ? 256 : In ? 2048 : 0) | (me.typeParameters || me.type ? 1 : 0) | 4194304, me.typeArguments = void 0, me.jsDoc = void 0, me.locals = void 0, me.nextContainer = void 0, me.flowNode = void 0, me.endFlowNode = void 0, me.returnFlowNode = void 0, me;
            }
            function Au(r, o, s, l, g, D, H, me) {
                return r.name !== l || r.modifiers !== o || r.asteriskToken !== s || r.typeParameters !== g || r.parameters !== D || r.type !== H || r.body !== me ? Se(nc(o, s, l, g, D, H, me), r) : r;
            }
            function rc(r, o, s, l, g, D) {
                let H = W(219);
                H.modifiers = Ie(r), H.typeParameters = Ie(o), H.parameters = fe(s), H.type = l, H.equalsGreaterThanToken = g ?? xt(39), H.body = a().parenthesizeConciseBodyOfArrowFunction(D);
                let me = hr(H.modifiers) & 1024;
                return H.transformFlags = ke(H.modifiers) | ke(H.typeParameters) | ke(H.parameters) | V(H.type) | V(H.equalsGreaterThanToken) | V(H.body) & -67108865 | (H.typeParameters || H.type ? 1 : 0) | (me ? 16640 : 0) | 1024, H.typeArguments = void 0, H.jsDoc = void 0, H.locals = void 0, H.nextContainer = void 0, H.flowNode = void 0, H.endFlowNode = void 0, H.returnFlowNode = void 0, H;
            }
            function ku(r, o, s, l, g, D, H) {
                return r.modifiers !== o || r.typeParameters !== s || r.parameters !== l || r.type !== g || r.equalsGreaterThanToken !== D || r.body !== H ? Se(rc(o, s, l, g, D, H), r) : r;
            }
            function ic(r) {
                let o = F(220);
                return o.expression = a().parenthesizeOperandOfPrefixUnary(r), o.transformFlags |= V(o.expression), o;
            }
            function u1(r, o) {
                return r.expression !== o ? n(ic(o), r) : r;
            }
            function Tn(r) {
                let o = F(221);
                return o.expression = a().parenthesizeOperandOfPrefixUnary(r), o.transformFlags |= V(o.expression), o;
            }
            function p1(r, o) {
                return r.expression !== o ? n(Tn(o), r) : r;
            }
            function Or(r) {
                let o = F(222);
                return o.expression = a().parenthesizeOperandOfPrefixUnary(r), o.transformFlags |= V(o.expression), o;
            }
            function f1(r, o) {
                return r.expression !== o ? n(Or(o), r) : r;
            }
            function Fi(r) {
                let o = F(223);
                return o.expression = a().parenthesizeOperandOfPrefixUnary(r), o.transformFlags |= V(o.expression) | 2097536, o;
            }
            function Ba(r, o) {
                return r.expression !== o ? n(Fi(o), r) : r;
            }
            function ac(r, o) {
                let s = F(224);
                return s.operator = r, s.operand = a().parenthesizeOperandOfPrefixUnary(o), s.transformFlags |= V(s.operand), (r === 46 || r === 47) && Ae(s.operand) && !va(s.operand) && !ng(s.operand) && (s.transformFlags |= 268435456), s;
            }
            function Es(r, o) {
                return r.operand !== o ? n(ac(r.operator, o), r) : r;
            }
            function oc(r, o) {
                let s = F(225);
                return s.operator = o, s.operand = a().parenthesizeOperandOfPostfixUnary(r), s.transformFlags |= V(s.operand), Ae(s.operand) && !va(s.operand) && !ng(s.operand) && (s.transformFlags |= 268435456), s;
            }
            function Du(r, o) {
                return r.operand !== o ? n(oc(o, r.operator), r) : r;
            }
            function sc(r, o, s) {
                let l = W(226), g = Vh(o), D = g.kind;
                return l.left = a().parenthesizeLeftSideOfBinary(D, r), l.operatorToken = g, l.right = a().parenthesizeRightSideOfBinary(D, l.left, s), l.transformFlags |= V(l.left) | V(l.operatorToken) | V(l.right), D === 61 ? l.transformFlags |= 32 : D === 64 ? uo(l.left) ? l.transformFlags |= 5248 | Pu(l.left) : iu(l.left) && (l.transformFlags |= 5120 | Pu(l.left)) : D === 43 || D === 68 ? l.transformFlags |= 512 : Em(D) && (l.transformFlags |= 16), D === 103 && Vn(l.left) && (l.transformFlags |= 536870912), l.jsDoc = void 0, l;
            }
            function Pu(r) {
                return Qb(r) ? 65536 : 0;
            }
            function d1(r, o, s, l) {
                return r.left !== o || r.operatorToken !== s || r.right !== l ? n(sc(o, s, l), r) : r;
            }
            function _c(r, o, s, l, g) {
                let D = F(227);
                return D.condition = a().parenthesizeConditionOfConditionalExpression(r), D.questionToken = o ?? xt(58), D.whenTrue = a().parenthesizeBranchOfConditionalExpression(s), D.colonToken = l ?? xt(59), D.whenFalse = a().parenthesizeBranchOfConditionalExpression(g), D.transformFlags |= V(D.condition) | V(D.questionToken) | V(D.whenTrue) | V(D.colonToken) | V(D.whenFalse), D;
            }
            function m1(r, o, s, l, g, D) {
                return r.condition !== o || r.questionToken !== s || r.whenTrue !== l || r.colonToken !== g || r.whenFalse !== D ? n(_c(o, s, l, g, D), r) : r;
            }
            function Yr(r, o) {
                let s = F(228);
                return s.head = r, s.templateSpans = fe(o), s.transformFlags |= V(s.head) | ke(s.templateSpans) | 1024, s;
            }
            function Iu(r, o, s) {
                return r.head !== o || r.templateSpans !== s ? n(Yr(o, s), r) : r;
            }
            function Cs(r, o, s, l = 0) {
                I.assert(!(l & -7177), "Unsupported template flags.");
                let g;
                if (s !== void 0 && s !== o && (g = XM(r, s), typeof g == "object")) return I.fail("Invalid raw text");
                if (o === void 0) {
                    if (g === void 0) return I.fail("Arguments 'text' and 'rawText' may not both be undefined.");
                    o = g;
                } else g !== void 0 && I.assert(o === g, "Expected argument 'text' to be the normalized (i.e. 'cooked') version of argument 'rawText'.");
                return o;
            }
            function Nu(r) {
                let o = 1024;
                return r && (o |= 128), o;
            }
            function mo(r, o, s, l) {
                let g = an(r);
                return g.text = o, g.rawText = s, g.templateFlags = l & 7176, g.transformFlags = Nu(g.templateFlags), g;
            }
            function cc(r, o, s, l) {
                let g = W(r);
                return g.text = o, g.rawText = s, g.templateFlags = l & 7176, g.transformFlags = Nu(g.templateFlags), g;
            }
            function Ua(r, o, s, l) {
                return r === 15 ? cc(r, o, s, l) : mo(r, o, s, l);
            }
            function As(r, o, s) {
                return r = Cs(16, r, o, s), Ua(16, r, o, s);
            }
            function lc(r, o, s) {
                return r = Cs(16, r, o, s), Ua(17, r, o, s);
            }
            function h1(r, o, s) {
                return r = Cs(16, r, o, s), Ua(18, r, o, s);
            }
            function Ou(r, o, s) {
                return r = Cs(16, r, o, s), cc(15, r, o, s);
            }
            function Mu(r, o) {
                I.assert(!r || !!o, "A `YieldExpression` with an asteriskToken must have an expression.");
                let s = F(229);
                return s.expression = o && a().parenthesizeExpressionForDisallowedComma(o), s.asteriskToken = r, s.transformFlags |= V(s.expression) | V(s.asteriskToken) | 1049728, s;
            }
            function y1(r, o, s) {
                return r.expression !== s || r.asteriskToken !== o ? n(Mu(o, s), r) : r;
            }
            function Lu(r) {
                let o = F(230);
                return o.expression = a().parenthesizeExpressionForDisallowedComma(r), o.transformFlags |= V(o.expression) | 33792, o;
            }
            function g1(r, o) {
                return r.expression !== o ? n(Lu(o), r) : r;
            }
            function Ju(r, o, s, l, g) {
                let D = W(231);
                return D.modifiers = Ie(r), D.name = Ke(o), D.typeParameters = Ie(s), D.heritageClauses = Ie(l), D.members = fe(g), D.transformFlags |= ke(D.modifiers) | jr(D.name) | ke(D.typeParameters) | ke(D.heritageClauses) | ke(D.members) | (D.typeParameters ? 1 : 0) | 1024, D.jsDoc = void 0, D;
            }
            function ho(r, o, s, l, g, D) {
                return r.modifiers !== o || r.name !== s || r.typeParameters !== l || r.heritageClauses !== g || r.members !== D ? n(Ju(o, s, l, g, D), r) : r;
            }
            function b1() {
                return F(232);
            }
            function Ru(r, o) {
                let s = F(233);
                return s.expression = a().parenthesizeLeftSideOfAccess(r, !1), s.typeArguments = o && a().parenthesizeTypeArguments(o), s.transformFlags |= V(s.expression) | ke(s.typeArguments) | 1024, s;
            }
            function fr(r, o, s) {
                return r.expression !== o || r.typeArguments !== s ? n(Ru(o, s), r) : r;
            }
            function ks(r, o) {
                let s = F(234);
                return s.expression = r, s.type = o, s.transformFlags |= V(s.expression) | V(s.type) | 1, s;
            }
            function ju(r, o, s) {
                return r.expression !== o || r.type !== s ? n(ks(o, s), r) : r;
            }
            function Fu(r) {
                let o = F(235);
                return o.expression = a().parenthesizeLeftSideOfAccess(r, !1), o.transformFlags |= V(o.expression) | 1, o;
            }
            function uc(r, o) {
                return X4(r) ? Uu(r, o) : r.expression !== o ? n(Fu(o), r) : r;
            }
            function Bu(r, o) {
                let s = F(238);
                return s.expression = r, s.type = o, s.transformFlags |= V(s.expression) | V(s.type) | 1, s;
            }
            function pc(r, o, s) {
                return r.expression !== o || r.type !== s ? n(Bu(o, s), r) : r;
            }
            function Mr(r) {
                let o = F(235);
                return o.flags |= 64, o.expression = a().parenthesizeLeftSideOfAccess(r, !0), o.transformFlags |= V(o.expression) | 1, o;
            }
            function Uu(r, o) {
                return I.assert(!!(r.flags & 64), "Cannot update a NonNullExpression using updateNonNullChain. Use updateNonNullExpression instead."), r.expression !== o ? n(Mr(o), r) : r;
            }
            function Ds(r, o) {
                let s = F(236);
                switch(s.keywordToken = r, s.name = o, s.transformFlags |= V(s.name), r){
                    case 105:
                        s.transformFlags |= 1024;
                        break;
                    case 102:
                        s.transformFlags |= 32;
                        break;
                    default:
                        return I.assertNever(r);
                }
                return s.flowNode = void 0, s;
            }
            function bi(r, o) {
                return r.name !== o ? n(Ds(r.keywordToken, o), r) : r;
            }
            function yo(r, o) {
                let s = F(239);
                return s.expression = r, s.literal = o, s.transformFlags |= V(s.expression) | V(s.literal) | 1024, s;
            }
            function qu(r, o, s) {
                return r.expression !== o || r.literal !== s ? n(yo(o, s), r) : r;
            }
            function zu() {
                let r = F(240);
                return r.transformFlags |= 1024, r;
            }
            function qa(r, o) {
                let s = F(241);
                return s.statements = fe(r), s.multiLine = o, s.transformFlags |= ke(s.statements), s.jsDoc = void 0, s.locals = void 0, s.nextContainer = void 0, s;
            }
            function Wu(r, o) {
                return r.statements !== o ? n(qa(o, r.multiLine), r) : r;
            }
            function Vu(r, o) {
                let s = F(243);
                return s.modifiers = Ie(r), s.declarationList = $t(o) ? bc(o) : o, s.transformFlags |= ke(s.modifiers) | V(s.declarationList), hr(s.modifiers) & 128 && (s.transformFlags = 1), s.jsDoc = void 0, s.flowNode = void 0, s;
            }
            function Hu(r, o, s) {
                return r.modifiers !== o || r.declarationList !== s ? n(Vu(o, s), r) : r;
            }
            function fc() {
                let r = F(242);
                return r.jsDoc = void 0, r;
            }
            function go(r) {
                let o = F(244);
                return o.expression = a().parenthesizeExpressionOfExpressionStatement(r), o.transformFlags |= V(o.expression), o.jsDoc = void 0, o.flowNode = void 0, o;
            }
            function v1(r, o) {
                return r.expression !== o ? n(go(o), r) : r;
            }
            function dc(r, o, s) {
                let l = F(245);
                return l.expression = r, l.thenStatement = tr(o), l.elseStatement = tr(s), l.transformFlags |= V(l.expression) | V(l.thenStatement) | V(l.elseStatement), l.jsDoc = void 0, l.flowNode = void 0, l;
            }
            function T1(r, o, s, l) {
                return r.expression !== o || r.thenStatement !== s || r.elseStatement !== l ? n(dc(o, s, l), r) : r;
            }
            function mc(r, o) {
                let s = F(246);
                return s.statement = tr(r), s.expression = o, s.transformFlags |= V(s.statement) | V(s.expression), s.jsDoc = void 0, s.flowNode = void 0, s;
            }
            function S1(r, o, s) {
                return r.statement !== o || r.expression !== s ? n(mc(o, s), r) : r;
            }
            function Gu(r, o) {
                let s = F(247);
                return s.expression = r, s.statement = tr(o), s.transformFlags |= V(s.expression) | V(s.statement), s.jsDoc = void 0, s.flowNode = void 0, s;
            }
            function x1(r, o, s) {
                return r.expression !== o || r.statement !== s ? n(Gu(o, s), r) : r;
            }
            function hc(r, o, s, l) {
                let g = F(248);
                return g.initializer = r, g.condition = o, g.incrementor = s, g.statement = tr(l), g.transformFlags |= V(g.initializer) | V(g.condition) | V(g.incrementor) | V(g.statement), g.jsDoc = void 0, g.locals = void 0, g.nextContainer = void 0, g.flowNode = void 0, g;
            }
            function Xu(r, o, s, l, g) {
                return r.initializer !== o || r.condition !== s || r.incrementor !== l || r.statement !== g ? n(hc(o, s, l, g), r) : r;
            }
            function $u(r, o, s) {
                let l = F(249);
                return l.initializer = r, l.expression = o, l.statement = tr(s), l.transformFlags |= V(l.initializer) | V(l.expression) | V(l.statement), l.jsDoc = void 0, l.locals = void 0, l.nextContainer = void 0, l.flowNode = void 0, l;
            }
            function w1(r, o, s, l) {
                return r.initializer !== o || r.expression !== s || r.statement !== l ? n($u(o, s, l), r) : r;
            }
            function Qu(r, o, s, l) {
                let g = F(250);
                return g.awaitModifier = r, g.initializer = o, g.expression = a().parenthesizeExpressionForDisallowedComma(s), g.statement = tr(l), g.transformFlags |= V(g.awaitModifier) | V(g.initializer) | V(g.expression) | V(g.statement) | 1024, r && (g.transformFlags |= 128), g.jsDoc = void 0, g.locals = void 0, g.nextContainer = void 0, g.flowNode = void 0, g;
            }
            function E1(r, o, s, l, g) {
                return r.awaitModifier !== o || r.initializer !== s || r.expression !== l || r.statement !== g ? n(Qu(o, s, l, g), r) : r;
            }
            function Yu(r) {
                let o = F(251);
                return o.label = Ke(r), o.transformFlags |= V(o.label) | 4194304, o.jsDoc = void 0, o.flowNode = void 0, o;
            }
            function Ku(r, o) {
                return r.label !== o ? n(Yu(o), r) : r;
            }
            function yc(r) {
                let o = F(252);
                return o.label = Ke(r), o.transformFlags |= V(o.label) | 4194304, o.jsDoc = void 0, o.flowNode = void 0, o;
            }
            function Zu(r, o) {
                return r.label !== o ? n(yc(o), r) : r;
            }
            function ep(r) {
                let o = F(253);
                return o.expression = r, o.transformFlags |= V(o.expression) | 4194432, o.jsDoc = void 0, o.flowNode = void 0, o;
            }
            function tp(r, o) {
                return r.expression !== o ? n(ep(o), r) : r;
            }
            function gc(r, o) {
                let s = F(254);
                return s.expression = r, s.statement = tr(o), s.transformFlags |= V(s.expression) | V(s.statement), s.jsDoc = void 0, s.flowNode = void 0, s;
            }
            function np(r, o, s) {
                return r.expression !== o || r.statement !== s ? n(gc(o, s), r) : r;
            }
            function la(r, o) {
                let s = F(255);
                return s.expression = a().parenthesizeExpressionForDisallowedComma(r), s.caseBlock = o, s.transformFlags |= V(s.expression) | V(s.caseBlock), s.jsDoc = void 0, s.flowNode = void 0, s.possiblyExhaustive = !1, s;
            }
            function C1(r, o, s) {
                return r.expression !== o || r.caseBlock !== s ? n(la(o, s), r) : r;
            }
            function rp(r, o) {
                let s = F(256);
                return s.label = Ke(r), s.statement = tr(o), s.transformFlags |= V(s.label) | V(s.statement), s.jsDoc = void 0, s.flowNode = void 0, s;
            }
            function ip(r, o, s) {
                return r.label !== o || r.statement !== s ? n(rp(o, s), r) : r;
            }
            function ap(r) {
                let o = F(257);
                return o.expression = r, o.transformFlags |= V(o.expression), o.jsDoc = void 0, o.flowNode = void 0, o;
            }
            function A1(r, o) {
                return r.expression !== o ? n(ap(o), r) : r;
            }
            function op(r, o, s) {
                let l = F(258);
                return l.tryBlock = r, l.catchClause = o, l.finallyBlock = s, l.transformFlags |= V(l.tryBlock) | V(l.catchClause) | V(l.finallyBlock), l.jsDoc = void 0, l.flowNode = void 0, l;
            }
            function sp(r, o, s, l) {
                return r.tryBlock !== o || r.catchClause !== s || r.finallyBlock !== l ? n(op(o, s, l), r) : r;
            }
            function _p() {
                let r = F(259);
                return r.jsDoc = void 0, r.flowNode = void 0, r;
            }
            function Ps(r, o, s, l) {
                let g = W(260);
                return g.name = Ke(r), g.exclamationToken = o, g.type = s, g.initializer = Hs(l), g.transformFlags |= jr(g.name) | V(g.initializer) | (g.exclamationToken ?? g.type ? 1 : 0), g.jsDoc = void 0, g;
            }
            function k1(r, o, s, l, g) {
                return r.name !== o || r.type !== l || r.exclamationToken !== s || r.initializer !== g ? n(Ps(o, s, l, g), r) : r;
            }
            function bc(r, o = 0) {
                let s = F(261);
                return s.flags |= o & 7, s.declarations = fe(r), s.transformFlags |= ke(s.declarations) | 4194304, o & 7 && (s.transformFlags |= 263168), o & 4 && (s.transformFlags |= 4), s;
            }
            function D1(r, o) {
                return r.declarations !== o ? n(bc(o, r.flags), r) : r;
            }
            function vc(r, o, s, l, g, D, H) {
                let me = W(262);
                if (me.modifiers = Ie(r), me.asteriskToken = o, me.name = Ke(s), me.typeParameters = Ie(l), me.parameters = fe(g), me.type = D, me.body = H, !me.body || hr(me.modifiers) & 128) me.transformFlags = 1;
                else {
                    let ze = hr(me.modifiers) & 1024, In = !!me.asteriskToken, Si = ze && In;
                    me.transformFlags = ke(me.modifiers) | V(me.asteriskToken) | jr(me.name) | ke(me.typeParameters) | ke(me.parameters) | V(me.type) | V(me.body) & -67108865 | (Si ? 128 : ze ? 256 : In ? 2048 : 0) | (me.typeParameters || me.type ? 1 : 0) | 4194304;
                }
                return me.typeArguments = void 0, me.jsDoc = void 0, me.locals = void 0, me.nextContainer = void 0, me.endFlowNode = void 0, me.returnFlowNode = void 0, me;
            }
            function cp(r, o, s, l, g, D, H, me) {
                return r.modifiers !== o || r.asteriskToken !== s || r.name !== l || r.typeParameters !== g || r.parameters !== D || r.type !== H || r.body !== me ? P1(vc(o, s, l, g, D, H, me), r) : r;
            }
            function P1(r, o) {
                return r !== o && r.modifiers === o.modifiers && (r.modifiers = o.modifiers), Se(r, o);
            }
            function Tc(r, o, s, l, g) {
                let D = W(263);
                return D.modifiers = Ie(r), D.name = Ke(o), D.typeParameters = Ie(s), D.heritageClauses = Ie(l), D.members = fe(g), hr(D.modifiers) & 128 ? D.transformFlags = 1 : (D.transformFlags |= ke(D.modifiers) | jr(D.name) | ke(D.typeParameters) | ke(D.heritageClauses) | ke(D.members) | (D.typeParameters ? 1 : 0) | 1024, D.transformFlags & 8192 && (D.transformFlags |= 1)), D.jsDoc = void 0, D;
            }
            function Sc(r, o, s, l, g, D) {
                return r.modifiers !== o || r.name !== s || r.typeParameters !== l || r.heritageClauses !== g || r.members !== D ? n(Tc(o, s, l, g, D), r) : r;
            }
            function lp(r, o, s, l, g) {
                let D = W(264);
                return D.modifiers = Ie(r), D.name = Ke(o), D.typeParameters = Ie(s), D.heritageClauses = Ie(l), D.members = fe(g), D.transformFlags = 1, D.jsDoc = void 0, D;
            }
            function gt(r, o, s, l, g, D) {
                return r.modifiers !== o || r.name !== s || r.typeParameters !== l || r.heritageClauses !== g || r.members !== D ? n(lp(o, s, l, g, D), r) : r;
            }
            function Bi(r, o, s, l) {
                let g = W(265);
                return g.modifiers = Ie(r), g.name = Ke(o), g.typeParameters = Ie(s), g.type = l, g.transformFlags = 1, g.jsDoc = void 0, g.locals = void 0, g.nextContainer = void 0, g;
            }
            function xc(r, o, s, l, g) {
                return r.modifiers !== o || r.name !== s || r.typeParameters !== l || r.type !== g ? n(Bi(o, s, l, g), r) : r;
            }
            function Ui(r, o, s) {
                let l = W(266);
                return l.modifiers = Ie(r), l.name = Ke(o), l.members = fe(s), l.transformFlags |= ke(l.modifiers) | V(l.name) | ke(l.members) | 1, l.transformFlags &= -67108865, l.jsDoc = void 0, l;
            }
            function up(r, o, s, l) {
                return r.modifiers !== o || r.name !== s || r.members !== l ? n(Ui(o, s, l), r) : r;
            }
            function Bt(r, o, s, l = 0) {
                let g = W(267);
                return g.modifiers = Ie(r), g.flags |= l & 2088, g.name = o, g.body = s, hr(g.modifiers) & 128 ? g.transformFlags = 1 : g.transformFlags |= ke(g.modifiers) | V(g.name) | V(g.body) | 1, g.transformFlags &= -67108865, g.jsDoc = void 0, g.locals = void 0, g.nextContainer = void 0, g;
            }
            function qi(r, o, s, l) {
                return r.modifiers !== o || r.name !== s || r.body !== l ? n(Bt(o, s, l, r.flags), r) : r;
            }
            function on(r) {
                let o = F(268);
                return o.statements = fe(r), o.transformFlags |= ke(o.statements), o.jsDoc = void 0, o;
            }
            function I1(r, o) {
                return r.statements !== o ? n(on(o), r) : r;
            }
            function pp(r) {
                let o = F(269);
                return o.clauses = fe(r), o.transformFlags |= ke(o.clauses), o.locals = void 0, o.nextContainer = void 0, o;
            }
            function N1(r, o) {
                return r.clauses !== o ? n(pp(o), r) : r;
            }
            function wc(r) {
                let o = W(270);
                return o.name = Ke(r), o.transformFlags |= t_(o.name) | 1, o.modifiers = void 0, o.jsDoc = void 0, o;
            }
            function O1(r, o) {
                return r.name !== o ? M1(wc(o), r) : r;
            }
            function M1(r, o) {
                return r !== o && (r.modifiers = o.modifiers), n(r, o);
            }
            function fp(r, o, s, l) {
                let g = W(271);
                return g.modifiers = Ie(r), g.name = Ke(s), g.isTypeOnly = o, g.moduleReference = l, g.transformFlags |= ke(g.modifiers) | t_(g.name) | V(g.moduleReference), Rm(g.moduleReference) || (g.transformFlags |= 1), g.transformFlags &= -67108865, g.jsDoc = void 0, g;
            }
            function dp(r, o, s, l, g) {
                return r.modifiers !== o || r.isTypeOnly !== s || r.name !== l || r.moduleReference !== g ? n(fp(o, s, l, g), r) : r;
            }
            function mp(r, o, s, l) {
                let g = F(272);
                return g.modifiers = Ie(r), g.importClause = o, g.moduleSpecifier = s, g.attributes = g.assertClause = l, g.transformFlags |= V(g.importClause) | V(g.moduleSpecifier), g.transformFlags &= -67108865, g.jsDoc = void 0, g;
            }
            function hp(r, o, s, l, g) {
                return r.modifiers !== o || r.importClause !== s || r.moduleSpecifier !== l || r.attributes !== g ? n(mp(o, s, l, g), r) : r;
            }
            function Ec(r, o, s) {
                let l = W(273);
                return l.isTypeOnly = r, l.name = o, l.namedBindings = s, l.transformFlags |= V(l.name) | V(l.namedBindings), r && (l.transformFlags |= 1), l.transformFlags &= -67108865, l;
            }
            function yp(r, o, s, l) {
                return r.isTypeOnly !== o || r.name !== s || r.namedBindings !== l ? n(Ec(o, s, l), r) : r;
            }
            function gp(r, o) {
                let s = F(300);
                return s.elements = fe(r), s.multiLine = o, s.token = 132, s.transformFlags |= 4, s;
            }
            function Is(r, o, s) {
                return r.elements !== o || r.multiLine !== s ? n(gp(o, s), r) : r;
            }
            function Cc(r, o) {
                let s = F(301);
                return s.name = r, s.value = o, s.transformFlags |= 4, s;
            }
            function bp(r, o, s) {
                return r.name !== o || r.value !== s ? n(Cc(o, s), r) : r;
            }
            function Ac(r, o) {
                let s = F(302);
                return s.assertClause = r, s.multiLine = o, s;
            }
            function L1(r, o, s) {
                return r.assertClause !== o || r.multiLine !== s ? n(Ac(o, s), r) : r;
            }
            function Ns(r, o, s) {
                let l = F(300);
                return l.token = s ?? 118, l.elements = fe(r), l.multiLine = o, l.transformFlags |= 4, l;
            }
            function J1(r, o, s) {
                return r.elements !== o || r.multiLine !== s ? n(Ns(o, s, r.token), r) : r;
            }
            function kc(r, o) {
                let s = F(301);
                return s.name = r, s.value = o, s.transformFlags |= 4, s;
            }
            function R1(r, o, s) {
                return r.name !== o || r.value !== s ? n(kc(o, s), r) : r;
            }
            function vp(r) {
                let o = W(274);
                return o.name = r, o.transformFlags |= V(o.name), o.transformFlags &= -67108865, o;
            }
            function j1(r, o) {
                return r.name !== o ? n(vp(o), r) : r;
            }
            function Tp(r) {
                let o = W(280);
                return o.name = r, o.transformFlags |= V(o.name) | 32, o.transformFlags &= -67108865, o;
            }
            function F1(r, o) {
                return r.name !== o ? n(Tp(o), r) : r;
            }
            function Dc(r) {
                let o = F(275);
                return o.elements = fe(r), o.transformFlags |= ke(o.elements), o.transformFlags &= -67108865, o;
            }
            function ua(r, o) {
                return r.elements !== o ? n(Dc(o), r) : r;
            }
            function Sp(r, o, s) {
                let l = W(276);
                return l.isTypeOnly = r, l.propertyName = o, l.name = s, l.transformFlags |= V(l.propertyName) | V(l.name), l.transformFlags &= -67108865, l;
            }
            function xp(r, o, s, l) {
                return r.isTypeOnly !== o || r.propertyName !== s || r.name !== l ? n(Sp(o, s, l), r) : r;
            }
            function za(r, o, s) {
                let l = W(277);
                return l.modifiers = Ie(r), l.isExportEquals = o, l.expression = o ? a().parenthesizeRightSideOfBinary(64, void 0, s) : a().parenthesizeExpressionOfExportDefault(s), l.transformFlags |= ke(l.modifiers) | V(l.expression), l.transformFlags &= -67108865, l.jsDoc = void 0, l;
            }
            function Pc(r, o, s) {
                return r.modifiers !== o || r.expression !== s ? n(za(o, r.isExportEquals, s), r) : r;
            }
            function Ic(r, o, s, l, g) {
                let D = W(278);
                return D.modifiers = Ie(r), D.isTypeOnly = o, D.exportClause = s, D.moduleSpecifier = l, D.attributes = D.assertClause = g, D.transformFlags |= ke(D.modifiers) | V(D.exportClause) | V(D.moduleSpecifier), D.transformFlags &= -67108865, D.jsDoc = void 0, D;
            }
            function Wa(r, o, s, l, g, D) {
                return r.modifiers !== o || r.isTypeOnly !== s || r.exportClause !== l || r.moduleSpecifier !== g || r.attributes !== D ? B1(Ic(o, s, l, g, D), r) : r;
            }
            function B1(r, o) {
                return r !== o && r.modifiers === o.modifiers && (r.modifiers = o.modifiers), n(r, o);
            }
            function Nc(r) {
                let o = F(279);
                return o.elements = fe(r), o.transformFlags |= ke(o.elements), o.transformFlags &= -67108865, o;
            }
            function wp(r, o) {
                return r.elements !== o ? n(Nc(o), r) : r;
            }
            function Oc(r, o, s) {
                let l = F(281);
                return l.isTypeOnly = r, l.propertyName = Ke(o), l.name = Ke(s), l.transformFlags |= V(l.propertyName) | V(l.name), l.transformFlags &= -67108865, l.jsDoc = void 0, l;
            }
            function U1(r, o, s, l) {
                return r.isTypeOnly !== o || r.propertyName !== s || r.name !== l ? n(Oc(o, s, l), r) : r;
            }
            function Ep() {
                let r = W(282);
                return r.jsDoc = void 0, r;
            }
            function Cp(r) {
                let o = F(283);
                return o.expression = r, o.transformFlags |= V(o.expression), o.transformFlags &= -67108865, o;
            }
            function Ap(r, o) {
                return r.expression !== o ? n(Cp(o), r) : r;
            }
            function q1(r) {
                return F(r);
            }
            function kp(r, o, s = !1) {
                let l = Mc(r, s ? o && a().parenthesizeNonArrayTypeOfPostfixType(o) : o);
                return l.postfix = s, l;
            }
            function Mc(r, o) {
                let s = F(r);
                return s.type = o, s;
            }
            function z1(r, o, s) {
                return o.type !== s ? n(kp(r, s, o.postfix), o) : o;
            }
            function W1(r, o, s) {
                return o.type !== s ? n(Mc(r, s), o) : o;
            }
            function Dp(r, o) {
                let s = W(324);
                return s.parameters = Ie(r), s.type = o, s.transformFlags = ke(s.parameters) | (s.type ? 1 : 0), s.jsDoc = void 0, s.locals = void 0, s.nextContainer = void 0, s.typeArguments = void 0, s;
            }
            function V1(r, o, s) {
                return r.parameters !== o || r.type !== s ? n(Dp(o, s), r) : r;
            }
            function Pp(r, o = !1) {
                let s = W(329);
                return s.jsDocPropertyTags = Ie(r), s.isArrayType = o, s;
            }
            function H1(r, o, s) {
                return r.jsDocPropertyTags !== o || r.isArrayType !== s ? n(Pp(o, s), r) : r;
            }
            function Os(r) {
                let o = F(316);
                return o.type = r, o;
            }
            function G1(r, o) {
                return r.type !== o ? n(Os(o), r) : r;
            }
            function Ip(r, o, s) {
                let l = W(330);
                return l.typeParameters = Ie(r), l.parameters = fe(o), l.type = s, l.jsDoc = void 0, l.locals = void 0, l.nextContainer = void 0, l;
            }
            function Ms(r, o, s, l) {
                return r.typeParameters !== o || r.parameters !== s || r.type !== l ? n(Ip(o, s, l), r) : r;
            }
            function Un(r) {
                let o = Df(r.kind);
                return r.tagName.escapedText === qr(o) ? r.tagName : He(o);
            }
            function Kr(r, o, s) {
                let l = F(r);
                return l.tagName = o, l.comment = s, l;
            }
            function Va(r, o, s) {
                let l = W(r);
                return l.tagName = o, l.comment = s, l;
            }
            function Lc(r, o, s, l) {
                let g = Kr(352, r ?? He("template"), l);
                return g.constraint = o, g.typeParameters = fe(s), g;
            }
            function Jc(r, o = Un(r), s, l, g) {
                return r.tagName !== o || r.constraint !== s || r.typeParameters !== l || r.comment !== g ? n(Lc(o, s, l, g), r) : r;
            }
            function Np(r, o, s, l) {
                let g = Va(353, r ?? He("typedef"), l);
                return g.typeExpression = o, g.fullName = s, g.name = rg(s), g.locals = void 0, g.nextContainer = void 0, g;
            }
            function Op(r, o = Un(r), s, l, g) {
                return r.tagName !== o || r.typeExpression !== s || r.fullName !== l || r.comment !== g ? n(Np(o, s, l, g), r) : r;
            }
            function Mp(r, o, s, l, g, D) {
                let H = Va(348, r ?? He("param"), D);
                return H.typeExpression = l, H.name = o, H.isNameFirst = !!g, H.isBracketed = s, H;
            }
            function X1(r, o = Un(r), s, l, g, D, H) {
                return r.tagName !== o || r.name !== s || r.isBracketed !== l || r.typeExpression !== g || r.isNameFirst !== D || r.comment !== H ? n(Mp(o, s, l, g, D, H), r) : r;
            }
            function Rc(r, o, s, l, g, D) {
                let H = Va(355, r ?? He("prop"), D);
                return H.typeExpression = l, H.name = o, H.isNameFirst = !!g, H.isBracketed = s, H;
            }
            function $1(r, o = Un(r), s, l, g, D, H) {
                return r.tagName !== o || r.name !== s || r.isBracketed !== l || r.typeExpression !== g || r.isNameFirst !== D || r.comment !== H ? n(Rc(o, s, l, g, D, H), r) : r;
            }
            function jc(r, o, s, l) {
                let g = Va(345, r ?? He("callback"), l);
                return g.typeExpression = o, g.fullName = s, g.name = rg(s), g.locals = void 0, g.nextContainer = void 0, g;
            }
            function Q1(r, o = Un(r), s, l, g) {
                return r.tagName !== o || r.typeExpression !== s || r.fullName !== l || r.comment !== g ? n(jc(o, s, l, g), r) : r;
            }
            function Ls(r, o, s) {
                let l = Kr(346, r ?? He("overload"), s);
                return l.typeExpression = o, l;
            }
            function Lp(r, o = Un(r), s, l) {
                return r.tagName !== o || r.typeExpression !== s || r.comment !== l ? n(Ls(o, s, l), r) : r;
            }
            function Ha(r, o, s) {
                let l = Kr(335, r ?? He("augments"), s);
                return l.class = o, l;
            }
            function Y1(r, o = Un(r), s, l) {
                return r.tagName !== o || r.class !== s || r.comment !== l ? n(Ha(o, s, l), r) : r;
            }
            function pa(r, o, s) {
                let l = Kr(336, r ?? He("implements"), s);
                return l.class = o, l;
            }
            function bo(r, o, s) {
                let l = Kr(354, r ?? He("see"), s);
                return l.name = o, l;
            }
            function K1(r, o, s, l) {
                return r.tagName !== o || r.name !== s || r.comment !== l ? n(bo(o, s, l), r) : r;
            }
            function Jp(r) {
                let o = F(317);
                return o.name = r, o;
            }
            function Z1(r, o) {
                return r.name !== o ? n(Jp(o), r) : r;
            }
            function Rp(r, o) {
                let s = F(318);
                return s.left = r, s.right = o, s.transformFlags |= V(s.left) | V(s.right), s;
            }
            function eh(r, o, s) {
                return r.left !== o || r.right !== s ? n(Rp(o, s), r) : r;
            }
            function Fc(r, o) {
                let s = F(331);
                return s.name = r, s.text = o, s;
            }
            function th(r, o, s) {
                return r.name !== o ? n(Fc(o, s), r) : r;
            }
            function jp(r, o) {
                let s = F(332);
                return s.name = r, s.text = o, s;
            }
            function nh(r, o, s) {
                return r.name !== o ? n(jp(o, s), r) : r;
            }
            function Fp(r, o) {
                let s = F(333);
                return s.name = r, s.text = o, s;
            }
            function rh(r, o, s) {
                return r.name !== o ? n(Fp(o, s), r) : r;
            }
            function ih(r, o = Un(r), s, l) {
                return r.tagName !== o || r.class !== s || r.comment !== l ? n(pa(o, s, l), r) : r;
            }
            function Bp(r, o, s) {
                return Kr(r, o ?? He(Df(r)), s);
            }
            function ah(r, o, s = Un(o), l) {
                return o.tagName !== s || o.comment !== l ? n(Bp(r, s, l), o) : o;
            }
            function Up(r, o, s, l) {
                let g = Kr(r, o ?? He(Df(r)), l);
                return g.typeExpression = s, g;
            }
            function oh(r, o, s = Un(o), l, g) {
                return o.tagName !== s || o.typeExpression !== l || o.comment !== g ? n(Up(r, s, l, g), o) : o;
            }
            function qp(r, o) {
                return Kr(334, r, o);
            }
            function sh(r, o, s) {
                return r.tagName !== o || r.comment !== s ? n(qp(o, s), r) : r;
            }
            function Js(r, o, s) {
                let l = Va(347, r ?? He(Df(347)), s);
                return l.typeExpression = o, l.locals = void 0, l.nextContainer = void 0, l;
            }
            function _h(r, o = Un(r), s, l) {
                return r.tagName !== o || r.typeExpression !== s || r.comment !== l ? n(Js(o, s, l), r) : r;
            }
            function Bc(r) {
                let o = F(328);
                return o.text = r, o;
            }
            function zp(r, o) {
                return r.text !== o ? n(Bc(o), r) : r;
            }
            function Wp(r, o) {
                let s = F(327);
                return s.comment = r, s.tags = Ie(o), s;
            }
            function Rs(r, o, s) {
                return r.comment !== o || r.tags !== s ? n(Wp(o, s), r) : r;
            }
            function Uc(r, o, s) {
                let l = F(284);
                return l.openingElement = r, l.children = fe(o), l.closingElement = s, l.transformFlags |= V(l.openingElement) | ke(l.children) | V(l.closingElement) | 2, l;
            }
            function ch(r, o, s, l) {
                return r.openingElement !== o || r.children !== s || r.closingElement !== l ? n(Uc(o, s, l), r) : r;
            }
            function Vp(r, o, s) {
                let l = F(285);
                return l.tagName = r, l.typeArguments = Ie(o), l.attributes = s, l.transformFlags |= V(l.tagName) | ke(l.typeArguments) | V(l.attributes) | 2, l.typeArguments && (l.transformFlags |= 1), l;
            }
            function lh(r, o, s, l) {
                return r.tagName !== o || r.typeArguments !== s || r.attributes !== l ? n(Vp(o, s, l), r) : r;
            }
            function js(r, o, s) {
                let l = F(286);
                return l.tagName = r, l.typeArguments = Ie(o), l.attributes = s, l.transformFlags |= V(l.tagName) | ke(l.typeArguments) | V(l.attributes) | 2, o && (l.transformFlags |= 1), l;
            }
            function Hp(r, o, s, l) {
                return r.tagName !== o || r.typeArguments !== s || r.attributes !== l ? n(js(o, s, l), r) : r;
            }
            function qc(r) {
                let o = F(287);
                return o.tagName = r, o.transformFlags |= V(o.tagName) | 2, o;
            }
            function zc(r, o) {
                return r.tagName !== o ? n(qc(o), r) : r;
            }
            function Sn(r, o, s) {
                let l = F(288);
                return l.openingFragment = r, l.children = fe(o), l.closingFragment = s, l.transformFlags |= V(l.openingFragment) | ke(l.children) | V(l.closingFragment) | 2, l;
            }
            function Gp(r, o, s, l) {
                return r.openingFragment !== o || r.children !== s || r.closingFragment !== l ? n(Sn(o, s, l), r) : r;
            }
            function vo(r, o) {
                let s = F(12);
                return s.text = r, s.containsOnlyTriviaWhiteSpaces = !!o, s.transformFlags |= 2, s;
            }
            function uh(r, o, s) {
                return r.text !== o || r.containsOnlyTriviaWhiteSpaces !== s ? n(vo(o, s), r) : r;
            }
            function Xp() {
                let r = F(289);
                return r.transformFlags |= 2, r;
            }
            function ph() {
                let r = F(290);
                return r.transformFlags |= 2, r;
            }
            function $p(r, o) {
                let s = W(291);
                return s.name = r, s.initializer = o, s.transformFlags |= V(s.name) | V(s.initializer) | 2, s;
            }
            function Fs(r, o, s) {
                return r.name !== o || r.initializer !== s ? n($p(o, s), r) : r;
            }
            function Qp(r) {
                let o = W(292);
                return o.properties = fe(r), o.transformFlags |= ke(o.properties) | 2, o;
            }
            function fh(r, o) {
                return r.properties !== o ? n(Qp(o), r) : r;
            }
            function Yp(r) {
                let o = F(293);
                return o.expression = r, o.transformFlags |= V(o.expression) | 2, o;
            }
            function dh(r, o) {
                return r.expression !== o ? n(Yp(o), r) : r;
            }
            function Bs(r, o) {
                let s = F(294);
                return s.dotDotDotToken = r, s.expression = o, s.transformFlags |= V(s.dotDotDotToken) | V(s.expression) | 2, s;
            }
            function To(r, o) {
                return r.expression !== o ? n(Bs(r.dotDotDotToken, o), r) : r;
            }
            function Kp(r, o) {
                let s = F(295);
                return s.namespace = r, s.name = o, s.transformFlags |= V(s.namespace) | V(s.name) | 2, s;
            }
            function Wc(r, o, s) {
                return r.namespace !== o || r.name !== s ? n(Kp(o, s), r) : r;
            }
            function Vc(r, o) {
                let s = F(296);
                return s.expression = a().parenthesizeExpressionForDisallowedComma(r), s.statements = fe(o), s.transformFlags |= V(s.expression) | ke(s.statements), s.jsDoc = void 0, s;
            }
            function mh(r, o, s) {
                return r.expression !== o || r.statements !== s ? n(Vc(o, s), r) : r;
            }
            function Ga(r) {
                let o = F(297);
                return o.statements = fe(r), o.transformFlags = ke(o.statements), o;
            }
            function Zp(r, o) {
                return r.statements !== o ? n(Ga(o), r) : r;
            }
            function ef(r, o) {
                let s = F(298);
                switch(s.token = r, s.types = fe(o), s.transformFlags |= ke(s.types), r){
                    case 96:
                        s.transformFlags |= 1024;
                        break;
                    case 119:
                        s.transformFlags |= 1;
                        break;
                    default:
                        return I.assertNever(r);
                }
                return s;
            }
            function hh(r, o) {
                return r.types !== o ? n(ef(r.token, o), r) : r;
            }
            function Hc(r, o) {
                let s = F(299);
                return s.variableDeclaration = Hh(r), s.block = o, s.transformFlags |= V(s.variableDeclaration) | V(s.block) | (r ? 0 : 64), s.locals = void 0, s.nextContainer = void 0, s;
            }
            function tf(r, o, s) {
                return r.variableDeclaration !== o || r.block !== s ? n(Hc(o, s), r) : r;
            }
            function Us(r, o) {
                let s = W(303);
                return s.name = Ke(r), s.initializer = a().parenthesizeExpressionForDisallowedComma(o), s.transformFlags |= jr(s.name) | V(s.initializer), s.modifiers = void 0, s.questionToken = void 0, s.exclamationToken = void 0, s.jsDoc = void 0, s;
            }
            function fa(r, o, s) {
                return r.name !== o || r.initializer !== s ? yh(Us(o, s), r) : r;
            }
            function yh(r, o) {
                return r !== o && (r.modifiers = o.modifiers, r.questionToken = o.questionToken, r.exclamationToken = o.exclamationToken), n(r, o);
            }
            function nf(r, o) {
                let s = W(304);
                return s.name = Ke(r), s.objectAssignmentInitializer = o && a().parenthesizeExpressionForDisallowedComma(o), s.transformFlags |= t_(s.name) | V(s.objectAssignmentInitializer) | 1024, s.equalsToken = void 0, s.modifiers = void 0, s.questionToken = void 0, s.exclamationToken = void 0, s.jsDoc = void 0, s;
            }
            function gh(r, o, s) {
                return r.name !== o || r.objectAssignmentInitializer !== s ? bh(nf(o, s), r) : r;
            }
            function bh(r, o) {
                return r !== o && (r.modifiers = o.modifiers, r.questionToken = o.questionToken, r.exclamationToken = o.exclamationToken, r.equalsToken = o.equalsToken), n(r, o);
            }
            function Gc(r) {
                let o = W(305);
                return o.expression = a().parenthesizeExpressionForDisallowedComma(r), o.transformFlags |= V(o.expression) | 65664, o.jsDoc = void 0, o;
            }
            function rf(r, o) {
                return r.expression !== o ? n(Gc(o), r) : r;
            }
            function Lr(r, o) {
                let s = W(306);
                return s.name = Ke(r), s.initializer = o && a().parenthesizeExpressionForDisallowedComma(o), s.transformFlags |= V(s.name) | V(s.initializer) | 1, s.jsDoc = void 0, s;
            }
            function af(r, o, s) {
                return r.name !== o || r.initializer !== s ? n(Lr(o, s), r) : r;
            }
            function vh(r, o, s) {
                let l = t.createBaseSourceFileNode(312);
                return l.statements = fe(r), l.endOfFileToken = o, l.flags |= s, l.text = "", l.fileName = "", l.path = "", l.resolvedPath = "", l.originalFileName = "", l.languageVersion = 0, l.languageVariant = 0, l.scriptKind = 0, l.isDeclarationFile = !1, l.hasNoDefaultLib = !1, l.transformFlags |= ke(l.statements) | V(l.endOfFileToken), l.locals = void 0, l.nextContainer = void 0, l.endFlowNode = void 0, l.nodeCount = 0, l.identifierCount = 0, l.symbolCount = 0, l.parseDiagnostics = void 0, l.bindDiagnostics = void 0, l.bindSuggestionDiagnostics = void 0, l.lineMap = void 0, l.externalModuleIndicator = void 0, l.setExternalModuleIndicator = void 0, l.pragmas = void 0, l.checkJsDirective = void 0, l.referencedFiles = void 0, l.typeReferenceDirectives = void 0, l.libReferenceDirectives = void 0, l.amdDependencies = void 0, l.commentDirectives = void 0, l.identifiers = void 0, l.packageJsonLocations = void 0, l.packageJsonScope = void 0, l.imports = void 0, l.moduleAugmentations = void 0, l.ambientModuleNames = void 0, l.classifiableNames = void 0, l.impliedNodeFormat = void 0, l;
            }
            function of(r) {
                let o = Object.create(r.redirectTarget);
                return Object.defineProperties(o, {
                    id: {
                        get () {
                            return this.redirectInfo.redirectTarget.id;
                        },
                        set (s) {
                            this.redirectInfo.redirectTarget.id = s;
                        }
                    },
                    symbol: {
                        get () {
                            return this.redirectInfo.redirectTarget.symbol;
                        },
                        set (s) {
                            this.redirectInfo.redirectTarget.symbol = s;
                        }
                    }
                }), o.redirectInfo = r, o;
            }
            function Th(r) {
                let o = of(r.redirectInfo);
                return o.flags |= r.flags & -17, o.fileName = r.fileName, o.path = r.path, o.resolvedPath = r.resolvedPath, o.originalFileName = r.originalFileName, o.packageJsonLocations = r.packageJsonLocations, o.packageJsonScope = r.packageJsonScope, o.emitNode = void 0, o;
            }
            function sf(r) {
                let o = t.createBaseSourceFileNode(312);
                o.flags |= r.flags & -17;
                for(let s in r)if (!(Wn(o, s) || !Wn(r, s))) {
                    if (s === "emitNode") {
                        o.emitNode = void 0;
                        continue;
                    }
                    o[s] = r[s];
                }
                return o;
            }
            function qs(r) {
                let o = r.redirectInfo ? Th(r) : sf(r);
                return nr(o, r), o;
            }
            function Sh(r, o, s, l, g, D, H) {
                let me = qs(r);
                return me.statements = fe(o), me.isDeclarationFile = s, me.referencedFiles = l, me.typeReferenceDirectives = g, me.hasNoDefaultLib = D, me.libReferenceDirectives = H, me.transformFlags = ke(me.statements) | V(me.endOfFileToken), me;
            }
            function xh(r, o, s = r.isDeclarationFile, l = r.referencedFiles, g = r.typeReferenceDirectives, D = r.hasNoDefaultLib, H = r.libReferenceDirectives) {
                return r.statements !== o || r.isDeclarationFile !== s || r.referencedFiles !== l || r.typeReferenceDirectives !== g || r.hasNoDefaultLib !== D || r.libReferenceDirectives !== H ? n(Sh(r, o, s, l, g, D, H), r) : r;
            }
            function Xc(r, o = Je) {
                let s = F(313);
                return s.prepends = o, s.sourceFiles = r, s.syntheticFileReferences = void 0, s.syntheticTypeReferences = void 0, s.syntheticLibReferences = void 0, s.hasNoDefaultLib = void 0, s;
            }
            function wh(r, o, s = Je) {
                return r.sourceFiles !== o || r.prepends !== s ? n(Xc(o, s), r) : r;
            }
            function Eh(r, o, s) {
                let l = F(314);
                return l.prologues = r, l.syntheticReferences = o, l.texts = s, l.fileName = "", l.text = "", l.referencedFiles = Je, l.libReferenceDirectives = Je, l.getLineAndCharacterOfPosition = (g)=>no(l, g), l;
            }
            function Xa(r, o) {
                let s = F(r);
                return s.data = o, s;
            }
            function _f(r) {
                return Xa(307, r);
            }
            function Ch(r, o) {
                let s = Xa(308, r);
                return s.texts = o, s;
            }
            function Ah(r, o) {
                return Xa(o ? 310 : 309, r);
            }
            function kh(r) {
                let o = F(311);
                return o.data = r.data, o.section = r, o;
            }
            function Dh() {
                let r = F(315);
                return r.javascriptText = "", r.declarationText = "", r;
            }
            function Ph(r, o = !1, s) {
                let l = F(237);
                return l.type = r, l.isSpread = o, l.tupleNameSource = s, l;
            }
            function cf(r) {
                let o = F(358);
                return o._children = r, o;
            }
            function lf(r) {
                let o = F(359);
                return o.original = r, We(o, r), o;
            }
            function $c(r, o) {
                let s = F(360);
                return s.expression = r, s.original = o, s.transformFlags |= V(s.expression) | 1, We(s, o), s;
            }
            function uf(r, o) {
                return r.expression !== o ? n($c(o, r.original), r) : r;
            }
            function Ih(r) {
                if (ya(r) && !xl(r) && !r.original && !r.emitNode && !r.id) {
                    if (j_(r)) return r.elements;
                    if (At(r) && Rx(r.operatorToken)) return [
                        r.left,
                        r.right
                    ];
                }
                return r;
            }
            function zs(r) {
                let o = F(361);
                return o.elements = fe(mv(r, Ih)), o.transformFlags |= ke(o.elements), o;
            }
            function pf(r, o) {
                return r.elements !== o ? n(zs(o), r) : r;
            }
            function ff(r, o) {
                let s = F(362);
                return s.expression = r, s.thisArg = o, s.transformFlags |= V(s.expression) | V(s.thisArg), s;
            }
            function Nh(r, o, s) {
                return r.expression !== o || r.thisArg !== s ? n(ff(o, s), r) : r;
            }
            function Oh(r) {
                let o = gn(r.escapedText);
                return o.flags |= r.flags & -17, o.transformFlags = r.transformFlags, nr(o, r), setIdentifierAutoGenerate(o, {
                    ...r.emitNode.autoGenerate
                }), o;
            }
            function Mh(r) {
                let o = gn(r.escapedText);
                o.flags |= r.flags & -17, o.jsDoc = r.jsDoc, o.flowNode = r.flowNode, o.symbol = r.symbol, o.transformFlags = r.transformFlags, nr(o, r);
                let s = getIdentifierTypeArguments(r);
                return s && setIdentifierTypeArguments(o, s), o;
            }
            function Qc(r) {
                let o = Ar(r.escapedText);
                return o.flags |= r.flags & -17, o.transformFlags = r.transformFlags, nr(o, r), setIdentifierAutoGenerate(o, {
                    ...r.emitNode.autoGenerate
                }), o;
            }
            function Lh(r) {
                let o = Ar(r.escapedText);
                return o.flags |= r.flags & -17, o.transformFlags = r.transformFlags, nr(o, r), o;
            }
            function Yc(r) {
                if (r === void 0) return r;
                if (ci(r)) return qs(r);
                if (va(r)) return Oh(r);
                if (Ae(r)) return Mh(r);
                if (Bg(r)) return Qc(r);
                if (Vn(r)) return Lh(r);
                let o = Wl(r.kind) ? t.createBaseNode(r.kind) : t.createBaseTokenNode(r.kind);
                o.flags |= r.flags & -17, o.transformFlags = r.transformFlags, nr(o, r);
                for(let s in r)Wn(o, s) || !Wn(r, s) || (o[s] = r[s]);
                return o;
            }
            function Jh(r, o, s) {
                return ji(nc(void 0, void 0, void 0, void 0, o ? [
                    o
                ] : [], void 0, qa(r, !0)), void 0, s ? [
                    s
                ] : []);
            }
            function Rh(r, o, s) {
                return ji(rc(void 0, void 0, o ? [
                    o
                ] : [], void 0, void 0, qa(r, !0)), void 0, s ? [
                    s
                ] : []);
            }
            function So() {
                return Or(Qe("0"));
            }
            function jh(r) {
                return za(void 0, !1, r);
            }
            function Ws(r) {
                return Ic(void 0, !1, Nc([
                    Oc(!1, void 0, r)
                ]));
            }
            function Fh(r, o) {
                return o === "null" ? se.createStrictEquality(r, cn()) : o === "undefined" ? se.createStrictEquality(r, So()) : se.createStrictEquality(Tn(r), _t(o));
            }
            function df(r, o) {
                return o === "null" ? se.createStrictInequality(r, cn()) : o === "undefined" ? se.createStrictInequality(r, So()) : se.createStrictInequality(Tn(r), _t(o));
            }
            function da(r, o, s) {
                return T0(r) ? K_(Fa(r, void 0, o), void 0, void 0, s) : ji(gi(r, o), void 0, s);
            }
            function Bh(r, o, s) {
                return da(r, "bind", [
                    o,
                    ...s
                ]);
            }
            function mf(r, o, s) {
                return da(r, "call", [
                    o,
                    ...s
                ]);
            }
            function Uh(r, o, s) {
                return da(r, "apply", [
                    o,
                    s
                ]);
            }
            function xo(r, o, s) {
                return da(He(r), o, s);
            }
            function qh(r, o) {
                return da(r, "slice", o === void 0 ? [] : [
                    Ti(o)
                ]);
            }
            function hf(r, o) {
                return da(r, "concat", o);
            }
            function yf(r, o, s) {
                return xo("Object", "defineProperty", [
                    r,
                    Ti(o),
                    s
                ]);
            }
            function gf(r, o) {
                return xo("Object", "getOwnPropertyDescriptor", [
                    r,
                    Ti(o)
                ]);
            }
            function c(r, o, s) {
                return xo("Reflect", "get", s ? [
                    r,
                    o,
                    s
                ] : [
                    r,
                    o
                ]);
            }
            function h(r, o, s, l) {
                return xo("Reflect", "set", l ? [
                    r,
                    o,
                    s,
                    l
                ] : [
                    r,
                    o,
                    s
                ]);
            }
            function b(r, o, s) {
                return s ? (r.push(Us(o, s)), !0) : !1;
            }
            function E(r, o) {
                let s = [];
                b(s, "enumerable", Ti(r.enumerable)), b(s, "configurable", Ti(r.configurable));
                let l = b(s, "writable", Ti(r.writable));
                l = b(s, "value", r.value) || l;
                let g = b(s, "get", r.get);
                return g = b(s, "set", r.set) || g, I.assert(!(l && g), "A PropertyDescriptor may not be both an accessor descriptor and a data descriptor."), fo(s, !o);
            }
            function k(r, o) {
                switch(r.kind){
                    case 217:
                        return Cu(r, o);
                    case 216:
                        return Eu(r, r.type, o);
                    case 234:
                        return ju(r, o, r.type);
                    case 238:
                        return pc(r, o, r.type);
                    case 235:
                        return uc(r, o);
                    case 360:
                        return uf(r, o);
                }
            }
            function J(r) {
                return cs(r) && ya(r) && ya(getSourceMapRange(r)) && ya(getCommentRange(r)) && !Ze(getSyntheticLeadingComments(r)) && !Ze(getSyntheticTrailingComments(r));
            }
            function Y(r, o, s = 15) {
                return r && qm(r, s) && !J(r) ? k(r, Y(r.expression, o)) : o;
            }
            function _e(r, o, s) {
                if (!o) return r;
                let l = ip(o, o.label, s8(o.statement) ? _e(r, o.statement) : r);
                return s && s(o), l;
            }
            function re(r, o) {
                let s = C_(r);
                switch(s.kind){
                    case 80:
                        return o;
                    case 110:
                    case 9:
                    case 10:
                    case 11:
                        return !1;
                    case 209:
                        return s.elements.length !== 0;
                    case 210:
                        return s.properties.length > 0;
                    default:
                        return !0;
                }
            }
            function ne(r, o, s, l = !1) {
                let g = ms(r, 15), D, H;
                return vd(g) ? (D = Gt(), H = g) : zf(g) ? (D = Gt(), H = s !== void 0 && s < 2 ? We(He("_super"), g) : g) : ai(g) & 8192 ? (D = So(), H = a().parenthesizeLeftSideOfAccess(g, !1)) : Ln(g) ? re(g.expression, l) ? (D = Qn(o), H = gi(We(se.createAssignment(D, g.expression), g.expression), g.name), We(H, g)) : (D = g.expression, H = g) : Ki(g) ? re(g.expression, l) ? (D = Qn(o), H = Q_(We(se.createAssignment(D, g.expression), g.expression), g.argumentExpression), We(H, g)) : (D = g.expression, H = g) : (D = So(), H = a().parenthesizeLeftSideOfAccess(r, !1)), {
                    target: H,
                    thisArg: D
                };
            }
            function pe(r, o) {
                return gi(tc(fo([
                    nt(void 0, "value", [
                        di(void 0, void 0, r, void 0, void 0, void 0)
                    ], qa([
                        go(o)
                    ]))
                ])), "value");
            }
            function Ue(r) {
                return r.length > 10 ? zs(r) : Bd(r, se.createComma);
            }
            function Fe(r, o, s, l = 0, g) {
                let D = g ? r && em(r) : ql(r);
                if (D && Ae(D) && !va(D)) {
                    let H = Qi(We(Yc(D), D), D.parent);
                    return l |= ai(D), s || (l |= 96), o || (l |= 3072), l && setEmitFlags(H, l), H;
                }
                return Jn(r);
            }
            function Oe(r, o, s) {
                return Fe(r, o, s, 98304);
            }
            function xn(r, o, s, l) {
                return Fe(r, o, s, 32768, l);
            }
            function qn(r, o, s) {
                return Fe(r, o, s, 16384);
            }
            function vi(r, o, s) {
                return Fe(r, o, s);
            }
            function Zr(r, o, s, l) {
                let g = gi(r, ya(o) ? o : Yc(o));
                We(g, o);
                let D = 0;
                return l || (D |= 96), s || (D |= 3072), D && setEmitFlags(g, D), g;
            }
            function Jr(r, o, s, l) {
                return r && Cn(o, 32) ? Zr(r, Fe(o), s, l) : qn(o, s, l);
            }
            function ma(r, o, s, l) {
                let g = bf(r, o, 0, s);
                return Zc(r, o, g, l);
            }
            function zh(r) {
                return Tr(r.expression) && r.expression.text === "use strict";
            }
            function Kc() {
                return zm(go(_t("use strict")));
            }
            function bf(r, o, s = 0, l) {
                I.assert(o.length === 0, "Prologue directives should be at the first statement in the target statements array");
                let g = !1, D = r.length;
                for(; s < D;){
                    let H = r[s];
                    if (Sa(H)) zh(H) && (g = !0), o.push(H);
                    else break;
                    s++;
                }
                return l && !g && o.push(Kc()), s;
            }
            function Zc(r, o, s, l, g = Ev) {
                let D = r.length;
                for(; s !== void 0 && s < D;){
                    let H = r[s];
                    if (ai(H) & 2097152 && g(H)) Et(o, l ? visitNode(H, l, hT) : H);
                    else break;
                    s++;
                }
                return s;
            }
            function Wh(r) {
                return C8(r) ? r : We(fe([
                    Kc(),
                    ...r
                ]), r);
            }
            function vf(r) {
                return I.assert(so(r, yT), "Cannot lift nodes to a Block."), Fd(r) || qa(r);
            }
            function pn(r, o, s) {
                let l = s;
                for(; l < r.length && o(r[l]);)l++;
                return l;
            }
            function zi(r, o) {
                if (!Ze(o)) return r;
                let s = pn(r, Sa, 0), l = pn(r, D0, s), g = pn(r, P0, l), D = pn(o, Sa, 0), H = pn(o, D0, D), me = pn(o, P0, H), ze = pn(o, dm, me);
                I.assert(ze === o.length, "Expected declarations to be valid standard or custom prologues");
                let In = ha(r) ? r.slice() : r;
                if (ze > me && In.splice(g, 0, ...o.slice(me, ze)), me > H && In.splice(l, 0, ...o.slice(H, me)), H > D && In.splice(s, 0, ...o.slice(D, H)), D > 0) {
                    if (s === 0) In.splice(0, 0, ...o.slice(0, D));
                    else {
                        let Si = new Map;
                        for(let xi = 0; xi < s; xi++){
                            let wo = r[xi];
                            Si.set(wo.expression.text, !0);
                        }
                        for(let xi = D - 1; xi >= 0; xi--){
                            let wo = o[xi];
                            Si.has(wo.expression.text) || In.unshift(wo);
                        }
                    }
                }
                return ha(r) ? We(fe(In, r.hasTrailingComma), r) : r;
            }
            function Tf(r, o) {
                let s;
                return typeof o == "number" ? s = Rn(o) : s = o, Lo(r) ? lr(r, s, r.name, r.constraint, r.default) : Pa(r) ? Xr(r, s, r.dotDotDotToken, r.name, r.questionToken, r.type, r.initializer) : bb(r) ? ge(r, s, r.typeParameters, r.parameters, r.type) : Zl(r) ? Pr(r, s, r.name, r.questionToken, r.type) : Ia(r) ? ie(r, s, r.name, r.questionToken ?? r.exclamationToken, r.type, r.initializer) : Ux(r) ? Te(r, s, r.name, r.questionToken, r.typeParameters, r.parameters, r.type) : f_(r) ? $e(r, s, r.asteriskToken, r.name, r.questionToken, r.typeParameters, r.parameters, r.type, r.body) : L_(r) ? K(r, s, r.parameters, r.body) : d_(r) ? je(r, s, r.name, r.parameters, r.type, r.body) : Zo(r) ? kt(r, s, r.name, r.parameters, r.body) : gb(r) ? $r(r, s, r.parameters, r.type) : Nm(r) ? Au(r, s, r.asteriskToken, r.name, r.typeParameters, r.parameters, r.type, r.body) : Om(r) ? ku(r, s, r.typeParameters, r.parameters, r.type, r.equalsGreaterThanToken, r.body) : Ol(r) ? ho(r, s, r.name, r.typeParameters, r.heritageClauses, r.members) : ls(r) ? Hu(r, s, r.declarationList) : us(r) ? cp(r, s, r.asteriskToken, r.name, r.typeParameters, r.parameters, r.type, r.body) : es(r) ? Sc(r, s, r.name, r.typeParameters, r.heritageClauses, r.members) : su(r) ? gt(r, s, r.name, r.typeParameters, r.heritageClauses, r.members) : Db(r) ? xc(r, s, r.name, r.typeParameters, r.type) : Pb(r) ? up(r, s, r.name, r.members) : Zi(r) ? qi(r, s, r.name, r.body) : Nb(r) ? dp(r, s, r.isTypeOnly, r.name, r.moduleReference) : Ob(r) ? hp(r, s, r.importClause, r.moduleSpecifier, r.attributes) : ps(r) ? Pc(r, s, r.expression) : F_(r) ? Wa(r, s, r.isTypeOnly, r.exportClause, r.moduleSpecifier, r.attributes) : I.assertNever(r);
            }
            function fn(r, o) {
                return Pa(r) ? Xr(r, o, r.dotDotDotToken, r.name, r.questionToken, r.type, r.initializer) : Ia(r) ? ie(r, o, r.name, r.questionToken ?? r.exclamationToken, r.type, r.initializer) : f_(r) ? $e(r, o, r.asteriskToken, r.name, r.questionToken, r.typeParameters, r.parameters, r.type, r.body) : d_(r) ? je(r, o, r.name, r.parameters, r.type, r.body) : Zo(r) ? kt(r, o, r.name, r.parameters, r.body) : Ol(r) ? ho(r, o, r.name, r.typeParameters, r.heritageClauses, r.members) : es(r) ? Sc(r, o, r.name, r.typeParameters, r.heritageClauses, r.members) : I.assertNever(r);
            }
            function Vs(r, o) {
                switch(r.kind){
                    case 177:
                        return je(r, r.modifiers, o, r.parameters, r.type, r.body);
                    case 178:
                        return kt(r, r.modifiers, o, r.parameters, r.body);
                    case 174:
                        return $e(r, r.modifiers, r.asteriskToken, o, r.questionToken, r.typeParameters, r.parameters, r.type, r.body);
                    case 173:
                        return Te(r, r.modifiers, o, r.questionToken, r.typeParameters, r.parameters, r.type);
                    case 172:
                        return ie(r, r.modifiers, o, r.questionToken ?? r.exclamationToken, r.type, r.initializer);
                    case 171:
                        return Pr(r, r.modifiers, o, r.questionToken, r.type);
                    case 303:
                        return fa(r, o, r.initializer);
                }
            }
            function Ie(r) {
                return r ? fe(r) : void 0;
            }
            function Ke(r) {
                return typeof r == "string" ? He(r) : r;
            }
            function Ti(r) {
                return typeof r == "string" ? _t(r) : typeof r == "number" ? Qe(r) : typeof r == "boolean" ? r ? ht() : Dr() : r;
            }
            function Hs(r) {
                return r && a().parenthesizeExpressionForDisallowedComma(r);
            }
            function Vh(r) {
                return typeof r == "number" ? xt(r) : r;
            }
            function tr(r) {
                return r && Lb(r) ? We(nr(fc(), r), r) : r;
            }
            function Hh(r) {
                return typeof r == "string" || r && !Li(r) ? Ps(r, void 0, void 0, void 0) : r;
            }
        }
        function HM(e, t) {
            return e !== t && We(e, t), e;
        }
        function GM(e, t) {
            return e !== t && (nr(e, t), We(e, t)), e;
        }
        function Df(e) {
            switch(e){
                case 351:
                    return "type";
                case 349:
                    return "returns";
                case 350:
                    return "this";
                case 347:
                    return "enum";
                case 337:
                    return "author";
                case 339:
                    return "class";
                case 340:
                    return "public";
                case 341:
                    return "private";
                case 342:
                    return "protected";
                case 343:
                    return "readonly";
                case 344:
                    return "override";
                case 352:
                    return "template";
                case 353:
                    return "typedef";
                case 348:
                    return "param";
                case 355:
                    return "prop";
                case 345:
                    return "callback";
                case 346:
                    return "overload";
                case 335:
                    return "augments";
                case 336:
                    return "implements";
                default:
                    return I.fail(`Unsupported kind: ${I.formatSyntaxKind(e)}`);
            }
        }
        function XM(e, t) {
            switch(mr || (mr = ss(99, !1, 0)), e){
                case 15:
                    mr.setText("`" + t + "`");
                    break;
                case 16:
                    mr.setText("`" + t + "${");
                    break;
                case 17:
                    mr.setText("}" + t + "${");
                    break;
                case 18:
                    mr.setText("}" + t + "`");
                    break;
            }
            let n = mr.scan();
            if (n === 20 && (n = mr.reScanTemplateToken(!1)), mr.isUnterminated()) return mr.setText(void 0), eg;
            let a;
            switch(n){
                case 15:
                case 16:
                case 17:
                case 18:
                    a = mr.getTokenValue();
                    break;
            }
            return a === void 0 || mr.scan() !== 1 ? (mr.setText(void 0), eg) : (mr.setText(void 0), a);
        }
        function jr(e) {
            return e && Ae(e) ? t_(e) : V(e);
        }
        function t_(e) {
            return V(e) & -67108865;
        }
        function $M(e, t) {
            return t | e.transformFlags & 134234112;
        }
        function V(e) {
            if (!e) return 0;
            let t = e.transformFlags & ~Ox(e.kind);
            return Zd(e) && Vl(e.name) ? $M(e.name, t) : t;
        }
        function ke(e) {
            return e ? e.transformFlags : 0;
        }
        function j6(e) {
            let t = 0;
            for (let n of e)t |= V(n);
            e.transformFlags = t;
        }
        function Ox(e) {
            if (e >= 182 && e <= 205) return -2;
            switch(e){
                case 213:
                case 214:
                case 209:
                    return -2147450880;
                case 267:
                    return -1941676032;
                case 169:
                    return -2147483648;
                case 219:
                    return -2072174592;
                case 218:
                case 262:
                    return -1937940480;
                case 261:
                    return -2146893824;
                case 263:
                case 231:
                    return -2147344384;
                case 176:
                    return -1937948672;
                case 172:
                    return -2013249536;
                case 174:
                case 177:
                case 178:
                    return -2005057536;
                case 133:
                case 150:
                case 163:
                case 146:
                case 154:
                case 151:
                case 136:
                case 155:
                case 116:
                case 168:
                case 171:
                case 173:
                case 179:
                case 180:
                case 181:
                case 264:
                case 265:
                    return -2;
                case 210:
                    return -2147278848;
                case 299:
                    return -2147418112;
                case 206:
                case 207:
                    return -2147450880;
                case 216:
                case 238:
                case 234:
                case 360:
                case 217:
                case 108:
                    return -2147483648;
                case 211:
                case 212:
                    return -2147483648;
                default:
                    return -2147483648;
            }
        }
        function el(e) {
            return e.flags |= 16, e;
        }
        function QM(e, t, n) {
            let a, _, p, m, y, u, x, d, S, T;
            g_(e) ? (p = "", m = e, y = e.length, u = t, x = n) : (I.assert(t === "js" || t === "dts"), p = (t === "js" ? e.javascriptPath : e.declarationPath) || "", u = t === "js" ? e.javascriptMapPath : e.declarationMapPath, d = ()=>t === "js" ? e.javascriptText : e.declarationText, S = ()=>t === "js" ? e.javascriptMapText : e.declarationMapText, y = ()=>d().length, e.buildInfo && e.buildInfo.bundle && (I.assert(n === void 0 || typeof n == "boolean"), a = n, _ = t === "js" ? e.buildInfo.bundle.js : e.buildInfo.bundle.dts, T = e.oldFileOfCurrentEmit));
            let A = T ? KM(I.checkDefined(_)) : YM(_, a, y);
            return A.fileName = p, A.sourceMapPath = u, A.oldFileOfCurrentEmit = T, d && S ? (Object.defineProperty(A, "text", {
                get: d
            }), Object.defineProperty(A, "sourceMapText", {
                get: S
            })) : (I.assert(!T), A.text = m ?? "", A.sourceMapText = x), A;
        }
        function YM(e, t, n) {
            let a, _, p, m, y, u, x, d;
            for (let T of e ? e.sections : Je)switch(T.kind){
                case "prologue":
                    a = Et(a, We(zr.createUnparsedPrologue(T.data), T));
                    break;
                case "emitHelpers":
                    _ = Et(_, getAllUnscopedEmitHelpers().get(T.data));
                    break;
                case "no-default-lib":
                    d = !0;
                    break;
                case "reference":
                    p = Et(p, {
                        pos: -1,
                        end: -1,
                        fileName: T.data
                    });
                    break;
                case "type":
                    m = Et(m, {
                        pos: -1,
                        end: -1,
                        fileName: T.data
                    });
                    break;
                case "type-import":
                    m = Et(m, {
                        pos: -1,
                        end: -1,
                        fileName: T.data,
                        resolutionMode: 99
                    });
                    break;
                case "type-require":
                    m = Et(m, {
                        pos: -1,
                        end: -1,
                        fileName: T.data,
                        resolutionMode: 1
                    });
                    break;
                case "lib":
                    y = Et(y, {
                        pos: -1,
                        end: -1,
                        fileName: T.data
                    });
                    break;
                case "prepend":
                    let A;
                    for (let N of T.texts)(!t || N.kind !== "internal") && (A = Et(A, We(zr.createUnparsedTextLike(N.data, N.kind === "internal"), N)));
                    u = zn(u, A), x = Et(x, zr.createUnparsedPrepend(T.data, A ?? Je));
                    break;
                case "internal":
                    if (t) {
                        x || (x = []);
                        break;
                    }
                case "text":
                    x = Et(x, We(zr.createUnparsedTextLike(T.data, T.kind === "internal"), T));
                    break;
                default:
                    I.assertNever(T);
            }
            if (!x) {
                let T = zr.createUnparsedTextLike(void 0, !1);
                kd(T, 0, typeof n == "function" ? n() : n), x = [
                    T
                ];
            }
            let S = q_.createUnparsedSource(a ?? Je, void 0, x);
            return a_(a, S), a_(x, S), a_(u, S), S.hasNoDefaultLib = d, S.helpers = _, S.referencedFiles = p || Je, S.typeReferenceDirectives = m, S.libReferenceDirectives = y || Je, S;
        }
        function KM(e) {
            let t, n;
            for (let _ of e.sections)switch(_.kind){
                case "internal":
                case "text":
                    t = Et(t, We(zr.createUnparsedTextLike(_.data, _.kind === "internal"), _));
                    break;
                case "no-default-lib":
                case "reference":
                case "type":
                case "type-import":
                case "type-require":
                case "lib":
                    n = Et(n, We(zr.createUnparsedSyntheticReference(_), _));
                    break;
                case "prologue":
                case "emitHelpers":
                case "prepend":
                    break;
                default:
                    I.assertNever(_);
            }
            let a = zr.createUnparsedSource(Je, n, t ?? Je);
            return a_(n, a), a_(t, a), a.helpers = xa(e.sources && e.sources.helpers, (_)=>getAllUnscopedEmitHelpers().get(_)), a;
        }
        function ZM(e, t, n, a, _, p) {
            return g_(e) ? Lx(void 0, e, n, a, void 0, t, _, p) : Mx(e, t, n, a, _, p);
        }
        function Mx(e, t, n, a, _, p, m, y) {
            let u = q_.createInputFiles();
            u.javascriptPath = t, u.javascriptMapPath = n, u.declarationPath = a, u.declarationMapPath = _, u.buildInfoPath = p;
            let x = new Map, d = (N)=>{
                if (N === void 0) return;
                let q = x.get(N);
                return q === void 0 && (q = e(N), x.set(N, q !== void 0 ? q : !1)), q !== !1 ? q : void 0;
            }, S = (N)=>{
                let q = d(N);
                return q !== void 0 ? q : `/* Input file ${N} was missing */\r
`;
            }, T;
            return Object.defineProperties(u, {
                javascriptText: {
                    get: ()=>S(t)
                },
                javascriptMapText: {
                    get: ()=>d(n)
                },
                declarationText: {
                    get: ()=>S(I.checkDefined(a))
                },
                declarationMapText: {
                    get: ()=>d(_)
                },
                buildInfo: {
                    get: ()=>{
                        if (T === void 0 && p) {
                            if (m != null && m.getBuildInfo) T = m.getBuildInfo(p, y.configFilePath) ?? !1;
                            else {
                                let N = d(p);
                                T = N !== void 0 ? getBuildInfo(p, N) ?? !1 : !1;
                            }
                        }
                        return T || void 0;
                    }
                }
            }), u;
        }
        function Lx(e, t, n, a, _, p, m, y, u, x, d) {
            let S = q_.createInputFiles();
            return S.javascriptPath = e, S.javascriptText = t, S.javascriptMapPath = n, S.javascriptMapText = a, S.declarationPath = _, S.declarationText = p, S.declarationMapPath = m, S.declarationMapText = y, S.buildInfoPath = u, S.buildInfo = x, S.oldFileOfCurrentEmit = d, S;
        }
        function eL(e, t, n) {
            return new (B6 || (B6 = Ct.getSourceMapSourceConstructor()))(e, t, n);
        }
        function nr(e, t) {
            if (e.original !== t && (e.original = t, t)) {
                let n = t.emitNode;
                n && (e.emitNode = tL(n, e.emitNode));
            }
            return e;
        }
        function tL(e, t) {
            let { flags: n, internalFlags: a, leadingComments: _, trailingComments: p, commentRange: m, sourceMapRange: y, tokenSourceMapRanges: u, constantValue: x, helpers: d, startsOnNewLine: S, snippetElement: T, classThis: A, assignedName: N } = e;
            if (t || (t = {}), n && (t.flags = n), a && (t.internalFlags = a & -9), _ && (t.leadingComments = zn(_.slice(), t.leadingComments)), p && (t.trailingComments = zn(p.slice(), t.trailingComments)), m && (t.commentRange = m), y && (t.sourceMapRange = y), u && (t.tokenSourceMapRanges = nL(u, t.tokenSourceMapRanges)), x !== void 0 && (t.constantValue = x), d) for (let q of d)t.helpers = gv(t.helpers, q);
            return S !== void 0 && (t.startsOnNewLine = S), T !== void 0 && (t.snippetElement = T), A && (t.classThis = A), N && (t.assignedName = N), t;
        }
        function nL(e, t) {
            t || (t = []);
            for(let n in e)t[n] = e[n];
            return t;
        }
        var sl, Z0, fb, mr, eg, $s, F6, zr, B6, rL = It({
            "src/compiler/factory/nodeFactory.ts" () {
                "use strict";
                En(), sl = 0, Z0 = ((e)=>(e[e.None = 0] = "None", e[e.NoParenthesizerRules = 1] = "NoParenthesizerRules", e[e.NoNodeConverters = 2] = "NoNodeConverters", e[e.NoIndentationOnFreshPropertyAccess = 4] = "NoIndentationOnFreshPropertyAccess", e[e.NoOriginalNode = 8] = "NoOriginalNode", e))(Z0 || {}), fb = [], eg = {}, $s = Ix(), F6 = {
                    createBaseSourceFileNode: (e)=>el($s.createBaseSourceFileNode(e)),
                    createBaseIdentifierNode: (e)=>el($s.createBaseIdentifierNode(e)),
                    createBasePrivateIdentifierNode: (e)=>el($s.createBasePrivateIdentifierNode(e)),
                    createBaseTokenNode: (e)=>el($s.createBaseTokenNode(e)),
                    createBaseNode: (e)=>el($s.createBaseNode(e))
                }, zr = Pd(4, F6);
            }
        }), iL = ()=>{}, aL = ()=>{};
        function lo(e) {
            return e.kind === 9;
        }
        function db(e) {
            return e.kind === 10;
        }
        function Tr(e) {
            return e.kind === 11;
        }
        function Id(e) {
            return e.kind === 12;
        }
        function oL(e) {
            return e.kind === 14;
        }
        function Jx(e) {
            return e.kind === 15;
        }
        function sL(e) {
            return e.kind === 16;
        }
        function _L(e) {
            return e.kind === 17;
        }
        function cL(e) {
            return e.kind === 18;
        }
        function lL(e) {
            return e.kind === 26;
        }
        function Rx(e) {
            return e.kind === 28;
        }
        function mb(e) {
            return e.kind === 40;
        }
        function hb(e) {
            return e.kind === 41;
        }
        function uL(e) {
            return e.kind === 42;
        }
        function Nd(e) {
            return e.kind === 54;
        }
        function Nl(e) {
            return e.kind === 58;
        }
        function pL(e) {
            return e.kind === 59;
        }
        function fL(e) {
            return e.kind === 29;
        }
        function dL(e) {
            return e.kind === 39;
        }
        function Ae(e) {
            return e.kind === 80;
        }
        function Vn(e) {
            return e.kind === 81;
        }
        function jx(e) {
            return e.kind === 95;
        }
        function mL(e) {
            return e.kind === 90;
        }
        function _l(e) {
            return e.kind === 134;
        }
        function hL(e) {
            return e.kind === 131;
        }
        function yL(e) {
            return e.kind === 135;
        }
        function Fx(e) {
            return e.kind === 148;
        }
        function gL(e) {
            return e.kind === 126;
        }
        function bL(e) {
            return e.kind === 128;
        }
        function vL(e) {
            return e.kind === 164;
        }
        function TL(e) {
            return e.kind === 129;
        }
        function zf(e) {
            return e.kind === 108;
        }
        function Bx(e) {
            return e.kind === 102;
        }
        function SL(e) {
            return e.kind === 84;
        }
        function O_(e) {
            return e.kind === 166;
        }
        function oo(e) {
            return e.kind === 167;
        }
        function Lo(e) {
            return e.kind === 168;
        }
        function Pa(e) {
            return e.kind === 169;
        }
        function M_(e) {
            return e.kind === 170;
        }
        function Zl(e) {
            return e.kind === 171;
        }
        function Ia(e) {
            return e.kind === 172;
        }
        function Ux(e) {
            return e.kind === 173;
        }
        function f_(e) {
            return e.kind === 174;
        }
        function eu(e) {
            return e.kind === 175;
        }
        function L_(e) {
            return e.kind === 176;
        }
        function d_(e) {
            return e.kind === 177;
        }
        function Zo(e) {
            return e.kind === 178;
        }
        function yb(e) {
            return e.kind === 179;
        }
        function qx(e) {
            return e.kind === 180;
        }
        function gb(e) {
            return e.kind === 181;
        }
        function zx(e) {
            return e.kind === 182;
        }
        function J_(e) {
            return e.kind === 183;
        }
        function tu(e) {
            return e.kind === 184;
        }
        function bb(e) {
            return e.kind === 185;
        }
        function Wx(e) {
            return e.kind === 186;
        }
        function Im(e) {
            return e.kind === 187;
        }
        function Vx(e) {
            return e.kind === 188;
        }
        function Hx(e) {
            return e.kind === 189;
        }
        function vb(e) {
            return e.kind === 202;
        }
        function Gx(e) {
            return e.kind === 190;
        }
        function Xx(e) {
            return e.kind === 191;
        }
        function $x(e) {
            return e.kind === 192;
        }
        function Qx(e) {
            return e.kind === 193;
        }
        function Yx(e) {
            return e.kind === 194;
        }
        function Kx(e) {
            return e.kind === 195;
        }
        function Tb(e) {
            return e.kind === 196;
        }
        function Sb(e) {
            return e.kind === 197;
        }
        function Zx(e) {
            return e.kind === 198;
        }
        function e8(e) {
            return e.kind === 199;
        }
        function t8(e) {
            return e.kind === 200;
        }
        function xb(e) {
            return e.kind === 201;
        }
        function nu(e) {
            return e.kind === 205;
        }
        function xL(e) {
            return e.kind === 204;
        }
        function wL(e) {
            return e.kind === 203;
        }
        function EL(e) {
            return e.kind === 206;
        }
        function CL(e) {
            return e.kind === 207;
        }
        function ru(e) {
            return e.kind === 208;
        }
        function iu(e) {
            return e.kind === 209;
        }
        function uo(e) {
            return e.kind === 210;
        }
        function Ln(e) {
            return e.kind === 211;
        }
        function Ki(e) {
            return e.kind === 212;
        }
        function R_(e) {
            return e.kind === 213;
        }
        function n8(e) {
            return e.kind === 214;
        }
        function r8(e) {
            return e.kind === 215;
        }
        function AL(e) {
            return e.kind === 216;
        }
        function cs(e) {
            return e.kind === 217;
        }
        function Nm(e) {
            return e.kind === 218;
        }
        function Om(e) {
            return e.kind === 219;
        }
        function kL(e) {
            return e.kind === 220;
        }
        function DL(e) {
            return e.kind === 221;
        }
        function wb(e) {
            return e.kind === 222;
        }
        function PL(e) {
            return e.kind === 223;
        }
        function Mm(e) {
            return e.kind === 224;
        }
        function i8(e) {
            return e.kind === 225;
        }
        function At(e) {
            return e.kind === 226;
        }
        function IL(e) {
            return e.kind === 227;
        }
        function NL(e) {
            return e.kind === 228;
        }
        function OL(e) {
            return e.kind === 229;
        }
        function Eb(e) {
            return e.kind === 230;
        }
        function Ol(e) {
            return e.kind === 231;
        }
        function Lm(e) {
            return e.kind === 232;
        }
        function Cb(e) {
            return e.kind === 233;
        }
        function ML(e) {
            return e.kind === 234;
        }
        function LL(e) {
            return e.kind === 238;
        }
        function Uo(e) {
            return e.kind === 235;
        }
        function Ab(e) {
            return e.kind === 236;
        }
        function JL(e) {
            return e.kind === 237;
        }
        function a8(e) {
            return e.kind === 360;
        }
        function j_(e) {
            return e.kind === 361;
        }
        function RL(e) {
            return e.kind === 239;
        }
        function jL(e) {
            return e.kind === 240;
        }
        function au(e) {
            return e.kind === 241;
        }
        function ls(e) {
            return e.kind === 243;
        }
        function FL(e) {
            return e.kind === 242;
        }
        function ou(e) {
            return e.kind === 244;
        }
        function BL(e) {
            return e.kind === 245;
        }
        function UL(e) {
            return e.kind === 246;
        }
        function qL(e) {
            return e.kind === 247;
        }
        function o8(e) {
            return e.kind === 248;
        }
        function zL(e) {
            return e.kind === 249;
        }
        function WL(e) {
            return e.kind === 250;
        }
        function VL(e) {
            return e.kind === 251;
        }
        function HL(e) {
            return e.kind === 252;
        }
        function GL(e) {
            return e.kind === 253;
        }
        function XL(e) {
            return e.kind === 254;
        }
        function $L(e) {
            return e.kind === 255;
        }
        function s8(e) {
            return e.kind === 256;
        }
        function QL(e) {
            return e.kind === 257;
        }
        function YL(e) {
            return e.kind === 258;
        }
        function KL(e) {
            return e.kind === 259;
        }
        function Li(e) {
            return e.kind === 260;
        }
        function kb(e) {
            return e.kind === 261;
        }
        function us(e) {
            return e.kind === 262;
        }
        function es(e) {
            return e.kind === 263;
        }
        function su(e) {
            return e.kind === 264;
        }
        function Db(e) {
            return e.kind === 265;
        }
        function Pb(e) {
            return e.kind === 266;
        }
        function Zi(e) {
            return e.kind === 267;
        }
        function _8(e) {
            return e.kind === 268;
        }
        function ZL(e) {
            return e.kind === 269;
        }
        function Ib(e) {
            return e.kind === 270;
        }
        function Nb(e) {
            return e.kind === 271;
        }
        function Ob(e) {
            return e.kind === 272;
        }
        function eJ(e) {
            return e.kind === 273;
        }
        function tJ(e) {
            return e.kind === 302;
        }
        function nJ(e) {
            return e.kind === 300;
        }
        function rJ(e) {
            return e.kind === 301;
        }
        function iJ(e) {
            return e.kind === 300;
        }
        function aJ(e) {
            return e.kind === 301;
        }
        function Mb(e) {
            return e.kind === 274;
        }
        function Jm(e) {
            return e.kind === 280;
        }
        function oJ(e) {
            return e.kind === 275;
        }
        function c8(e) {
            return e.kind === 276;
        }
        function ps(e) {
            return e.kind === 277;
        }
        function F_(e) {
            return e.kind === 278;
        }
        function l8(e) {
            return e.kind === 279;
        }
        function u8(e) {
            return e.kind === 281;
        }
        function sJ(e) {
            return e.kind === 282;
        }
        function Lb(e) {
            return e.kind === 359;
        }
        function _J(e) {
            return e.kind === 362;
        }
        function Rm(e) {
            return e.kind === 283;
        }
        function tg(e) {
            return e.kind === 284;
        }
        function cJ(e) {
            return e.kind === 285;
        }
        function Jo(e) {
            return e.kind === 286;
        }
        function Wf(e) {
            return e.kind === 287;
        }
        function yl(e) {
            return e.kind === 288;
        }
        function Jb(e) {
            return e.kind === 289;
        }
        function lJ(e) {
            return e.kind === 290;
        }
        function uJ(e) {
            return e.kind === 291;
        }
        function Rb(e) {
            return e.kind === 292;
        }
        function pJ(e) {
            return e.kind === 293;
        }
        function fJ(e) {
            return e.kind === 294;
        }
        function B_(e) {
            return e.kind === 295;
        }
        function dJ(e) {
            return e.kind === 296;
        }
        function p8(e) {
            return e.kind === 297;
        }
        function Ml(e) {
            return e.kind === 298;
        }
        function mJ(e) {
            return e.kind === 299;
        }
        function fs(e) {
            return e.kind === 303;
        }
        function _u(e) {
            return e.kind === 304;
        }
        function f8(e) {
            return e.kind === 305;
        }
        function d8(e) {
            return e.kind === 306;
        }
        function hJ(e) {
            return e.kind === 308;
        }
        function ci(e) {
            return e.kind === 312;
        }
        function yJ(e) {
            return e.kind === 313;
        }
        function gJ(e) {
            return e.kind === 314;
        }
        function m8(e) {
            return e.kind === 316;
        }
        function Vf(e) {
            return e.kind === 317;
        }
        function r_(e) {
            return e.kind === 318;
        }
        function bJ(e) {
            return e.kind === 331;
        }
        function vJ(e) {
            return e.kind === 332;
        }
        function TJ(e) {
            return e.kind === 333;
        }
        function SJ(e) {
            return e.kind === 319;
        }
        function xJ(e) {
            return e.kind === 320;
        }
        function h8(e) {
            return e.kind === 321;
        }
        function wJ(e) {
            return e.kind === 322;
        }
        function EJ(e) {
            return e.kind === 323;
        }
        function jm(e) {
            return e.kind === 324;
        }
        function CJ(e) {
            return e.kind === 325;
        }
        function AJ(e) {
            return e.kind === 326;
        }
        function ds(e) {
            return e.kind === 327;
        }
        function jb(e) {
            return e.kind === 329;
        }
        function cu(e) {
            return e.kind === 330;
        }
        function Fm(e) {
            return e.kind === 335;
        }
        function kJ(e) {
            return e.kind === 337;
        }
        function y8(e) {
            return e.kind === 339;
        }
        function DJ(e) {
            return e.kind === 345;
        }
        function Fb(e) {
            return e.kind === 340;
        }
        function Bb(e) {
            return e.kind === 341;
        }
        function Ub(e) {
            return e.kind === 342;
        }
        function qb(e) {
            return e.kind === 343;
        }
        function g8(e) {
            return e.kind === 344;
        }
        function zb(e) {
            return e.kind === 346;
        }
        function Wb(e) {
            return e.kind === 338;
        }
        function PJ(e) {
            return e.kind === 354;
        }
        function b8(e) {
            return e.kind === 347;
        }
        function m_(e) {
            return e.kind === 348;
        }
        function Vb(e) {
            return e.kind === 349;
        }
        function v8(e) {
            return e.kind === 350;
        }
        function lu(e) {
            return e.kind === 351;
        }
        function ts(e) {
            return e.kind === 352;
        }
        function IJ(e) {
            return e.kind === 353;
        }
        function NJ(e) {
            return e.kind === 334;
        }
        function OJ(e) {
            return e.kind === 355;
        }
        function T8(e) {
            return e.kind === 336;
        }
        function Hb(e) {
            return e.kind === 357;
        }
        function MJ(e) {
            return e.kind === 356;
        }
        function LJ(e) {
            return e.kind === 358;
        }
        var JJ = It({
            "src/compiler/factory/nodeTests.ts" () {
                "use strict";
                En();
            }
        });
        function RJ(e) {
            return e.createExportDeclaration(void 0, !1, e.createNamedExports([]), void 0);
        }
        function Bm(e, t, n, a) {
            if (oo(n)) return We(e.createElementAccessExpression(t, n.expression), a);
            {
                let _ = We(ro(n) ? e.createPropertyAccessExpression(t, n) : e.createElementAccessExpression(t, n), n);
                return addEmitFlags(_, 128), _;
            }
        }
        function Gb(e, t) {
            let n = q_.createIdentifier(e || "React");
            return Qi(n, Ul(t)), n;
        }
        function Xb(e, t, n) {
            if (O_(t)) {
                let a = Xb(e, t.left, n), _ = e.createIdentifier(Lt(t.right));
                return _.escapedText = t.right.escapedText, e.createPropertyAccessExpression(a, _);
            } else return Gb(Lt(t), n);
        }
        function S8(e, t, n, a) {
            return t ? Xb(e, t, a) : e.createPropertyAccessExpression(Gb(n, a), "createElement");
        }
        function jJ(e, t, n, a) {
            return t ? Xb(e, t, a) : e.createPropertyAccessExpression(Gb(n, a), "Fragment");
        }
        function FJ(e, t, n, a, _, p) {
            let m = [
                n
            ];
            if (a && m.push(a), _ && _.length > 0) {
                if (a || m.push(e.createNull()), _.length > 1) for (let y of _)zm(y), m.push(y);
                else m.push(_[0]);
            }
            return We(e.createCallExpression(t, void 0, m), p);
        }
        function BJ(e, t, n, a, _, p, m) {
            let u = [
                jJ(e, n, a, p),
                e.createNull()
            ];
            if (_ && _.length > 0) {
                if (_.length > 1) for (let x of _)zm(x), u.push(x);
                else u.push(_[0]);
            }
            return We(e.createCallExpression(S8(e, t, a, p), void 0, u), m);
        }
        function UJ(e, t, n) {
            if (kb(t)) {
                let a = pg(t.declarations), _ = e.updateVariableDeclaration(a, a.name, void 0, void 0, n);
                return We(e.createVariableStatement(void 0, e.updateVariableDeclarationList(t, [
                    _
                ])), t);
            } else {
                let a = We(e.createAssignment(t, n), t);
                return We(e.createExpressionStatement(a), t);
            }
        }
        function qJ(e, t, n) {
            return au(t) ? e.updateBlock(t, We(e.createNodeArray([
                n,
                ...t.statements
            ]), t.statements)) : e.createBlock(e.createNodeArray([
                t,
                n
            ]), !0);
        }
        function x8(e, t) {
            if (O_(t)) {
                let n = x8(e, t.left), a = Qi(We(e.cloneNode(t.right), t.right), t.right.parent);
                return We(e.createPropertyAccessExpression(n, a), t);
            } else return Qi(We(e.cloneNode(t), t), t.parent);
        }
        function w8(e, t) {
            return Ae(t) ? e.createStringLiteralFromNode(t) : oo(t) ? Qi(We(e.cloneNode(t.expression), t.expression), t.expression.parent) : Qi(We(e.cloneNode(t), t), t.parent);
        }
        function zJ(e, t, n, a, _) {
            let { firstAccessor: p, getAccessor: m, setAccessor: y } = J2(t, n);
            if (n === p) return We(e.createObjectDefinePropertyCall(a, w8(e, n.name), e.createPropertyDescriptor({
                enumerable: e.createFalse(),
                configurable: !0,
                get: m && We(nr(e.createFunctionExpression(bd(m), void 0, void 0, void 0, m.parameters, void 0, m.body), m), m),
                set: y && We(nr(e.createFunctionExpression(bd(y), void 0, void 0, void 0, y.parameters, void 0, y.body), y), y)
            }, !_)), p);
        }
        function WJ(e, t, n) {
            return nr(We(e.createAssignment(Bm(e, n, t.name, t.name), t.initializer), t), t);
        }
        function VJ(e, t, n) {
            return nr(We(e.createAssignment(Bm(e, n, t.name, t.name), e.cloneNode(t.name)), t), t);
        }
        function HJ(e, t, n) {
            return nr(We(e.createAssignment(Bm(e, n, t.name, t.name), nr(We(e.createFunctionExpression(bd(t), t.asteriskToken, void 0, void 0, t.parameters, void 0, t.body), t), t)), t), t);
        }
        function GJ(e, t, n, a) {
            switch(n.name && Vn(n.name) && I.failBadSyntaxKind(n.name, "Private identifiers are not allowed in object literals."), n.kind){
                case 177:
                case 178:
                    return zJ(e, t.properties, n, a, !!t.multiLine);
                case 303:
                    return WJ(e, n, a);
                case 304:
                    return VJ(e, n, a);
                case 174:
                    return HJ(e, n, a);
            }
        }
        function XJ(e, t, n, a, _) {
            let p = t.operator;
            I.assert(p === 46 || p === 47, "Expected 'node' to be a pre- or post-increment or pre- or post-decrement expression");
            let m = e.createTempVariable(a);
            n = e.createAssignment(m, n), We(n, t.operand);
            let y = Mm(t) ? e.createPrefixUnaryExpression(p, m) : e.createPostfixUnaryExpression(m, p);
            return We(y, t), _ && (y = e.createAssignment(_, y), We(y, t)), n = e.createComma(n, y), We(n, t), i8(t) && (n = e.createComma(n, m), We(n, t)), n;
        }
        function $J(e) {
            return (ai(e) & 65536) !== 0;
        }
        function ng(e) {
            return (ai(e) & 32768) !== 0;
        }
        function QJ(e) {
            return (ai(e) & 16384) !== 0;
        }
        function E8(e) {
            return Tr(e.expression) && e.expression.text === "use strict";
        }
        function C8(e) {
            for (let t of e)if (Sa(t)) {
                if (E8(t)) return t;
            } else break;
        }
        function A8(e) {
            let t = y_(e);
            return t !== void 0 && Sa(t) && E8(t);
        }
        function Um(e) {
            return e.kind === 226 && e.operatorToken.kind === 28;
        }
        function YJ(e) {
            return Um(e) || j_(e);
        }
        function k8(e) {
            return cs(e) && Vt(e) && !!nm(e);
        }
        function KJ(e) {
            let t = rm(e);
            return I.assertIsDefined(t), t;
        }
        function qm(e, t = 15) {
            switch(e.kind){
                case 217:
                    return t & 16 && k8(e) ? !1 : (t & 1) !== 0;
                case 216:
                case 234:
                case 233:
                case 238:
                    return (t & 2) !== 0;
                case 235:
                    return (t & 4) !== 0;
                case 360:
                    return (t & 8) !== 0;
            }
            return !1;
        }
        function ms(e, t = 15) {
            for(; qm(e, t);)e = e.expression;
            return e;
        }
        function ZJ(e, t = 15) {
            let n = e.parent;
            for(; qm(n, t);)n = n.parent, I.assert(n);
            return n;
        }
        function eR(e) {
            return ms(e, 6);
        }
        function zm(e) {
            return setStartsOnNewLine(e, !0);
        }
        function D8(e) {
            let t = Bl(e, ci), n = t && t.emitNode;
            return n && n.externalHelpersModuleName;
        }
        function tR(e) {
            let t = Bl(e, ci), n = t && t.emitNode;
            return !!n && (!!n.externalHelpersModuleName || !!n.externalHelpers);
        }
        function nR(e, t, n, a, _, p, m) {
            if (a.importHelpers && e2(n, a)) {
                let y, u = _i(a);
                if (u >= 5 && u <= 99 || n.impliedNodeFormat === 99) {
                    let x = getEmitHelpers(n);
                    if (x) {
                        let d = [];
                        for (let S of x)if (!S.scoped) {
                            let T = S.importName;
                            T && Ll(d, T);
                        }
                        if (Ze(d)) {
                            d.sort(Ii), y = e.createNamedImports(xa(d, (A)=>CT(n, A) ? e.createImportSpecifier(!1, void 0, e.createIdentifier(A)) : e.createImportSpecifier(!1, e.createIdentifier(A), t.getUnscopedHelperName(A))));
                            let S = Bl(n, ci), T = getOrCreateEmitNode(S);
                            T.externalHelpers = !0;
                        }
                    }
                } else {
                    let x = P8(e, n, a, _, p || m);
                    x && (y = e.createNamespaceImport(x));
                }
                if (y) {
                    let x = e.createImportDeclaration(void 0, e.createImportClause(!1, void 0, y), e.createStringLiteral(km), void 0);
                    return addInternalEmitFlags(x, 2), x;
                }
            }
        }
        function P8(e, t, n, a, _) {
            if (n.importHelpers && e2(t, n)) {
                let p = D8(t);
                if (p) return p;
                let m = _i(n), y = (a || X2(n) && _) && m !== 4 && (m < 5 || t.impliedNodeFormat === 1);
                if (!y) {
                    let u = getEmitHelpers(t);
                    if (u) {
                        for (let x of u)if (!x.scoped) {
                            y = !0;
                            break;
                        }
                    }
                }
                if (y) {
                    let u = Bl(t, ci), x = getOrCreateEmitNode(u);
                    return x.externalHelpersModuleName || (x.externalHelpersModuleName = e.createUniqueName(km));
                }
            }
        }
        function rR(e, t, n) {
            let a = _3(t);
            if (a && !c3(t) && !IT(t)) {
                let _ = a.name;
                return va(_) ? _ : e.createIdentifier(Qo(n, _) || Lt(_));
            }
            if (t.kind === 272 && t.importClause || t.kind === 278 && t.moduleSpecifier) return e.getGeneratedNameForNode(t);
        }
        function iR(e, t, n, a, _, p) {
            let m = T2(t);
            if (m && Tr(m)) return oR(t, a, e, _, p) || aR(e, m, n) || e.cloneNode(m);
        }
        function aR(e, t, n) {
            let a = n.renamedDependencies && n.renamedDependencies.get(t.text);
            return a ? e.createStringLiteral(a) : void 0;
        }
        function I8(e, t, n, a) {
            if (t) {
                if (t.moduleName) return e.createStringLiteral(t.moduleName);
                if (!t.isDeclarationFile && vm(a)) return e.createStringLiteral(M2(n, t.fileName));
            }
        }
        function oR(e, t, n, a, _) {
            return I8(n, a.getExternalModuleFileFromDeclaration(e), t, _);
        }
        function N8(e) {
            if (Hg(e)) return e.initializer;
            if (fs(e)) {
                let t = e.initializer;
                return si(t, !0) ? t.right : void 0;
            }
            if (_u(e)) return e.objectAssignmentInitializer;
            if (si(e, !0)) return e.right;
            if (Eb(e)) return N8(e.expression);
        }
        function Ro(e) {
            if (Hg(e)) return e.name;
            if (Vg(e)) {
                switch(e.kind){
                    case 303:
                        return Ro(e.initializer);
                    case 304:
                        return e.name;
                    case 305:
                        return Ro(e.expression);
                }
                return;
            }
            return si(e, !0) ? Ro(e.left) : Eb(e) ? Ro(e.expression) : e;
        }
        function sR(e) {
            switch(e.kind){
                case 169:
                case 208:
                    return e.dotDotDotToken;
                case 230:
                case 305:
                    return e;
            }
        }
        function _R(e) {
            let t = O8(e);
            return I.assert(!!t || f8(e), "Invalid property name for binding element."), t;
        }
        function O8(e) {
            switch(e.kind){
                case 208:
                    if (e.propertyName) {
                        let n = e.propertyName;
                        return Vn(n) ? I.failBadSyntaxKind(n) : oo(n) && U6(n.expression) ? n.expression : n;
                    }
                    break;
                case 303:
                    if (e.name) {
                        let n = e.name;
                        return Vn(n) ? I.failBadSyntaxKind(n) : oo(n) && U6(n.expression) ? n.expression : n;
                    }
                    break;
                case 305:
                    return e.name && Vn(e.name) ? I.failBadSyntaxKind(e.name) : e.name;
            }
            let t = Ro(e);
            if (t && Vl(t)) return t;
        }
        function U6(e) {
            let t = e.kind;
            return t === 11 || t === 9;
        }
        function M8(e) {
            switch(e.kind){
                case 206:
                case 207:
                case 209:
                    return e.elements;
                case 210:
                    return e.properties;
            }
        }
        function rg(e) {
            if (e) {
                let t = e;
                for(;;){
                    if (Ae(t) || !t.body) return Ae(t) ? t : t.name;
                    t = t.body;
                }
            }
        }
        function cR(e) {
            let t = e.kind;
            return t === 176 || t === 178;
        }
        function L8(e) {
            let t = e.kind;
            return t === 176 || t === 177 || t === 178;
        }
        function lR(e) {
            let t = e.kind;
            return t === 303 || t === 304 || t === 262 || t === 176 || t === 181 || t === 175 || t === 282 || t === 243 || t === 264 || t === 265 || t === 266 || t === 267 || t === 271 || t === 272 || t === 270 || t === 278 || t === 277;
        }
        function uR(e) {
            let t = e.kind;
            return t === 175 || t === 303 || t === 304 || t === 282 || t === 270;
        }
        function pR(e) {
            return Nl(e) || Nd(e);
        }
        function fR(e) {
            return Ae(e) || Sb(e);
        }
        function dR(e) {
            return Fx(e) || mb(e) || hb(e);
        }
        function mR(e) {
            return Nl(e) || mb(e) || hb(e);
        }
        function hR(e) {
            return Ae(e) || Tr(e);
        }
        function yR(e) {
            let t = e.kind;
            return t === 106 || t === 112 || t === 97 || Fg(e) || Mm(e);
        }
        function gR(e) {
            return e === 43;
        }
        function bR(e) {
            return e === 42 || e === 44 || e === 45;
        }
        function vR(e) {
            return gR(e) || bR(e);
        }
        function TR(e) {
            return e === 40 || e === 41;
        }
        function SR(e) {
            return TR(e) || vR(e);
        }
        function xR(e) {
            return e === 48 || e === 49 || e === 50;
        }
        function $b(e) {
            return xR(e) || SR(e);
        }
        function wR(e) {
            return e === 30 || e === 33 || e === 32 || e === 34 || e === 104 || e === 103;
        }
        function ER(e) {
            return wR(e) || $b(e);
        }
        function CR(e) {
            return e === 35 || e === 37 || e === 36 || e === 38;
        }
        function AR(e) {
            return CR(e) || ER(e);
        }
        function kR(e) {
            return e === 51 || e === 52 || e === 53;
        }
        function DR(e) {
            return kR(e) || AR(e);
        }
        function PR(e) {
            return e === 56 || e === 57;
        }
        function IR(e) {
            return PR(e) || DR(e);
        }
        function NR(e) {
            return e === 61 || IR(e) || A_(e);
        }
        function OR(e) {
            return NR(e) || e === 28;
        }
        function MR(e) {
            return OR(e.kind);
        }
        function LR(e, t, n, a, _, p) {
            let m = new R8(e, t, n, a, _, p);
            return y;
            function y(u, x) {
                let d = {
                    value: void 0
                }, S = [
                    Md.enter
                ], T = [
                    u
                ], A = [
                    void 0
                ], N = 0;
                for(; S[N] !== Md.done;)N = S[N](m, N, S, T, A, d, x);
                return I.assertEqual(N, 0), d.value;
            }
        }
        function J8(e) {
            return e === 95 || e === 90;
        }
        function JR(e) {
            let t = e.kind;
            return J8(t);
        }
        function RR(e) {
            let t = e.kind;
            return Ei(t) && !J8(t);
        }
        function jR(e, t) {
            if (t !== void 0) return t.length === 0 ? t : We(e.createNodeArray([], t.hasTrailingComma), t);
        }
        function FR(e) {
            var t;
            let n = e.emitNode.autoGenerate;
            if (n.flags & 4) {
                let a = n.id, _ = e, p = _.original;
                for(; p;){
                    _ = p;
                    let m = (t = _.emitNode) == null ? void 0 : t.autoGenerate;
                    if (ro(_) && (m === void 0 || m.flags & 4 && m.id !== a)) break;
                    p = _.original;
                }
                return _;
            }
            return e;
        }
        function ig(e, t) {
            return typeof e == "object" ? Od(!1, e.prefix, e.node, e.suffix, t) : typeof e == "string" ? e.length > 0 && e.charCodeAt(0) === 35 ? e.slice(1) : e : "";
        }
        function BR(e, t) {
            return typeof e == "string" ? e : UR(e, I.checkDefined(t));
        }
        function UR(e, t) {
            return Bg(e) ? t(e).slice(1) : va(e) ? t(e) : Vn(e) ? e.escapedText.slice(1) : Lt(e);
        }
        function Od(e, t, n, a, _) {
            return t = ig(t, _), a = ig(a, _), n = BR(n, _), `${e ? "#" : ""}${t}${n}${a}`;
        }
        function qR(e, t, n, a) {
            return e.updatePropertyDeclaration(t, n, e.getGeneratedPrivateNameForNode(t.name, void 0, "_accessor_storage"), void 0, void 0, a);
        }
        function zR(e, t, n, a, _ = e.createThis()) {
            return e.createGetAccessorDeclaration(n, a, [], void 0, e.createBlock([
                e.createReturnStatement(e.createPropertyAccessExpression(_, e.getGeneratedPrivateNameForNode(t.name, void 0, "_accessor_storage")))
            ]));
        }
        function WR(e, t, n, a, _ = e.createThis()) {
            return e.createSetAccessorDeclaration(n, a, [
                e.createParameterDeclaration(void 0, void 0, "value")
            ], e.createBlock([
                e.createExpressionStatement(e.createAssignment(e.createPropertyAccessExpression(_, e.getGeneratedPrivateNameForNode(t.name, void 0, "_accessor_storage")), e.createIdentifier("value")))
            ]));
        }
        function VR(e) {
            let t = e.expression;
            for(;;){
                if (t = ms(t), j_(t)) {
                    t = Ea(t.elements);
                    continue;
                }
                if (Um(t)) {
                    t = t.right;
                    continue;
                }
                if (si(t, !0) && va(t.left)) return t;
                break;
            }
        }
        function HR(e) {
            return cs(e) && ya(e) && !e.emitNode;
        }
        function cl(e, t) {
            if (HR(e)) cl(e.expression, t);
            else if (Um(e)) cl(e.left, t), cl(e.right, t);
            else if (j_(e)) for (let n of e.elements)cl(n, t);
            else t.push(e);
        }
        function GR(e) {
            let t = [];
            return cl(e, t), t;
        }
        function Qb(e) {
            if (e.transformFlags & 65536) return !0;
            if (e.transformFlags & 128) for (let t of M8(e)){
                let n = Ro(t);
                if (n && aT(n) && (n.transformFlags & 65536 || n.transformFlags & 128 && Qb(n))) return !0;
            }
            return !1;
        }
        var Md, R8, XR = It({
            "src/compiler/factory/utilities.ts" () {
                "use strict";
                En(), ((e)=>{
                    function t(d, S, T, A, N, q, Q) {
                        let se = S > 0 ? N[S - 1] : void 0;
                        return I.assertEqual(T[S], t), N[S] = d.onEnter(A[S], se, Q), T[S] = y(d, t), S;
                    }
                    e.enter = t;
                    function n(d, S, T, A, N, q, Q) {
                        I.assertEqual(T[S], n), I.assertIsDefined(d.onLeft), T[S] = y(d, n);
                        let se = d.onLeft(A[S].left, N[S], A[S]);
                        return se ? (x(S, A, se), u(S, T, A, N, se)) : S;
                    }
                    e.left = n;
                    function a(d, S, T, A, N, q, Q) {
                        return I.assertEqual(T[S], a), I.assertIsDefined(d.onOperator), T[S] = y(d, a), d.onOperator(A[S].operatorToken, N[S], A[S]), S;
                    }
                    e.operator = a;
                    function _(d, S, T, A, N, q, Q) {
                        I.assertEqual(T[S], _), I.assertIsDefined(d.onRight), T[S] = y(d, _);
                        let se = d.onRight(A[S].right, N[S], A[S]);
                        return se ? (x(S, A, se), u(S, T, A, N, se)) : S;
                    }
                    e.right = _;
                    function p(d, S, T, A, N, q, Q) {
                        I.assertEqual(T[S], p), T[S] = y(d, p);
                        let se = d.onExit(A[S], N[S]);
                        if (S > 0) {
                            if (S--, d.foldState) {
                                let fe = T[S] === p ? "right" : "left";
                                N[S] = d.foldState(N[S], se, fe);
                            }
                        } else q.value = se;
                        return S;
                    }
                    e.exit = p;
                    function m(d, S, T, A, N, q, Q) {
                        return I.assertEqual(T[S], m), S;
                    }
                    e.done = m;
                    function y(d, S) {
                        switch(S){
                            case t:
                                if (d.onLeft) return n;
                            case n:
                                if (d.onOperator) return a;
                            case a:
                                if (d.onRight) return _;
                            case _:
                                return p;
                            case p:
                                return m;
                            case m:
                                return m;
                            default:
                                I.fail("Invalid state");
                        }
                    }
                    e.nextState = y;
                    function u(d, S, T, A, N) {
                        return d++, S[d] = t, T[d] = N, A[d] = void 0, d;
                    }
                    function x(d, S, T) {
                        if (I.shouldAssert(2)) for(; d >= 0;)I.assert(S[d] !== T, "Circular traversal detected."), d--;
                    }
                })(Md || (Md = {})), R8 = class {
                    constructor(e, t, n, a, _, p){
                        this.onEnter = e, this.onLeft = t, this.onOperator = n, this.onRight = a, this.onExit = _, this.foldState = p;
                    }
                };
            }
        });
        function We(e, t) {
            return t ? Za(e, t.pos, t.end) : e;
        }
        function U_(e) {
            let t = e.kind;
            return t === 168 || t === 169 || t === 171 || t === 172 || t === 173 || t === 174 || t === 176 || t === 177 || t === 178 || t === 181 || t === 185 || t === 218 || t === 219 || t === 231 || t === 243 || t === 262 || t === 263 || t === 264 || t === 265 || t === 266 || t === 267 || t === 271 || t === 272 || t === 277 || t === 278;
        }
        function j8(e) {
            let t = e.kind;
            return t === 169 || t === 172 || t === 174 || t === 177 || t === 178 || t === 231 || t === 263;
        }
        var $R = It({
            "src/compiler/factory/utilitiesPublic.ts" () {
                "use strict";
                En();
            }
        });
        function P(e, t) {
            return t && e(t);
        }
        function oe(e, t, n) {
            if (n) {
                if (t) return t(n);
                for (let a of n){
                    let _ = e(a);
                    if (_) return _;
                }
            }
        }
        function F8(e, t) {
            return e.charCodeAt(t + 1) === 42 && e.charCodeAt(t + 2) === 42 && e.charCodeAt(t + 3) !== 47;
        }
        function gl(e) {
            return wn(e.statements, QR) || YR(e);
        }
        function QR(e) {
            return U_(e) && KR(e, 95) || Nb(e) && Rm(e.moduleReference) || Ob(e) || ps(e) || F_(e) ? e : void 0;
        }
        function YR(e) {
            return e.flags & 8388608 ? B8(e) : void 0;
        }
        function B8(e) {
            return ZR(e) ? e : Wt(e, B8);
        }
        function KR(e, t) {
            return Ze(e.modifiers, (n)=>n.kind === t);
        }
        function ZR(e) {
            return Ab(e) && e.keywordToken === 102 && e.name.escapedText === "meta";
        }
        function q6(e, t, n) {
            return oe(t, n, e.typeParameters) || oe(t, n, e.parameters) || P(t, e.type);
        }
        function z6(e, t, n) {
            return oe(t, n, e.types);
        }
        function W6(e, t, n) {
            return P(t, e.type);
        }
        function V6(e, t, n) {
            return oe(t, n, e.elements);
        }
        function H6(e, t, n) {
            return P(t, e.expression) || P(t, e.questionDotToken) || oe(t, n, e.typeArguments) || oe(t, n, e.arguments);
        }
        function G6(e, t, n) {
            return oe(t, n, e.statements);
        }
        function X6(e, t, n) {
            return P(t, e.label);
        }
        function $6(e, t, n) {
            return oe(t, n, e.modifiers) || P(t, e.name) || oe(t, n, e.typeParameters) || oe(t, n, e.heritageClauses) || oe(t, n, e.members);
        }
        function Q6(e, t, n) {
            return oe(t, n, e.elements);
        }
        function Y6(e, t, n) {
            return P(t, e.propertyName) || P(t, e.name);
        }
        function K6(e, t, n) {
            return P(t, e.tagName) || oe(t, n, e.typeArguments) || P(t, e.attributes);
        }
        function Ao(e, t, n) {
            return P(t, e.type);
        }
        function Z6(e, t, n) {
            return P(t, e.tagName) || (e.isNameFirst ? P(t, e.name) || P(t, e.typeExpression) : P(t, e.typeExpression) || P(t, e.name)) || (typeof e.comment == "string" ? void 0 : oe(t, n, e.comment));
        }
        function ko(e, t, n) {
            return P(t, e.tagName) || P(t, e.typeExpression) || (typeof e.comment == "string" ? void 0 : oe(t, n, e.comment));
        }
        function ny(e, t, n) {
            return P(t, e.name);
        }
        function Qa(e, t, n) {
            return P(t, e.tagName) || (typeof e.comment == "string" ? void 0 : oe(t, n, e.comment));
        }
        function ej(e, t, n) {
            return P(t, e.expression);
        }
        function Wt(e, t, n) {
            if (e === void 0 || e.kind <= 165) return;
            let a = H8[e.kind];
            return a === void 0 ? void 0 : a(e, t, n);
        }
        function ag(e, t, n) {
            let a = ev(e), _ = [];
            for(; _.length < a.length;)_.push(e);
            for(; a.length !== 0;){
                let p = a.pop(), m = _.pop();
                if ($t(p)) {
                    if (n) {
                        let y = n(p, m);
                        if (y) {
                            if (y === "skip") continue;
                            return y;
                        }
                    }
                    for(let y = p.length - 1; y >= 0; --y)a.push(p[y]), _.push(m);
                } else {
                    let y = t(p, m);
                    if (y) {
                        if (y === "skip") continue;
                        return y;
                    }
                    if (p.kind >= 166) for (let u of ev(p))a.push(u), _.push(p);
                }
            }
        }
        function ev(e) {
            let t = [];
            return Wt(e, n, n), t;
            function n(a) {
                t.unshift(a);
            }
        }
        function U8(e) {
            e.externalModuleIndicator = gl(e);
        }
        function q8(e, t, n, a = !1, _) {
            var p, m, y, u;
            (p = ba) == null || p.push(ba.Phase.Parse, "createSourceFile", {
                path: e
            }, !0), A6("beforeParse");
            let x;
            (m = ed) == null || m.logStartParseSourceFile(e);
            let { languageVersion: d, setExternalModuleIndicator: S, impliedNodeFormat: T, jsDocParsingMode: A } = typeof n == "object" ? n : {
                languageVersion: n
            };
            if (d === 100) x = ri.parseSourceFile(e, t, d, void 0, a, 6, gr, A);
            else {
                let N = T === void 0 ? S : (q)=>(q.impliedNodeFormat = T, (S || U8)(q));
                x = ri.parseSourceFile(e, t, d, void 0, a, _, N, A);
            }
            return (y = ed) == null || y.logStopParseSourceFile(), A6("afterParse"), LE("Parse", "beforeParse", "afterParse"), (u = ba) == null || u.pop(), x;
        }
        function tj(e, t) {
            return ri.parseIsolatedEntityName(e, t);
        }
        function nj(e, t) {
            return ri.parseJsonText(e, t);
        }
        function ns(e) {
            return e.externalModuleIndicator !== void 0;
        }
        function Yb(e, t, n, a = !1) {
            let _ = Hf.updateSourceFile(e, t, n, a);
            return _.flags |= e.flags & 12582912, _;
        }
        function rj(e, t, n) {
            let a = ri.JSDocParser.parseIsolatedJSDocComment(e, t, n);
            return a && a.jsDoc && ri.fixupParentReferences(a.jsDoc), a;
        }
        function ij(e, t, n) {
            return ri.JSDocParser.parseJSDocTypeExpressionForTests(e, t, n);
        }
        function z8(e) {
            return ii(e, ub) || Na(e, ".ts") && os(e).includes(".d.");
        }
        function aj(e, t, n, a) {
            if (e) {
                if (e === "import") return 99;
                if (e === "require") return 1;
                a(t, n - t, B.resolution_mode_should_be_either_require_or_import);
            }
        }
        function W8(e, t) {
            let n = [];
            for (let a of Ho(t, 0) || Je){
                let _ = t.substring(a.pos, a.end);
                sj(n, a, _);
            }
            e.pragmas = new Map;
            for (let a of n){
                if (e.pragmas.has(a.name)) {
                    let _ = e.pragmas.get(a.name);
                    _ instanceof Array ? _.push(a.args) : e.pragmas.set(a.name, [
                        _,
                        a.args
                    ]);
                    continue;
                }
                e.pragmas.set(a.name, a.args);
            }
        }
        function V8(e, t) {
            e.checkJsDirective = void 0, e.referencedFiles = [], e.typeReferenceDirectives = [], e.libReferenceDirectives = [], e.amdDependencies = [], e.hasNoDefaultLib = !1, e.pragmas.forEach((n, a)=>{
                switch(a){
                    case "reference":
                        {
                            let _ = e.referencedFiles, p = e.typeReferenceDirectives, m = e.libReferenceDirectives;
                            wn(Nf(n), (y)=>{
                                let { types: u, lib: x, path: d, ["resolution-mode"]: S } = y.arguments;
                                if (y.arguments["no-default-lib"]) e.hasNoDefaultLib = !0;
                                else if (u) {
                                    let T = aj(S, u.pos, u.end, t);
                                    p.push({
                                        pos: u.pos,
                                        end: u.end,
                                        fileName: u.value,
                                        ...T ? {
                                            resolutionMode: T
                                        } : {}
                                    });
                                } else x ? m.push({
                                    pos: x.pos,
                                    end: x.end,
                                    fileName: x.value
                                }) : d ? _.push({
                                    pos: d.pos,
                                    end: d.end,
                                    fileName: d.value
                                }) : t(y.range.pos, y.range.end - y.range.pos, B.Invalid_reference_directive_syntax);
                            });
                            break;
                        }
                    case "amd-dependency":
                        e.amdDependencies = xa(Nf(n), (_)=>({
                                name: _.arguments.name,
                                path: _.arguments.path
                            }));
                        break;
                    case "amd-module":
                        if (n instanceof Array) for (let _ of n)e.moduleName && t(_.range.pos, _.range.end - _.range.pos, B.An_AMD_module_cannot_have_multiple_name_assignments), e.moduleName = _.arguments.name;
                        else e.moduleName = n.arguments.name;
                        break;
                    case "ts-nocheck":
                    case "ts-check":
                        wn(Nf(n), (_)=>{
                            (!e.checkJsDirective || _.range.pos > e.checkJsDirective.pos) && (e.checkJsDirective = {
                                enabled: a === "ts-check",
                                end: _.range.end,
                                pos: _.range.pos
                            });
                        });
                        break;
                    case "jsx":
                    case "jsxfrag":
                    case "jsximportsource":
                    case "jsxruntime":
                        return;
                    default:
                        I.fail("Unhandled pragma kind");
                }
            });
        }
        function oj(e) {
            if (Gf.has(e)) return Gf.get(e);
            let t = new RegExp(`(\\s${e}\\s*=\\s*)(?:(?:'([^']*)')|(?:"([^"]*)"))`, "im");
            return Gf.set(e, t), t;
        }
        function sj(e, t, n) {
            let a = t.kind === 2 && G8.exec(n);
            if (a) {
                let p = a[1].toLowerCase(), m = Vd[p];
                if (!m || !(m.kind & 1)) return;
                if (m.args) {
                    let y = {};
                    for (let u of m.args){
                        let d = oj(u.name).exec(n);
                        if (!d && !u.optional) return;
                        if (d) {
                            let S = d[2] || d[3];
                            if (u.captureSpan) {
                                let T = t.pos + d.index + d[1].length + 1;
                                y[u.name] = {
                                    value: S,
                                    pos: T,
                                    end: T + S.length
                                };
                            } else y[u.name] = S;
                        }
                    }
                    e.push({
                        name: p,
                        args: {
                            arguments: y,
                            range: t
                        }
                    });
                } else e.push({
                    name: p,
                    args: {
                        arguments: {},
                        range: t
                    }
                });
                return;
            }
            let _ = t.kind === 2 && X8.exec(n);
            if (_) return tv(e, t, 2, _);
            if (t.kind === 3) {
                let p = /@(\S+)(\s+.*)?$/gim, m;
                for(; m = p.exec(n);)tv(e, t, 4, m);
            }
        }
        function tv(e, t, n, a) {
            if (!a) return;
            let _ = a[1].toLowerCase(), p = Vd[_];
            if (!p || !(p.kind & n)) return;
            let m = a[2], y = _j(p, m);
            y !== "fail" && e.push({
                name: _,
                args: {
                    arguments: y,
                    range: t
                }
            });
        }
        function _j(e, t) {
            if (!t) return {};
            if (!e.args) return {};
            let n = t.trim().split(/\s+/), a = {};
            for(let _ = 0; _ < e.args.length; _++){
                let p = e.args[_];
                if (!n[_] && !p.optional) return "fail";
                if (p.captureSpan) return I.fail("Capture spans not yet implemented for non-xml pragmas");
                a[p.name] = n[_];
            }
            return a;
        }
        function Ai(e, t) {
            return e.kind !== t.kind ? !1 : e.kind === 80 ? e.escapedText === t.escapedText : e.kind === 110 ? !0 : e.kind === 295 ? e.namespace.escapedText === t.namespace.escapedText && e.name.escapedText === t.name.escapedText : e.name.escapedText === t.name.escapedText && Ai(e.expression, t.expression);
        }
        var nv, rv, iv, av, ov, og, q_, H8, ri, Hf, Gf, G8, X8, cj = It({
            "src/compiler/parser.ts" () {
                "use strict";
                En(), Uv(), og = {
                    createBaseSourceFileNode: (e)=>new (ov || (ov = Ct.getSourceFileConstructor()))(e, -1, -1),
                    createBaseIdentifierNode: (e)=>new (iv || (iv = Ct.getIdentifierConstructor()))(e, -1, -1),
                    createBasePrivateIdentifierNode: (e)=>new (av || (av = Ct.getPrivateIdentifierConstructor()))(e, -1, -1),
                    createBaseTokenNode: (e)=>new (rv || (rv = Ct.getTokenConstructor()))(e, -1, -1),
                    createBaseNode: (e)=>new (nv || (nv = Ct.getNodeConstructor()))(e, -1, -1)
                }, q_ = Pd(1, og), H8 = {
                    166: function(t, n, a) {
                        return P(n, t.left) || P(n, t.right);
                    },
                    168: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || P(n, t.constraint) || P(n, t.default) || P(n, t.expression);
                    },
                    304: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || P(n, t.questionToken) || P(n, t.exclamationToken) || P(n, t.equalsToken) || P(n, t.objectAssignmentInitializer);
                    },
                    305: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    169: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.dotDotDotToken) || P(n, t.name) || P(n, t.questionToken) || P(n, t.type) || P(n, t.initializer);
                    },
                    172: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || P(n, t.questionToken) || P(n, t.exclamationToken) || P(n, t.type) || P(n, t.initializer);
                    },
                    171: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || P(n, t.questionToken) || P(n, t.type) || P(n, t.initializer);
                    },
                    303: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || P(n, t.questionToken) || P(n, t.exclamationToken) || P(n, t.initializer);
                    },
                    260: function(t, n, a) {
                        return P(n, t.name) || P(n, t.exclamationToken) || P(n, t.type) || P(n, t.initializer);
                    },
                    208: function(t, n, a) {
                        return P(n, t.dotDotDotToken) || P(n, t.propertyName) || P(n, t.name) || P(n, t.initializer);
                    },
                    181: function(t, n, a) {
                        return oe(n, a, t.modifiers) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type);
                    },
                    185: function(t, n, a) {
                        return oe(n, a, t.modifiers) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type);
                    },
                    184: function(t, n, a) {
                        return oe(n, a, t.modifiers) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type);
                    },
                    179: q6,
                    180: q6,
                    174: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.asteriskToken) || P(n, t.name) || P(n, t.questionToken) || P(n, t.exclamationToken) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type) || P(n, t.body);
                    },
                    173: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || P(n, t.questionToken) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type);
                    },
                    176: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type) || P(n, t.body);
                    },
                    177: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type) || P(n, t.body);
                    },
                    178: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type) || P(n, t.body);
                    },
                    262: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.asteriskToken) || P(n, t.name) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type) || P(n, t.body);
                    },
                    218: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.asteriskToken) || P(n, t.name) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type) || P(n, t.body);
                    },
                    219: function(t, n, a) {
                        return oe(n, a, t.modifiers) || oe(n, a, t.typeParameters) || oe(n, a, t.parameters) || P(n, t.type) || P(n, t.equalsGreaterThanToken) || P(n, t.body);
                    },
                    175: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.body);
                    },
                    183: function(t, n, a) {
                        return P(n, t.typeName) || oe(n, a, t.typeArguments);
                    },
                    182: function(t, n, a) {
                        return P(n, t.assertsModifier) || P(n, t.parameterName) || P(n, t.type);
                    },
                    186: function(t, n, a) {
                        return P(n, t.exprName) || oe(n, a, t.typeArguments);
                    },
                    187: function(t, n, a) {
                        return oe(n, a, t.members);
                    },
                    188: function(t, n, a) {
                        return P(n, t.elementType);
                    },
                    189: function(t, n, a) {
                        return oe(n, a, t.elements);
                    },
                    192: z6,
                    193: z6,
                    194: function(t, n, a) {
                        return P(n, t.checkType) || P(n, t.extendsType) || P(n, t.trueType) || P(n, t.falseType);
                    },
                    195: function(t, n, a) {
                        return P(n, t.typeParameter);
                    },
                    205: function(t, n, a) {
                        return P(n, t.argument) || P(n, t.attributes) || P(n, t.qualifier) || oe(n, a, t.typeArguments);
                    },
                    302: function(t, n, a) {
                        return P(n, t.assertClause);
                    },
                    196: W6,
                    198: W6,
                    199: function(t, n, a) {
                        return P(n, t.objectType) || P(n, t.indexType);
                    },
                    200: function(t, n, a) {
                        return P(n, t.readonlyToken) || P(n, t.typeParameter) || P(n, t.nameType) || P(n, t.questionToken) || P(n, t.type) || oe(n, a, t.members);
                    },
                    201: function(t, n, a) {
                        return P(n, t.literal);
                    },
                    202: function(t, n, a) {
                        return P(n, t.dotDotDotToken) || P(n, t.name) || P(n, t.questionToken) || P(n, t.type);
                    },
                    206: V6,
                    207: V6,
                    209: function(t, n, a) {
                        return oe(n, a, t.elements);
                    },
                    210: function(t, n, a) {
                        return oe(n, a, t.properties);
                    },
                    211: function(t, n, a) {
                        return P(n, t.expression) || P(n, t.questionDotToken) || P(n, t.name);
                    },
                    212: function(t, n, a) {
                        return P(n, t.expression) || P(n, t.questionDotToken) || P(n, t.argumentExpression);
                    },
                    213: H6,
                    214: H6,
                    215: function(t, n, a) {
                        return P(n, t.tag) || P(n, t.questionDotToken) || oe(n, a, t.typeArguments) || P(n, t.template);
                    },
                    216: function(t, n, a) {
                        return P(n, t.type) || P(n, t.expression);
                    },
                    217: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    220: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    221: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    222: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    224: function(t, n, a) {
                        return P(n, t.operand);
                    },
                    229: function(t, n, a) {
                        return P(n, t.asteriskToken) || P(n, t.expression);
                    },
                    223: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    225: function(t, n, a) {
                        return P(n, t.operand);
                    },
                    226: function(t, n, a) {
                        return P(n, t.left) || P(n, t.operatorToken) || P(n, t.right);
                    },
                    234: function(t, n, a) {
                        return P(n, t.expression) || P(n, t.type);
                    },
                    235: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    238: function(t, n, a) {
                        return P(n, t.expression) || P(n, t.type);
                    },
                    236: function(t, n, a) {
                        return P(n, t.name);
                    },
                    227: function(t, n, a) {
                        return P(n, t.condition) || P(n, t.questionToken) || P(n, t.whenTrue) || P(n, t.colonToken) || P(n, t.whenFalse);
                    },
                    230: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    241: G6,
                    268: G6,
                    312: function(t, n, a) {
                        return oe(n, a, t.statements) || P(n, t.endOfFileToken);
                    },
                    243: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.declarationList);
                    },
                    261: function(t, n, a) {
                        return oe(n, a, t.declarations);
                    },
                    244: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    245: function(t, n, a) {
                        return P(n, t.expression) || P(n, t.thenStatement) || P(n, t.elseStatement);
                    },
                    246: function(t, n, a) {
                        return P(n, t.statement) || P(n, t.expression);
                    },
                    247: function(t, n, a) {
                        return P(n, t.expression) || P(n, t.statement);
                    },
                    248: function(t, n, a) {
                        return P(n, t.initializer) || P(n, t.condition) || P(n, t.incrementor) || P(n, t.statement);
                    },
                    249: function(t, n, a) {
                        return P(n, t.initializer) || P(n, t.expression) || P(n, t.statement);
                    },
                    250: function(t, n, a) {
                        return P(n, t.awaitModifier) || P(n, t.initializer) || P(n, t.expression) || P(n, t.statement);
                    },
                    251: X6,
                    252: X6,
                    253: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    254: function(t, n, a) {
                        return P(n, t.expression) || P(n, t.statement);
                    },
                    255: function(t, n, a) {
                        return P(n, t.expression) || P(n, t.caseBlock);
                    },
                    269: function(t, n, a) {
                        return oe(n, a, t.clauses);
                    },
                    296: function(t, n, a) {
                        return P(n, t.expression) || oe(n, a, t.statements);
                    },
                    297: function(t, n, a) {
                        return oe(n, a, t.statements);
                    },
                    256: function(t, n, a) {
                        return P(n, t.label) || P(n, t.statement);
                    },
                    257: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    258: function(t, n, a) {
                        return P(n, t.tryBlock) || P(n, t.catchClause) || P(n, t.finallyBlock);
                    },
                    299: function(t, n, a) {
                        return P(n, t.variableDeclaration) || P(n, t.block);
                    },
                    170: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    263: $6,
                    231: $6,
                    264: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || oe(n, a, t.typeParameters) || oe(n, a, t.heritageClauses) || oe(n, a, t.members);
                    },
                    265: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || oe(n, a, t.typeParameters) || P(n, t.type);
                    },
                    266: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || oe(n, a, t.members);
                    },
                    306: function(t, n, a) {
                        return P(n, t.name) || P(n, t.initializer);
                    },
                    267: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || P(n, t.body);
                    },
                    271: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name) || P(n, t.moduleReference);
                    },
                    272: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.importClause) || P(n, t.moduleSpecifier) || P(n, t.attributes);
                    },
                    273: function(t, n, a) {
                        return P(n, t.name) || P(n, t.namedBindings);
                    },
                    300: function(t, n, a) {
                        return oe(n, a, t.elements);
                    },
                    301: function(t, n, a) {
                        return P(n, t.name) || P(n, t.value);
                    },
                    270: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.name);
                    },
                    274: function(t, n, a) {
                        return P(n, t.name);
                    },
                    280: function(t, n, a) {
                        return P(n, t.name);
                    },
                    275: Q6,
                    279: Q6,
                    278: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.exportClause) || P(n, t.moduleSpecifier) || P(n, t.attributes);
                    },
                    276: Y6,
                    281: Y6,
                    277: function(t, n, a) {
                        return oe(n, a, t.modifiers) || P(n, t.expression);
                    },
                    228: function(t, n, a) {
                        return P(n, t.head) || oe(n, a, t.templateSpans);
                    },
                    239: function(t, n, a) {
                        return P(n, t.expression) || P(n, t.literal);
                    },
                    203: function(t, n, a) {
                        return P(n, t.head) || oe(n, a, t.templateSpans);
                    },
                    204: function(t, n, a) {
                        return P(n, t.type) || P(n, t.literal);
                    },
                    167: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    298: function(t, n, a) {
                        return oe(n, a, t.types);
                    },
                    233: function(t, n, a) {
                        return P(n, t.expression) || oe(n, a, t.typeArguments);
                    },
                    283: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    282: function(t, n, a) {
                        return oe(n, a, t.modifiers);
                    },
                    361: function(t, n, a) {
                        return oe(n, a, t.elements);
                    },
                    284: function(t, n, a) {
                        return P(n, t.openingElement) || oe(n, a, t.children) || P(n, t.closingElement);
                    },
                    288: function(t, n, a) {
                        return P(n, t.openingFragment) || oe(n, a, t.children) || P(n, t.closingFragment);
                    },
                    285: K6,
                    286: K6,
                    292: function(t, n, a) {
                        return oe(n, a, t.properties);
                    },
                    291: function(t, n, a) {
                        return P(n, t.name) || P(n, t.initializer);
                    },
                    293: function(t, n, a) {
                        return P(n, t.expression);
                    },
                    294: function(t, n, a) {
                        return P(n, t.dotDotDotToken) || P(n, t.expression);
                    },
                    287: function(t, n, a) {
                        return P(n, t.tagName);
                    },
                    295: function(t, n, a) {
                        return P(n, t.namespace) || P(n, t.name);
                    },
                    190: Ao,
                    191: Ao,
                    316: Ao,
                    322: Ao,
                    321: Ao,
                    323: Ao,
                    325: Ao,
                    324: function(t, n, a) {
                        return oe(n, a, t.parameters) || P(n, t.type);
                    },
                    327: function(t, n, a) {
                        return (typeof t.comment == "string" ? void 0 : oe(n, a, t.comment)) || oe(n, a, t.tags);
                    },
                    354: function(t, n, a) {
                        return P(n, t.tagName) || P(n, t.name) || (typeof t.comment == "string" ? void 0 : oe(n, a, t.comment));
                    },
                    317: function(t, n, a) {
                        return P(n, t.name);
                    },
                    318: function(t, n, a) {
                        return P(n, t.left) || P(n, t.right);
                    },
                    348: Z6,
                    355: Z6,
                    337: function(t, n, a) {
                        return P(n, t.tagName) || (typeof t.comment == "string" ? void 0 : oe(n, a, t.comment));
                    },
                    336: function(t, n, a) {
                        return P(n, t.tagName) || P(n, t.class) || (typeof t.comment == "string" ? void 0 : oe(n, a, t.comment));
                    },
                    335: function(t, n, a) {
                        return P(n, t.tagName) || P(n, t.class) || (typeof t.comment == "string" ? void 0 : oe(n, a, t.comment));
                    },
                    352: function(t, n, a) {
                        return P(n, t.tagName) || P(n, t.constraint) || oe(n, a, t.typeParameters) || (typeof t.comment == "string" ? void 0 : oe(n, a, t.comment));
                    },
                    353: function(t, n, a) {
                        return P(n, t.tagName) || (t.typeExpression && t.typeExpression.kind === 316 ? P(n, t.typeExpression) || P(n, t.fullName) || (typeof t.comment == "string" ? void 0 : oe(n, a, t.comment)) : P(n, t.fullName) || P(n, t.typeExpression) || (typeof t.comment == "string" ? void 0 : oe(n, a, t.comment)));
                    },
                    345: function(t, n, a) {
                        return P(n, t.tagName) || P(n, t.fullName) || P(n, t.typeExpression) || (typeof t.comment == "string" ? void 0 : oe(n, a, t.comment));
                    },
                    349: ko,
                    351: ko,
                    350: ko,
                    347: ko,
                    357: ko,
                    356: ko,
                    346: ko,
                    330: function(t, n, a) {
                        return wn(t.typeParameters, n) || wn(t.parameters, n) || P(n, t.type);
                    },
                    331: ny,
                    332: ny,
                    333: ny,
                    329: function(t, n, a) {
                        return wn(t.jsDocPropertyTags, n);
                    },
                    334: Qa,
                    339: Qa,
                    340: Qa,
                    341: Qa,
                    342: Qa,
                    343: Qa,
                    338: Qa,
                    344: Qa,
                    360: ej
                }, ((e)=>{
                    var t = ss(99, !0), n = 40960, a, _, p, m, y;
                    function u(c) {
                        return Dr++, c;
                    }
                    var x = {
                        createBaseSourceFileNode: (c)=>u(new y(c, 0, 0)),
                        createBaseIdentifierNode: (c)=>u(new p(c, 0, 0)),
                        createBasePrivateIdentifierNode: (c)=>u(new m(c, 0, 0)),
                        createBaseTokenNode: (c)=>u(new _(c, 0, 0)),
                        createBaseNode: (c)=>u(new a(c, 0, 0))
                    }, d = Pd(11, x), { createNodeArray: S, createNumericLiteral: T, createStringLiteral: A, createLiteralLikeNode: N, createIdentifier: q, createPrivateIdentifier: Q, createToken: se, createArrayLiteralExpression: fe, createObjectLiteralExpression: F, createPropertyAccessExpression: W, createPropertyAccessChain: Se, createElementAccessExpression: Qe, createElementAccessChain: Be, createCallExpression: st, createCallChain: _t, createNewExpression: hn, createParenthesizedExpression: yn, createBlock: fi, createVariableStatement: gn, createExpressionStatement: cr, createIfStatement: He, createWhileStatement: Qn, createForStatement: Gr, createForOfStatement: vt, createVariableDeclaration: Jn, createVariableDeclarationList: Ar } = d, Ht, rn, at, kr, an, xt, ut, Gt, cn, ht, Dr, Tt, Rn, yt, jn, ct, Kt = !0, Zt = !1;
                    function lr(c, h, b, E, k = !1, J, Y, _e = 0) {
                        var re;
                        if (J = RS(c, J), J === 6) {
                            let pe = Xr(c, h, b, E, k);
                            return convertToJson(pe, (re = pe.statements[0]) == null ? void 0 : re.expression, pe.parseDiagnostics, !1, void 0), pe.referencedFiles = Je, pe.typeReferenceDirectives = Je, pe.libReferenceDirectives = Je, pe.amdDependencies = Je, pe.hasNoDefaultLib = !1, pe.pragmas = gg, pe;
                        }
                        Yn(c, h, b, E, J, _e);
                        let ne = Ji(b, k, J, Y || U8, _e);
                        return Kn(), ne;
                    }
                    e.parseSourceFile = lr;
                    function di(c, h) {
                        Yn("", c, h, void 0, 1, 0), O();
                        let b = Ba(!0), E = f() === 1 && !ut.length;
                        return Kn(), E ? b : void 0;
                    }
                    e.parseIsolatedEntityName = di;
                    function Xr(c, h, b = 2, E, k = !1) {
                        Yn(c, h, b, E, 6, 0), rn = ct, O();
                        let J = v(), Y, _e;
                        if (f() === 1) Y = zt([], J, J), _e = bn();
                        else {
                            let pe;
                            for(; f() !== 1;){
                                let Oe;
                                switch(f()){
                                    case 23:
                                        Oe = jc();
                                        break;
                                    case 112:
                                    case 97:
                                    case 106:
                                        Oe = bn();
                                        break;
                                    case 41:
                                        ve(()=>O() === 9 && O() !== 59) ? Oe = kc() : Oe = Ls();
                                        break;
                                    case 9:
                                    case 11:
                                        if (ve(()=>O() !== 59)) {
                                            Oe = Yr();
                                            break;
                                        }
                                    default:
                                        Oe = Ls();
                                        break;
                                }
                                pe && $t(pe) ? pe.push(Oe) : pe ? pe = [
                                    pe,
                                    Oe
                                ] : (pe = Oe, f() !== 1 && Ne(B.Unexpected_token));
                            }
                            let Ue = $t(pe) ? M(fe(pe), J) : I.checkDefined(pe), Fe = cr(Ue);
                            M(Fe, J), Y = zt([
                                Fe
                            ], J), _e = Qr(1, B.Unexpected_token);
                        }
                        let re = ye(c, 2, 6, !1, Y, _e, rn, gr);
                        k && ie(re), re.nodeCount = Dr, re.identifierCount = Rn, re.identifiers = Tt, re.parseDiagnostics = Ya(ut, re), Gt && (re.jsDocDiagnostics = Ya(Gt, re));
                        let ne = re;
                        return Kn(), ne;
                    }
                    e.parseJsonText = Xr;
                    function Yn(c, h, b, E, k, J) {
                        switch(a = Ct.getNodeConstructor(), _ = Ct.getTokenConstructor(), p = Ct.getIdentifierConstructor(), m = Ct.getPrivateIdentifierConstructor(), y = Ct.getSourceFileConstructor(), Ht = br(c), at = h, kr = b, cn = E, an = k, xt = q0(k), ut = [], yt = 0, Tt = new Map, Rn = 0, Dr = 0, rn = 0, Kt = !0, an){
                            case 1:
                            case 2:
                                ct = 524288;
                                break;
                            case 6:
                                ct = 134742016;
                                break;
                            default:
                                ct = 0;
                                break;
                        }
                        Zt = !1, t.setText(at), t.setOnError(R), t.setScriptTarget(kr), t.setLanguageVariant(xt), t.setScriptKind(an), t.setJSDocParsingMode(J);
                    }
                    function Kn() {
                        t.clearCommentDirectives(), t.setText(""), t.setOnError(void 0), t.setScriptKind(0), t.setJSDocParsingMode(0), at = void 0, kr = void 0, cn = void 0, an = void 0, xt = void 0, rn = 0, ut = void 0, Gt = void 0, yt = 0, Tt = void 0, jn = void 0, Kt = !0;
                    }
                    function Ji(c, h, b, E, k) {
                        let J = z8(Ht);
                        J && (ct |= 33554432), rn = ct, O();
                        let Y = pr(0, Sn);
                        I.assert(f() === 1);
                        let _e = w(), re = De(bn(), _e), ne = ye(Ht, c, b, J, Y, re, rn, E);
                        return W8(ne, at), V8(ne, pe), ne.commentDirectives = t.getCommentDirectives(), ne.nodeCount = Dr, ne.identifierCount = Rn, ne.identifiers = Tt, ne.parseDiagnostics = Ya(ut, ne), ne.jsDocParsingMode = k, Gt && (ne.jsDocDiagnostics = Ya(Gt, ne)), h && ie(ne), ne;
                        function pe(Ue, Fe, Oe) {
                            ut.push(Po(Ht, at, Ue, Fe, Oe));
                        }
                    }
                    let Pr = !1;
                    function De(c, h) {
                        if (!h) return c;
                        I.assert(!c.jsDoc);
                        let b = wa(UT(c, at), (E)=>gf.parseJSDocComment(c, E.pos, E.end - E.pos));
                        return b.length && (c.jsDoc = b), Pr && (Pr = !1, c.flags |= 536870912), c;
                    }
                    function U(c) {
                        let h = cn, b = Hf.createSyntaxCursor(c);
                        cn = {
                            currentNode: pe
                        };
                        let E = [], k = ut;
                        ut = [];
                        let J = 0, Y = re(c.statements, 0);
                        for(; Y !== -1;){
                            let Ue = c.statements[J], Fe = c.statements[Y];
                            zn(E, c.statements, J, Y), J = ne(c.statements, Y);
                            let Oe = ul(k, (qn)=>qn.start >= Ue.pos), xn = Oe >= 0 ? ul(k, (qn)=>qn.start >= Fe.pos, Oe) : -1;
                            Oe >= 0 && zn(ut, k, Oe, xn >= 0 ? xn : void 0), ln(()=>{
                                let qn = ct;
                                for(ct |= 65536, t.resetTokenState(Fe.pos), O(); f() !== 1;){
                                    let vi = t.getTokenFullStart(), Zr = ws(0, Sn);
                                    if (E.push(Zr), vi === t.getTokenFullStart() && O(), J >= 0) {
                                        let Jr = c.statements[J];
                                        if (Zr.end === Jr.pos) break;
                                        Zr.end > Jr.pos && (J = ne(c.statements, J + 1));
                                    }
                                }
                                ct = qn;
                            }, 2), Y = J >= 0 ? re(c.statements, J) : -1;
                        }
                        if (J >= 0) {
                            let Ue = c.statements[J];
                            zn(E, c.statements, J);
                            let Fe = ul(k, (Oe)=>Oe.start >= Ue.pos);
                            Fe >= 0 && zn(ut, k, Fe);
                        }
                        return cn = h, d.updateSourceFile(c, We(S(E), c.statements));
                        function _e(Ue) {
                            return !(Ue.flags & 65536) && !!(Ue.transformFlags & 67108864);
                        }
                        function re(Ue, Fe) {
                            for(let Oe = Fe; Oe < Ue.length; Oe++)if (_e(Ue[Oe])) return Oe;
                            return -1;
                        }
                        function ne(Ue, Fe) {
                            for(let Oe = Fe; Oe < Ue.length; Oe++)if (!_e(Ue[Oe])) return Oe;
                            return -1;
                        }
                        function pe(Ue) {
                            let Fe = b.currentNode(Ue);
                            return Kt && Fe && _e(Fe) && (Fe.intersectsChange = !0), Fe;
                        }
                    }
                    function ie(c) {
                        $S(c, !0);
                    }
                    e.fixupParentReferences = ie;
                    function ye(c, h, b, E, k, J, Y, _e) {
                        let re = d.createSourceFile(k, J, Y);
                        return kd(re, 0, at.length), ne(re), !E && ns(re) && re.transformFlags & 67108864 && (re = U(re), ne(re)), re;
                        function ne(pe) {
                            pe.text = at, pe.bindDiagnostics = [], pe.bindSuggestionDiagnostics = void 0, pe.languageVersion = h, pe.fileName = c, pe.languageVariant = q0(b), pe.isDeclarationFile = E, pe.scriptKind = b, _e(pe), pe.setExternalModuleIndicator = _e;
                        }
                    }
                    function Te(c, h) {
                        c ? ct |= h : ct &= ~h;
                    }
                    function tt(c) {
                        Te(c, 8192);
                    }
                    function $e(c) {
                        Te(c, 16384);
                    }
                    function Ut(c) {
                        Te(c, 32768);
                    }
                    function St(c) {
                        Te(c, 65536);
                    }
                    function Jt(c, h) {
                        let b = c & ct;
                        if (b) {
                            Te(!1, b);
                            let E = h();
                            return Te(!0, b), E;
                        }
                        return h();
                    }
                    function Rt(c, h) {
                        let b = c & ~ct;
                        if (b) {
                            Te(!0, b);
                            let E = h();
                            return Te(!1, b), E;
                        }
                        return h();
                    }
                    function z(c) {
                        return Jt(8192, c);
                    }
                    function K(c) {
                        return Rt(8192, c);
                    }
                    function te(c) {
                        return Jt(131072, c);
                    }
                    function Ee(c) {
                        return Rt(131072, c);
                    }
                    function je(c) {
                        return Rt(16384, c);
                    }
                    function pt(c) {
                        return Rt(32768, c);
                    }
                    function nt(c) {
                        return Rt(65536, c);
                    }
                    function kt(c) {
                        return Jt(65536, c);
                    }
                    function qt(c) {
                        return Rt(81920, c);
                    }
                    function Zn(c) {
                        return Jt(81920, c);
                    }
                    function kn(c) {
                        return (ct & c) !== 0;
                    }
                    function er() {
                        return kn(16384);
                    }
                    function Ri() {
                        return kn(8192);
                    }
                    function aa() {
                        return kn(131072);
                    }
                    function $r() {
                        return kn(32768);
                    }
                    function Dn() {
                        return kn(65536);
                    }
                    function Ne(c, ...h) {
                        return jt(t.getTokenStart(), t.getTokenEnd(), c, ...h);
                    }
                    function oa(c, h, b, ...E) {
                        let k = Pi(ut), J;
                        return (!k || c !== k.start) && (J = Po(Ht, at, c, h, b, ...E), ut.push(J)), Zt = !0, J;
                    }
                    function jt(c, h, b, ...E) {
                        return oa(c, h - c, b, ...E);
                    }
                    function Fn(c, h, ...b) {
                        jt(c.pos, c.end, h, ...b);
                    }
                    function R(c, h, b) {
                        oa(t.getTokenEnd(), h, c, b);
                    }
                    function v() {
                        return t.getTokenFullStart();
                    }
                    function w() {
                        return t.hasPrecedingJSDocComment();
                    }
                    function f() {
                        return ht;
                    }
                    function X() {
                        return ht = t.scan();
                    }
                    function $(c) {
                        return O(), c();
                    }
                    function O() {
                        return ki(ht) && (t.hasUnicodeEscape() || t.hasExtendedUnicodeEscape()) && jt(t.getTokenStart(), t.getTokenEnd(), B.Keywords_cannot_contain_escape_characters), X();
                    }
                    function ue() {
                        return ht = t.scanJsDocToken();
                    }
                    function be(c) {
                        return ht = t.scanJSDocCommentTextToken(c);
                    }
                    function ge() {
                        return ht = t.reScanGreaterToken();
                    }
                    function Le() {
                        return ht = t.reScanSlashToken();
                    }
                    function xe(c) {
                        return ht = t.reScanTemplateToken(c);
                    }
                    function Ye() {
                        return ht = t.reScanLessThanToken();
                    }
                    function Ge() {
                        return ht = t.reScanHashToken();
                    }
                    function Xe() {
                        return ht = t.scanJsxIdentifier();
                    }
                    function Nt() {
                        return ht = t.scanJsxToken();
                    }
                    function Xt() {
                        return ht = t.scanJsxAttributeValue();
                    }
                    function ln(c, h) {
                        let b = ht, E = ut.length, k = Zt, J = ct, Y = h !== 0 ? t.lookAhead(c) : t.tryScan(c);
                        return I.assert(J === ct), (!Y || h !== 0) && (ht = b, h !== 2 && (ut.length = E), Zt = k), Y;
                    }
                    function ve(c) {
                        return ln(c, 1);
                    }
                    function ft(c) {
                        return ln(c, 0);
                    }
                    function Ir() {
                        return f() === 80 ? !0 : f() > 118;
                    }
                    function Dt() {
                        return f() === 80 ? !0 : f() === 127 && er() || f() === 135 && Dn() ? !1 : f() > 118;
                    }
                    function G(c, h, b = !0) {
                        return f() === c ? (b && O(), !0) : (h ? Ne(h) : Ne(B._0_expected, en(c)), !1);
                    }
                    let La = Object.keys(pl).filter((c)=>c.length > 2);
                    function Pe(c) {
                        if (r8(c)) {
                            jt(Mt(at, c.template.pos), c.template.end, B.Module_declaration_names_may_only_use_or_quoted_strings);
                            return;
                        }
                        let h = Ae(c) ? Lt(c) : void 0;
                        if (!h || !Ig(h, kr)) {
                            Ne(B._0_expected, en(27));
                            return;
                        }
                        let b = Mt(at, c.pos);
                        switch(h){
                            case "const":
                            case "let":
                            case "var":
                                jt(b, c.end, B.Variable_declaration_not_allowed_at_this_location);
                                return;
                            case "declare":
                                return;
                            case "interface":
                                ot(B.Interface_name_cannot_be_0, B.Interface_must_be_given_a_name, 19);
                                return;
                            case "is":
                                jt(b, t.getTokenStart(), B.A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods);
                                return;
                            case "module":
                            case "namespace":
                                ot(B.Namespace_name_cannot_be_0, B.Namespace_must_be_given_a_name, 19);
                                return;
                            case "type":
                                ot(B.Type_alias_name_cannot_be_0, B.Type_alias_must_be_given_a_name, 64);
                                return;
                        }
                        let E = Pv(h, La, (k)=>k) ?? un(h);
                        if (E) {
                            jt(b, c.end, B.Unknown_keyword_or_identifier_Did_you_mean_0, E);
                            return;
                        }
                        f() !== 0 && jt(b, c.end, B.Unexpected_keyword_or_identifier);
                    }
                    function ot(c, h, b) {
                        f() === b ? Ne(h) : Ne(c, t.getTokenValue());
                    }
                    function un(c) {
                        for (let h of La)if (c.length > h.length + 2 && Hn(c, h)) return `${h} ${c.slice(h.length)}`;
                    }
                    function ur(c, h, b) {
                        if (f() === 60 && !t.hasPrecedingLineBreak()) {
                            Ne(B.Decorators_must_precede_the_name_and_all_keywords_of_property_declarations);
                            return;
                        }
                        if (f() === 21) {
                            Ne(B.Cannot_start_a_function_call_in_a_type_annotation), O();
                            return;
                        }
                        if (h && !hi()) {
                            b ? Ne(B._0_expected, en(27)) : Ne(B.Expected_for_property_initializer);
                            return;
                        }
                        if (!Ts()) {
                            if (b) {
                                Ne(B._0_expected, en(27));
                                return;
                            }
                            Pe(c);
                        }
                    }
                    function Ja(c) {
                        return f() === c ? (ue(), !0) : (I.assert(jf(c)), Ne(B._0_expected, en(c)), !1);
                    }
                    function Nr(c, h, b, E) {
                        if (f() === h) {
                            O();
                            return;
                        }
                        let k = Ne(B._0_expected, en(h));
                        b && k && ol(k, Po(Ht, at, E, 1, B.The_parser_expected_to_find_a_1_to_match_the_0_token_here, en(c), en(h)));
                    }
                    function Re(c) {
                        return f() === c ? (O(), !0) : !1;
                    }
                    function dt(c) {
                        if (f() === c) return bn();
                    }
                    function mi(c) {
                        if (f() === c) return i1();
                    }
                    function Qr(c, h, b) {
                        return dt(c) || Bn(c, !1, h || B._0_expected, b || en(c));
                    }
                    function r1(c) {
                        let h = mi(c);
                        return h || (I.assert(jf(c)), Bn(c, !1, B._0_expected, en(c)));
                    }
                    function bn() {
                        let c = v(), h = f();
                        return O(), M(se(h), c);
                    }
                    function i1() {
                        let c = v(), h = f();
                        return ue(), M(se(h), c);
                    }
                    function hi() {
                        return f() === 27 ? !0 : f() === 20 || f() === 1 || t.hasPrecedingLineBreak();
                    }
                    function Ts() {
                        return hi() ? (f() === 27 && O(), !0) : !1;
                    }
                    function Pn() {
                        return Ts() || G(27);
                    }
                    function zt(c, h, b, E) {
                        let k = S(c, E);
                        return Za(k, h, b ?? t.getTokenFullStart()), k;
                    }
                    function M(c, h, b) {
                        return Za(c, h, b ?? t.getTokenFullStart()), ct && (c.flags |= ct), Zt && (Zt = !1, c.flags |= 262144), c;
                    }
                    function Bn(c, h, b, ...E) {
                        h ? oa(t.getTokenFullStart(), 0, b, ...E) : b && Ne(b, ...E);
                        let k = v(), J = c === 80 ? q("", void 0) : wl(c) ? d.createTemplateLiteralLikeNode(c, "", "", void 0) : c === 9 ? T("", void 0) : c === 11 ? A("", void 0) : c === 282 ? d.createMissingDeclaration() : se(c);
                        return M(J, k);
                    }
                    function sa(c) {
                        let h = Tt.get(c);
                        return h === void 0 && Tt.set(c, h = c), h;
                    }
                    function yi(c, h, b) {
                        if (c) {
                            Rn++;
                            let _e = v(), re = f(), ne = sa(t.getTokenValue()), pe = t.hasExtendedUnicodeEscape();
                            return X(), M(q(ne, re, pe), _e);
                        }
                        if (f() === 81) return Ne(b || B.Private_identifiers_are_not_allowed_outside_class_bodies), yi(!0);
                        if (f() === 0 && t.tryScan(()=>t.reScanInvalidIdentifier() === 80)) return yi(!0);
                        Rn++;
                        let E = f() === 1, k = t.isReservedWord(), J = t.getTokenText(), Y = k ? B.Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here : B.Identifier_expected;
                        return Bn(80, E, h || Y, J);
                    }
                    function X_(c) {
                        return yi(Ir(), void 0, c);
                    }
                    function Ft(c, h) {
                        return yi(Dt(), c, h);
                    }
                    function vn(c) {
                        return yi(wt(f()), c);
                    }
                    function Ra() {
                        return (t.hasUnicodeEscape() || t.hasExtendedUnicodeEscape()) && Ne(B.Unicode_escape_sequence_cannot_appear_here), yi(wt(f()));
                    }
                    function _a() {
                        return wt(f()) || f() === 11 || f() === 9;
                    }
                    function yu() {
                        return wt(f()) || f() === 11;
                    }
                    function a1(c) {
                        if (f() === 11 || f() === 9) {
                            let h = Yr();
                            return h.text = sa(h.text), h;
                        }
                        return c && f() === 23 ? o1() : f() === 81 ? Ss() : vn();
                    }
                    function ca() {
                        return a1(!0);
                    }
                    function o1() {
                        let c = v();
                        G(23);
                        let h = z(Bt);
                        return G(24), M(d.createComputedPropertyName(h), c);
                    }
                    function Ss() {
                        let c = v(), h = Q(sa(t.getTokenValue()));
                        return O(), M(h, c);
                    }
                    function ja(c) {
                        return f() === c && ft(gu);
                    }
                    function $_() {
                        return O(), t.hasPrecedingLineBreak() ? !1 : gi();
                    }
                    function gu() {
                        switch(f()){
                            case 87:
                                return O() === 94;
                            case 95:
                                return O(), f() === 90 ? ve(vu) : f() === 156 ? ve(s1) : fo();
                            case 90:
                                return vu();
                            case 126:
                            case 139:
                            case 153:
                                return O(), gi();
                            default:
                                return $_();
                        }
                    }
                    function fo() {
                        return f() === 60 || f() !== 42 && f() !== 130 && f() !== 19 && gi();
                    }
                    function s1() {
                        return O(), fo();
                    }
                    function bu() {
                        return Ei(f()) && ft(gu);
                    }
                    function gi() {
                        return f() === 23 || f() === 19 || f() === 42 || f() === 26 || _a();
                    }
                    function vu() {
                        return O(), f() === 86 || f() === 100 || f() === 120 || f() === 60 || f() === 128 && ve(_h) || f() === 134 && ve(Bc);
                    }
                    function Fa(c, h) {
                        if (Z_(c)) return !0;
                        switch(c){
                            case 0:
                            case 1:
                            case 3:
                                return !(f() === 27 && h) && Uc();
                            case 2:
                                return f() === 84 || f() === 90;
                            case 4:
                                return ve(Hu);
                            case 5:
                                return ve(yh) || f() === 27 && !h;
                            case 6:
                                return f() === 23 || _a();
                            case 12:
                                switch(f()){
                                    case 23:
                                    case 42:
                                    case 26:
                                    case 25:
                                        return !0;
                                    default:
                                        return _a();
                                }
                            case 18:
                                return _a();
                            case 9:
                                return f() === 23 || f() === 26 || _a();
                            case 24:
                                return yu();
                            case 7:
                                return f() === 19 ? ve(Tu) : h ? Dt() && !Y_() : xc() && !Y_();
                            case 8:
                                return Bs();
                            case 10:
                                return f() === 28 || f() === 26 || Bs();
                            case 19:
                                return f() === 103 || f() === 87 || Dt();
                            case 15:
                                switch(f()){
                                    case 28:
                                    case 25:
                                        return !0;
                                }
                            case 11:
                                return f() === 26 || Ui();
                            case 16:
                                return ks(!1);
                            case 17:
                                return ks(!0);
                            case 20:
                            case 21:
                                return f() === 28 || la();
                            case 22:
                                return _f();
                            case 23:
                                return f() === 161 && ve(ph) ? !1 : wt(f());
                            case 13:
                                return wt(f()) || f() === 19;
                            case 14:
                                return !0;
                            case 25:
                                return !0;
                            case 26:
                                return I.fail("ParsingContext.Count used as a context");
                            default:
                                I.assertNever(c, "Non-exhaustive case in 'isListElement'.");
                        }
                    }
                    function Tu() {
                        if (I.assert(f() === 19), O() === 20) {
                            let c = O();
                            return c === 28 || c === 19 || c === 96 || c === 119;
                        }
                        return !0;
                    }
                    function xs() {
                        return O(), Dt();
                    }
                    function Q_() {
                        return O(), wt(f());
                    }
                    function _1() {
                        return O(), Qv(f());
                    }
                    function Y_() {
                        return f() === 119 || f() === 96 ? ve(Su) : !1;
                    }
                    function Su() {
                        return O(), Ui();
                    }
                    function xu() {
                        return O(), la();
                    }
                    function ji(c) {
                        if (f() === 1) return !0;
                        switch(c){
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                            case 6:
                            case 12:
                            case 9:
                            case 23:
                            case 24:
                                return f() === 20;
                            case 3:
                                return f() === 20 || f() === 84 || f() === 90;
                            case 7:
                                return f() === 19 || f() === 96 || f() === 119;
                            case 8:
                                return c1();
                            case 19:
                                return f() === 32 || f() === 21 || f() === 19 || f() === 96 || f() === 119;
                            case 11:
                                return f() === 22 || f() === 27;
                            case 15:
                            case 21:
                            case 10:
                                return f() === 24;
                            case 17:
                            case 16:
                            case 18:
                                return f() === 22 || f() === 24;
                            case 20:
                                return f() !== 28;
                            case 22:
                                return f() === 19 || f() === 20;
                            case 13:
                                return f() === 32 || f() === 44;
                            case 14:
                                return f() === 30 && ve(ff);
                            default:
                                return !1;
                        }
                    }
                    function c1() {
                        return !!(hi() || Cc(f()) || f() === 39);
                    }
                    function K_() {
                        I.assert(yt, "Missing parsing context");
                        for(let c = 0; c < 26; c++)if (yt & 1 << c && (Fa(c, !0) || ji(c))) return !0;
                        return !1;
                    }
                    function pr(c, h) {
                        let b = yt;
                        yt |= 1 << c;
                        let E = [], k = v();
                        for(; !ji(c);){
                            if (Fa(c, !1)) {
                                E.push(ws(c, h));
                                continue;
                            }
                            if (ic(c)) break;
                        }
                        return yt = b, zt(E, k);
                    }
                    function ws(c, h) {
                        let b = Z_(c);
                        return b ? ec(b) : h();
                    }
                    function Z_(c, h) {
                        var b;
                        if (!cn || !l1(c) || Zt) return;
                        let E = cn.currentNode(h ?? t.getTokenFullStart());
                        if (!(Vi(E) || E.intersectsChange || El(E) || (E.flags & 101441536) !== ct) && wu(E, c)) return ym(E) && (b = E.jsDoc) != null && b.jsDocCache && (E.jsDoc.jsDocCache = void 0), E;
                    }
                    function ec(c) {
                        return t.resetTokenState(c.end), O(), c;
                    }
                    function l1(c) {
                        switch(c){
                            case 5:
                            case 2:
                            case 0:
                            case 1:
                            case 3:
                            case 6:
                            case 4:
                            case 8:
                            case 17:
                            case 16:
                                return !0;
                        }
                        return !1;
                    }
                    function wu(c, h) {
                        switch(h){
                            case 5:
                                return Eu(c);
                            case 2:
                                return tc(c);
                            case 0:
                            case 1:
                            case 3:
                                return Cu(c);
                            case 6:
                                return nc(c);
                            case 4:
                                return Au(c);
                            case 8:
                                return rc(c);
                            case 17:
                            case 16:
                                return ku(c);
                        }
                        return !1;
                    }
                    function Eu(c) {
                        if (c) switch(c.kind){
                            case 176:
                            case 181:
                            case 177:
                            case 178:
                            case 172:
                            case 240:
                                return !0;
                            case 174:
                                let h = c;
                                return !(h.name.kind === 80 && h.name.escapedText === "constructor");
                        }
                        return !1;
                    }
                    function tc(c) {
                        if (c) switch(c.kind){
                            case 296:
                            case 297:
                                return !0;
                        }
                        return !1;
                    }
                    function Cu(c) {
                        if (c) switch(c.kind){
                            case 262:
                            case 243:
                            case 241:
                            case 245:
                            case 244:
                            case 257:
                            case 253:
                            case 255:
                            case 252:
                            case 251:
                            case 249:
                            case 250:
                            case 248:
                            case 247:
                            case 254:
                            case 242:
                            case 258:
                            case 256:
                            case 246:
                            case 259:
                            case 272:
                            case 271:
                            case 278:
                            case 277:
                            case 267:
                            case 263:
                            case 264:
                            case 266:
                            case 265:
                                return !0;
                        }
                        return !1;
                    }
                    function nc(c) {
                        return c.kind === 306;
                    }
                    function Au(c) {
                        if (c) switch(c.kind){
                            case 180:
                            case 173:
                            case 181:
                            case 171:
                            case 179:
                                return !0;
                        }
                        return !1;
                    }
                    function rc(c) {
                        return c.kind !== 260 ? !1 : c.initializer === void 0;
                    }
                    function ku(c) {
                        return c.kind !== 169 ? !1 : c.initializer === void 0;
                    }
                    function ic(c) {
                        return u1(c), K_() ? !0 : (O(), !1);
                    }
                    function u1(c) {
                        switch(c){
                            case 0:
                                return f() === 90 ? Ne(B._0_expected, en(95)) : Ne(B.Declaration_or_statement_expected);
                            case 1:
                                return Ne(B.Declaration_or_statement_expected);
                            case 2:
                                return Ne(B.case_or_default_expected);
                            case 3:
                                return Ne(B.Statement_expected);
                            case 18:
                            case 4:
                                return Ne(B.Property_or_signature_expected);
                            case 5:
                                return Ne(B.Unexpected_token_A_constructor_method_accessor_or_property_was_expected);
                            case 6:
                                return Ne(B.Enum_member_expected);
                            case 7:
                                return Ne(B.Expression_expected);
                            case 8:
                                return ki(f()) ? Ne(B._0_is_not_allowed_as_a_variable_declaration_name, en(f())) : Ne(B.Variable_declaration_expected);
                            case 9:
                                return Ne(B.Property_destructuring_pattern_expected);
                            case 10:
                                return Ne(B.Array_element_destructuring_pattern_expected);
                            case 11:
                                return Ne(B.Argument_expression_expected);
                            case 12:
                                return Ne(B.Property_assignment_expected);
                            case 15:
                                return Ne(B.Expression_or_comma_expected);
                            case 17:
                                return Ne(B.Parameter_declaration_expected);
                            case 16:
                                return ki(f()) ? Ne(B._0_is_not_allowed_as_a_parameter_name, en(f())) : Ne(B.Parameter_declaration_expected);
                            case 19:
                                return Ne(B.Type_parameter_declaration_expected);
                            case 20:
                                return Ne(B.Type_argument_expected);
                            case 21:
                                return Ne(B.Type_expected);
                            case 22:
                                return Ne(B.Unexpected_token_expected);
                            case 23:
                                return f() === 161 ? Ne(B._0_expected, "}") : Ne(B.Identifier_expected);
                            case 13:
                                return Ne(B.Identifier_expected);
                            case 14:
                                return Ne(B.Identifier_expected);
                            case 24:
                                return Ne(B.Identifier_or_string_literal_expected);
                            case 25:
                                return Ne(B.Identifier_expected);
                            case 26:
                                return I.fail("ParsingContext.Count used as a context");
                            default:
                                I.assertNever(c);
                        }
                    }
                    function Tn(c, h, b) {
                        let E = yt;
                        yt |= 1 << c;
                        let k = [], J = v(), Y = -1;
                        for(;;){
                            if (Fa(c, !1)) {
                                let _e = t.getTokenFullStart(), re = ws(c, h);
                                if (!re) {
                                    yt = E;
                                    return;
                                }
                                if (k.push(re), Y = t.getTokenStart(), Re(28)) continue;
                                if (Y = -1, ji(c)) break;
                                G(28, p1(c)), b && f() === 27 && !t.hasPrecedingLineBreak() && O(), _e === t.getTokenFullStart() && O();
                                continue;
                            }
                            if (ji(c) || ic(c)) break;
                        }
                        return yt = E, zt(k, J, void 0, Y >= 0);
                    }
                    function p1(c) {
                        return c === 6 ? B.An_enum_member_name_must_be_followed_by_a_or : void 0;
                    }
                    function Or() {
                        let c = zt([], v());
                        return c.isMissingList = !0, c;
                    }
                    function f1(c) {
                        return !!c.isMissingList;
                    }
                    function Fi(c, h, b, E) {
                        if (G(b)) {
                            let k = Tn(c, h);
                            return G(E), k;
                        }
                        return Or();
                    }
                    function Ba(c, h) {
                        let b = v(), E = c ? vn(h) : Ft(h);
                        for(; Re(25) && f() !== 30;)E = M(d.createQualifiedName(E, Es(c, !1, !0)), b);
                        return E;
                    }
                    function ac(c, h) {
                        return M(d.createQualifiedName(c, h), c.pos);
                    }
                    function Es(c, h, b) {
                        if (t.hasPrecedingLineBreak() && wt(f()) && ve(Js)) return Bn(80, !0, B.Identifier_expected);
                        if (f() === 81) {
                            let E = Ss();
                            return h ? E : Bn(80, !0, B.Identifier_expected);
                        }
                        return c ? b ? vn() : Ra() : Ft();
                    }
                    function oc(c) {
                        let h = v(), b = [], E;
                        do E = m1(c), b.push(E);
                        while (E.literal.kind === 17);
                        return zt(b, h);
                    }
                    function Du(c) {
                        let h = v();
                        return M(d.createTemplateExpression(Iu(c), oc(c)), h);
                    }
                    function sc() {
                        let c = v();
                        return M(d.createTemplateLiteralType(Iu(!1), Pu()), c);
                    }
                    function Pu() {
                        let c = v(), h = [], b;
                        do b = d1(), h.push(b);
                        while (b.literal.kind === 17);
                        return zt(h, c);
                    }
                    function d1() {
                        let c = v();
                        return M(d.createTemplateLiteralTypeSpan(gt(), _c(!1)), c);
                    }
                    function _c(c) {
                        return f() === 20 ? (xe(c), Cs()) : Qr(18, B._0_expected, en(20));
                    }
                    function m1(c) {
                        let h = v();
                        return M(d.createTemplateSpan(z(Bt), _c(c)), h);
                    }
                    function Yr() {
                        return mo(f());
                    }
                    function Iu(c) {
                        !c && t.getTokenFlags() & 26656 && xe(!1);
                        let h = mo(f());
                        return I.assert(h.kind === 16, "Template head has wrong token kind"), h;
                    }
                    function Cs() {
                        let c = mo(f());
                        return I.assert(c.kind === 17 || c.kind === 18, "Template fragment has wrong token kind"), c;
                    }
                    function Nu(c) {
                        let h = c === 15 || c === 18, b = t.getTokenText();
                        return b.substring(1, b.length - (t.isUnterminated() ? 0 : h ? 1 : 2));
                    }
                    function mo(c) {
                        let h = v(), b = wl(c) ? d.createTemplateLiteralLikeNode(c, t.getTokenValue(), Nu(c), t.getTokenFlags() & 7176) : c === 9 ? T(t.getTokenValue(), t.getNumericLiteralFlags()) : c === 11 ? A(t.getTokenValue(), void 0, t.hasExtendedUnicodeEscape()) : jg(c) ? N(c, t.getTokenValue()) : I.fail();
                        return t.hasExtendedUnicodeEscape() && (b.hasExtendedUnicodeEscape = !0), t.isUnterminated() && (b.isUnterminated = !0), O(), M(b, h);
                    }
                    function cc() {
                        return Ba(!0, B.Type_expected);
                    }
                    function Ua() {
                        if (!t.hasPrecedingLineBreak() && Ye() === 30) return Fi(20, gt, 30, 32);
                    }
                    function As() {
                        let c = v();
                        return M(d.createTypeReferenceNode(cc(), Ua()), c);
                    }
                    function lc(c) {
                        switch(c.kind){
                            case 183:
                                return Vi(c.typeName);
                            case 184:
                            case 185:
                                {
                                    let { parameters: h, type: b } = c;
                                    return f1(h) || lc(b);
                                }
                            case 196:
                                return lc(c.type);
                            default:
                                return !1;
                        }
                    }
                    function h1(c) {
                        return O(), M(d.createTypePredicateNode(void 0, c, gt()), c.pos);
                    }
                    function Ou() {
                        let c = v();
                        return O(), M(d.createThisTypeNode(), c);
                    }
                    function Mu() {
                        let c = v();
                        return O(), M(d.createJSDocAllType(), c);
                    }
                    function y1() {
                        let c = v();
                        return O(), M(d.createJSDocNonNullableType(np(), !1), c);
                    }
                    function Lu() {
                        let c = v();
                        return O(), f() === 28 || f() === 20 || f() === 22 || f() === 32 || f() === 64 || f() === 52 ? M(d.createJSDocUnknownType(), c) : M(d.createJSDocNullableType(gt(), !1), c);
                    }
                    function g1() {
                        let c = v(), h = w();
                        if (ve(zs)) {
                            O();
                            let b = bi(36), E = Mr(59, !1);
                            return De(M(d.createJSDocFunctionType(b, E), c), h);
                        }
                        return M(d.createTypeReferenceNode(vn(), void 0), c);
                    }
                    function Ju() {
                        let c = v(), h;
                        return (f() === 110 || f() === 105) && (h = vn(), G(59)), M(d.createParameterDeclaration(void 0, void 0, h, void 0, ho(), void 0), c);
                    }
                    function ho() {
                        t.setInJSDocType(!0);
                        let c = v();
                        if (Re(144)) {
                            let E = d.createJSDocNamepathType(void 0);
                            e: for(;;)switch(f()){
                                case 20:
                                case 1:
                                case 28:
                                case 5:
                                    break e;
                                default:
                                    ue();
                            }
                            return t.setInJSDocType(!1), M(E, c);
                        }
                        let h = Re(26), b = Tc();
                        return t.setInJSDocType(!1), h && (b = M(d.createJSDocVariadicType(b), c)), f() === 64 ? (O(), M(d.createJSDocOptionalType(b), c)) : b;
                    }
                    function b1() {
                        let c = v();
                        G(114);
                        let h = Ba(!0), b = t.hasPrecedingLineBreak() ? void 0 : Xa();
                        return M(d.createTypeQueryNode(h, b), c);
                    }
                    function Ru() {
                        let c = v(), h = Lr(!1, !0), b = Ft(), E, k;
                        Re(96) && (la() || !Ui() ? E = gt() : k = Dc());
                        let J = Re(64) ? gt() : void 0, Y = d.createTypeParameterDeclaration(h, b, E, J);
                        return Y.expression = k, M(Y, c);
                    }
                    function fr() {
                        if (f() === 30) return Fi(19, Ru, 30, 32);
                    }
                    function ks(c) {
                        return f() === 26 || Bs() || Ei(f()) || f() === 60 || la(!c);
                    }
                    function ju(c) {
                        let h = To(B.Private_identifiers_cannot_be_used_as_parameters);
                        return cm(h) === 0 && !Ze(c) && Ei(f()) && O(), h;
                    }
                    function Fu() {
                        return Ir() || f() === 23 || f() === 19;
                    }
                    function uc(c) {
                        return pc(c);
                    }
                    function Bu(c) {
                        return pc(c, !1);
                    }
                    function pc(c, h = !0) {
                        let b = v(), E = w(), k = c ? nt(()=>Lr(!0)) : kt(()=>Lr(!0));
                        if (f() === 110) {
                            let re = d.createParameterDeclaration(k, void 0, yi(!0), void 0, Bi(), void 0), ne = y_(k);
                            return ne && Fn(ne, B.Neither_decorators_nor_modifiers_may_be_applied_to_this_parameters), De(M(re, b), E);
                        }
                        let J = Kt;
                        Kt = !1;
                        let Y = dt(26);
                        if (!h && !Fu()) return;
                        let _e = De(M(d.createParameterDeclaration(k, Y, ju(k), dt(58), Bi(), qi()), b), E);
                        return Kt = J, _e;
                    }
                    function Mr(c, h) {
                        if (Uu(c, h)) return te(Tc);
                    }
                    function Uu(c, h) {
                        return c === 39 ? (G(c), !0) : Re(59) ? !0 : h && f() === 39 ? (Ne(B._0_expected, en(59)), O(), !0) : !1;
                    }
                    function Ds(c, h) {
                        let b = er(), E = Dn();
                        $e(!!(c & 1)), St(!!(c & 2));
                        let k = c & 32 ? Tn(17, Ju) : Tn(16, ()=>h ? uc(E) : Bu(E));
                        return $e(b), St(E), k;
                    }
                    function bi(c) {
                        if (!G(21)) return Or();
                        let h = Ds(c, !0);
                        return G(22), h;
                    }
                    function yo() {
                        Re(28) || Pn();
                    }
                    function qu(c) {
                        let h = v(), b = w();
                        c === 180 && G(105);
                        let E = fr(), k = bi(4), J = Mr(59, !0);
                        yo();
                        let Y = c === 179 ? d.createCallSignature(E, k, J) : d.createConstructSignature(E, k, J);
                        return De(M(Y, h), b);
                    }
                    function zu() {
                        return f() === 23 && ve(qa);
                    }
                    function qa() {
                        if (O(), f() === 26 || f() === 24) return !0;
                        if (Ei(f())) {
                            if (O(), Dt()) return !0;
                        } else if (Dt()) O();
                        else return !1;
                        return f() === 59 || f() === 28 ? !0 : f() !== 58 ? !1 : (O(), f() === 59 || f() === 28 || f() === 24);
                    }
                    function Wu(c, h, b) {
                        let E = Fi(16, ()=>uc(!1), 23, 24), k = Bi();
                        yo();
                        let J = d.createIndexSignature(b, E, k);
                        return De(M(J, c), h);
                    }
                    function Vu(c, h, b) {
                        let E = ca(), k = dt(58), J;
                        if (f() === 21 || f() === 30) {
                            let Y = fr(), _e = bi(4), re = Mr(59, !0);
                            J = d.createMethodSignature(b, E, k, Y, _e, re);
                        } else {
                            let Y = Bi();
                            J = d.createPropertySignature(b, E, k, Y), f() === 64 && (J.initializer = qi());
                        }
                        return yo(), De(M(J, c), h);
                    }
                    function Hu() {
                        if (f() === 21 || f() === 30 || f() === 139 || f() === 153) return !0;
                        let c = !1;
                        for(; Ei(f());)c = !0, O();
                        return f() === 23 ? !0 : (_a() && (c = !0, O()), c ? f() === 21 || f() === 30 || f() === 58 || f() === 59 || f() === 28 || hi() : !1);
                    }
                    function fc() {
                        if (f() === 21 || f() === 30) return qu(179);
                        if (f() === 105 && ve(go)) return qu(180);
                        let c = v(), h = w(), b = Lr(!1);
                        return ja(139) ? fa(c, h, b, 177, 4) : ja(153) ? fa(c, h, b, 178, 4) : zu() ? Wu(c, h, b) : Vu(c, h, b);
                    }
                    function go() {
                        return O(), f() === 21 || f() === 30;
                    }
                    function v1() {
                        return O() === 25;
                    }
                    function dc() {
                        switch(O()){
                            case 21:
                            case 30:
                            case 25:
                                return !0;
                        }
                        return !1;
                    }
                    function T1() {
                        let c = v();
                        return M(d.createTypeLiteralNode(mc()), c);
                    }
                    function mc() {
                        let c;
                        return G(19) ? (c = pr(4, fc), G(20)) : c = Or(), c;
                    }
                    function S1() {
                        return O(), f() === 40 || f() === 41 ? O() === 148 : (f() === 148 && O(), f() === 23 && xs() && O() === 103);
                    }
                    function Gu() {
                        let c = v(), h = vn();
                        G(103);
                        let b = gt();
                        return M(d.createTypeParameterDeclaration(void 0, h, b, void 0), c);
                    }
                    function x1() {
                        let c = v();
                        G(19);
                        let h;
                        (f() === 148 || f() === 40 || f() === 41) && (h = bn(), h.kind !== 148 && G(148)), G(23);
                        let b = Gu(), E = Re(130) ? gt() : void 0;
                        G(24);
                        let k;
                        (f() === 58 || f() === 40 || f() === 41) && (k = bn(), k.kind !== 58 && G(58));
                        let J = Bi();
                        Pn();
                        let Y = pr(4, fc);
                        return G(20), M(d.createMappedTypeNode(h, b, E, k, J, Y), c);
                    }
                    function hc() {
                        let c = v();
                        if (Re(26)) return M(d.createRestTypeNode(gt()), c);
                        let h = gt();
                        if (h8(h) && h.pos === h.type.pos) {
                            let b = d.createOptionalTypeNode(h.type);
                            return We(b, h), b.flags = h.flags, b;
                        }
                        return h;
                    }
                    function Xu() {
                        return O() === 59 || f() === 58 && O() === 59;
                    }
                    function $u() {
                        return f() === 26 ? wt(O()) && Xu() : wt(f()) && Xu();
                    }
                    function w1() {
                        if (ve($u)) {
                            let c = v(), h = w(), b = dt(26), E = vn(), k = dt(58);
                            G(59);
                            let J = hc(), Y = d.createNamedTupleMember(b, E, k, J);
                            return De(M(Y, c), h);
                        }
                        return hc();
                    }
                    function Qu() {
                        let c = v();
                        return M(d.createTupleTypeNode(Fi(21, w1, 23, 24)), c);
                    }
                    function E1() {
                        let c = v();
                        G(21);
                        let h = gt();
                        return G(22), M(d.createParenthesizedType(h), c);
                    }
                    function Yu() {
                        let c;
                        if (f() === 128) {
                            let h = v();
                            O();
                            let b = M(se(128), h);
                            c = zt([
                                b
                            ], h);
                        }
                        return c;
                    }
                    function Ku() {
                        let c = v(), h = w(), b = Yu(), E = Re(105);
                        I.assert(!b || E, "Per isStartOfFunctionOrConstructorType, a function type cannot have modifiers.");
                        let k = fr(), J = bi(4), Y = Mr(39, !1), _e = E ? d.createConstructorTypeNode(b, k, J, Y) : d.createFunctionTypeNode(k, J, Y);
                        return De(M(_e, c), h);
                    }
                    function yc() {
                        let c = bn();
                        return f() === 25 ? void 0 : c;
                    }
                    function Zu(c) {
                        let h = v();
                        c && O();
                        let b = f() === 112 || f() === 97 || f() === 106 ? bn() : mo(f());
                        return c && (b = M(d.createPrefixUnaryExpression(41, b), h)), M(d.createLiteralTypeNode(b), h);
                    }
                    function ep() {
                        return O(), f() === 102;
                    }
                    function tp() {
                        rn |= 4194304;
                        let c = v(), h = Re(114);
                        G(102), G(21);
                        let b = gt(), E;
                        if (Re(28)) {
                            let Y = t.getTokenStart();
                            G(19);
                            let _e = f();
                            if (_e === 118 || _e === 132 ? O() : Ne(B._0_expected, en(118)), G(59), E = Qc(_e, !0), !G(20)) {
                                let re = Pi(ut);
                                re && re.code === B._0_expected.code && ol(re, Po(Ht, at, Y, 1, B.The_parser_expected_to_find_a_1_to_match_the_0_token_here, "{", "}"));
                            }
                        }
                        G(22);
                        let k = Re(25) ? cc() : void 0, J = Ua();
                        return M(d.createImportTypeNode(b, E, k, J, h), c);
                    }
                    function gc() {
                        return O(), f() === 9 || f() === 10;
                    }
                    function np() {
                        switch(f()){
                            case 133:
                            case 159:
                            case 154:
                            case 150:
                            case 163:
                            case 155:
                            case 136:
                            case 157:
                            case 146:
                            case 151:
                                return ft(yc) || As();
                            case 67:
                                t.reScanAsteriskEqualsToken();
                            case 42:
                                return Mu();
                            case 61:
                                t.reScanQuestionToken();
                            case 58:
                                return Lu();
                            case 100:
                                return g1();
                            case 54:
                                return y1();
                            case 15:
                            case 11:
                            case 9:
                            case 10:
                            case 112:
                            case 97:
                            case 106:
                                return Zu();
                            case 41:
                                return ve(gc) ? Zu(!0) : As();
                            case 116:
                                return bn();
                            case 110:
                                {
                                    let c = Ou();
                                    return f() === 142 && !t.hasPrecedingLineBreak() ? h1(c) : c;
                                }
                            case 114:
                                return ve(ep) ? tp() : b1();
                            case 19:
                                return ve(S1) ? x1() : T1();
                            case 23:
                                return Qu();
                            case 21:
                                return E1();
                            case 102:
                                return tp();
                            case 131:
                                return ve(Js) ? lp() : As();
                            case 16:
                                return sc();
                            default:
                                return As();
                        }
                    }
                    function la(c) {
                        switch(f()){
                            case 133:
                            case 159:
                            case 154:
                            case 150:
                            case 163:
                            case 136:
                            case 148:
                            case 155:
                            case 158:
                            case 116:
                            case 157:
                            case 106:
                            case 110:
                            case 114:
                            case 146:
                            case 19:
                            case 23:
                            case 30:
                            case 52:
                            case 51:
                            case 105:
                            case 11:
                            case 9:
                            case 10:
                            case 112:
                            case 97:
                            case 151:
                            case 42:
                            case 58:
                            case 54:
                            case 26:
                            case 140:
                            case 102:
                            case 131:
                            case 15:
                            case 16:
                                return !0;
                            case 100:
                                return !c;
                            case 41:
                                return !c && ve(gc);
                            case 21:
                                return !c && ve(C1);
                            default:
                                return Dt();
                        }
                    }
                    function C1() {
                        return O(), f() === 22 || ks(!1) || la();
                    }
                    function rp() {
                        let c = v(), h = np();
                        for(; !t.hasPrecedingLineBreak();)switch(f()){
                            case 54:
                                O(), h = M(d.createJSDocNonNullableType(h, !0), c);
                                break;
                            case 58:
                                if (ve(xu)) return h;
                                O(), h = M(d.createJSDocNullableType(h, !0), c);
                                break;
                            case 23:
                                if (G(23), la()) {
                                    let b = gt();
                                    G(24), h = M(d.createIndexedAccessTypeNode(h, b), c);
                                } else G(24), h = M(d.createArrayTypeNode(h), c);
                                break;
                            default:
                                return h;
                        }
                        return h;
                    }
                    function ip(c) {
                        let h = v();
                        return G(c), M(d.createTypeOperatorNode(c, sp()), h);
                    }
                    function ap() {
                        if (Re(96)) {
                            let c = Ee(gt);
                            if (aa() || f() !== 58) return c;
                        }
                    }
                    function A1() {
                        let c = v(), h = Ft(), b = ft(ap), E = d.createTypeParameterDeclaration(void 0, h, b);
                        return M(E, c);
                    }
                    function op() {
                        let c = v();
                        return G(140), M(d.createInferTypeNode(A1()), c);
                    }
                    function sp() {
                        let c = f();
                        switch(c){
                            case 143:
                            case 158:
                            case 148:
                                return ip(c);
                            case 140:
                                return op();
                        }
                        return te(rp);
                    }
                    function _p(c) {
                        if (vc()) {
                            let h = Ku(), b;
                            return tu(h) ? b = c ? B.Function_type_notation_must_be_parenthesized_when_used_in_a_union_type : B.Function_type_notation_must_be_parenthesized_when_used_in_an_intersection_type : b = c ? B.Constructor_type_notation_must_be_parenthesized_when_used_in_a_union_type : B.Constructor_type_notation_must_be_parenthesized_when_used_in_an_intersection_type, Fn(h, b), h;
                        }
                    }
                    function Ps(c, h, b) {
                        let E = v(), k = c === 52, J = Re(c), Y = J && _p(k) || h();
                        if (f() === c || J) {
                            let _e = [
                                Y
                            ];
                            for(; Re(c);)_e.push(_p(k) || h());
                            Y = M(b(zt(_e, E)), E);
                        }
                        return Y;
                    }
                    function k1() {
                        return Ps(51, sp, d.createIntersectionTypeNode);
                    }
                    function bc() {
                        return Ps(52, k1, d.createUnionTypeNode);
                    }
                    function D1() {
                        return O(), f() === 105;
                    }
                    function vc() {
                        return f() === 30 || f() === 21 && ve(P1) ? !0 : f() === 105 || f() === 128 && ve(D1);
                    }
                    function cp() {
                        if (Ei(f()) && Lr(!1), Dt() || f() === 110) return O(), !0;
                        if (f() === 23 || f() === 19) {
                            let c = ut.length;
                            return To(), c === ut.length;
                        }
                        return !1;
                    }
                    function P1() {
                        return O(), !!(f() === 22 || f() === 26 || cp() && (f() === 59 || f() === 28 || f() === 58 || f() === 64 || f() === 22 && (O(), f() === 39)));
                    }
                    function Tc() {
                        let c = v(), h = Dt() && ft(Sc), b = gt();
                        return h ? M(d.createTypePredicateNode(void 0, h, b), c) : b;
                    }
                    function Sc() {
                        let c = Ft();
                        if (f() === 142 && !t.hasPrecedingLineBreak()) return O(), c;
                    }
                    function lp() {
                        let c = v(), h = Qr(131), b = f() === 110 ? Ou() : Ft(), E = Re(142) ? gt() : void 0;
                        return M(d.createTypePredicateNode(h, b, E), c);
                    }
                    function gt() {
                        if (ct & 81920) return Jt(81920, gt);
                        if (vc()) return Ku();
                        let c = v(), h = bc();
                        if (!aa() && !t.hasPrecedingLineBreak() && Re(96)) {
                            let b = Ee(gt);
                            G(58);
                            let E = te(gt);
                            G(59);
                            let k = te(gt);
                            return M(d.createConditionalTypeNode(h, b, E, k), c);
                        }
                        return h;
                    }
                    function Bi() {
                        return Re(59) ? gt() : void 0;
                    }
                    function xc() {
                        switch(f()){
                            case 110:
                            case 108:
                            case 106:
                            case 112:
                            case 97:
                            case 9:
                            case 10:
                            case 11:
                            case 15:
                            case 16:
                            case 21:
                            case 23:
                            case 19:
                            case 100:
                            case 86:
                            case 105:
                            case 44:
                            case 69:
                            case 80:
                                return !0;
                            case 102:
                                return ve(dc);
                            default:
                                return Dt();
                        }
                    }
                    function Ui() {
                        if (xc()) return !0;
                        switch(f()){
                            case 40:
                            case 41:
                            case 55:
                            case 54:
                            case 91:
                            case 114:
                            case 116:
                            case 46:
                            case 47:
                            case 30:
                            case 135:
                            case 127:
                            case 81:
                            case 60:
                                return !0;
                            default:
                                return Ac() ? !0 : Dt();
                        }
                    }
                    function up() {
                        return f() !== 19 && f() !== 100 && f() !== 86 && f() !== 60 && Ui();
                    }
                    function Bt() {
                        let c = $r();
                        c && Ut(!1);
                        let h = v(), b = on(!0), E;
                        for(; E = dt(28);)b = Ns(b, E, on(!0), h);
                        return c && Ut(!0), b;
                    }
                    function qi() {
                        return Re(64) ? on(!0) : void 0;
                    }
                    function on(c) {
                        if (I1()) return N1();
                        let h = O1(c) || mp(c);
                        if (h) return h;
                        let b = v(), E = w(), k = Is(0);
                        return k.kind === 80 && f() === 39 ? wc(b, k, c, E, void 0) : jo(k) && A_(ge()) ? Ns(k, bn(), on(c), b) : gp(k, b, c);
                    }
                    function I1() {
                        return f() === 127 ? er() ? !0 : ve(zp) : !1;
                    }
                    function pp() {
                        return O(), !t.hasPrecedingLineBreak() && Dt();
                    }
                    function N1() {
                        let c = v();
                        return O(), !t.hasPrecedingLineBreak() && (f() === 42 || Ui()) ? M(d.createYieldExpression(dt(42), on(!0)), c) : M(d.createYieldExpression(void 0, void 0), c);
                    }
                    function wc(c, h, b, E, k) {
                        I.assert(f() === 39, "parseSimpleArrowFunctionExpression should only have been called if we had a =>");
                        let J = d.createParameterDeclaration(void 0, void 0, h, void 0, void 0, void 0);
                        M(J, h.pos);
                        let Y = zt([
                            J
                        ], J.pos, J.end), _e = Qr(39), re = yp(!!k, b), ne = d.createArrowFunction(k, void 0, Y, void 0, _e, re);
                        return De(M(ne, c), E);
                    }
                    function O1(c) {
                        let h = M1();
                        if (h !== 0) return h === 1 ? Ec(!0, !0) : ft(()=>dp(c));
                    }
                    function M1() {
                        return f() === 21 || f() === 30 || f() === 134 ? ve(fp) : f() === 39 ? 1 : 0;
                    }
                    function fp() {
                        if (f() === 134 && (O(), t.hasPrecedingLineBreak() || f() !== 21 && f() !== 30)) return 0;
                        let c = f(), h = O();
                        if (c === 21) {
                            if (h === 22) switch(O()){
                                case 39:
                                case 59:
                                case 19:
                                    return 1;
                                default:
                                    return 0;
                            }
                            if (h === 23 || h === 19) return 2;
                            if (h === 26) return 1;
                            if (Ei(h) && h !== 134 && ve(xs)) return O() === 130 ? 0 : 1;
                            if (!Dt() && h !== 110) return 0;
                            switch(O()){
                                case 59:
                                    return 1;
                                case 58:
                                    return O(), f() === 59 || f() === 28 || f() === 64 || f() === 22 ? 1 : 0;
                                case 28:
                                case 64:
                                case 22:
                                    return 2;
                            }
                            return 0;
                        } else return I.assert(c === 30), !Dt() && f() !== 87 ? 0 : xt === 1 ? ve(()=>{
                            Re(87);
                            let E = O();
                            if (E === 96) switch(O()){
                                case 64:
                                case 32:
                                case 44:
                                    return !1;
                                default:
                                    return !0;
                            }
                            else if (E === 28 || E === 64) return !0;
                            return !1;
                        }) ? 1 : 0 : 2;
                    }
                    function dp(c) {
                        let h = t.getTokenStart();
                        if (jn != null && jn.has(h)) return;
                        let b = Ec(!1, c);
                        return b || (jn || (jn = new Set)).add(h), b;
                    }
                    function mp(c) {
                        if (f() === 134 && ve(hp) === 1) {
                            let h = v(), b = w(), E = af(), k = Is(0);
                            return wc(h, k, c, b, E);
                        }
                    }
                    function hp() {
                        if (f() === 134) {
                            if (O(), t.hasPrecedingLineBreak() || f() === 39) return 0;
                            let c = Is(0);
                            if (!t.hasPrecedingLineBreak() && c.kind === 80 && f() === 39) return 1;
                        }
                        return 0;
                    }
                    function Ec(c, h) {
                        let b = v(), E = w(), k = af(), J = Ze(k, _l) ? 2 : 0, Y = fr(), _e;
                        if (G(21)) {
                            if (c) _e = Ds(J, c);
                            else {
                                let vi = Ds(J, c);
                                if (!vi) return;
                                _e = vi;
                            }
                            if (!G(22) && !c) return;
                        } else {
                            if (!c) return;
                            _e = Or();
                        }
                        let re = f() === 59, ne = Mr(59, !1);
                        if (ne && !c && lc(ne)) return;
                        let pe = ne;
                        for(; (pe == null ? void 0 : pe.kind) === 196;)pe = pe.type;
                        let Ue = pe && jm(pe);
                        if (!c && f() !== 39 && (Ue || f() !== 19)) return;
                        let Fe = f(), Oe = Qr(39), xn = Fe === 39 || Fe === 19 ? yp(Ze(k, _l), h) : Ft();
                        if (!h && re && f() !== 59) return;
                        let qn = d.createArrowFunction(k, Y, _e, ne, Oe, xn);
                        return De(M(qn, b), E);
                    }
                    function yp(c, h) {
                        if (f() === 19) return bo(c ? 2 : 0);
                        if (f() !== 27 && f() !== 100 && f() !== 86 && Uc() && !up()) return bo(16 | (c ? 2 : 0));
                        let b = Kt;
                        Kt = !1;
                        let E = c ? nt(()=>on(h)) : kt(()=>on(h));
                        return Kt = b, E;
                    }
                    function gp(c, h, b) {
                        let E = dt(58);
                        if (!E) return c;
                        let k;
                        return M(d.createConditionalExpression(c, E, Jt(n, ()=>on(!1)), k = Qr(59), Cl(k) ? on(b) : Bn(80, !1, B._0_expected, en(59))), h);
                    }
                    function Is(c) {
                        let h = v(), b = Dc();
                        return bp(c, b, h);
                    }
                    function Cc(c) {
                        return c === 103 || c === 165;
                    }
                    function bp(c, h, b) {
                        for(;;){
                            ge();
                            let E = ml(f());
                            if (!(f() === 43 ? E >= c : E > c) || f() === 103 && Ri()) break;
                            if (f() === 130 || f() === 152) {
                                if (t.hasPrecedingLineBreak()) break;
                                {
                                    let J = f();
                                    O(), h = J === 152 ? L1(h, gt()) : J1(h, gt());
                                }
                            } else h = Ns(h, bn(), Is(E), b);
                        }
                        return h;
                    }
                    function Ac() {
                        return Ri() && f() === 103 ? !1 : ml(f()) > 0;
                    }
                    function L1(c, h) {
                        return M(d.createSatisfiesExpression(c, h), c.pos);
                    }
                    function Ns(c, h, b, E) {
                        return M(d.createBinaryExpression(c, h, b), E);
                    }
                    function J1(c, h) {
                        return M(d.createAsExpression(c, h), c.pos);
                    }
                    function kc() {
                        let c = v();
                        return M(d.createPrefixUnaryExpression(f(), $(ua)), c);
                    }
                    function R1() {
                        let c = v();
                        return M(d.createDeleteExpression($(ua)), c);
                    }
                    function vp() {
                        let c = v();
                        return M(d.createTypeOfExpression($(ua)), c);
                    }
                    function j1() {
                        let c = v();
                        return M(d.createVoidExpression($(ua)), c);
                    }
                    function Tp() {
                        return f() === 135 ? Dn() ? !0 : ve(zp) : !1;
                    }
                    function F1() {
                        let c = v();
                        return M(d.createAwaitExpression($(ua)), c);
                    }
                    function Dc() {
                        if (Sp()) {
                            let b = v(), E = xp();
                            return f() === 43 ? bp(ml(f()), E, b) : E;
                        }
                        let c = f(), h = ua();
                        if (f() === 43) {
                            let b = Mt(at, h.pos), { end: E } = h;
                            h.kind === 216 ? jt(b, E, B.A_type_assertion_expression_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses) : (I.assert(jf(c)), jt(b, E, B.An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses, en(c)));
                        }
                        return h;
                    }
                    function ua() {
                        switch(f()){
                            case 40:
                            case 41:
                            case 55:
                            case 54:
                                return kc();
                            case 91:
                                return R1();
                            case 114:
                                return vp();
                            case 116:
                                return j1();
                            case 30:
                                return xt === 1 ? Wa(!0, void 0, void 0, !0) : V1();
                            case 135:
                                if (Tp()) return F1();
                            default:
                                return xp();
                        }
                    }
                    function Sp() {
                        switch(f()){
                            case 40:
                            case 41:
                            case 55:
                            case 54:
                            case 91:
                            case 114:
                            case 116:
                            case 135:
                                return !1;
                            case 30:
                                if (xt !== 1) return !1;
                            default:
                                return !0;
                        }
                    }
                    function xp() {
                        if (f() === 46 || f() === 47) {
                            let h = v();
                            return M(d.createPrefixUnaryExpression(f(), $(za)), h);
                        } else if (xt === 1 && f() === 30 && ve(_1)) return Wa(!0);
                        let c = za();
                        if (I.assert(jo(c)), (f() === 46 || f() === 47) && !t.hasPrecedingLineBreak()) {
                            let h = f();
                            return O(), M(d.createPostfixUnaryExpression(c, h), c.pos);
                        }
                        return c;
                    }
                    function za() {
                        let c = v(), h;
                        return f() === 102 ? ve(go) ? (rn |= 4194304, h = bn()) : ve(v1) ? (O(), O(), h = M(d.createMetaProperty(102, vn()), c), rn |= 8388608) : h = Pc() : h = f() === 108 ? Ic() : Pc(), Va(c, h);
                    }
                    function Pc() {
                        let c = v(), h = Op();
                        return Ms(c, h, !0);
                    }
                    function Ic() {
                        let c = v(), h = bn();
                        if (f() === 30) {
                            let b = v(), E = ft(Jc);
                            E !== void 0 && (jt(b, v(), B.super_may_not_use_type_arguments), Un() || (h = d.createExpressionWithTypeArguments(h, E)));
                        }
                        return f() === 21 || f() === 25 || f() === 23 ? h : (Qr(25, B.super_must_be_followed_by_an_argument_list_or_member_access), M(W(h, Es(!0, !0, !0)), c));
                    }
                    function Wa(c, h, b, E = !1) {
                        let k = v(), J = U1(c), Y;
                        if (J.kind === 286) {
                            let _e = wp(J), re, ne = _e[_e.length - 1];
                            if ((ne == null ? void 0 : ne.kind) === 284 && !Ai(ne.openingElement.tagName, ne.closingElement.tagName) && Ai(J.tagName, ne.closingElement.tagName)) {
                                let pe = ne.children.end, Ue = M(d.createJsxElement(ne.openingElement, ne.children, M(d.createJsxClosingElement(M(q(""), pe, pe)), pe, pe)), ne.openingElement.pos, pe);
                                _e = zt([
                                    ..._e.slice(0, _e.length - 1),
                                    Ue
                                ], _e.pos, pe), re = ne.closingElement;
                            } else re = W1(J, c), Ai(J.tagName, re.tagName) || (b && Jo(b) && Ai(re.tagName, b.tagName) ? Fn(J.tagName, B.JSX_element_0_has_no_corresponding_closing_tag, n_(at, J.tagName)) : Fn(re.tagName, B.Expected_corresponding_JSX_closing_tag_for_0, n_(at, J.tagName)));
                            Y = M(d.createJsxElement(J, _e, re), k);
                        } else J.kind === 289 ? Y = M(d.createJsxFragment(J, wp(J), Dp(c)), k) : (I.assert(J.kind === 285), Y = J);
                        if (!E && c && f() === 30) {
                            let _e = typeof h > "u" ? Y.pos : h, re = ft(()=>Wa(!0, _e));
                            if (re) {
                                let ne = Bn(28, !1);
                                return kd(ne, re.pos, 0), jt(Mt(at, _e), re.end, B.JSX_expressions_must_have_one_parent_element), M(d.createBinaryExpression(Y, ne, re), k);
                            }
                        }
                        return Y;
                    }
                    function B1() {
                        let c = v(), h = d.createJsxText(t.getTokenValue(), ht === 13);
                        return ht = t.scanJsxToken(), M(h, c);
                    }
                    function Nc(c, h) {
                        switch(h){
                            case 1:
                                if (Jb(c)) Fn(c, B.JSX_fragment_has_no_corresponding_closing_tag);
                                else {
                                    let b = c.tagName, E = Math.min(Mt(at, b.pos), b.end);
                                    jt(E, b.end, B.JSX_element_0_has_no_corresponding_closing_tag, n_(at, c.tagName));
                                }
                                return;
                            case 31:
                            case 7:
                                return;
                            case 12:
                            case 13:
                                return B1();
                            case 19:
                                return Ap(!1);
                            case 30:
                                return Wa(!1, void 0, c);
                            default:
                                return I.assertNever(h);
                        }
                    }
                    function wp(c) {
                        let h = [], b = v(), E = yt;
                        for(yt |= 16384;;){
                            let k = Nc(c, ht = t.reScanJsxToken());
                            if (!k || (h.push(k), Jo(c) && (k == null ? void 0 : k.kind) === 284 && !Ai(k.openingElement.tagName, k.closingElement.tagName) && Ai(c.tagName, k.closingElement.tagName))) break;
                        }
                        return yt = E, zt(h, b);
                    }
                    function Oc() {
                        let c = v();
                        return M(d.createJsxAttributes(pr(13, q1)), c);
                    }
                    function U1(c) {
                        let h = v();
                        if (G(30), f() === 32) return Nt(), M(d.createJsxOpeningFragment(), h);
                        let b = Ep(), E = ct & 524288 ? void 0 : Xa(), k = Oc(), J;
                        return f() === 32 ? (Nt(), J = d.createJsxOpeningElement(b, E, k)) : (G(44), G(32, void 0, !1) && (c ? O() : Nt()), J = d.createJsxSelfClosingElement(b, E, k)), M(J, h);
                    }
                    function Ep() {
                        let c = v(), h = Cp();
                        if (B_(h)) return h;
                        let b = h;
                        for(; Re(25);)b = M(W(b, Es(!0, !1, !1)), c);
                        return b;
                    }
                    function Cp() {
                        let c = v();
                        Xe();
                        let h = f() === 110, b = Ra();
                        return Re(59) ? (Xe(), M(d.createJsxNamespacedName(b, Ra()), c)) : h ? M(d.createToken(110), c) : b;
                    }
                    function Ap(c) {
                        let h = v();
                        if (!G(19)) return;
                        let b, E;
                        return f() !== 20 && (c || (b = dt(26)), E = Bt()), c ? G(20) : G(20, void 0, !1) && Nt(), M(d.createJsxExpression(b, E), h);
                    }
                    function q1() {
                        if (f() === 19) return z1();
                        let c = v();
                        return M(d.createJsxAttribute(Mc(), kp()), c);
                    }
                    function kp() {
                        if (f() === 64) {
                            if (Xt() === 11) return Yr();
                            if (f() === 19) return Ap(!0);
                            if (f() === 30) return Wa(!0);
                            Ne(B.or_JSX_element_expected);
                        }
                    }
                    function Mc() {
                        let c = v();
                        Xe();
                        let h = Ra();
                        return Re(59) ? (Xe(), M(d.createJsxNamespacedName(h, Ra()), c)) : h;
                    }
                    function z1() {
                        let c = v();
                        G(19), G(26);
                        let h = Bt();
                        return G(20), M(d.createJsxSpreadAttribute(h), c);
                    }
                    function W1(c, h) {
                        let b = v();
                        G(31);
                        let E = Ep();
                        return G(32, void 0, !1) && (h || !Ai(c.tagName, E) ? O() : Nt()), M(d.createJsxClosingElement(E), b);
                    }
                    function Dp(c) {
                        let h = v();
                        return G(31), G(32, B.Expected_corresponding_closing_tag_for_JSX_fragment, !1) && (c ? O() : Nt()), M(d.createJsxJsxClosingFragment(), h);
                    }
                    function V1() {
                        I.assert(xt !== 1, "Type assertions should never be parsed in JSX; they should be parsed as comparisons or JSX elements/fragments.");
                        let c = v();
                        G(30);
                        let h = gt();
                        G(32);
                        let b = ua();
                        return M(d.createTypeAssertion(h, b), c);
                    }
                    function Pp() {
                        return O(), wt(f()) || f() === 23 || Un();
                    }
                    function H1() {
                        return f() === 29 && ve(Pp);
                    }
                    function Os(c) {
                        if (c.flags & 64) return !0;
                        if (Uo(c)) {
                            let h = c.expression;
                            for(; Uo(h) && !(h.flags & 64);)h = h.expression;
                            if (h.flags & 64) {
                                for(; Uo(c);)c.flags |= 64, c = c.expression;
                                return !0;
                            }
                        }
                        return !1;
                    }
                    function G1(c, h, b) {
                        let E = Es(!0, !0, !0), k = b || Os(h), J = k ? Se(h, b, E) : W(h, E);
                        if (k && Vn(J.name) && Fn(J.name, B.An_optional_chain_cannot_contain_private_identifiers), Cb(h) && h.typeArguments) {
                            let Y = h.typeArguments.pos - 1, _e = Mt(at, h.typeArguments.end) + 1;
                            jt(Y, _e, B.An_instantiation_expression_cannot_be_followed_by_a_property_access);
                        }
                        return M(J, c);
                    }
                    function Ip(c, h, b) {
                        let E;
                        if (f() === 24) E = Bn(80, !0, B.An_element_access_expression_should_take_an_argument);
                        else {
                            let J = z(Bt);
                            Yi(J) && (J.text = sa(J.text)), E = J;
                        }
                        G(24);
                        let k = b || Os(h) ? Be(h, b, E) : Qe(h, E);
                        return M(k, c);
                    }
                    function Ms(c, h, b) {
                        for(;;){
                            let E, k = !1;
                            if (b && H1() ? (E = Qr(29), k = wt(f())) : k = Re(25), k) {
                                h = G1(c, h, E);
                                continue;
                            }
                            if ((E || !$r()) && Re(23)) {
                                h = Ip(c, h, E);
                                continue;
                            }
                            if (Un()) {
                                h = !E && h.kind === 233 ? Kr(c, h.expression, E, h.typeArguments) : Kr(c, h, E, void 0);
                                continue;
                            }
                            if (!E) {
                                if (f() === 54 && !t.hasPrecedingLineBreak()) {
                                    O(), h = M(d.createNonNullExpression(h), c);
                                    continue;
                                }
                                let J = ft(Jc);
                                if (J) {
                                    h = M(d.createExpressionWithTypeArguments(h, J), c);
                                    continue;
                                }
                            }
                            return h;
                        }
                    }
                    function Un() {
                        return f() === 15 || f() === 16;
                    }
                    function Kr(c, h, b, E) {
                        let k = d.createTaggedTemplateExpression(h, E, f() === 15 ? (xe(!0), Yr()) : Du(!0));
                        return (b || h.flags & 64) && (k.flags |= 64), k.questionDotToken = b, M(k, c);
                    }
                    function Va(c, h) {
                        for(;;){
                            h = Ms(c, h, !0);
                            let b, E = dt(29);
                            if (E && (b = ft(Jc), Un())) {
                                h = Kr(c, h, E, b);
                                continue;
                            }
                            if (b || f() === 21) {
                                !E && h.kind === 233 && (b = h.typeArguments, h = h.expression);
                                let k = Lc(), J = E || Os(h) ? _t(h, E, b, k) : st(h, b, k);
                                h = M(J, c);
                                continue;
                            }
                            if (E) {
                                let k = Bn(80, !1, B.Identifier_expected);
                                h = M(Se(h, E, k), c);
                            }
                            break;
                        }
                        return h;
                    }
                    function Lc() {
                        G(21);
                        let c = Tn(11, $1);
                        return G(22), c;
                    }
                    function Jc() {
                        if (ct & 524288 || Ye() !== 30) return;
                        O();
                        let c = Tn(20, gt);
                        if (ge() === 32) return O(), c && Np() ? c : void 0;
                    }
                    function Np() {
                        switch(f()){
                            case 21:
                            case 15:
                            case 16:
                                return !0;
                            case 30:
                            case 32:
                            case 40:
                            case 41:
                                return !1;
                        }
                        return t.hasPrecedingLineBreak() || Ac() || !Ui();
                    }
                    function Op() {
                        switch(f()){
                            case 15:
                                t.getTokenFlags() & 26656 && xe(!1);
                            case 9:
                            case 10:
                            case 11:
                                return Yr();
                            case 110:
                            case 108:
                            case 106:
                            case 112:
                            case 97:
                                return bn();
                            case 21:
                                return Mp();
                            case 23:
                                return jc();
                            case 19:
                                return Ls();
                            case 134:
                                if (!ve(Bc)) break;
                                return Lp();
                            case 60:
                                return of();
                            case 86:
                                return Th();
                            case 100:
                                return Lp();
                            case 105:
                                return Y1();
                            case 44:
                            case 69:
                                if (Le() === 14) return Yr();
                                break;
                            case 16:
                                return Du(!1);
                            case 81:
                                return Ss();
                        }
                        return Ft(B.Expression_expected);
                    }
                    function Mp() {
                        let c = v(), h = w();
                        G(21);
                        let b = z(Bt);
                        return G(22), De(M(yn(b), c), h);
                    }
                    function X1() {
                        let c = v();
                        G(26);
                        let h = on(!0);
                        return M(d.createSpreadElement(h), c);
                    }
                    function Rc() {
                        return f() === 26 ? X1() : f() === 28 ? M(d.createOmittedExpression(), v()) : on(!0);
                    }
                    function $1() {
                        return Jt(n, Rc);
                    }
                    function jc() {
                        let c = v(), h = t.getTokenStart(), b = G(23), E = t.hasPrecedingLineBreak(), k = Tn(15, Rc);
                        return Nr(23, 24, b, h), M(fe(k, E), c);
                    }
                    function Q1() {
                        let c = v(), h = w();
                        if (dt(26)) {
                            let pe = on(!0);
                            return De(M(d.createSpreadAssignment(pe), c), h);
                        }
                        let b = Lr(!0);
                        if (ja(139)) return fa(c, h, b, 177, 0);
                        if (ja(153)) return fa(c, h, b, 178, 0);
                        let E = dt(42), k = Dt(), J = ca(), Y = dt(58), _e = dt(54);
                        if (E || f() === 21 || f() === 30) return Hc(c, h, b, E, J, Y, _e);
                        let re;
                        if (k && f() !== 59) {
                            let pe = dt(64), Ue = pe ? z(()=>on(!0)) : void 0;
                            re = d.createShorthandPropertyAssignment(J, Ue), re.equalsToken = pe;
                        } else {
                            G(59);
                            let pe = z(()=>on(!0));
                            re = d.createPropertyAssignment(J, pe);
                        }
                        return re.modifiers = b, re.questionToken = Y, re.exclamationToken = _e, De(M(re, c), h);
                    }
                    function Ls() {
                        let c = v(), h = t.getTokenStart(), b = G(19), E = t.hasPrecedingLineBreak(), k = Tn(12, Q1, !0);
                        return Nr(19, 20, b, h), M(F(k, E), c);
                    }
                    function Lp() {
                        let c = $r();
                        Ut(!1);
                        let h = v(), b = w(), E = Lr(!1);
                        G(100);
                        let k = dt(42), J = k ? 1 : 0, Y = Ze(E, _l) ? 2 : 0, _e = J && Y ? qt(Ha) : J ? je(Ha) : Y ? nt(Ha) : Ha(), re = fr(), ne = bi(J | Y), pe = Mr(59, !1), Ue = bo(J | Y);
                        Ut(c);
                        let Fe = d.createFunctionExpression(E, k, _e, re, ne, pe, Ue);
                        return De(M(Fe, h), b);
                    }
                    function Ha() {
                        return Ir() ? X_() : void 0;
                    }
                    function Y1() {
                        let c = v();
                        if (G(105), Re(25)) {
                            let J = vn();
                            return M(d.createMetaProperty(105, J), c);
                        }
                        let h = v(), b = Ms(h, Op(), !1), E;
                        b.kind === 233 && (E = b.typeArguments, b = b.expression), f() === 29 && Ne(B.Invalid_optional_chain_from_new_expression_Did_you_mean_to_call_0, n_(at, b));
                        let k = f() === 21 ? Lc() : void 0;
                        return M(hn(b, E, k), c);
                    }
                    function pa(c, h) {
                        let b = v(), E = w(), k = t.getTokenStart(), J = G(19, h);
                        if (J || c) {
                            let Y = t.hasPrecedingLineBreak(), _e = pr(1, Sn);
                            Nr(19, 20, J, k);
                            let re = De(M(fi(_e, Y), b), E);
                            return f() === 64 && (Ne(B.Declaration_or_statement_expected_This_follows_a_block_of_statements_so_if_you_intended_to_write_a_destructuring_assignment_you_might_need_to_wrap_the_whole_assignment_in_parentheses), O()), re;
                        } else {
                            let Y = Or();
                            return De(M(fi(Y, void 0), b), E);
                        }
                    }
                    function bo(c, h) {
                        let b = er();
                        $e(!!(c & 1));
                        let E = Dn();
                        St(!!(c & 2));
                        let k = Kt;
                        Kt = !1;
                        let J = $r();
                        J && Ut(!1);
                        let Y = pa(!!(c & 16), h);
                        return J && Ut(!0), Kt = k, $e(b), St(E), Y;
                    }
                    function K1() {
                        let c = v(), h = w();
                        return G(27), De(M(d.createEmptyStatement(), c), h);
                    }
                    function Jp() {
                        let c = v(), h = w();
                        G(101);
                        let b = t.getTokenStart(), E = G(21), k = z(Bt);
                        Nr(21, 22, E, b);
                        let J = Sn(), Y = Re(93) ? Sn() : void 0;
                        return De(M(He(k, J, Y), c), h);
                    }
                    function Z1() {
                        let c = v(), h = w();
                        G(92);
                        let b = Sn();
                        G(117);
                        let E = t.getTokenStart(), k = G(21), J = z(Bt);
                        return Nr(21, 22, k, E), Re(27), De(M(d.createDoStatement(b, J), c), h);
                    }
                    function Rp() {
                        let c = v(), h = w();
                        G(117);
                        let b = t.getTokenStart(), E = G(21), k = z(Bt);
                        Nr(21, 22, E, b);
                        let J = Sn();
                        return De(M(Qn(k, J), c), h);
                    }
                    function eh() {
                        let c = v(), h = w();
                        G(99);
                        let b = dt(135);
                        G(21);
                        let E;
                        f() !== 27 && (f() === 115 || f() === 121 || f() === 87 || f() === 160 && ve(lh) || f() === 135 && ve(qc) ? E = Vc(!0) : E = K(Bt));
                        let k;
                        if (b ? G(165) : Re(165)) {
                            let J = z(()=>on(!0));
                            G(22), k = vt(b, E, J, Sn());
                        } else if (Re(103)) {
                            let J = z(Bt);
                            G(22), k = d.createForInStatement(E, J, Sn());
                        } else {
                            G(27);
                            let J = f() !== 27 && f() !== 22 ? z(Bt) : void 0;
                            G(27);
                            let Y = f() !== 22 ? z(Bt) : void 0;
                            G(22), k = Gr(E, J, Y, Sn());
                        }
                        return De(M(k, c), h);
                    }
                    function Fc(c) {
                        let h = v(), b = w();
                        G(c === 252 ? 83 : 88);
                        let E = hi() ? void 0 : Ft();
                        Pn();
                        let k = c === 252 ? d.createBreakStatement(E) : d.createContinueStatement(E);
                        return De(M(k, h), b);
                    }
                    function th() {
                        let c = v(), h = w();
                        G(107);
                        let b = hi() ? void 0 : z(Bt);
                        return Pn(), De(M(d.createReturnStatement(b), c), h);
                    }
                    function jp() {
                        let c = v(), h = w();
                        G(118);
                        let b = t.getTokenStart(), E = G(21), k = z(Bt);
                        Nr(21, 22, E, b);
                        let J = Rt(67108864, Sn);
                        return De(M(d.createWithStatement(k, J), c), h);
                    }
                    function nh() {
                        let c = v(), h = w();
                        G(84);
                        let b = z(Bt);
                        G(59);
                        let E = pr(3, Sn);
                        return De(M(d.createCaseClause(b, E), c), h);
                    }
                    function Fp() {
                        let c = v();
                        G(90), G(59);
                        let h = pr(3, Sn);
                        return M(d.createDefaultClause(h), c);
                    }
                    function rh() {
                        return f() === 84 ? nh() : Fp();
                    }
                    function ih() {
                        let c = v();
                        G(19);
                        let h = pr(2, rh);
                        return G(20), M(d.createCaseBlock(h), c);
                    }
                    function Bp() {
                        let c = v(), h = w();
                        G(109), G(21);
                        let b = z(Bt);
                        G(22);
                        let E = ih();
                        return De(M(d.createSwitchStatement(b, E), c), h);
                    }
                    function ah() {
                        let c = v(), h = w();
                        G(111);
                        let b = t.hasPrecedingLineBreak() ? void 0 : z(Bt);
                        return b === void 0 && (Rn++, b = M(q(""), v())), Ts() || Pe(b), De(M(d.createThrowStatement(b), c), h);
                    }
                    function Up() {
                        let c = v(), h = w();
                        G(113);
                        let b = pa(!1), E = f() === 85 ? oh() : void 0, k;
                        return (!E || f() === 98) && (G(98, B.catch_or_finally_expected), k = pa(!1)), De(M(d.createTryStatement(b, E, k), c), h);
                    }
                    function oh() {
                        let c = v();
                        G(85);
                        let h;
                        Re(21) ? (h = Wc(), G(22)) : h = void 0;
                        let b = pa(!1);
                        return M(d.createCatchClause(h, b), c);
                    }
                    function qp() {
                        let c = v(), h = w();
                        return G(89), Pn(), De(M(d.createDebuggerStatement(), c), h);
                    }
                    function sh() {
                        let c = v(), h = w(), b, E = f() === 21, k = z(Bt);
                        return Ae(k) && Re(59) ? b = d.createLabeledStatement(k, Sn()) : (Ts() || Pe(k), b = cr(k), E && (h = !1)), De(M(b, c), h);
                    }
                    function Js() {
                        return O(), wt(f()) && !t.hasPrecedingLineBreak();
                    }
                    function _h() {
                        return O(), f() === 86 && !t.hasPrecedingLineBreak();
                    }
                    function Bc() {
                        return O(), f() === 100 && !t.hasPrecedingLineBreak();
                    }
                    function zp() {
                        return O(), (wt(f()) || f() === 9 || f() === 10 || f() === 11) && !t.hasPrecedingLineBreak();
                    }
                    function Wp() {
                        for(;;)switch(f()){
                            case 115:
                            case 121:
                            case 87:
                            case 100:
                            case 86:
                            case 94:
                                return !0;
                            case 160:
                                return Hp();
                            case 135:
                                return zc();
                            case 120:
                            case 156:
                                return pp();
                            case 144:
                            case 145:
                                return $p();
                            case 128:
                            case 129:
                            case 134:
                            case 138:
                            case 123:
                            case 124:
                            case 125:
                            case 148:
                                let c = f();
                                if (O(), t.hasPrecedingLineBreak()) return !1;
                                if (c === 138 && f() === 156) return !0;
                                continue;
                            case 162:
                                return O(), f() === 19 || f() === 80 || f() === 95;
                            case 102:
                                return O(), f() === 11 || f() === 42 || f() === 19 || wt(f());
                            case 95:
                                let h = O();
                                if (h === 156 && (h = ve(O)), h === 64 || h === 42 || h === 19 || h === 90 || h === 130 || h === 60) return !0;
                                continue;
                            case 126:
                                O();
                                continue;
                            default:
                                return !1;
                        }
                    }
                    function Rs() {
                        return ve(Wp);
                    }
                    function Uc() {
                        switch(f()){
                            case 60:
                            case 27:
                            case 19:
                            case 115:
                            case 121:
                            case 160:
                            case 100:
                            case 86:
                            case 94:
                            case 101:
                            case 92:
                            case 117:
                            case 99:
                            case 88:
                            case 83:
                            case 107:
                            case 118:
                            case 109:
                            case 111:
                            case 113:
                            case 89:
                            case 85:
                            case 98:
                                return !0;
                            case 102:
                                return Rs() || ve(dc);
                            case 87:
                            case 95:
                                return Rs();
                            case 134:
                            case 138:
                            case 120:
                            case 144:
                            case 145:
                            case 156:
                            case 162:
                                return !0;
                            case 129:
                            case 125:
                            case 123:
                            case 124:
                            case 126:
                            case 148:
                                return Rs() || !ve(Js);
                            default:
                                return Ui();
                        }
                    }
                    function ch() {
                        return O(), Ir() || f() === 19 || f() === 23;
                    }
                    function Vp() {
                        return ve(ch);
                    }
                    function lh() {
                        return js(!0);
                    }
                    function js(c) {
                        return O(), c && f() === 165 ? !1 : (Ir() || f() === 19) && !t.hasPrecedingLineBreak();
                    }
                    function Hp() {
                        return ve(js);
                    }
                    function qc(c) {
                        return O() === 160 ? js(c) : !1;
                    }
                    function zc() {
                        return ve(qc);
                    }
                    function Sn() {
                        switch(f()){
                            case 27:
                                return K1();
                            case 19:
                                return pa(!1);
                            case 115:
                                return Ga(v(), w(), void 0);
                            case 121:
                                if (Vp()) return Ga(v(), w(), void 0);
                                break;
                            case 135:
                                if (zc()) return Ga(v(), w(), void 0);
                                break;
                            case 160:
                                if (Hp()) return Ga(v(), w(), void 0);
                                break;
                            case 100:
                                return Zp(v(), w(), void 0);
                            case 86:
                                return sf(v(), w(), void 0);
                            case 101:
                                return Jp();
                            case 92:
                                return Z1();
                            case 117:
                                return Rp();
                            case 99:
                                return eh();
                            case 88:
                                return Fc(251);
                            case 83:
                                return Fc(252);
                            case 107:
                                return th();
                            case 118:
                                return jp();
                            case 109:
                                return Bp();
                            case 111:
                                return ah();
                            case 113:
                            case 85:
                            case 98:
                                return Up();
                            case 89:
                                return qp();
                            case 60:
                                return vo();
                            case 134:
                            case 120:
                            case 156:
                            case 144:
                            case 145:
                            case 138:
                            case 87:
                            case 94:
                            case 95:
                            case 102:
                            case 123:
                            case 124:
                            case 125:
                            case 128:
                            case 129:
                            case 126:
                            case 148:
                            case 162:
                                if (Rs()) return vo();
                                break;
                        }
                        return sh();
                    }
                    function Gp(c) {
                        return c.kind === 138;
                    }
                    function vo() {
                        let c = v(), h = w(), b = Lr(!0);
                        if (Ze(b, Gp)) {
                            let k = uh(c);
                            if (k) return k;
                            for (let J of b)J.flags |= 33554432;
                            return Rt(33554432, ()=>Xp(c, h, b));
                        } else return Xp(c, h, b);
                    }
                    function uh(c) {
                        return Rt(33554432, ()=>{
                            let h = Z_(yt, c);
                            if (h) return ec(h);
                        });
                    }
                    function Xp(c, h, b) {
                        switch(f()){
                            case 115:
                            case 121:
                            case 87:
                            case 160:
                            case 135:
                                return Ga(c, h, b);
                            case 100:
                                return Zp(c, h, b);
                            case 86:
                                return sf(c, h, b);
                            case 120:
                                return Ah(c, h, b);
                            case 156:
                                return kh(c, h, b);
                            case 94:
                                return Ph(c, h, b);
                            case 162:
                            case 144:
                            case 145:
                                return uf(c, h, b);
                            case 102:
                                return Oh(c, h, b);
                            case 95:
                                switch(O(), f()){
                                    case 90:
                                    case 64:
                                        return qh(c, h, b);
                                    case 130:
                                        return Nh(c, h, b);
                                    default:
                                        return xo(c, h, b);
                                }
                            default:
                                if (b) {
                                    let E = Bn(282, !0, B.Declaration_expected);
                                    return Ad(E, c), E.modifiers = b, E;
                                }
                                return;
                        }
                    }
                    function ph() {
                        return O() === 11;
                    }
                    function $p() {
                        return O(), !t.hasPrecedingLineBreak() && (Dt() || f() === 11);
                    }
                    function Fs(c, h) {
                        if (f() !== 19) {
                            if (c & 4) {
                                yo();
                                return;
                            }
                            if (hi()) {
                                Pn();
                                return;
                            }
                        }
                        return bo(c, h);
                    }
                    function Qp() {
                        let c = v();
                        if (f() === 28) return M(d.createOmittedExpression(), c);
                        let h = dt(26), b = To(), E = qi();
                        return M(d.createBindingElement(h, void 0, b, E), c);
                    }
                    function fh() {
                        let c = v(), h = dt(26), b = Ir(), E = ca(), k;
                        b && f() !== 59 ? (k = E, E = void 0) : (G(59), k = To());
                        let J = qi();
                        return M(d.createBindingElement(h, E, k, J), c);
                    }
                    function Yp() {
                        let c = v();
                        G(19);
                        let h = z(()=>Tn(9, fh));
                        return G(20), M(d.createObjectBindingPattern(h), c);
                    }
                    function dh() {
                        let c = v();
                        G(23);
                        let h = z(()=>Tn(10, Qp));
                        return G(24), M(d.createArrayBindingPattern(h), c);
                    }
                    function Bs() {
                        return f() === 19 || f() === 23 || f() === 81 || Ir();
                    }
                    function To(c) {
                        return f() === 23 ? dh() : f() === 19 ? Yp() : X_(c);
                    }
                    function Kp() {
                        return Wc(!0);
                    }
                    function Wc(c) {
                        let h = v(), b = w(), E = To(B.Private_identifiers_are_not_allowed_in_variable_declarations), k;
                        c && E.kind === 80 && f() === 54 && !t.hasPrecedingLineBreak() && (k = bn());
                        let J = Bi(), Y = Cc(f()) ? void 0 : qi(), _e = Jn(E, k, J, Y);
                        return De(M(_e, h), b);
                    }
                    function Vc(c) {
                        let h = v(), b = 0;
                        switch(f()){
                            case 115:
                                break;
                            case 121:
                                b |= 1;
                                break;
                            case 87:
                                b |= 2;
                                break;
                            case 160:
                                b |= 4;
                                break;
                            case 135:
                                I.assert(zc()), b |= 6, O();
                                break;
                            default:
                                I.fail();
                        }
                        O();
                        let E;
                        if (f() === 165 && ve(mh)) E = Or();
                        else {
                            let k = Ri();
                            tt(c), E = Tn(8, c ? Wc : Kp), tt(k);
                        }
                        return M(Ar(E, b), h);
                    }
                    function mh() {
                        return xs() && O() === 22;
                    }
                    function Ga(c, h, b) {
                        let E = Vc(!1);
                        Pn();
                        let k = gn(b, E);
                        return De(M(k, c), h);
                    }
                    function Zp(c, h, b) {
                        let E = Dn(), k = hr(b);
                        G(100);
                        let J = dt(42), Y = k & 2048 ? Ha() : X_(), _e = J ? 1 : 0, re = k & 1024 ? 2 : 0, ne = fr();
                        k & 32 && St(!0);
                        let pe = bi(_e | re), Ue = Mr(59, !1), Fe = Fs(_e | re, B.or_expected);
                        St(E);
                        let Oe = d.createFunctionDeclaration(b, J, Y, ne, pe, Ue, Fe);
                        return De(M(Oe, c), h);
                    }
                    function ef() {
                        if (f() === 137) return G(137);
                        if (f() === 11 && ve(O) === 21) return ft(()=>{
                            let c = Yr();
                            return c.text === "constructor" ? c : void 0;
                        });
                    }
                    function hh(c, h, b) {
                        return ft(()=>{
                            if (ef()) {
                                let E = fr(), k = bi(0), J = Mr(59, !1), Y = Fs(0, B.or_expected), _e = d.createConstructorDeclaration(b, k, Y);
                                return _e.typeParameters = E, _e.type = J, De(M(_e, c), h);
                            }
                        });
                    }
                    function Hc(c, h, b, E, k, J, Y, _e) {
                        let re = E ? 1 : 0, ne = Ze(b, _l) ? 2 : 0, pe = fr(), Ue = bi(re | ne), Fe = Mr(59, !1), Oe = Fs(re | ne, _e), xn = d.createMethodDeclaration(b, E, k, J, pe, Ue, Fe, Oe);
                        return xn.exclamationToken = Y, De(M(xn, c), h);
                    }
                    function tf(c, h, b, E, k) {
                        let J = !k && !t.hasPrecedingLineBreak() ? dt(54) : void 0, Y = Bi(), _e = Jt(90112, qi);
                        ur(E, Y, _e);
                        let re = d.createPropertyDeclaration(b, E, k || J, Y, _e);
                        return De(M(re, c), h);
                    }
                    function Us(c, h, b) {
                        let E = dt(42), k = ca(), J = dt(58);
                        return E || f() === 21 || f() === 30 ? Hc(c, h, b, E, k, J, void 0, B.or_expected) : tf(c, h, b, k, J);
                    }
                    function fa(c, h, b, E, k) {
                        let J = ca(), Y = fr(), _e = bi(0), re = Mr(59, !1), ne = Fs(k), pe = E === 177 ? d.createGetAccessorDeclaration(b, J, _e, re, ne) : d.createSetAccessorDeclaration(b, J, _e, ne);
                        return pe.typeParameters = Y, Zo(pe) && (pe.type = re), De(M(pe, c), h);
                    }
                    function yh() {
                        let c;
                        if (f() === 60) return !0;
                        for(; Ei(f());){
                            if (c = f(), tT(c)) return !0;
                            O();
                        }
                        if (f() === 42 || (_a() && (c = f(), O()), f() === 23)) return !0;
                        if (c !== void 0) {
                            if (!ki(c) || c === 153 || c === 139) return !0;
                            switch(f()){
                                case 21:
                                case 30:
                                case 54:
                                case 59:
                                case 64:
                                case 58:
                                    return !0;
                                default:
                                    return hi();
                            }
                        }
                        return !1;
                    }
                    function nf(c, h, b) {
                        Qr(126);
                        let E = gh(), k = De(M(d.createClassStaticBlockDeclaration(E), c), h);
                        return k.modifiers = b, k;
                    }
                    function gh() {
                        let c = er(), h = Dn();
                        $e(!1), St(!0);
                        let b = pa(!1);
                        return $e(c), St(h), b;
                    }
                    function bh() {
                        if (Dn() && f() === 135) {
                            let c = v(), h = Ft(B.Expression_expected);
                            O();
                            let b = Ms(c, h, !0);
                            return Va(c, b);
                        }
                        return za();
                    }
                    function Gc() {
                        let c = v();
                        if (!Re(60)) return;
                        let h = pt(bh);
                        return M(d.createDecorator(h), c);
                    }
                    function rf(c, h, b) {
                        let E = v(), k = f();
                        if (f() === 87 && h) {
                            if (!ft($_)) return;
                        } else {
                            if (b && f() === 126 && ve(pf)) return;
                            if (c && f() === 126) return;
                            if (!bu()) return;
                        }
                        return M(se(k), E);
                    }
                    function Lr(c, h, b) {
                        let E = v(), k, J, Y, _e = !1, re = !1, ne = !1;
                        if (c && f() === 60) for(; J = Gc();)k = Et(k, J);
                        for(; Y = rf(_e, h, b);)Y.kind === 126 && (_e = !0), k = Et(k, Y), re = !0;
                        if (re && c && f() === 60) for(; J = Gc();)k = Et(k, J), ne = !0;
                        if (ne) for(; Y = rf(_e, h, b);)Y.kind === 126 && (_e = !0), k = Et(k, Y);
                        return k && zt(k, E);
                    }
                    function af() {
                        let c;
                        if (f() === 134) {
                            let h = v();
                            O();
                            let b = M(se(134), h);
                            c = zt([
                                b
                            ], h);
                        }
                        return c;
                    }
                    function vh() {
                        let c = v(), h = w();
                        if (f() === 27) return O(), De(M(d.createSemicolonClassElement(), c), h);
                        let b = Lr(!0, !0, !0);
                        if (f() === 126 && ve(pf)) return nf(c, h, b);
                        if (ja(139)) return fa(c, h, b, 177, 0);
                        if (ja(153)) return fa(c, h, b, 178, 0);
                        if (f() === 137 || f() === 11) {
                            let E = hh(c, h, b);
                            if (E) return E;
                        }
                        if (zu()) return Wu(c, h, b);
                        if (wt(f()) || f() === 11 || f() === 9 || f() === 42 || f() === 23) {
                            if (Ze(b, Gp)) {
                                for (let k of b)k.flags |= 33554432;
                                return Rt(33554432, ()=>Us(c, h, b));
                            } else return Us(c, h, b);
                        }
                        if (b) {
                            let E = Bn(80, !0, B.Declaration_expected);
                            return tf(c, h, b, E, void 0);
                        }
                        return I.fail("Should not have attempted to parse class member declaration.");
                    }
                    function of() {
                        let c = v(), h = w(), b = Lr(!0);
                        if (f() === 86) return qs(c, h, b, 231);
                        let E = Bn(282, !0, B.Expression_expected);
                        return Ad(E, c), E.modifiers = b, E;
                    }
                    function Th() {
                        return qs(v(), w(), void 0, 231);
                    }
                    function sf(c, h, b) {
                        return qs(c, h, b, 263);
                    }
                    function qs(c, h, b, E) {
                        let k = Dn();
                        G(86);
                        let J = Sh(), Y = fr();
                        Ze(b, jx) && St(!0);
                        let _e = Xc(), re;
                        G(19) ? (re = Ch(), G(20)) : re = Or(), St(k);
                        let ne = E === 263 ? d.createClassDeclaration(b, J, Y, _e, re) : d.createClassExpression(b, J, Y, _e, re);
                        return De(M(ne, c), h);
                    }
                    function Sh() {
                        return Ir() && !xh() ? yi(Ir()) : void 0;
                    }
                    function xh() {
                        return f() === 119 && ve(Q_);
                    }
                    function Xc() {
                        if (_f()) return pr(22, wh);
                    }
                    function wh() {
                        let c = v(), h = f();
                        I.assert(h === 96 || h === 119), O();
                        let b = Tn(7, Eh);
                        return M(d.createHeritageClause(h, b), c);
                    }
                    function Eh() {
                        let c = v(), h = za();
                        if (h.kind === 233) return h;
                        let b = Xa();
                        return M(d.createExpressionWithTypeArguments(h, b), c);
                    }
                    function Xa() {
                        return f() === 30 ? Fi(20, gt, 30, 32) : void 0;
                    }
                    function _f() {
                        return f() === 96 || f() === 119;
                    }
                    function Ch() {
                        return pr(5, vh);
                    }
                    function Ah(c, h, b) {
                        G(120);
                        let E = Ft(), k = fr(), J = Xc(), Y = mc(), _e = d.createInterfaceDeclaration(b, E, k, J, Y);
                        return De(M(_e, c), h);
                    }
                    function kh(c, h, b) {
                        G(156), t.hasPrecedingLineBreak() && Ne(B.Line_break_not_permitted_here);
                        let E = Ft(), k = fr();
                        G(64);
                        let J = f() === 141 && ft(yc) || gt();
                        Pn();
                        let Y = d.createTypeAliasDeclaration(b, E, k, J);
                        return De(M(Y, c), h);
                    }
                    function Dh() {
                        let c = v(), h = w(), b = ca(), E = z(qi);
                        return De(M(d.createEnumMember(b, E), c), h);
                    }
                    function Ph(c, h, b) {
                        G(94);
                        let E = Ft(), k;
                        G(19) ? (k = Zn(()=>Tn(6, Dh)), G(20)) : k = Or();
                        let J = d.createEnumDeclaration(b, E, k);
                        return De(M(J, c), h);
                    }
                    function cf() {
                        let c = v(), h;
                        return G(19) ? (h = pr(1, Sn), G(20)) : h = Or(), M(d.createModuleBlock(h), c);
                    }
                    function lf(c, h, b, E) {
                        let k = E & 32, J = E & 8 ? vn() : Ft(), Y = Re(25) ? lf(v(), !1, void 0, 8 | k) : cf(), _e = d.createModuleDeclaration(b, J, Y, E);
                        return De(M(_e, c), h);
                    }
                    function $c(c, h, b) {
                        let E = 0, k;
                        f() === 162 ? (k = Ft(), E |= 2048) : (k = Yr(), k.text = sa(k.text));
                        let J;
                        f() === 19 ? J = cf() : Pn();
                        let Y = d.createModuleDeclaration(b, k, J, E);
                        return De(M(Y, c), h);
                    }
                    function uf(c, h, b) {
                        let E = 0;
                        if (f() === 162) return $c(c, h, b);
                        if (Re(145)) E |= 32;
                        else if (G(144), f() === 11) return $c(c, h, b);
                        return lf(c, h, b, E);
                    }
                    function Ih() {
                        return f() === 149 && ve(zs);
                    }
                    function zs() {
                        return O() === 21;
                    }
                    function pf() {
                        return O() === 19;
                    }
                    function ff() {
                        return O() === 44;
                    }
                    function Nh(c, h, b) {
                        G(130), G(145);
                        let E = Ft();
                        Pn();
                        let k = d.createNamespaceExportDeclaration(E);
                        return k.modifiers = b, De(M(k, c), h);
                    }
                    function Oh(c, h, b) {
                        G(102);
                        let E = t.getTokenFullStart(), k;
                        Dt() && (k = Ft());
                        let J = !1;
                        if (f() !== 161 && (k == null ? void 0 : k.escapedText) === "type" && (Dt() || Lh()) && (J = !0, k = Dt() ? Ft() : void 0), k && !Yc()) return Jh(c, h, b, k, J);
                        let Y;
                        (k || f() === 42 || f() === 19) && (Y = Rh(k, E, J), G(161));
                        let _e = Ws(), re = f(), ne;
                        (re === 118 || re === 132) && !t.hasPrecedingLineBreak() && (ne = Qc(re)), Pn();
                        let pe = d.createImportDeclaration(b, Y, _e, ne);
                        return De(M(pe, c), h);
                    }
                    function Mh() {
                        let c = v(), h = wt(f()) ? vn() : mo(11);
                        G(59);
                        let b = on(!0);
                        return M(d.createImportAttribute(h, b), c);
                    }
                    function Qc(c, h) {
                        let b = v();
                        h || G(c);
                        let E = t.getTokenStart();
                        if (G(19)) {
                            let k = t.hasPrecedingLineBreak(), J = Tn(24, Mh, !0);
                            if (!G(20)) {
                                let Y = Pi(ut);
                                Y && Y.code === B._0_expected.code && ol(Y, Po(Ht, at, E, 1, B.The_parser_expected_to_find_a_1_to_match_the_0_token_here, "{", "}"));
                            }
                            return M(d.createImportAttributes(J, k, c), b);
                        } else {
                            let k = zt([], v(), void 0, !1);
                            return M(d.createImportAttributes(k, !1, c), b);
                        }
                    }
                    function Lh() {
                        return f() === 42 || f() === 19;
                    }
                    function Yc() {
                        return f() === 28 || f() === 161;
                    }
                    function Jh(c, h, b, E, k) {
                        G(64);
                        let J = So();
                        Pn();
                        let Y = d.createImportEqualsDeclaration(b, k, E, J);
                        return De(M(Y, c), h);
                    }
                    function Rh(c, h, b) {
                        let E;
                        return (!c || Re(28)) && (E = f() === 42 ? Fh() : df(275)), M(d.createImportClause(b, c, E), h);
                    }
                    function So() {
                        return Ih() ? jh() : Ba(!1);
                    }
                    function jh() {
                        let c = v();
                        G(149), G(21);
                        let h = Ws();
                        return G(22), M(d.createExternalModuleReference(h), c);
                    }
                    function Ws() {
                        if (f() === 11) {
                            let c = Yr();
                            return c.text = sa(c.text), c;
                        } else return Bt();
                    }
                    function Fh() {
                        let c = v();
                        G(42), G(130);
                        let h = Ft();
                        return M(d.createNamespaceImport(h), c);
                    }
                    function df(c) {
                        let h = v(), b = c === 275 ? d.createNamedImports(Fi(23, Bh, 19, 20)) : d.createNamedExports(Fi(23, da, 19, 20));
                        return M(b, h);
                    }
                    function da() {
                        let c = w();
                        return De(mf(281), c);
                    }
                    function Bh() {
                        return mf(276);
                    }
                    function mf(c) {
                        let h = v(), b = ki(f()) && !Dt(), E = t.getTokenStart(), k = t.getTokenEnd(), J = !1, Y, _e = !0, re = vn();
                        if (re.escapedText === "type") {
                            if (f() === 130) {
                                let Ue = vn();
                                if (f() === 130) {
                                    let Fe = vn();
                                    wt(f()) ? (J = !0, Y = Ue, re = pe(), _e = !1) : (Y = re, re = Fe, _e = !1);
                                } else wt(f()) ? (Y = re, _e = !1, re = pe()) : (J = !0, re = Ue);
                            } else wt(f()) && (J = !0, re = pe());
                        }
                        _e && f() === 130 && (Y = re, G(130), re = pe()), c === 276 && b && jt(E, k, B.Identifier_expected);
                        let ne = c === 276 ? d.createImportSpecifier(J, Y, re) : d.createExportSpecifier(J, Y, re);
                        return M(ne, h);
                        function pe() {
                            return b = ki(f()) && !Dt(), E = t.getTokenStart(), k = t.getTokenEnd(), vn();
                        }
                    }
                    function Uh(c) {
                        return M(d.createNamespaceExport(vn()), c);
                    }
                    function xo(c, h, b) {
                        let E = Dn();
                        St(!0);
                        let k, J, Y, _e = Re(156), re = v();
                        Re(42) ? (Re(130) && (k = Uh(re)), G(161), J = Ws()) : (k = df(279), (f() === 161 || f() === 11 && !t.hasPrecedingLineBreak()) && (G(161), J = Ws()));
                        let ne = f();
                        J && (ne === 118 || ne === 132) && !t.hasPrecedingLineBreak() && (Y = Qc(ne)), Pn(), St(E);
                        let pe = d.createExportDeclaration(b, _e, k, J, Y);
                        return De(M(pe, c), h);
                    }
                    function qh(c, h, b) {
                        let E = Dn();
                        St(!0);
                        let k;
                        Re(64) ? k = !0 : G(90);
                        let J = on(!0);
                        Pn(), St(E);
                        let Y = d.createExportAssignment(b, k, J);
                        return De(M(Y, c), h);
                    }
                    let hf;
                    ((c)=>{
                        c[c.SourceElements = 0] = "SourceElements", c[c.BlockStatements = 1] = "BlockStatements", c[c.SwitchClauses = 2] = "SwitchClauses", c[c.SwitchClauseStatements = 3] = "SwitchClauseStatements", c[c.TypeMembers = 4] = "TypeMembers", c[c.ClassMembers = 5] = "ClassMembers", c[c.EnumMembers = 6] = "EnumMembers", c[c.HeritageClauseElement = 7] = "HeritageClauseElement", c[c.VariableDeclarations = 8] = "VariableDeclarations", c[c.ObjectBindingElements = 9] = "ObjectBindingElements", c[c.ArrayBindingElements = 10] = "ArrayBindingElements", c[c.ArgumentExpressions = 11] = "ArgumentExpressions", c[c.ObjectLiteralMembers = 12] = "ObjectLiteralMembers", c[c.JsxAttributes = 13] = "JsxAttributes", c[c.JsxChildren = 14] = "JsxChildren", c[c.ArrayLiteralMembers = 15] = "ArrayLiteralMembers", c[c.Parameters = 16] = "Parameters", c[c.JSDocParameters = 17] = "JSDocParameters", c[c.RestProperties = 18] = "RestProperties", c[c.TypeParameters = 19] = "TypeParameters", c[c.TypeArguments = 20] = "TypeArguments", c[c.TupleElementTypes = 21] = "TupleElementTypes", c[c.HeritageClauses = 22] = "HeritageClauses", c[c.ImportOrExportSpecifiers = 23] = "ImportOrExportSpecifiers", c[c.ImportAttributes = 24] = "ImportAttributes", c[c.JSDocComment = 25] = "JSDocComment", c[c.Count = 26] = "Count";
                    })(hf || (hf = {}));
                    let yf;
                    ((c)=>{
                        c[c.False = 0] = "False", c[c.True = 1] = "True", c[c.Unknown = 2] = "Unknown";
                    })(yf || (yf = {}));
                    let gf;
                    ((c)=>{
                        function h(ne, pe, Ue) {
                            Yn("file.js", ne, 99, void 0, 1, 0), t.setText(ne, pe, Ue), ht = t.scan();
                            let Fe = b(), Oe = ye("file.js", 99, 1, !1, [], se(1), 0, gr), xn = Ya(ut, Oe);
                            return Gt && (Oe.jsDocDiagnostics = Ya(Gt, Oe)), Kn(), Fe ? {
                                jsDocTypeExpression: Fe,
                                diagnostics: xn
                            } : void 0;
                        }
                        c.parseJSDocTypeExpressionForTests = h;
                        function b(ne) {
                            let pe = v(), Ue = (ne ? Re : G)(19), Fe = Rt(16777216, ho);
                            (!ne || Ue) && Ja(20);
                            let Oe = d.createJSDocTypeExpression(Fe);
                            return ie(Oe), M(Oe, pe);
                        }
                        c.parseJSDocTypeExpression = b;
                        function E() {
                            let ne = v(), pe = Re(19), Ue = v(), Fe = Ba(!1);
                            for(; f() === 81;)Ge(), ue(), Fe = M(d.createJSDocMemberName(Fe, Ft()), Ue);
                            pe && Ja(20);
                            let Oe = d.createJSDocNameReference(Fe);
                            return ie(Oe), M(Oe, ne);
                        }
                        c.parseJSDocNameReference = E;
                        function k(ne, pe, Ue) {
                            Yn("", ne, 99, void 0, 1, 0);
                            let Fe = Rt(16777216, ()=>re(pe, Ue)), xn = Ya(ut, {
                                languageVariant: 0,
                                text: ne
                            });
                            return Kn(), Fe ? {
                                jsDoc: Fe,
                                diagnostics: xn
                            } : void 0;
                        }
                        c.parseIsolatedJSDocComment = k;
                        function J(ne, pe, Ue) {
                            let Fe = ht, Oe = ut.length, xn = Zt, qn = Rt(16777216, ()=>re(pe, Ue));
                            return Qi(qn, ne), ct & 524288 && (Gt || (Gt = []), Gt.push(...ut)), ht = Fe, ut.length = Oe, Zt = xn, qn;
                        }
                        c.parseJSDocComment = J;
                        let Y;
                        ((ne)=>{
                            ne[ne.BeginningOfLine = 0] = "BeginningOfLine", ne[ne.SawAsterisk = 1] = "SawAsterisk", ne[ne.SavingComments = 2] = "SavingComments", ne[ne.SavingBackticks = 3] = "SavingBackticks";
                        })(Y || (Y = {}));
                        let _e;
                        ((ne)=>{
                            ne[ne.Property = 1] = "Property", ne[ne.Parameter = 2] = "Parameter", ne[ne.CallbackParameter = 4] = "CallbackParameter";
                        })(_e || (_e = {}));
                        function re(ne = 0, pe) {
                            let Ue = at, Fe = pe === void 0 ? Ue.length : ne + pe;
                            if (pe = Fe - ne, I.assert(ne >= 0), I.assert(ne <= Fe), I.assert(Fe <= Ue.length), !F8(Ue, ne)) return;
                            let Oe, xn, qn, vi, Zr, Jr = [], ma = [], zh = yt;
                            yt |= 33554432;
                            let Kc = t.scanRange(ne + 3, pe - 5, bf);
                            return yt = zh, Kc;
                            function bf() {
                                let j = 1, ee, Z = ne - (Ue.lastIndexOf(`
`, ne) + 1) + 4;
                                function ae(qe) {
                                    ee || (ee = Z), Jr.push(qe), Z += qe.length;
                                }
                                for(ue(); Co(5););
                                Co(4) && (j = 0, Z = 0);
                                e: for(;;){
                                    switch(f()){
                                        case 60:
                                            Wh(Jr), Zr || (Zr = v()), Vh(Tf(Z)), j = 0, ee = void 0;
                                            break;
                                        case 4:
                                            Jr.push(t.getTokenText()), j = 0, Z = 0;
                                            break;
                                        case 42:
                                            let qe = t.getTokenText();
                                            j === 1 ? (j = 2, ae(qe)) : (I.assert(j === 0), j = 1, Z += qe.length);
                                            break;
                                        case 5:
                                            I.assert(j !== 2, "whitespace shouldn't come from the scanner while saving top-level comment text");
                                            let Pt = t.getTokenText();
                                            ee !== void 0 && Z + Pt.length > ee && Jr.push(Pt.slice(ee - Z)), Z += Pt.length;
                                            break;
                                        case 1:
                                            break e;
                                        case 82:
                                            j = 2, ae(t.getTokenValue());
                                            break;
                                        case 19:
                                            j = 2;
                                            let Rr = t.getTokenFullStart(), dr = t.getTokenEnd() - 1, Nn = Ie(dr);
                                            if (Nn) {
                                                vi || Zc(Jr), ma.push(M(d.createJSDocText(Jr.join("")), vi ?? ne, Rr)), ma.push(Nn), Jr = [], vi = t.getTokenEnd();
                                                break;
                                            }
                                        default:
                                            j = 2, ae(t.getTokenText());
                                            break;
                                    }
                                    j === 2 ? be(!1) : ue();
                                }
                                let ce = Jr.join("").trimEnd();
                                ma.length && ce.length && ma.push(M(d.createJSDocText(ce), vi ?? ne, Zr)), ma.length && Oe && I.assertIsDefined(Zr, "having parsed tags implies that the end of the comment span should be set");
                                let Me = Oe && zt(Oe, xn, qn);
                                return M(d.createJSDocComment(ma.length ? zt(ma, ne, Zr) : ce.length ? ce : void 0, Me), ne, Fe);
                            }
                            function Zc(j) {
                                for(; j.length && (j[0] === `
` || j[0] === "\r");)j.shift();
                            }
                            function Wh(j) {
                                for(; j.length;){
                                    let ee = j[j.length - 1].trimEnd();
                                    if (ee === "") j.pop();
                                    else if (ee.length < j[j.length - 1].length) {
                                        j[j.length - 1] = ee;
                                        break;
                                    } else break;
                                }
                            }
                            function vf() {
                                for(;;){
                                    if (ue(), f() === 1) return !0;
                                    if (!(f() === 5 || f() === 4)) return !1;
                                }
                            }
                            function pn() {
                                if (!((f() === 5 || f() === 4) && ve(vf))) for(; f() === 5 || f() === 4;)ue();
                            }
                            function zi() {
                                if ((f() === 5 || f() === 4) && ve(vf)) return "";
                                let j = t.hasPrecedingLineBreak(), ee = !1, Z = "";
                                for(; j && f() === 42 || f() === 5 || f() === 4;)Z += t.getTokenText(), f() === 4 ? (j = !0, ee = !0, Z = "") : f() === 42 && (j = !1), ue();
                                return ee ? Z : "";
                            }
                            function Tf(j) {
                                I.assert(f() === 60);
                                let ee = t.getTokenStart();
                                ue();
                                let Z = $a(void 0), ae = zi(), ce;
                                switch(Z.escapedText){
                                    case "author":
                                        ce = me(ee, Z, j, ae);
                                        break;
                                    case "implements":
                                        ce = In(ee, Z, j, ae);
                                        break;
                                    case "augments":
                                    case "extends":
                                        ce = Si(ee, Z, j, ae);
                                        break;
                                    case "class":
                                    case "constructor":
                                        ce = Eo(ee, d.createJSDocClassTag, Z, j, ae);
                                        break;
                                    case "public":
                                        ce = Eo(ee, d.createJSDocPublicTag, Z, j, ae);
                                        break;
                                    case "private":
                                        ce = Eo(ee, d.createJSDocPrivateTag, Z, j, ae);
                                        break;
                                    case "protected":
                                        ce = Eo(ee, d.createJSDocProtectedTag, Z, j, ae);
                                        break;
                                    case "readonly":
                                        ce = Eo(ee, d.createJSDocReadonlyTag, Z, j, ae);
                                        break;
                                    case "override":
                                        ce = Eo(ee, d.createJSDocOverrideTag, Z, j, ae);
                                        break;
                                    case "deprecated":
                                        Pr = !0, ce = Eo(ee, d.createJSDocDeprecatedTag, Z, j, ae);
                                        break;
                                    case "this":
                                        ce = N5(ee, Z, j, ae);
                                        break;
                                    case "enum":
                                        ce = O5(ee, Z, j, ae);
                                        break;
                                    case "arg":
                                    case "argument":
                                    case "param":
                                        return o(ee, Z, 2, j);
                                    case "return":
                                    case "returns":
                                        ce = l(ee, Z, j, ae);
                                        break;
                                    case "template":
                                        ce = w6(ee, Z, j, ae);
                                        break;
                                    case "type":
                                        ce = g(ee, Z, j, ae);
                                        break;
                                    case "typedef":
                                        ce = M5(ee, Z, j, ae);
                                        break;
                                    case "callback":
                                        ce = J5(ee, Z, j, ae);
                                        break;
                                    case "overload":
                                        ce = R5(ee, Z, j, ae);
                                        break;
                                    case "satisfies":
                                        ce = xi(ee, Z, j, ae);
                                        break;
                                    case "see":
                                        ce = D(ee, Z, j, ae);
                                        break;
                                    case "exception":
                                    case "throws":
                                        ce = H(ee, Z, j, ae);
                                        break;
                                    default:
                                        ce = Hs(ee, Z, j, ae);
                                        break;
                                }
                                return ce;
                            }
                            function fn(j, ee, Z, ae) {
                                return ae || (Z += ee - j), Vs(Z, ae.slice(Z));
                            }
                            function Vs(j, ee) {
                                let Z = v(), ae = [], ce = [], Me, qe = 0, Pt;
                                function Rr(ei) {
                                    Pt || (Pt = j), ae.push(ei), j += ei.length;
                                }
                                ee !== void 0 && (ee !== "" && Rr(ee), qe = 1);
                                let dr = f();
                                e: for(;;){
                                    switch(dr){
                                        case 4:
                                            qe = 0, ae.push(t.getTokenText()), j = 0;
                                            break;
                                        case 60:
                                            t.resetTokenState(t.getTokenEnd() - 1);
                                            break e;
                                        case 1:
                                            break e;
                                        case 5:
                                            I.assert(qe !== 2 && qe !== 3, "whitespace shouldn't come from the scanner while saving comment text");
                                            let ei = t.getTokenText();
                                            Pt !== void 0 && j + ei.length > Pt && (ae.push(ei.slice(Pt - j)), qe = 2), j += ei.length;
                                            break;
                                        case 19:
                                            qe = 2;
                                            let Sf = t.getTokenFullStart(), Gs = t.getTokenEnd() - 1, xf = Ie(Gs);
                                            xf ? (ce.push(M(d.createJSDocText(ae.join("")), Me ?? Z, Sf)), ce.push(xf), ae = [], Me = t.getTokenEnd()) : Rr(t.getTokenText());
                                            break;
                                        case 62:
                                            qe === 3 ? qe = 2 : qe = 3, Rr(t.getTokenText());
                                            break;
                                        case 82:
                                            qe !== 3 && (qe = 2), Rr(t.getTokenValue());
                                            break;
                                        case 42:
                                            if (qe === 0) {
                                                qe = 1, j += 1;
                                                break;
                                            }
                                        default:
                                            qe !== 3 && (qe = 2), Rr(t.getTokenText());
                                            break;
                                    }
                                    qe === 2 || qe === 3 ? dr = be(qe === 3) : dr = ue();
                                }
                                Zc(ae);
                                let Nn = ae.join("").trimEnd();
                                if (ce.length) return Nn.length && ce.push(M(d.createJSDocText(Nn), Me ?? Z)), zt(ce, Z, t.getTokenEnd());
                                if (Nn.length) return Nn;
                            }
                            function Ie(j) {
                                let ee = ft(Ke);
                                if (!ee) return;
                                ue(), pn();
                                let Z = v(), ae = wt(f()) ? Ba(!0) : void 0;
                                if (ae) for(; f() === 81;)Ge(), ue(), ae = M(d.createJSDocMemberName(ae, Ft()), Z);
                                let ce = [];
                                for(; f() !== 20 && f() !== 4 && f() !== 1;)ce.push(t.getTokenText()), ue();
                                let Me = ee === "link" ? d.createJSDocLink : ee === "linkcode" ? d.createJSDocLinkCode : d.createJSDocLinkPlain;
                                return M(Me(ae, ce.join("")), j, t.getTokenEnd());
                            }
                            function Ke() {
                                if (zi(), f() === 19 && ue() === 60 && wt(ue())) {
                                    let j = t.getTokenValue();
                                    if (Ti(j)) return j;
                                }
                            }
                            function Ti(j) {
                                return j === "link" || j === "linkcode" || j === "linkplain";
                            }
                            function Hs(j, ee, Z, ae) {
                                return M(d.createJSDocUnknownTag(ee, fn(j, v(), Z, ae)), j);
                            }
                            function Vh(j) {
                                j && (Oe ? Oe.push(j) : (Oe = [
                                    j
                                ], xn = j.pos), qn = j.end);
                            }
                            function tr() {
                                return zi(), f() === 19 ? b() : void 0;
                            }
                            function Hh() {
                                let j = Co(23);
                                j && pn();
                                let ee = Co(62), Z = z5();
                                return ee && r1(62), j && (pn(), dt(64) && Bt(), G(24)), {
                                    name: Z,
                                    isBracketed: j
                                };
                            }
                            function r(j) {
                                switch(j.kind){
                                    case 151:
                                        return !0;
                                    case 188:
                                        return r(j.elementType);
                                    default:
                                        return J_(j) && Ae(j.typeName) && j.typeName.escapedText === "Object" && !j.typeArguments;
                                }
                            }
                            function o(j, ee, Z, ae) {
                                let ce = tr(), Me = !ce;
                                zi();
                                let { name: qe, isBracketed: Pt } = Hh(), Rr = zi();
                                Me && !ve(Ke) && (ce = tr());
                                let dr = fn(j, v(), ae, Rr), Nn = s(ce, qe, Z, ae);
                                Nn && (ce = Nn, Me = !0);
                                let ei = Z === 1 ? d.createJSDocPropertyTag(ee, qe, Pt, ce, Me, dr) : d.createJSDocParameterTag(ee, qe, Pt, ce, Me, dr);
                                return M(ei, j);
                            }
                            function s(j, ee, Z, ae) {
                                if (j && r(j.type)) {
                                    let ce = v(), Me, qe;
                                    for(; Me = ft(()=>Xh(Z, ae, ee));)Me.kind === 348 || Me.kind === 355 ? qe = Et(qe, Me) : Me.kind === 352 && Fn(Me.tagName, B.A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag);
                                    if (qe) {
                                        let Pt = M(d.createJSDocTypeLiteral(qe, j.type.kind === 188), ce);
                                        return M(d.createJSDocTypeExpression(Pt), ce);
                                    }
                                }
                            }
                            function l(j, ee, Z, ae) {
                                Ze(Oe, Vb) && jt(ee.pos, t.getTokenStart(), B._0_tag_already_specified, Go(ee.escapedText));
                                let ce = tr();
                                return M(d.createJSDocReturnTag(ee, ce, fn(j, v(), Z, ae)), j);
                            }
                            function g(j, ee, Z, ae) {
                                Ze(Oe, lu) && jt(ee.pos, t.getTokenStart(), B._0_tag_already_specified, Go(ee.escapedText));
                                let ce = b(!0), Me = Z !== void 0 && ae !== void 0 ? fn(j, v(), Z, ae) : void 0;
                                return M(d.createJSDocTypeTag(ee, ce, Me), j);
                            }
                            function D(j, ee, Z, ae) {
                                let Me = f() === 23 || ve(()=>ue() === 60 && wt(ue()) && Ti(t.getTokenValue())) ? void 0 : E(), qe = Z !== void 0 && ae !== void 0 ? fn(j, v(), Z, ae) : void 0;
                                return M(d.createJSDocSeeTag(ee, Me, qe), j);
                            }
                            function H(j, ee, Z, ae) {
                                let ce = tr(), Me = fn(j, v(), Z, ae);
                                return M(d.createJSDocThrowsTag(ee, ce, Me), j);
                            }
                            function me(j, ee, Z, ae) {
                                let ce = v(), Me = ze(), qe = t.getTokenFullStart(), Pt = fn(j, qe, Z, ae);
                                Pt || (qe = t.getTokenFullStart());
                                let Rr = typeof Pt != "string" ? zt(h_([
                                    M(Me, ce, qe)
                                ], Pt), ce) : Me.text + Pt;
                                return M(d.createJSDocAuthorTag(ee, Rr), j);
                            }
                            function ze() {
                                let j = [], ee = !1, Z = t.getToken();
                                for(; Z !== 1 && Z !== 4;){
                                    if (Z === 30) ee = !0;
                                    else {
                                        if (Z === 60 && !ee) break;
                                        if (Z === 32 && ee) {
                                            j.push(t.getTokenText()), t.resetTokenState(t.getTokenEnd());
                                            break;
                                        }
                                    }
                                    j.push(t.getTokenText()), Z = ue();
                                }
                                return d.createJSDocText(j.join(""));
                            }
                            function In(j, ee, Z, ae) {
                                let ce = wo();
                                return M(d.createJSDocImplementsTag(ee, ce, fn(j, v(), Z, ae)), j);
                            }
                            function Si(j, ee, Z, ae) {
                                let ce = wo();
                                return M(d.createJSDocAugmentsTag(ee, ce, fn(j, v(), Z, ae)), j);
                            }
                            function xi(j, ee, Z, ae) {
                                let ce = b(!1), Me = Z !== void 0 && ae !== void 0 ? fn(j, v(), Z, ae) : void 0;
                                return M(d.createJSDocSatisfiesTag(ee, ce, Me), j);
                            }
                            function wo() {
                                let j = Re(19), ee = v(), Z = I5();
                                t.setInJSDocType(!0);
                                let ae = Xa();
                                t.setInJSDocType(!1);
                                let ce = d.createExpressionWithTypeArguments(Z, ae), Me = M(ce, ee);
                                return j && G(20), Me;
                            }
                            function I5() {
                                let j = v(), ee = $a();
                                for(; Re(25);){
                                    let Z = $a();
                                    ee = M(W(ee, Z), j);
                                }
                                return ee;
                            }
                            function Eo(j, ee, Z, ae, ce) {
                                return M(ee(Z, fn(j, v(), ae, ce)), j);
                            }
                            function N5(j, ee, Z, ae) {
                                let ce = b(!0);
                                return pn(), M(d.createJSDocThisTag(ee, ce, fn(j, v(), Z, ae)), j);
                            }
                            function O5(j, ee, Z, ae) {
                                let ce = b(!0);
                                return pn(), M(d.createJSDocEnumTag(ee, ce, fn(j, v(), Z, ae)), j);
                            }
                            function M5(j, ee, Z, ae) {
                                let ce = tr();
                                zi();
                                let Me = Gh();
                                pn();
                                let qe = Vs(Z), Pt;
                                if (!ce || r(ce.type)) {
                                    let dr, Nn, ei, Sf = !1;
                                    for(; (dr = ft(()=>F5(Z))) && dr.kind !== 352;)if (Sf = !0, dr.kind === 351) {
                                        if (Nn) {
                                            let Gs = Ne(B.A_JSDoc_typedef_comment_may_not_contain_multiple_type_tags);
                                            Gs && ol(Gs, Po(Ht, at, 0, 0, B.The_tag_was_first_specified_here));
                                            break;
                                        } else Nn = dr;
                                    } else ei = Et(ei, dr);
                                    if (Sf) {
                                        let Gs = ce && ce.type.kind === 188, xf = d.createJSDocTypeLiteral(ei, Gs);
                                        ce = Nn && Nn.typeExpression && !r(Nn.typeExpression.type) ? Nn.typeExpression : M(xf, j), Pt = ce.end;
                                    }
                                }
                                Pt = Pt || qe !== void 0 ? v() : (Me ?? ce ?? ee).end, qe || (qe = fn(j, Pt, Z, ae));
                                let Rr = d.createJSDocTypedefTag(ee, ce, Me, qe);
                                return M(Rr, j, Pt);
                            }
                            function Gh(j) {
                                let ee = t.getTokenStart();
                                if (!wt(f())) return;
                                let Z = $a();
                                if (Re(25)) {
                                    let ae = Gh(!0), ce = d.createModuleDeclaration(void 0, Z, ae, j ? 8 : void 0);
                                    return M(ce, ee);
                                }
                                return j && (Z.flags |= 4096), Z;
                            }
                            function L5(j) {
                                let ee = v(), Z, ae;
                                for(; Z = ft(()=>Xh(4, j));){
                                    if (Z.kind === 352) {
                                        Fn(Z.tagName, B.A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag);
                                        break;
                                    }
                                    ae = Et(ae, Z);
                                }
                                return zt(ae || [], ee);
                            }
                            function x6(j, ee) {
                                let Z = L5(ee), ae = ft(()=>{
                                    if (Co(60)) {
                                        let ce = Tf(ee);
                                        if (ce && ce.kind === 349) return ce;
                                    }
                                });
                                return M(d.createJSDocSignature(void 0, Z, ae), j);
                            }
                            function J5(j, ee, Z, ae) {
                                let ce = Gh();
                                pn();
                                let Me = Vs(Z), qe = x6(j, Z);
                                Me || (Me = fn(j, v(), Z, ae));
                                let Pt = Me !== void 0 ? v() : qe.end;
                                return M(d.createJSDocCallbackTag(ee, qe, ce, Me), j, Pt);
                            }
                            function R5(j, ee, Z, ae) {
                                pn();
                                let ce = Vs(Z), Me = x6(j, Z);
                                ce || (ce = fn(j, v(), Z, ae));
                                let qe = ce !== void 0 ? v() : Me.end;
                                return M(d.createJSDocOverloadTag(ee, Me, ce), j, qe);
                            }
                            function j5(j, ee) {
                                for(; !Ae(j) || !Ae(ee);)if (!Ae(j) && !Ae(ee) && j.right.escapedText === ee.right.escapedText) j = j.left, ee = ee.left;
                                else return !1;
                                return j.escapedText === ee.escapedText;
                            }
                            function F5(j) {
                                return Xh(1, j);
                            }
                            function Xh(j, ee, Z) {
                                let ae = !0, ce = !1;
                                for(;;)switch(ue()){
                                    case 60:
                                        if (ae) {
                                            let Me = B5(j, ee);
                                            return Me && (Me.kind === 348 || Me.kind === 355) && Z && (Ae(Me.name) || !j5(Z, Me.name.left)) ? !1 : Me;
                                        }
                                        ce = !1;
                                        break;
                                    case 4:
                                        ae = !0, ce = !1;
                                        break;
                                    case 42:
                                        ce && (ae = !1), ce = !0;
                                        break;
                                    case 80:
                                        ae = !1;
                                        break;
                                    case 1:
                                        return !1;
                                }
                            }
                            function B5(j, ee) {
                                I.assert(f() === 60);
                                let Z = t.getTokenFullStart();
                                ue();
                                let ae = $a(), ce = zi(), Me;
                                switch(ae.escapedText){
                                    case "type":
                                        return j === 1 && g(Z, ae);
                                    case "prop":
                                    case "property":
                                        Me = 1;
                                        break;
                                    case "arg":
                                    case "argument":
                                    case "param":
                                        Me = 6;
                                        break;
                                    case "template":
                                        return w6(Z, ae, ee, ce);
                                    default:
                                        return !1;
                                }
                                return j & Me ? o(Z, ae, j, ee) : !1;
                            }
                            function U5() {
                                let j = v(), ee = Co(23);
                                ee && pn();
                                let Z = $a(B.Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces), ae;
                                if (ee && (pn(), G(64), ae = Rt(16777216, ho), G(24)), !Vi(Z)) return M(d.createTypeParameterDeclaration(void 0, Z, void 0, ae), j);
                            }
                            function q5() {
                                let j = v(), ee = [];
                                do {
                                    pn();
                                    let Z = U5();
                                    Z !== void 0 && ee.push(Z), zi();
                                }while (Co(28));
                                return zt(ee, j);
                            }
                            function w6(j, ee, Z, ae) {
                                let ce = f() === 19 ? b() : void 0, Me = q5();
                                return M(d.createJSDocTemplateTag(ee, ce, Me, fn(j, v(), Z, ae)), j);
                            }
                            function Co(j) {
                                return f() === j ? (ue(), !0) : !1;
                            }
                            function z5() {
                                let j = $a();
                                for(Re(23) && G(24); Re(25);){
                                    let ee = $a();
                                    Re(23) && G(24), j = ac(j, ee);
                                }
                                return j;
                            }
                            function $a(j) {
                                if (!wt(f())) return Bn(80, !j, j || B.Identifier_expected);
                                Rn++;
                                let ee = t.getTokenStart(), Z = t.getTokenEnd(), ae = f(), ce = sa(t.getTokenValue()), Me = M(q(ce, ae), ee, Z);
                                return ue(), Me;
                            }
                        }
                    })(gf = e.JSDocParser || (e.JSDocParser = {}));
                })(ri || (ri = {})), ((e)=>{
                    function t(A, N, q, Q) {
                        if (Q = Q || I.shouldAssert(2), d(A, N, q, Q), b4(q)) return A;
                        if (A.statements.length === 0) return ri.parseSourceFile(A.fileName, N, A.languageVersion, void 0, !0, A.scriptKind, A.setExternalModuleIndicator, A.jsDocParsingMode);
                        let se = A;
                        I.assert(!se.hasBeenIncrementallyParsed), se.hasBeenIncrementallyParsed = !0, ri.fixupParentReferences(se);
                        let fe = A.text, F = S(A), W = u(A, q);
                        d(A, N, W, Q), I.assert(W.span.start <= q.span.start), I.assert(tn(W.span) === tn(q.span)), I.assert(tn(Ys(W)) === tn(Ys(q)));
                        let Se = Ys(W).length - W.span.length;
                        y(se, W.span.start, tn(W.span), tn(Ys(W)), Se, fe, N, Q);
                        let Qe = ri.parseSourceFile(A.fileName, N, A.languageVersion, F, !0, A.scriptKind, A.setExternalModuleIndicator, A.jsDocParsingMode);
                        return Qe.commentDirectives = n(A.commentDirectives, Qe.commentDirectives, W.span.start, tn(W.span), Se, fe, N, Q), Qe.impliedNodeFormat = A.impliedNodeFormat, Qe;
                    }
                    e.updateSourceFile = t;
                    function n(A, N, q, Q, se, fe, F, W) {
                        if (!A) return N;
                        let Se, Qe = !1;
                        for (let st of A){
                            let { range: _t, type: hn } = st;
                            if (_t.end < q) Se = Et(Se, st);
                            else if (_t.pos > Q) {
                                Be();
                                let yn = {
                                    range: {
                                        pos: _t.pos + se,
                                        end: _t.end + se
                                    },
                                    type: hn
                                };
                                Se = Et(Se, yn), W && I.assert(fe.substring(_t.pos, _t.end) === F.substring(yn.range.pos, yn.range.end));
                            }
                        }
                        return Be(), Se;
                        function Be() {
                            Qe || (Qe = !0, Se ? N && Se.push(...N) : Se = N);
                        }
                    }
                    function a(A, N, q, Q, se, fe) {
                        N ? W(A) : F(A);
                        return;
                        function F(Se) {
                            let Qe = "";
                            if (fe && _(Se) && (Qe = Q.substring(Se.pos, Se.end)), Se._children && (Se._children = void 0), Za(Se, Se.pos + q, Se.end + q), fe && _(Se) && I.assert(Qe === se.substring(Se.pos, Se.end)), Wt(Se, F, W), Hi(Se)) for (let Be of Se.jsDoc)F(Be);
                            m(Se, fe);
                        }
                        function W(Se) {
                            Se._children = void 0, Za(Se, Se.pos + q, Se.end + q);
                            for (let Qe of Se)F(Qe);
                        }
                    }
                    function _(A) {
                        switch(A.kind){
                            case 11:
                            case 9:
                            case 80:
                                return !0;
                        }
                        return !1;
                    }
                    function p(A, N, q, Q, se) {
                        I.assert(A.end >= N, "Adjusting an element that was entirely before the change range"), I.assert(A.pos <= q, "Adjusting an element that was entirely after the change range"), I.assert(A.pos <= A.end);
                        let fe = Math.min(A.pos, Q), F = A.end >= q ? A.end + se : Math.min(A.end, Q);
                        I.assert(fe <= F), A.parent && (I.assertGreaterThanOrEqual(fe, A.parent.pos), I.assertLessThanOrEqual(F, A.parent.end)), Za(A, fe, F);
                    }
                    function m(A, N) {
                        if (N) {
                            let q = A.pos, Q = (se)=>{
                                I.assert(se.pos >= q), q = se.end;
                            };
                            if (Hi(A)) for (let se of A.jsDoc)Q(se);
                            Wt(A, Q), I.assert(q <= A.end);
                        }
                    }
                    function y(A, N, q, Q, se, fe, F, W) {
                        Se(A);
                        return;
                        function Se(Be) {
                            if (I.assert(Be.pos <= Be.end), Be.pos > q) {
                                a(Be, !1, se, fe, F, W);
                                return;
                            }
                            let st = Be.end;
                            if (st >= N) {
                                if (Be.intersectsChange = !0, Be._children = void 0, p(Be, N, q, Q, se), Wt(Be, Se, Qe), Hi(Be)) for (let _t of Be.jsDoc)Se(_t);
                                m(Be, W);
                                return;
                            }
                            I.assert(st < N);
                        }
                        function Qe(Be) {
                            if (I.assert(Be.pos <= Be.end), Be.pos > q) {
                                a(Be, !0, se, fe, F, W);
                                return;
                            }
                            let st = Be.end;
                            if (st >= N) {
                                Be.intersectsChange = !0, Be._children = void 0, p(Be, N, q, Q, se);
                                for (let _t of Be)Se(_t);
                                return;
                            }
                            I.assert(st < N);
                        }
                    }
                    function u(A, N) {
                        let Q = N.span.start;
                        for(let F = 0; Q > 0 && F <= 1; F++){
                            let W = x(A, Q);
                            I.assert(W.pos <= Q);
                            let Se = W.pos;
                            Q = Math.max(0, Se - 1);
                        }
                        let se = Xi(Q, tn(N.span)), fe = N.newLength + (N.span.start - Q);
                        return Yd(se, fe);
                    }
                    function x(A, N) {
                        let q = A, Q;
                        if (Wt(A, fe), Q) {
                            let F = se(Q);
                            F.pos > q.pos && (q = F);
                        }
                        return q;
                        function se(F) {
                            for(;;){
                                let W = xS(F);
                                if (W) F = W;
                                else return F;
                            }
                        }
                        function fe(F) {
                            if (!Vi(F)) {
                                if (F.pos <= N) {
                                    if (F.pos >= q.pos && (q = F), N < F.end) return Wt(F, fe), !0;
                                    I.assert(F.end <= N), Q = F;
                                } else return I.assert(F.pos > N), !0;
                            }
                        }
                    }
                    function d(A, N, q, Q) {
                        let se = A.text;
                        if (q && (I.assert(se.length - q.span.length + q.newLength === N.length), Q || I.shouldAssert(3))) {
                            let fe = se.substr(0, q.span.start), F = N.substr(0, q.span.start);
                            I.assert(fe === F);
                            let W = se.substring(tn(q.span), se.length), Se = N.substring(tn(Ys(q)), N.length);
                            I.assert(W === Se);
                        }
                    }
                    function S(A) {
                        let N = A.statements, q = 0;
                        I.assert(q < N.length);
                        let Q = N[q], se = -1;
                        return {
                            currentNode (F) {
                                return F !== se && (Q && Q.end === F && q < N.length - 1 && (q++, Q = N[q]), (!Q || Q.pos !== F) && fe(F)), se = F, I.assert(!Q || Q.pos === F), Q;
                            }
                        };
                        function fe(F) {
                            N = void 0, q = -1, Q = void 0, Wt(A, W, Se);
                            return;
                            function W(Qe) {
                                return F >= Qe.pos && F < Qe.end ? (Wt(Qe, W, Se), !0) : !1;
                            }
                            function Se(Qe) {
                                if (F >= Qe.pos && F < Qe.end) for(let Be = 0; Be < Qe.length; Be++){
                                    let st = Qe[Be];
                                    if (st) {
                                        if (st.pos === F) return N = Qe, q = Be, Q = st, !0;
                                        if (st.pos < F && F < st.end) return Wt(st, W, Se), !0;
                                    }
                                }
                                return !1;
                            }
                        }
                    }
                    e.createSyntaxCursor = S;
                    let T;
                    ((A)=>{
                        A[A.Value = -1] = "Value";
                    })(T || (T = {}));
                })(Hf || (Hf = {})), Gf = new Map, G8 = /^\/\/\/\s*<(\S+)\s.*?\/>/im, X8 = /^\/\/\/?\s*@([^\s:]+)(.*)\s*$/im;
            }
        }), lj = ()=>{}, uj = ()=>{}, pj = ()=>{}, fj = ()=>{}, dj = ()=>{}, mj = ()=>{}, hj = ()=>{}, yj = ()=>{}, gj = ()=>{}, bj = ()=>{}, vj = ()=>{}, Tj = ()=>{}, Sj = ()=>{}, xj = ()=>{}, wj = ()=>{}, Ej = ()=>{}, Cj = ()=>{}, Aj = ()=>{}, kj = ()=>{}, Dj = ()=>{}, Pj = ()=>{}, Ij = ()=>{}, Nj = ()=>{}, Oj = ()=>{}, Mj = ()=>{}, Lj = ()=>{}, Jj = ()=>{}, Rj = ()=>{}, jj = ()=>{}, Fj = ()=>{}, Bj = ()=>{}, Uj = ()=>{}, qj = ()=>{}, zj = ()=>{}, Wj = ()=>{}, Vj = ()=>{}, Hj = ()=>{}, Gj = ()=>{}, Xj = ()=>{}, $j = ()=>{}, Qj = ()=>{}, Yj = ()=>{}, Kj = ()=>{}, Zj = ()=>{}, eF = ()=>{}, tF = ()=>{}, nF = ()=>{}, rF = ()=>{}, En = It({
            "src/compiler/_namespaces/ts.ts" () {
                "use strict";
                Z5(), PE(), Fv(), IE(), NE(), ME(), RE(), qv(), FE(), eC(), tC(), lC(), tk(), UM(), qM(), zM(), WM(), rL(), iL(), aL(), JJ(), XR(), $R(), cj(), lj(), uj(), pj(), fj(), mj(), hj(), yj(), gj(), bj(), vj(), Tj(), Sj(), xj(), wj(), Ej(), Cj(), Aj(), kj(), Dj(), Pj(), Ij(), Nj(), Oj(), Mj(), Lj(), Jj(), Rj(), jj(), Fj(), Bj(), Uj(), qj(), zj(), Wj(), Vj(), Hj(), Gj(), Xj(), $j(), Qj(), Yj(), Kj(), Zj(), eF(), tF(), nF(), rF(), dj(), Uv();
            }
        }), $8 = ()=>{}, Kb = ()=>{}, iF = ()=>{}, Q8 = ()=>{}, qo, Q8 = ()=>{
            Fv(), qo = ss(99, !0);
        }, aF = ()=>{}, Y8 = ()=>{}, oF = ()=>{}, sF = ()=>{}, _F = ()=>{}, cF = ()=>{}, lF = ()=>{}, uF = ()=>{}, pF = ()=>{}, fF = ()=>{}, K8 = ()=>{}, Z8 = ()=>{}, e7 = ()=>{}, dF = ()=>{};
        function t7(e, t, n, a) {
            let _ = Wl(e) ? new Ld(e, t, n) : e === 80 ? new Jd(80, t, n) : e === 81 ? new Rd(81, t, n) : new e6(e, t, n);
            return _.parent = a, _.flags = a.flags & 101441536, _;
        }
        function mF(e, t) {
            if (!Wl(e.kind)) return Je;
            let n = [];
            if (vT(e)) return e.forEachChild((m)=>{
                n.push(m);
            }), n;
            qo.setText((t || e.getSourceFile()).text);
            let a = e.pos, _ = (m)=>{
                bl(n, a, m.pos, e), n.push(m), a = m.end;
            }, p = (m)=>{
                bl(n, a, m.pos, e), n.push(hF(m, e)), a = m.end;
            };
            return wn(e.jsDoc, _), a = e.pos, e.forEachChild(_, p), bl(n, a, e.end, e), qo.setText(void 0), n;
        }
        function bl(e, t, n, a) {
            for(qo.resetTokenState(t); t < n;){
                let _ = qo.scan(), p = qo.getTokenEnd();
                if (p <= n) {
                    if (_ === 80) {
                        if (rx(a)) continue;
                        I.fail(`Did not expect ${I.formatSyntaxKind(a.kind)} to have an Identifier in its trivia`);
                    }
                    e.push(t7(_, t, p, a));
                }
                if (t = p, _ === 1) break;
            }
        }
        function hF(e, t) {
            let n = t7(358, e.pos, e.end, t);
            n._children = [];
            let a = e.pos;
            for (let _ of e)bl(n._children, a, _.pos, t), n._children.push(_), a = _.end;
            return bl(n._children, a, e.end, t), n;
        }
        function n7(e) {
            return zl(e).some((t)=>t.tagName.text === "inheritDoc" || t.tagName.text === "inheritdoc");
        }
        function Pf(e, t) {
            if (!e) return Je;
            let n = ts_JsDoc_exports.getJsDocTagsFromDeclarations(e, t);
            if (t && (n.length === 0 || e.some(n7))) {
                let a = new Set;
                for (let _ of e){
                    let p = r7(t, _, (m)=>{
                        var y;
                        if (!a.has(m)) return a.add(m), _.kind === 177 || _.kind === 178 ? m.getContextualJsDocTags(_, t) : ((y = m.declarations) == null ? void 0 : y.length) === 1 ? m.getJsDocTags() : void 0;
                    });
                    p && (n = [
                        ...p,
                        ...n
                    ]);
                }
            }
            return n;
        }
        function tl(e, t) {
            if (!e) return Je;
            let n = ts_JsDoc_exports.getJsDocCommentsFromDeclarations(e, t);
            if (t && (n.length === 0 || e.some(n7))) {
                let a = new Set;
                for (let _ of e){
                    let p = r7(t, _, (m)=>{
                        if (!a.has(m)) return a.add(m), _.kind === 177 || _.kind === 178 ? m.getContextualDocumentationComment(_, t) : m.getDocumentationComment(t);
                    });
                    p && (n = n.length === 0 ? p.slice() : p.concat(lineBreakPart(), n));
                }
            }
            return n;
        }
        function r7(e, t, n) {
            var a;
            let _ = ((a = t.parent) == null ? void 0 : a.kind) === 176 ? t.parent.parent : t.parent;
            if (!_) return;
            let p = xm(t);
            return cg(w3(_), (m)=>{
                let y = e.getTypeAtLocation(m), u = p && y.symbol ? e.getTypeOfSymbol(y.symbol) : y, x = e.getPropertyOfType(u, t.symbol.name);
                return x ? n(x) : void 0;
            });
        }
        function yF() {
            return {
                getNodeConstructor: ()=>Ld,
                getTokenConstructor: ()=>e6,
                getIdentifierConstructor: ()=>Jd,
                getPrivateIdentifierConstructor: ()=>Rd,
                getSourceFileConstructor: ()=>d7,
                getSymbolConstructor: ()=>u7,
                getTypeConstructor: ()=>p7,
                getSignatureConstructor: ()=>f7,
                getSourceMapSourceConstructor: ()=>m7
            };
        }
        function ll(e) {
            let t = !0;
            for(let a in e)if (Wn(e, a) && !sv(a)) {
                t = !1;
                break;
            }
            if (t) return e;
            let n = {};
            for(let a in e)if (Wn(e, a)) {
                let _ = sv(a) ? a : a.charAt(0).toLowerCase() + a.substr(1);
                n[_] = e[a];
            }
            return n;
        }
        function sv(e) {
            return !e.length || e.charAt(0) === e.charAt(0).toLowerCase();
        }
        function gF(e) {
            return e ? xa(e, (t)=>t.text).join("") : "";
        }
        function i7() {
            return {
                target: 1,
                jsx: 1
            };
        }
        function a7() {
            return ts_codefix_exports.getSupportedErrorCodes();
        }
        function o7(e, t, n) {
            e.version = n, e.scriptSnapshot = t;
        }
        function Zb(e, t, n, a, _, p) {
            let m = q8(e, getSnapshotText(t), n, _, p);
            return o7(m, t, a), m;
        }
        function s7(e, t, n, a, _) {
            if (a && n !== e.version) {
                let m, y = a.span.start !== 0 ? e.text.substr(0, a.span.start) : "", u = tn(a.span) !== e.text.length ? e.text.substr(tn(a.span)) : "";
                if (a.newLength === 0) m = y && u ? y + u : y || u;
                else {
                    let d = t.getText(a.span.start, a.span.start + a.newLength);
                    m = y && u ? y + d + u : y ? y + d : d + u;
                }
                let x = Yb(e, m, a, _);
                return o7(x, t, n), x.nameTable = void 0, e !== x && e.scriptSnapshot && (e.scriptSnapshot.dispose && e.scriptSnapshot.dispose(), e.scriptSnapshot = void 0), x;
            }
            let p = {
                languageVersion: e.languageVersion,
                impliedNodeFormat: e.impliedNodeFormat,
                setExternalModuleIndicator: e.setExternalModuleIndicator,
                jsDocParsingMode: e.jsDocParsingMode
            };
            return Zb(e.fileName, t, p, n, !0, e.scriptKind);
        }
        function bF(e, t = createDocumentRegistry(e.useCaseSensitiveFileNames && e.useCaseSensitiveFileNames(), e.getCurrentDirectory()), n) {
            var a;
            let _;
            n === void 0 ? _ = 0 : typeof n == "boolean" ? _ = n ? 2 : 0 : _ = n;
            let p = new h7(e), m, y, u = 0, x = e.getCancellationToken ? new g7(e.getCancellationToken()) : y7, d = e.getCurrentDirectory();
            AS((a = e.getLocalizedDiagnosticMessages) == null ? void 0 : a.bind(e));
            function S(R) {
                e.log && e.log(R);
            }
            let T = O2(e), A = Wd(T), N = getSourceMapper({
                useCaseSensitiveFileNames: ()=>T,
                getCurrentDirectory: ()=>d,
                getProgram: se,
                fileExists: sn(e, e.fileExists),
                readFile: sn(e, e.readFile),
                getDocumentPositionMapper: sn(e, e.getDocumentPositionMapper),
                getSourceFileLike: sn(e, e.getSourceFileLike),
                log: S
            });
            function q(R) {
                let v = m.getSourceFile(R);
                if (!v) {
                    let w = new Error(`Could not find source file: '${R}'.`);
                    throw w.ProgramFiles = m.getSourceFiles().map((f)=>f.fileName), w;
                }
                return v;
            }
            function Q() {
                var R, v, w;
                if (I.assert(_ !== 2), e.getProjectVersion) {
                    let Pe = e.getProjectVersion();
                    if (Pe) {
                        if (y === Pe && !((R = e.hasChangedAutomaticTypeDirectiveNames) != null && R.call(e))) return;
                        y = Pe;
                    }
                }
                let f = e.getTypeRootsVersion ? e.getTypeRootsVersion() : 0;
                u !== f && (S("TypeRoots version has changed; provide new program"), m = void 0, u = f);
                let X = e.getScriptFileNames().slice(), $ = e.getCompilationSettings() || i7(), O = e.hasInvalidatedResolutions || Qf, ue = sn(e, e.hasInvalidatedLibResolutions) || Qf, be = sn(e, e.hasChangedAutomaticTypeDirectiveNames), ge = (v = e.getProjectReferences) == null ? void 0 : v.call(e), Le, xe = {
                    getSourceFile: G,
                    getSourceFileByPath: La,
                    getCancellationToken: ()=>x,
                    getCanonicalFileName: A,
                    useCaseSensitiveFileNames: ()=>T,
                    getNewLine: ()=>mS($),
                    getDefaultLibFileName: (Pe)=>e.getDefaultLibFileName(Pe),
                    writeFile: gr,
                    getCurrentDirectory: ()=>d,
                    fileExists: (Pe)=>e.fileExists(Pe),
                    readFile: (Pe)=>e.readFile && e.readFile(Pe),
                    getSymlinkCache: sn(e, e.getSymlinkCache),
                    realpath: sn(e, e.realpath),
                    directoryExists: (Pe)=>dS(Pe, e),
                    getDirectories: (Pe)=>e.getDirectories ? e.getDirectories(Pe) : [],
                    readDirectory: (Pe, ot, un, ur, Ja)=>(I.checkDefined(e.readDirectory, "'LanguageServiceHost.readDirectory' must be implemented to correctly process 'projectReferences'"), e.readDirectory(Pe, ot, un, ur, Ja)),
                    onReleaseOldSourceFile: Dt,
                    onReleaseParsedCommandLine: Ir,
                    hasInvalidatedResolutions: O,
                    hasInvalidatedLibResolutions: ue,
                    hasChangedAutomaticTypeDirectiveNames: be,
                    trace: sn(e, e.trace),
                    resolveModuleNames: sn(e, e.resolveModuleNames),
                    getModuleResolutionCache: sn(e, e.getModuleResolutionCache),
                    createHash: sn(e, e.createHash),
                    resolveTypeReferenceDirectives: sn(e, e.resolveTypeReferenceDirectives),
                    resolveModuleNameLiterals: sn(e, e.resolveModuleNameLiterals),
                    resolveTypeReferenceDirectiveReferences: sn(e, e.resolveTypeReferenceDirectiveReferences),
                    resolveLibrary: sn(e, e.resolveLibrary),
                    useSourceOfProjectReferenceRedirect: sn(e, e.useSourceOfProjectReferenceRedirect),
                    getParsedCommandLine: ve,
                    jsDocParsingMode: e.jsDocParsingMode
                }, Ye = xe.getSourceFile, { getSourceFileWithCache: Ge } = changeCompilerHostLikeToUseCache(xe, (Pe)=>Di(Pe, d, A), (...Pe)=>Ye.call(xe, ...Pe));
                xe.getSourceFile = Ge, (w = e.setCompilerHost) == null || w.call(e, xe);
                let Xe = {
                    useCaseSensitiveFileNames: T,
                    fileExists: (Pe)=>xe.fileExists(Pe),
                    readFile: (Pe)=>xe.readFile(Pe),
                    directoryExists: (Pe)=>xe.directoryExists(Pe),
                    getDirectories: (Pe)=>xe.getDirectories(Pe),
                    realpath: xe.realpath,
                    readDirectory: (...Pe)=>xe.readDirectory(...Pe),
                    trace: xe.trace,
                    getCurrentDirectory: xe.getCurrentDirectory,
                    onUnRecoverableConfigFileDiagnostic: gr
                }, Nt = t.getKeyForCompilationSettings($), Xt = new Set;
                if (isProgramUptoDate(m, X, $, (Pe, ot)=>e.getScriptVersion(ot), (Pe)=>xe.fileExists(Pe), O, ue, be, ve, ge)) {
                    xe = void 0, Le = void 0, Xt = void 0;
                    return;
                }
                let ln = {
                    rootNames: X,
                    options: $,
                    host: xe,
                    oldProgram: m,
                    projectReferences: ge
                };
                m = createProgram(ln), xe = void 0, Le = void 0, Xt = void 0, N.clearCache(), m.getTypeChecker();
                return;
                function ve(Pe) {
                    let ot = Di(Pe, d, A), un = Le == null ? void 0 : Le.get(ot);
                    if (un !== void 0) return un || void 0;
                    let ur = e.getParsedCommandLine ? e.getParsedCommandLine(Pe) : ft(Pe);
                    return (Le || (Le = new Map)).set(ot, ur || !1), ur;
                }
                function ft(Pe) {
                    let ot = G(Pe, 100);
                    if (ot) return ot.path = Di(Pe, d, A), ot.resolvedPath = ot.path, ot.originalFileName = ot.fileName, parseJsonSourceFileConfigFileContent(ot, Xe, Gi(Mi(Pe), d), void 0, Gi(Pe, d));
                }
                function Ir(Pe, ot, un) {
                    var ur;
                    e.getParsedCommandLine ? (ur = e.onReleaseParsedCommandLine) == null || ur.call(e, Pe, ot, un) : ot && Dt(ot.sourceFile, un);
                }
                function Dt(Pe, ot) {
                    let un = t.getKeyForCompilationSettings(ot);
                    t.releaseDocumentWithKey(Pe.resolvedPath, un, Pe.scriptKind, Pe.impliedNodeFormat);
                }
                function G(Pe, ot, un, ur) {
                    return La(Pe, Di(Pe, d, A), ot, un, ur);
                }
                function La(Pe, ot, un, ur, Ja) {
                    I.assert(xe, "getOrCreateSourceFileByPath called after typical CompilerHost lifetime, check the callstack something with a reference to an old host.");
                    let Nr = e.getScriptSnapshot(Pe);
                    if (!Nr) return;
                    let Re = getScriptKind(Pe, e), dt = e.getScriptVersion(Pe);
                    if (!Ja) {
                        let mi = m && m.getSourceFileByPath(ot);
                        if (mi) {
                            if (Re === mi.scriptKind || Xt.has(mi.resolvedPath)) return t.updateDocumentWithKey(Pe, ot, e, Nt, Nr, dt, Re, un);
                            t.releaseDocumentWithKey(mi.resolvedPath, t.getKeyForCompilationSettings(m.getCompilerOptions()), mi.scriptKind, mi.impliedNodeFormat), Xt.add(mi.resolvedPath);
                        }
                    }
                    return t.acquireDocumentWithKey(Pe, ot, e, Nt, Nr, dt, Re, un);
                }
            }
            function se() {
                if (_ === 2) {
                    I.assert(m === void 0);
                    return;
                }
                return Q(), m;
            }
            function fe() {
                var R;
                return (R = e.getPackageJsonAutoImportProvider) == null ? void 0 : R.call(e);
            }
            function F(R, v) {
                let w = m.getTypeChecker(), f = X();
                if (!f) return !1;
                for (let O of R)for (let ue of O.references){
                    let be = $(ue);
                    if (I.assertIsDefined(be), v.has(ue) || ts_FindAllReferences_exports.isDeclarationOfSymbol(be, f)) {
                        v.add(ue), ue.isDefinition = !0;
                        let ge = getMappedDocumentSpan(ue, N, sn(e, e.fileExists));
                        ge && v.add(ge);
                    } else ue.isDefinition = !1;
                }
                return !0;
                function X() {
                    for (let O of R)for (let ue of O.references){
                        if (v.has(ue)) {
                            let ge = $(ue);
                            return I.assertIsDefined(ge), w.getSymbolAtLocation(ge);
                        }
                        let be = getMappedDocumentSpan(ue, N, sn(e, e.fileExists));
                        if (be && v.has(be)) {
                            let ge = $(be);
                            if (ge) return w.getSymbolAtLocation(ge);
                        }
                    }
                }
                function $(O) {
                    let ue = m.getSourceFile(O.fileName);
                    if (!ue) return;
                    let be = getTouchingPropertyName(ue, O.textSpan.start);
                    return ts_FindAllReferences_exports.Core.getAdjustedNode(be, {
                        use: ts_FindAllReferences_exports.FindReferencesUse.References
                    });
                }
            }
            function W() {
                if (m) {
                    let R = t.getKeyForCompilationSettings(m.getCompilerOptions());
                    wn(m.getSourceFiles(), (v)=>t.releaseDocumentWithKey(v.resolvedPath, R, v.scriptKind, v.impliedNodeFormat)), m = void 0;
                }
            }
            function Se() {
                W(), e = void 0;
            }
            function Qe(R) {
                return Q(), m.getSyntacticDiagnostics(q(R), x).slice();
            }
            function Be(R) {
                Q();
                let v = q(R), w = m.getSemanticDiagnostics(v, x);
                if (!Q2(m.getCompilerOptions())) return w.slice();
                let f = m.getDeclarationDiagnostics(v, x);
                return [
                    ...w,
                    ...f
                ];
            }
            function st(R) {
                return Q(), computeSuggestionDiagnostics(q(R), m, x);
            }
            function _t() {
                return Q(), [
                    ...m.getOptionsDiagnostics(x),
                    ...m.getGlobalDiagnostics(x)
                ];
            }
            function hn(R, v, w = emptyOptions, f) {
                let X = {
                    ...w,
                    includeCompletionsForModuleExports: w.includeCompletionsForModuleExports || w.includeExternalModuleExports,
                    includeCompletionsWithInsertText: w.includeCompletionsWithInsertText || w.includeInsertTextCompletions
                };
                return Q(), ts_Completions_exports.getCompletionsAtPosition(e, m, S, q(R), v, X, w.triggerCharacter, w.triggerKind, x, f && ts_formatting_exports.getFormatContext(f, e), w.includeSymbol);
            }
            function yn(R, v, w, f, X, $ = emptyOptions, O) {
                return Q(), ts_Completions_exports.getCompletionEntryDetails(m, S, q(R), v, {
                    name: w,
                    source: X,
                    data: O
                }, e, f && ts_formatting_exports.getFormatContext(f, e), $, x);
            }
            function fi(R, v, w, f, X = emptyOptions) {
                return Q(), ts_Completions_exports.getCompletionEntrySymbol(m, S, q(R), v, {
                    name: w,
                    source: f
                }, e, X);
            }
            function gn(R, v) {
                Q();
                let w = q(R), f = getTouchingPropertyName(w, v);
                if (f === w) return;
                let X = m.getTypeChecker(), $ = cr(f), O = wF($, X);
                if (!O || X.isUnknownSymbol(O)) {
                    let xe = He(w, $, v) ? X.getTypeAtLocation($) : void 0;
                    return xe && {
                        kind: "",
                        kindModifiers: "",
                        textSpan: createTextSpanFromNode($, w),
                        displayParts: X.runWithCancellationToken(x, (Ye)=>typeToDisplayParts(Ye, xe, getContainerNode($))),
                        documentation: xe.symbol ? xe.symbol.getDocumentationComment(X) : void 0,
                        tags: xe.symbol ? xe.symbol.getJsDocTags(X) : void 0
                    };
                }
                let { symbolKind: ue, displayParts: be, documentation: ge, tags: Le } = X.runWithCancellationToken(x, (xe)=>ts_SymbolDisplay_exports.getSymbolDisplayPartsDocumentationAndSymbolKind(xe, O, w, getContainerNode($), $));
                return {
                    kind: ue,
                    kindModifiers: ts_SymbolDisplay_exports.getSymbolModifiers(X, O),
                    textSpan: createTextSpanFromNode($, w),
                    displayParts: be,
                    documentation: ge,
                    tags: Le
                };
            }
            function cr(R) {
                return n8(R.parent) && R.pos === R.parent.pos ? R.parent.expression : vb(R.parent) && R.pos === R.parent.pos || k0(R.parent) && R.parent.name === R || B_(R.parent) ? R.parent : R;
            }
            function He(R, v, w) {
                switch(v.kind){
                    case 80:
                        return !isLabelName(v) && !isTagName(v) && !G4(v.parent);
                    case 211:
                    case 166:
                        return !isInComment(R, w);
                    case 110:
                    case 197:
                    case 108:
                    case 202:
                        return !0;
                    case 236:
                        return k0(v);
                    default:
                        return !1;
                }
            }
            function Qn(R, v, w, f) {
                return Q(), ts_GoToDefinition_exports.getDefinitionAtPosition(m, q(R), v, w, f);
            }
            function Gr(R, v) {
                return Q(), ts_GoToDefinition_exports.getDefinitionAndBoundSpan(m, q(R), v);
            }
            function vt(R, v) {
                return Q(), ts_GoToDefinition_exports.getTypeDefinitionAtPosition(m.getTypeChecker(), q(R), v);
            }
            function Jn(R, v) {
                return Q(), ts_FindAllReferences_exports.getImplementationsAtPosition(m, x, m.getSourceFiles(), q(R), v);
            }
            function Ar(R, v, w) {
                let f = br(R);
                I.assert(w.some((O)=>br(O) === f)), Q();
                let X = wa(w, (O)=>m.getSourceFile(O)), $ = q(R);
                return DocumentHighlights.getDocumentHighlights(m, x, $, v, X);
            }
            function Ht(R, v, w, f, X) {
                Q();
                let $ = q(R), O = getAdjustedRenameLocation(getTouchingPropertyName($, v));
                if (ts_Rename_exports.nodeIsEligibleForRename(O)) {
                    if (Ae(O) && (Jo(O.parent) || Wf(O.parent)) && R3(O.escapedText)) {
                        let { openingElement: ue, closingElement: be } = O.parent.parent;
                        return [
                            ue,
                            be
                        ].map((ge)=>{
                            let Le = createTextSpanFromNode(ge.tagName, $);
                            return {
                                fileName: $.fileName,
                                textSpan: Le,
                                ...ts_FindAllReferences_exports.toContextSpan(Le, $, ge.parent)
                            };
                        });
                    } else {
                        let ue = getQuotePreference($, X ?? emptyOptions), be = typeof X == "boolean" ? X : X == null ? void 0 : X.providePrefixAndSuffixTextForRename;
                        return at(O, v, {
                            findInStrings: w,
                            findInComments: f,
                            providePrefixAndSuffixTextForRename: be,
                            use: ts_FindAllReferences_exports.FindReferencesUse.Rename
                        }, (ge, Le, xe)=>ts_FindAllReferences_exports.toRenameLocation(ge, Le, xe, be || !1, ue));
                    }
                }
            }
            function rn(R, v) {
                return Q(), at(getTouchingPropertyName(q(R), v), v, {
                    use: ts_FindAllReferences_exports.FindReferencesUse.References
                }, ts_FindAllReferences_exports.toReferenceEntry);
            }
            function at(R, v, w, f) {
                Q();
                let X = w && w.use === ts_FindAllReferences_exports.FindReferencesUse.Rename ? m.getSourceFiles().filter(($)=>!m.isSourceFileDefaultLibrary($)) : m.getSourceFiles();
                return ts_FindAllReferences_exports.findReferenceOrRenameEntries(m, x, X, R, v, w, f);
            }
            function kr(R, v) {
                return Q(), ts_FindAllReferences_exports.findReferencedSymbols(m, x, m.getSourceFiles(), q(R), v);
            }
            function an(R) {
                return Q(), ts_FindAllReferences_exports.Core.getReferencesForFileName(R, m, m.getSourceFiles()).map(ts_FindAllReferences_exports.toReferenceEntry);
            }
            function xt(R, v, w, f = !1, X = !1) {
                Q();
                let $ = w ? [
                    q(w)
                ] : m.getSourceFiles();
                return getNavigateToItems($, m.getTypeChecker(), x, R, v, f, X);
            }
            function ut(R, v, w) {
                Q();
                let f = q(R), X = e.getCustomTransformers && e.getCustomTransformers();
                return getFileEmitOutput(m, f, !!v, x, X, w);
            }
            function Gt(R, v, { triggerReason: w } = emptyOptions) {
                Q();
                let f = q(R);
                return ts_SignatureHelp_exports.getSignatureHelpItems(m, f, v, w, x);
            }
            function cn(R) {
                return p.getCurrentSourceFile(R);
            }
            function ht(R, v, w) {
                let f = p.getCurrentSourceFile(R), X = getTouchingPropertyName(f, v);
                if (X === f) return;
                switch(X.kind){
                    case 211:
                    case 166:
                    case 11:
                    case 97:
                    case 112:
                    case 106:
                    case 108:
                    case 110:
                    case 197:
                    case 80:
                        break;
                    default:
                        return;
                }
                let $ = X;
                for(;;)if (isRightSideOfPropertyAccess($) || isRightSideOfQualifiedName($)) $ = $.parent;
                else if (isNameOfModuleDeclaration($)) {
                    if ($.parent.parent.kind === 267 && $.parent.parent.body === $.parent) $ = $.parent.parent.name;
                    else break;
                } else break;
                return Xi($.getStart(), X.getEnd());
            }
            function Dr(R, v) {
                let w = p.getCurrentSourceFile(R);
                return ts_BreakpointResolver_exports.spanInSourceFileAtLocation(w, v);
            }
            function Tt(R) {
                return getNavigationBarItems(p.getCurrentSourceFile(R), x);
            }
            function Rn(R) {
                return getNavigationTree(p.getCurrentSourceFile(R), x);
            }
            function yt(R, v, w) {
                return Q(), (w || "original") === "2020" ? getSemanticClassifications2(m, x, q(R), v) : getSemanticClassifications(m.getTypeChecker(), x, q(R), m.getClassifiableNames(), v);
            }
            function jn(R, v, w) {
                return Q(), (w || "original") === "original" ? getEncodedSemanticClassifications(m.getTypeChecker(), x, q(R), m.getClassifiableNames(), v) : getEncodedSemanticClassifications2(m, x, q(R), v);
            }
            function ct(R, v) {
                return getSyntacticClassifications(x, p.getCurrentSourceFile(R), v);
            }
            function Kt(R, v) {
                return getEncodedSyntacticClassifications(x, p.getCurrentSourceFile(R), v);
            }
            function Zt(R) {
                let v = p.getCurrentSourceFile(R);
                return ts_OutliningElementsCollector_exports.collectElements(v, x);
            }
            let lr = new Map(Object.entries({
                19: 20,
                21: 22,
                23: 24,
                32: 30
            }));
            lr.forEach((R, v)=>lr.set(R.toString(), Number(v)));
            function di(R, v) {
                let w = p.getCurrentSourceFile(R), f = getTouchingToken(w, v), X = f.getStart(w) === v ? lr.get(f.kind.toString()) : void 0, $ = X && findChildOfKind(f.parent, X, w);
                return $ ? [
                    createTextSpanFromNode(f, w),
                    createTextSpanFromNode($, w)
                ].sort((O, ue)=>O.start - ue.start) : Je;
            }
            function Xr(R, v, w) {
                let f = ga(), X = ll(w), $ = p.getCurrentSourceFile(R);
                S("getIndentationAtPosition: getCurrentSourceFile: " + (ga() - f)), f = ga();
                let O = ts_formatting_exports.SmartIndenter.getIndentation(v, $, X);
                return S("getIndentationAtPosition: computeIndentation  : " + (ga() - f)), O;
            }
            function Yn(R, v, w, f) {
                let X = p.getCurrentSourceFile(R);
                return ts_formatting_exports.formatSelection(v, w, X, ts_formatting_exports.getFormatContext(ll(f), e));
            }
            function Kn(R, v) {
                return ts_formatting_exports.formatDocument(p.getCurrentSourceFile(R), ts_formatting_exports.getFormatContext(ll(v), e));
            }
            function Ji(R, v, w, f) {
                let X = p.getCurrentSourceFile(R), $ = ts_formatting_exports.getFormatContext(ll(f), e);
                if (!isInComment(X, v)) switch(w){
                    case "{":
                        return ts_formatting_exports.formatOnOpeningCurly(v, X, $);
                    case "}":
                        return ts_formatting_exports.formatOnClosingCurly(v, X, $);
                    case ";":
                        return ts_formatting_exports.formatOnSemicolon(v, X, $);
                    case `
`:
                        return ts_formatting_exports.formatOnEnter(v, X, $);
                }
                return [];
            }
            function Pr(R, v, w, f, X, $ = emptyOptions) {
                Q();
                let O = q(R), ue = Xi(v, w), be = ts_formatting_exports.getFormatContext(X, e);
                return zo(hv(f, _o, Mn), (ge)=>(x.throwIfCancellationRequested(), ts_codefix_exports.getFixes({
                        errorCode: ge,
                        sourceFile: O,
                        span: ue,
                        program: m,
                        host: e,
                        cancellationToken: x,
                        formatContext: be,
                        preferences: $
                    })));
            }
            function De(R, v, w, f = emptyOptions) {
                Q(), I.assert(R.type === "file");
                let X = q(R.fileName), $ = ts_formatting_exports.getFormatContext(w, e);
                return ts_codefix_exports.getAllFixes({
                    fixId: v,
                    sourceFile: X,
                    program: m,
                    host: e,
                    cancellationToken: x,
                    formatContext: $,
                    preferences: f
                });
            }
            function U(R, v, w = emptyOptions) {
                Q(), I.assert(R.type === "file");
                let f = q(R.fileName), X = ts_formatting_exports.getFormatContext(v, e), $ = R.mode ?? (R.skipDestructiveCodeActions ? "SortAndCombine" : "All");
                return ts_OrganizeImports_exports.organizeImports(f, X, e, m, w, $);
            }
            function ie(R, v, w, f = emptyOptions) {
                return getEditsForFileRename(se(), R, v, e, ts_formatting_exports.getFormatContext(w, e), f, N);
            }
            function ye(R, v) {
                let w = typeof R == "string" ? v : R;
                return $t(w) ? Promise.all(w.map((f)=>Te(f))) : Te(w);
            }
            function Te(R) {
                let v = (w)=>Di(w, d, A);
                return I.assertEqual(R.type, "install package"), e.installPackage ? e.installPackage({
                    fileName: v(R.file),
                    packageName: R.packageName
                }) : Promise.reject("Host does not implement `installPackage`");
            }
            function tt(R, v, w, f) {
                let X = f ? ts_formatting_exports.getFormatContext(f, e).options : void 0;
                return ts_JsDoc_exports.getDocCommentTemplateAtPosition(getNewLineOrDefaultFromHost(e, X), p.getCurrentSourceFile(R), v, w);
            }
            function $e(R, v, w) {
                if (w === 60) return !1;
                let f = p.getCurrentSourceFile(R);
                if (isInString(f, v)) return !1;
                if (isInsideJsxElementOrAttribute(f, v)) return w === 123;
                if (isInTemplateString(f, v)) return !1;
                switch(w){
                    case 39:
                    case 34:
                    case 96:
                        return !isInComment(f, v);
                }
                return !0;
            }
            function Ut(R, v) {
                let w = p.getCurrentSourceFile(R), f = findPrecedingToken(v, w);
                if (!f) return;
                let X = f.kind === 32 && Jo(f.parent) ? f.parent.parent : Id(f) && tg(f.parent) ? f.parent : void 0;
                if (X && Ee(X)) return {
                    newText: `</${X.openingElement.tagName.getText(w)}>`
                };
                let $ = f.kind === 32 && Jb(f.parent) ? f.parent.parent : Id(f) && yl(f.parent) ? f.parent : void 0;
                if ($ && je($)) return {
                    newText: "</>"
                };
            }
            function St(R, v) {
                let w = p.getCurrentSourceFile(R), f = findPrecedingToken(v, w);
                if (!f || f.parent.kind === 312) return;
                let X = "[a-zA-Z0-9:\\-\\._$]*";
                if (yl(f.parent.parent)) {
                    let $ = f.parent.parent.openingFragment, O = f.parent.parent.closingFragment;
                    if (El($) || El(O)) return;
                    let ue = $.getStart(w) + 1, be = O.getStart(w) + 2;
                    return v !== ue && v !== be ? void 0 : {
                        ranges: [
                            {
                                start: ue,
                                length: 0
                            },
                            {
                                start: be,
                                length: 0
                            }
                        ],
                        wordPattern: X
                    };
                } else {
                    let $ = or(f.parent, (Ge)=>!!(Jo(Ge) || Wf(Ge)));
                    if (!$) return;
                    I.assert(Jo($) || Wf($), "tag should be opening or closing element");
                    let O = $.parent.openingElement, ue = $.parent.closingElement, be = O.tagName.getStart(w), ge = O.tagName.end, Le = ue.tagName.getStart(w), xe = ue.tagName.end;
                    return !(be <= v && v <= ge || Le <= v && v <= xe) || O.tagName.getText(w) !== ue.tagName.getText(w) ? void 0 : {
                        ranges: [
                            {
                                start: be,
                                length: ge - be
                            },
                            {
                                start: Le,
                                length: xe - Le
                            }
                        ],
                        wordPattern: X
                    };
                }
            }
            function Jt(R, v) {
                return {
                    lineStarts: R.getLineStarts(),
                    firstLine: R.getLineAndCharacterOfPosition(v.pos).line,
                    lastLine: R.getLineAndCharacterOfPosition(v.end).line
                };
            }
            function Rt(R, v, w) {
                let f = p.getCurrentSourceFile(R), X = [], { lineStarts: $, firstLine: O, lastLine: ue } = Jt(f, v), be = w || !1, ge = Number.MAX_VALUE, Le = new Map, xe = new RegExp(/\S/), Ye = isInsideJsxElement(f, $[O]), Ge = Ye ? "{/*" : "//";
                for(let Xe = O; Xe <= ue; Xe++){
                    let Nt = f.text.substring($[Xe], f.getLineEndOfPosition($[Xe])), Xt = xe.exec(Nt);
                    Xt && (ge = Math.min(ge, Xt.index), Le.set(Xe.toString(), Xt.index), Nt.substr(Xt.index, Ge.length) !== Ge && (be = w === void 0 || w));
                }
                for(let Xe = O; Xe <= ue; Xe++){
                    if (O !== ue && $[Xe] === v.end) continue;
                    let Nt = Le.get(Xe.toString());
                    Nt !== void 0 && (Ye ? X.push(...z(R, {
                        pos: $[Xe] + ge,
                        end: f.getLineEndOfPosition($[Xe])
                    }, be, Ye)) : be ? X.push({
                        newText: Ge,
                        span: {
                            length: 0,
                            start: $[Xe] + ge
                        }
                    }) : f.text.substr($[Xe] + Nt, Ge.length) === Ge && X.push({
                        newText: "",
                        span: {
                            length: Ge.length,
                            start: $[Xe] + Nt
                        }
                    }));
                }
                return X;
            }
            function z(R, v, w, f) {
                var X;
                let $ = p.getCurrentSourceFile(R), O = [], { text: ue } = $, be = !1, ge = w || !1, Le = [], { pos: xe } = v, Ye = f !== void 0 ? f : isInsideJsxElement($, xe), Ge = Ye ? "{/*" : "/*", Xe = Ye ? "*/}" : "*/", Nt = Ye ? "\\{\\/\\*" : "\\/\\*", Xt = Ye ? "\\*\\/\\}" : "\\*\\/";
                for(; xe <= v.end;){
                    let ln = ue.substr(xe, Ge.length) === Ge ? Ge.length : 0, ve = isInComment($, xe + ln);
                    if (ve) Ye && (ve.pos--, ve.end++), Le.push(ve.pos), ve.kind === 3 && Le.push(ve.end), be = !0, xe = ve.end + 1;
                    else {
                        let ft = ue.substring(xe, v.end).search(`(${Nt})|(${Xt})`);
                        ge = w !== void 0 ? w : ge || !isTextWhiteSpaceLike(ue, xe, ft === -1 ? v.end : xe + ft), xe = ft === -1 ? v.end + 1 : xe + ft + Xe.length;
                    }
                }
                if (ge || !be) {
                    ((X = isInComment($, v.pos)) == null ? void 0 : X.kind) !== 2 && vl(Le, v.pos, Mn), vl(Le, v.end, Mn);
                    let ln = Le[0];
                    ue.substr(ln, Ge.length) !== Ge && O.push({
                        newText: Ge,
                        span: {
                            length: 0,
                            start: ln
                        }
                    });
                    for(let ve = 1; ve < Le.length - 1; ve++)ue.substr(Le[ve] - Xe.length, Xe.length) !== Xe && O.push({
                        newText: Xe,
                        span: {
                            length: 0,
                            start: Le[ve]
                        }
                    }), ue.substr(Le[ve], Ge.length) !== Ge && O.push({
                        newText: Ge,
                        span: {
                            length: 0,
                            start: Le[ve]
                        }
                    });
                    O.length % 2 !== 0 && O.push({
                        newText: Xe,
                        span: {
                            length: 0,
                            start: Le[Le.length - 1]
                        }
                    });
                } else for (let ln of Le){
                    let ve = ln - Xe.length > 0 ? ln - Xe.length : 0, ft = ue.substr(ve, Xe.length) === Xe ? Xe.length : 0;
                    O.push({
                        newText: "",
                        span: {
                            length: Ge.length,
                            start: ln - ft
                        }
                    });
                }
                return O;
            }
            function K(R, v) {
                let w = p.getCurrentSourceFile(R), { firstLine: f, lastLine: X } = Jt(w, v);
                return f === X && v.pos !== v.end ? z(R, v, !0) : Rt(R, v, !0);
            }
            function te(R, v) {
                let w = p.getCurrentSourceFile(R), f = [], { pos: X } = v, { end: $ } = v;
                X === $ && ($ += isInsideJsxElement(w, X) ? 2 : 1);
                for(let O = X; O <= $; O++){
                    let ue = isInComment(w, O);
                    if (ue) {
                        switch(ue.kind){
                            case 2:
                                f.push(...Rt(R, {
                                    end: ue.end,
                                    pos: ue.pos + 1
                                }, !1));
                                break;
                            case 3:
                                f.push(...z(R, {
                                    end: ue.end,
                                    pos: ue.pos + 1
                                }, !1));
                        }
                        O = ue.end + 1;
                    }
                }
                return f;
            }
            function Ee({ openingElement: R, closingElement: v, parent: w }) {
                return !Ai(R.tagName, v.tagName) || tg(w) && Ai(R.tagName, w.openingElement.tagName) && Ee(w);
            }
            function je({ closingFragment: R, parent: v }) {
                return !!(R.flags & 262144) || yl(v) && je(v);
            }
            function pt(R, v, w) {
                let f = p.getCurrentSourceFile(R), X = ts_formatting_exports.getRangeOfEnclosingComment(f, v);
                return X && (!w || X.kind === 3) ? createTextSpanFromRange(X) : void 0;
            }
            function nt(R, v) {
                Q();
                let w = q(R);
                x.throwIfCancellationRequested();
                let f = w.text, X = [];
                if (v.length > 0 && !be(w.fileName)) {
                    let ge = O(), Le;
                    for(; Le = ge.exec(f);){
                        x.throwIfCancellationRequested();
                        let xe = 3;
                        I.assert(Le.length === v.length + xe);
                        let Ye = Le[1], Ge = Le.index + Ye.length;
                        if (!isInComment(w, Ge)) continue;
                        let Xe;
                        for(let Xt = 0; Xt < v.length; Xt++)Le[Xt + xe] && (Xe = v[Xt]);
                        if (Xe === void 0) return I.fail();
                        if (ue(f.charCodeAt(Ge + Xe.text.length))) continue;
                        let Nt = Le[2];
                        X.push({
                            descriptor: Xe,
                            message: Nt,
                            position: Ge
                        });
                    }
                }
                return X;
                function $(ge) {
                    return ge.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&");
                }
                function O() {
                    let ge = /(?:\/\/+\s*)/.source, Le = /(?:\/\*+\s*)/.source, Ye = "(" + /(?:^(?:\s|\*)*)/.source + "|" + ge + "|" + Le + ")", Ge = "(?:" + xa(v, (ve)=>"(" + $(ve.text) + ")").join("|") + ")", Xe = /(?:$|\*\/)/.source, Nt = /(?:.*?)/.source, Xt = "(" + Ge + Nt + ")", ln = Ye + Xt + Xe;
                    return new RegExp(ln, "gim");
                }
                function ue(ge) {
                    return ge >= 97 && ge <= 122 || ge >= 65 && ge <= 90 || ge >= 48 && ge <= 57;
                }
                function be(ge) {
                    return ge.includes("/node_modules/");
                }
            }
            function kt(R, v, w) {
                return Q(), ts_Rename_exports.getRenameInfo(m, q(R), v, w || {});
            }
            function qt(R, v, w, f, X, $) {
                let [O, ue] = typeof v == "number" ? [
                    v,
                    void 0
                ] : [
                    v.pos,
                    v.end
                ];
                return {
                    file: R,
                    startPosition: O,
                    endPosition: ue,
                    program: se(),
                    host: e,
                    formatContext: ts_formatting_exports.getFormatContext(f, e),
                    cancellationToken: x,
                    preferences: w,
                    triggerReason: X,
                    kind: $
                };
            }
            function Zn(R, v, w) {
                return {
                    file: R,
                    program: se(),
                    host: e,
                    span: v,
                    preferences: w,
                    cancellationToken: x
                };
            }
            function kn(R, v) {
                return ts_SmartSelectionRange_exports.getSmartSelectionRange(v, p.getCurrentSourceFile(R));
            }
            function er(R, v, w = emptyOptions, f, X, $) {
                Q();
                let O = q(R);
                return ts_refactor_exports.getApplicableRefactors(qt(O, v, w, emptyOptions, f, X), $);
            }
            function Ri(R, v, w = emptyOptions) {
                Q();
                let f = q(R), X = I.checkDefined(m.getSourceFiles()), $ = al(R), O = wa(X, (be)=>!(m != null && m.isSourceFileFromExternalLibrary(f)) && !(f === q(be.fileName) || $ === ".ts" && al(be.fileName) === ".d.ts" || $ === ".d.ts" && Hn(os(be.fileName), "lib.") && al(be.fileName) === ".d.ts") && $ === al(be.fileName) ? be.fileName : void 0);
                return {
                    newFileName: createNewFileName(f, m, qt(f, v, w, emptyOptions), e),
                    files: O
                };
            }
            function aa(R, v, w, f, X, $ = emptyOptions, O) {
                Q();
                let ue = q(R);
                return ts_refactor_exports.getEditsForRefactor(qt(ue, w, $, v), f, X, O);
            }
            function $r(R, v) {
                return v === 0 ? {
                    line: 0,
                    character: 0
                } : N.toLineColumnOffset(R, v);
            }
            function Dn(R, v) {
                Q();
                let w = ts_CallHierarchy_exports.resolveCallHierarchyDeclaration(m, getTouchingPropertyName(q(R), v));
                return w && mapOneOrMany(w, (f)=>ts_CallHierarchy_exports.createCallHierarchyItem(m, f));
            }
            function Ne(R, v) {
                Q();
                let w = q(R), f = firstOrOnly(ts_CallHierarchy_exports.resolveCallHierarchyDeclaration(m, v === 0 ? w : getTouchingPropertyName(w, v)));
                return f ? ts_CallHierarchy_exports.getIncomingCalls(m, f, x) : [];
            }
            function oa(R, v) {
                Q();
                let w = q(R), f = firstOrOnly(ts_CallHierarchy_exports.resolveCallHierarchyDeclaration(m, v === 0 ? w : getTouchingPropertyName(w, v)));
                return f ? ts_CallHierarchy_exports.getOutgoingCalls(m, f) : [];
            }
            function jt(R, v, w = emptyOptions) {
                Q();
                let f = q(R);
                return ts_InlayHints_exports.provideInlayHints(Zn(f, v, w));
            }
            let Fn = {
                dispose: Se,
                cleanupSemanticCache: W,
                getSyntacticDiagnostics: Qe,
                getSemanticDiagnostics: Be,
                getSuggestionDiagnostics: st,
                getCompilerOptionsDiagnostics: _t,
                getSyntacticClassifications: ct,
                getSemanticClassifications: yt,
                getEncodedSyntacticClassifications: Kt,
                getEncodedSemanticClassifications: jn,
                getCompletionsAtPosition: hn,
                getCompletionEntryDetails: yn,
                getCompletionEntrySymbol: fi,
                getSignatureHelpItems: Gt,
                getQuickInfoAtPosition: gn,
                getDefinitionAtPosition: Qn,
                getDefinitionAndBoundSpan: Gr,
                getImplementationAtPosition: Jn,
                getTypeDefinitionAtPosition: vt,
                getReferencesAtPosition: rn,
                findReferences: kr,
                getFileReferences: an,
                getDocumentHighlights: Ar,
                getNameOrDottedNameSpan: ht,
                getBreakpointStatementAtPosition: Dr,
                getNavigateToItems: xt,
                getRenameInfo: kt,
                getSmartSelectionRange: kn,
                findRenameLocations: Ht,
                getNavigationBarItems: Tt,
                getNavigationTree: Rn,
                getOutliningSpans: Zt,
                getTodoComments: nt,
                getBraceMatchingAtPosition: di,
                getIndentationAtPosition: Xr,
                getFormattingEditsForRange: Yn,
                getFormattingEditsForDocument: Kn,
                getFormattingEditsAfterKeystroke: Ji,
                getDocCommentTemplateAtPosition: tt,
                isValidBraceCompletionAtPosition: $e,
                getJsxClosingTagAtPosition: Ut,
                getLinkedEditingRangeAtPosition: St,
                getSpanOfEnclosingComment: pt,
                getCodeFixesAtPosition: Pr,
                getCombinedCodeFix: De,
                applyCodeActionCommand: ye,
                organizeImports: U,
                getEditsForFileRename: ie,
                getEmitOutput: ut,
                getNonBoundSourceFile: cn,
                getProgram: se,
                getCurrentProgram: ()=>m,
                getAutoImportProvider: fe,
                updateIsDefinitionOfReferencedSymbols: F,
                getApplicableRefactors: er,
                getEditsForRefactor: aa,
                getMoveToRefactoringFileSuggestions: Ri,
                toLineColumnOffset: $r,
                getSourceMapper: ()=>N,
                clearSourceMapperCache: ()=>N.clearCache(),
                prepareCallHierarchy: Dn,
                provideCallHierarchyIncomingCalls: Ne,
                provideCallHierarchyOutgoingCalls: oa,
                toggleLineComment: Rt,
                toggleMultilineComment: z,
                commentSelection: K,
                uncommentSelection: te,
                provideInlayHints: jt,
                getSupportedCodeFixes: a7
            };
            switch(_){
                case 0:
                    break;
                case 1:
                    sg.forEach((R)=>Fn[R] = ()=>{
                            throw new Error(`LanguageService Operation: ${R} not allowed in LanguageServiceMode.PartialSemantic`);
                        });
                    break;
                case 2:
                    v7.forEach((R)=>Fn[R] = ()=>{
                            throw new Error(`LanguageService Operation: ${R} not allowed in LanguageServiceMode.Syntactic`);
                        });
                    break;
                default:
                    I.assertNever(_);
            }
            return Fn;
        }
        function vF(e) {
            return e.nameTable || TF(e), e.nameTable;
        }
        function TF(e) {
            let t = e.nameTable = new Map;
            e.forEachChild(function n(a) {
                if (Ae(a) && !isTagName(a) && a.escapedText || Yi(a) && SF(a)) {
                    let _ = D3(a);
                    t.set(_, t.get(_) === void 0 ? a.pos : -1);
                } else if (Vn(a)) {
                    let _ = a.escapedText;
                    t.set(_, t.get(_) === void 0 ? a.pos : -1);
                }
                if (Wt(a, n), Hi(a)) for (let _ of a.jsDoc)Wt(_, n);
            });
        }
        function SF(e) {
            return y3(e) || e.parent.kind === 283 || EF(e) || g3(e);
        }
        function _7(e) {
            let t = xF(e);
            return t && (uo(t.parent) || Rb(t.parent)) ? t : void 0;
        }
        function xF(e) {
            switch(e.kind){
                case 11:
                case 15:
                case 9:
                    if (e.parent.kind === 167) return x0(e.parent.parent) ? e.parent.parent : void 0;
                case 80:
                    return x0(e.parent) && (e.parent.parent.kind === 210 || e.parent.parent.kind === 292) && e.parent.name === e ? e.parent : void 0;
            }
        }
        function wF(e, t) {
            let n = _7(e);
            if (n) {
                let a = t.getContextualType(n.parent), _ = a && c7(n, t, a, !1);
                if (_ && _.length === 1) return pg(_);
            }
            return t.getSymbolAtLocation(e);
        }
        function c7(e, t, n, a) {
            let _ = getNameFromPropertyName(e.name);
            if (!_) return Je;
            if (!n.isUnion()) {
                let m = n.getProperty(_);
                return m ? [
                    m
                ] : Je;
            }
            let p = wa(n.types, (m)=>(uo(e.parent) || Rb(e.parent)) && t.isTypeInvalidDueToUnionDiscriminant(m, e.parent) ? void 0 : m.getProperty(_));
            if (a && (p.length === 0 || p.length === n.types.length)) {
                let m = n.getProperty(_);
                if (m) return [
                    m
                ];
            }
            return p.length === 0 ? wa(n.types, (m)=>m.getProperty(_)) : p;
        }
        function EF(e) {
            return e && e.parent && e.parent.kind === 212 && e.parent.argumentExpression === e;
        }
        function CF(e) {
            if (y0) return Qt(Mi(br(y0.getExecutingFilePath())), m4(e));
            throw new Error("getDefaultLibFilePath is only supported when consumed as a node module. ");
        }
        var l7, Ld, If, u7, e6, Jd, Rd, p7, f7, d7, m7, h7, y7, g7, b7, sg, v7, AF = It({
            "src/services/services.ts" () {
                "use strict";
                T7(), K8(), Z8(), e7(), Y8(), dF(), l7 = "0.8", Ld = class {
                    constructor(e, t, n){
                        this.pos = t, this.end = n, this.flags = 0, this.modifierFlagsCache = 0, this.transformFlags = 0, this.parent = void 0, this.kind = e;
                    }
                    assertHasRealPosition(e) {
                        I.assert(!Da(this.pos) && !Da(this.end), e || "Node must have a real position for this operation");
                    }
                    getSourceFile() {
                        return oi(this);
                    }
                    getStart(e, t) {
                        return this.assertHasRealPosition(), $o(this, e, t);
                    }
                    getFullStart() {
                        return this.assertHasRealPosition(), this.pos;
                    }
                    getEnd() {
                        return this.assertHasRealPosition(), this.end;
                    }
                    getWidth(e) {
                        return this.assertHasRealPosition(), this.getEnd() - this.getStart(e);
                    }
                    getFullWidth() {
                        return this.assertHasRealPosition(), this.end - this.pos;
                    }
                    getLeadingTriviaWidth(e) {
                        return this.assertHasRealPosition(), this.getStart(e) - this.pos;
                    }
                    getFullText(e) {
                        return this.assertHasRealPosition(), (e || this.getSourceFile()).text.substring(this.pos, this.end);
                    }
                    getText(e) {
                        return this.assertHasRealPosition(), e || (e = this.getSourceFile()), e.text.substring(this.getStart(e), this.getEnd());
                    }
                    getChildCount(e) {
                        return this.getChildren(e).length;
                    }
                    getChildAt(e, t) {
                        return this.getChildren(t)[e];
                    }
                    getChildren(e) {
                        return this.assertHasRealPosition("Node without a real position cannot be scanned and thus has no token nodes - use forEachChild and collect the result if that's fine"), this._children || (this._children = mF(this, e));
                    }
                    getFirstToken(e) {
                        this.assertHasRealPosition();
                        let t = this.getChildren(e);
                        if (!t.length) return;
                        let n = ir(t, (a)=>a.kind < 316 || a.kind > 357);
                        return n.kind < 166 ? n : n.getFirstToken(e);
                    }
                    getLastToken(e) {
                        this.assertHasRealPosition();
                        let t = this.getChildren(e), n = Pi(t);
                        if (n) return n.kind < 166 ? n : n.getLastToken(e);
                    }
                    forEachChild(e, t) {
                        return Wt(this, e, t);
                    }
                }, If = class {
                    constructor(e, t){
                        this.pos = e, this.end = t, this.flags = 0, this.modifierFlagsCache = 0, this.transformFlags = 0, this.parent = void 0;
                    }
                    getSourceFile() {
                        return oi(this);
                    }
                    getStart(e, t) {
                        return $o(this, e, t);
                    }
                    getFullStart() {
                        return this.pos;
                    }
                    getEnd() {
                        return this.end;
                    }
                    getWidth(e) {
                        return this.getEnd() - this.getStart(e);
                    }
                    getFullWidth() {
                        return this.end - this.pos;
                    }
                    getLeadingTriviaWidth(e) {
                        return this.getStart(e) - this.pos;
                    }
                    getFullText(e) {
                        return (e || this.getSourceFile()).text.substring(this.pos, this.end);
                    }
                    getText(e) {
                        return e || (e = this.getSourceFile()), e.text.substring(this.getStart(e), this.getEnd());
                    }
                    getChildCount() {
                        return this.getChildren().length;
                    }
                    getChildAt(e) {
                        return this.getChildren()[e];
                    }
                    getChildren() {
                        return this.kind === 1 && this.jsDoc || Je;
                    }
                    getFirstToken() {}
                    getLastToken() {}
                    forEachChild() {}
                }, u7 = class {
                    constructor(e, t){
                        this.id = 0, this.mergeId = 0, this.flags = e, this.escapedName = t;
                    }
                    getFlags() {
                        return this.flags;
                    }
                    get name() {
                        return gd(this);
                    }
                    getEscapedName() {
                        return this.escapedName;
                    }
                    getName() {
                        return this.name;
                    }
                    getDeclarations() {
                        return this.declarations;
                    }
                    getDocumentationComment(e) {
                        if (!this.documentationComment) {
                            if (this.documentationComment = Je, !this.declarations && E0(this) && this.links.target && E0(this.links.target) && this.links.target.links.tupleLabelDeclaration) {
                                let t = this.links.target.links.tupleLabelDeclaration;
                                this.documentationComment = tl([
                                    t
                                ], e);
                            } else this.documentationComment = tl(this.declarations, e);
                        }
                        return this.documentationComment;
                    }
                    getContextualDocumentationComment(e, t) {
                        if (e) {
                            if (rl(e) && (this.contextualGetAccessorDocumentationComment || (this.contextualGetAccessorDocumentationComment = tl(rr(this.declarations, rl), t)), eo(this.contextualGetAccessorDocumentationComment))) return this.contextualGetAccessorDocumentationComment;
                            if (nl(e) && (this.contextualSetAccessorDocumentationComment || (this.contextualSetAccessorDocumentationComment = tl(rr(this.declarations, nl), t)), eo(this.contextualSetAccessorDocumentationComment))) return this.contextualSetAccessorDocumentationComment;
                        }
                        return this.getDocumentationComment(t);
                    }
                    getJsDocTags(e) {
                        return this.tags === void 0 && (this.tags = Pf(this.declarations, e)), this.tags;
                    }
                    getContextualJsDocTags(e, t) {
                        if (e) {
                            if (rl(e) && (this.contextualGetAccessorTags || (this.contextualGetAccessorTags = Pf(rr(this.declarations, rl), t)), eo(this.contextualGetAccessorTags))) return this.contextualGetAccessorTags;
                            if (nl(e) && (this.contextualSetAccessorTags || (this.contextualSetAccessorTags = Pf(rr(this.declarations, nl), t)), eo(this.contextualSetAccessorTags))) return this.contextualSetAccessorTags;
                        }
                        return this.getJsDocTags(t);
                    }
                }, e6 = class extends If {
                    constructor(e, t, n){
                        super(t, n), this.kind = e;
                    }
                }, Jd = class extends If {
                    constructor(e, t, n){
                        super(t, n), this.kind = 80;
                    }
                    get text() {
                        return Lt(this);
                    }
                }, Jd.prototype.kind = 80, Rd = class extends If {
                    constructor(e, t, n){
                        super(t, n), this.kind = 81;
                    }
                    get text() {
                        return Lt(this);
                    }
                }, Rd.prototype.kind = 81, p7 = class {
                    constructor(e, t){
                        this.checker = e, this.flags = t;
                    }
                    getFlags() {
                        return this.flags;
                    }
                    getSymbol() {
                        return this.symbol;
                    }
                    getProperties() {
                        return this.checker.getPropertiesOfType(this);
                    }
                    getProperty(e) {
                        return this.checker.getPropertyOfType(this, e);
                    }
                    getApparentProperties() {
                        return this.checker.getAugmentedPropertiesOfType(this);
                    }
                    getCallSignatures() {
                        return this.checker.getSignaturesOfType(this, 0);
                    }
                    getConstructSignatures() {
                        return this.checker.getSignaturesOfType(this, 1);
                    }
                    getStringIndexType() {
                        return this.checker.getIndexTypeOfType(this, 0);
                    }
                    getNumberIndexType() {
                        return this.checker.getIndexTypeOfType(this, 1);
                    }
                    getBaseTypes() {
                        return this.isClassOrInterface() ? this.checker.getBaseTypes(this) : void 0;
                    }
                    isNullableType() {
                        return this.checker.isNullableType(this);
                    }
                    getNonNullableType() {
                        return this.checker.getNonNullableType(this);
                    }
                    getNonOptionalType() {
                        return this.checker.getNonOptionalType(this);
                    }
                    getConstraint() {
                        return this.checker.getBaseConstraintOfType(this);
                    }
                    getDefault() {
                        return this.checker.getDefaultFromTypeParameter(this);
                    }
                    isUnion() {
                        return !!(this.flags & 1048576);
                    }
                    isIntersection() {
                        return !!(this.flags & 2097152);
                    }
                    isUnionOrIntersection() {
                        return !!(this.flags & 3145728);
                    }
                    isLiteral() {
                        return !!(this.flags & 2432);
                    }
                    isStringLiteral() {
                        return !!(this.flags & 128);
                    }
                    isNumberLiteral() {
                        return !!(this.flags & 256);
                    }
                    isTypeParameter() {
                        return !!(this.flags & 262144);
                    }
                    isClassOrInterface() {
                        return !!(Ff(this) & 3);
                    }
                    isClass() {
                        return !!(Ff(this) & 1);
                    }
                    isIndexType() {
                        return !!(this.flags & 4194304);
                    }
                    get typeArguments() {
                        if (Ff(this) & 4) return this.checker.getTypeArguments(this);
                    }
                }, f7 = class {
                    constructor(e, t){
                        this.checker = e, this.flags = t;
                    }
                    getDeclaration() {
                        return this.declaration;
                    }
                    getTypeParameters() {
                        return this.typeParameters;
                    }
                    getParameters() {
                        return this.parameters;
                    }
                    getReturnType() {
                        return this.checker.getReturnTypeOfSignature(this);
                    }
                    getTypeParameterAtPosition(e) {
                        let t = this.checker.getParameterType(this, e);
                        if (t.isIndexType() && ex(t.type)) {
                            let n = t.type.getConstraint();
                            if (n) return this.checker.getIndexType(n);
                        }
                        return t;
                    }
                    getDocumentationComment() {
                        return this.documentationComment || (this.documentationComment = tl(Kf(this.declaration), this.checker));
                    }
                    getJsDocTags() {
                        return this.jsDocTags || (this.jsDocTags = Pf(Kf(this.declaration), this.checker));
                    }
                }, d7 = class extends Ld {
                    constructor(e, t, n){
                        super(e, t, n), this.kind = 312;
                    }
                    update(e, t) {
                        return Yb(this, e, t);
                    }
                    getLineAndCharacterOfPosition(e) {
                        return no(this, e);
                    }
                    getLineStarts() {
                        return Aa(this);
                    }
                    getPositionOfLineAndCharacter(e, t, n) {
                        return Ag(Aa(this), e, t, this.text, n);
                    }
                    getLineEndOfPosition(e) {
                        let { line: t } = this.getLineAndCharacterOfPosition(e), n = this.getLineStarts(), a;
                        t + 1 >= n.length && (a = this.getEnd()), a || (a = n[t + 1] - 1);
                        let _ = this.getFullText();
                        return _[a] === `
` && _[a - 1] === "\r" ? a - 1 : a;
                    }
                    getNamedDeclarations() {
                        return this.namedDeclarations || (this.namedDeclarations = this.computeNamedDeclarations()), this.namedDeclarations;
                    }
                    computeNamedDeclarations() {
                        let e = qd();
                        return this.forEachChild(_), e;
                        function t(p) {
                            let m = a(p);
                            m && e.add(m, p);
                        }
                        function n(p) {
                            let m = e.get(p);
                            return m || e.set(p, m = []), m;
                        }
                        function a(p) {
                            let m = em(p);
                            return m && (oo(m) && Ln(m.expression) ? m.expression.name.text : Vl(m) ? getNameFromPropertyName(m) : void 0);
                        }
                        function _(p) {
                            switch(p.kind){
                                case 262:
                                case 218:
                                case 174:
                                case 173:
                                    let m = p, y = a(m);
                                    if (y) {
                                        let d = n(y), S = Pi(d);
                                        S && m.parent === S.parent && m.symbol === S.symbol ? m.body && !S.body && (d[d.length - 1] = m) : d.push(m);
                                    }
                                    Wt(p, _);
                                    break;
                                case 263:
                                case 231:
                                case 264:
                                case 265:
                                case 266:
                                case 267:
                                case 271:
                                case 281:
                                case 276:
                                case 273:
                                case 274:
                                case 177:
                                case 178:
                                case 187:
                                    t(p), Wt(p, _);
                                    break;
                                case 169:
                                    if (!Cn(p, 31)) break;
                                case 260:
                                case 208:
                                    {
                                        let d = p;
                                        if (sm(d.name)) {
                                            Wt(d.name, _);
                                            break;
                                        }
                                        d.initializer && _(d.initializer);
                                    }
                                case 306:
                                case 172:
                                case 171:
                                    t(p);
                                    break;
                                case 278:
                                    let u = p;
                                    u.exportClause && (l8(u.exportClause) ? wn(u.exportClause.elements, _) : _(u.exportClause.name));
                                    break;
                                case 272:
                                    let x = p.importClause;
                                    x && (x.name && t(x.name), x.namedBindings && (x.namedBindings.kind === 274 ? t(x.namedBindings) : wn(x.namedBindings.elements, _)));
                                    break;
                                case 226:
                                    Oa(p) !== 0 && t(p);
                                default:
                                    Wt(p, _);
                            }
                        }
                    }
                }, m7 = class {
                    constructor(e, t, n){
                        this.fileName = e, this.text = t, this.skipTrivia = n;
                    }
                    getLineAndCharacterOfPosition(e) {
                        return no(this, e);
                    }
                }, h7 = class {
                    constructor(e){
                        this.host = e;
                    }
                    getCurrentSourceFile(e) {
                        var t, n, a, _, p, m, y, u;
                        let x = this.host.getScriptSnapshot(e);
                        if (!x) throw new Error("Could not find file: '" + e + "'.");
                        let d = getScriptKind(e, this.host), S = this.host.getScriptVersion(e), T;
                        if (this.currentFileName !== e) {
                            let A = {
                                languageVersion: 99,
                                impliedNodeFormat: getImpliedNodeFormatForFile(Di(e, this.host.getCurrentDirectory(), ((a = (n = (t = this.host).getCompilerHost) == null ? void 0 : n.call(t)) == null ? void 0 : a.getCanonicalFileName) || j3(this.host)), (u = (y = (m = (p = (_ = this.host).getCompilerHost) == null ? void 0 : p.call(_)) == null ? void 0 : m.getModuleResolutionCache) == null ? void 0 : y.call(m)) == null ? void 0 : u.getPackageJsonInfoCache(), this.host, this.host.getCompilationSettings()),
                                setExternalModuleIndicator: IS(this.host.getCompilationSettings()),
                                jsDocParsingMode: 0
                            };
                            T = Zb(e, x, A, S, !0, d);
                        } else if (this.currentFileVersion !== S) {
                            let A = x.getChangeRange(this.currentFileScriptSnapshot);
                            T = s7(this.currentSourceFile, x, S, A);
                        }
                        return T && (this.currentFileVersion = S, this.currentFileName = e, this.currentFileScriptSnapshot = x, this.currentSourceFile = T), this.currentSourceFile;
                    }
                }, y7 = {
                    isCancellationRequested: Qf,
                    throwIfCancellationRequested: gr
                }, g7 = class {
                    constructor(e){
                        this.cancellationToken = e;
                    }
                    isCancellationRequested() {
                        return this.cancellationToken.isCancellationRequested();
                    }
                    throwIfCancellationRequested() {
                        var e;
                        if (this.isCancellationRequested()) throw (e = ba) == null || e.instant(ba.Phase.Session, "cancellationThrown", {
                            kind: "CancellationTokenObject"
                        }), new sd;
                    }
                }, b7 = class {
                    constructor(e, t = 20){
                        this.hostCancellationToken = e, this.throttleWaitMilliseconds = t, this.lastCancellationCheckTime = 0;
                    }
                    isCancellationRequested() {
                        let e = ga();
                        return Math.abs(e - this.lastCancellationCheckTime) >= this.throttleWaitMilliseconds ? (this.lastCancellationCheckTime = e, this.hostCancellationToken.isCancellationRequested()) : !1;
                    }
                    throwIfCancellationRequested() {
                        var e;
                        if (this.isCancellationRequested()) throw (e = ba) == null || e.instant(ba.Phase.Session, "cancellationThrown", {
                            kind: "ThrottledCancellationToken"
                        }), new sd;
                    }
                }, sg = [
                    "getSemanticDiagnostics",
                    "getSuggestionDiagnostics",
                    "getCompilerOptionsDiagnostics",
                    "getSemanticClassifications",
                    "getEncodedSemanticClassifications",
                    "getCodeFixesAtPosition",
                    "getCombinedCodeFix",
                    "applyCodeActionCommand",
                    "organizeImports",
                    "getEditsForFileRename",
                    "getEmitOutput",
                    "getApplicableRefactors",
                    "getEditsForRefactor",
                    "prepareCallHierarchy",
                    "provideCallHierarchyIncomingCalls",
                    "provideCallHierarchyOutgoingCalls",
                    "provideInlayHints",
                    "getSupportedCodeFixes"
                ], v7 = [
                    ...sg,
                    "getCompletionsAtPosition",
                    "getCompletionEntryDetails",
                    "getCompletionEntrySymbol",
                    "getSignatureHelpItems",
                    "getQuickInfoAtPosition",
                    "getDefinitionAtPosition",
                    "getDefinitionAndBoundSpan",
                    "getImplementationAtPosition",
                    "getTypeDefinitionAtPosition",
                    "getReferencesAtPosition",
                    "findReferences",
                    "getDocumentHighlights",
                    "getNavigateToItems",
                    "getRenameInfo",
                    "findRenameLocations",
                    "getApplicableRefactors"
                ], ES(yF());
            }
        }), kF = ()=>{}, DF = ()=>{}, PF = ()=>{}, IF = ()=>{}, NF = ()=>{}, OF = ()=>{}, MF = ()=>{}, LF = ()=>{}, JF = ()=>{}, RF = ()=>{}, jF = ()=>{}, FF = ()=>{}, BF = ()=>{}, UF = ()=>{}, qF = ()=>{}, zF = ()=>{}, WF = ()=>{}, VF = ()=>{}, T7 = It({
            "src/services/_namespaces/ts.ts" () {
                "use strict";
                En(), Kb(), iF(), Q8(), aF(), Y8(), oF(), sF(), _F(), cF(), lF(), uF(), pF(), fF(), AF(), kF(), DF(), PF(), IF(), NF(), OF(), MF(), LF(), JF(), RF(), K8(), Z8(), jF(), FF(), e7(), BF(), UF(), qF(), zF(), WF(), VF();
            }
        }), HF = It({
            "src/typingsInstallerCore/_namespaces/ts.ts" () {
                "use strict";
                En(), Kb(), C7();
            }
        });
        function _v(e, t, n, a) {
            try {
                let _ = resolveModuleName(t, Qt(e, "index.d.ts"), {
                    moduleResolution: 2
                }, n);
                return _.resolvedModule && _.resolvedModule.resolvedFileName;
            } catch (_) {
                a.isEnabled() && a.writeLine(`Failed to resolve ${t} in folder '${e}': ${_.message}`);
                return;
            }
        }
        function GF(e, t, n, a) {
            let _ = !1;
            for(let p = n.length; p > 0;){
                let m = S7(e, t, n, p);
                p = m.remaining, _ = a(m.command) || _;
            }
            return _;
        }
        function S7(e, t, n, a) {
            let _ = n.length - a, p, m = a;
            for(; p = `${e} install --ignore-scripts ${(m === n.length ? n : n.slice(_, _ + m)).join(" ")} --save-dev --user-agent="typesInstaller/${t}"`, !(p.length < 8e3);)m = m - Math.floor(m / 2);
            return {
                command: p,
                remaining: a - m
            };
        }
        function x7(e) {
            return `@types/${e}@ts${jd}`;
        }
        var cv, w7, XF = It({
            "src/typingsInstallerCore/typingsInstaller.ts" () {
                "use strict";
                HF(), C7(), cv = {
                    isEnabled: ()=>!1,
                    writeLine: gr
                }, w7 = class {
                    constructor(e, t, n, a, _, p = cv){
                        this.installTypingHost = e, this.globalCachePath = t, this.safeListPath = n, this.typesMapLocation = a, this.throttleLimit = _, this.log = p, this.packageNameToTypingLocation = new Map, this.missingTypingsSet = new Set, this.knownCachesSet = new Set, this.projectWatchers = new Map, this.pendingRunRequests = [], this.installRunCount = 1, this.inFlightRequestCount = 0, this.latestDistTag = "latest", this.log.isEnabled() && this.log.writeLine(`Global cache location '${t}', safe file path '${n}', types map path ${a}`), this.processCacheLocation(this.globalCachePath);
                    }
                    closeProject(e) {
                        this.closeWatchers(e.projectName);
                    }
                    closeWatchers(e) {
                        if (this.log.isEnabled() && this.log.writeLine(`Closing file watchers for project '${e}'`), !this.projectWatchers.get(e)) {
                            this.log.isEnabled() && this.log.writeLine(`No watchers are registered for project '${e}'`);
                            return;
                        }
                        this.projectWatchers.delete(e), this.sendResponse({
                            kind: ActionWatchTypingLocations,
                            projectName: e,
                            files: []
                        }), this.log.isEnabled() && this.log.writeLine(`Closing file watchers for project '${e}' - done.`);
                    }
                    install(e) {
                        this.log.isEnabled() && this.log.writeLine(`Got install request${stringifyIndented(e)}`), e.cachePath && (this.log.isEnabled() && this.log.writeLine(`Request specifies cache path '${e.cachePath}', loading cached information...`), this.processCacheLocation(e.cachePath)), this.safeList === void 0 && this.initializeSafeList();
                        let t = ts_JsTyping_exports.discoverTypings(this.installTypingHost, this.log.isEnabled() ? (n)=>this.log.writeLine(n) : void 0, e.fileNames, e.projectRootPath, this.safeList, this.packageNameToTypingLocation, e.typeAcquisition, e.unresolvedImports, this.typesRegistry, e.compilerOptions);
                        this.watchFiles(e.projectName, t.filesToWatch), t.newTypingNames.length ? this.installTypings(e, e.cachePath || this.globalCachePath, t.cachedTypingPaths, t.newTypingNames) : (this.sendResponse(this.createSetTypings(e, t.cachedTypingPaths)), this.log.isEnabled() && this.log.writeLine("No new typings were requested as a result of typings discovery"));
                    }
                    initializeSafeList() {
                        if (this.typesMapLocation) {
                            let e = ts_JsTyping_exports.loadTypesMap(this.installTypingHost, this.typesMapLocation);
                            if (e) {
                                this.log.writeLine(`Loaded safelist from types map file '${this.typesMapLocation}'`), this.safeList = e;
                                return;
                            }
                            this.log.writeLine(`Failed to load safelist from types map file '${this.typesMapLocation}'`);
                        }
                        this.safeList = ts_JsTyping_exports.loadSafeList(this.installTypingHost, this.safeListPath);
                    }
                    processCacheLocation(e) {
                        if (this.log.isEnabled() && this.log.writeLine(`Processing cache location '${e}'`), this.knownCachesSet.has(e)) {
                            this.log.isEnabled() && this.log.writeLine("Cache location was already processed...");
                            return;
                        }
                        let t = Qt(e, "package.json"), n = Qt(e, "package-lock.json");
                        if (this.log.isEnabled() && this.log.writeLine(`Trying to find '${t}'...`), this.installTypingHost.fileExists(t) && this.installTypingHost.fileExists(n)) {
                            let a = JSON.parse(this.installTypingHost.readFile(t)), _ = JSON.parse(this.installTypingHost.readFile(n));
                            if (this.log.isEnabled() && (this.log.writeLine(`Loaded content of '${t}':${stringifyIndented(a)}`), this.log.writeLine(`Loaded content of '${n}':${stringifyIndented(_)}`)), a.devDependencies && _.dependencies) for(let p in a.devDependencies){
                                if (!Wn(_.dependencies, p)) continue;
                                let m = os(p);
                                if (!m) continue;
                                let y = _v(e, m, this.installTypingHost, this.log);
                                if (!y) {
                                    this.missingTypingsSet.add(m);
                                    continue;
                                }
                                let u = this.packageNameToTypingLocation.get(m);
                                if (u) {
                                    if (u.typingLocation === y) continue;
                                    this.log.isEnabled() && this.log.writeLine(`New typing for package ${m} from '${y}' conflicts with existing typing file '${u}'`);
                                }
                                this.log.isEnabled() && this.log.writeLine(`Adding entry into typings cache: '${m}' => '${y}'`);
                                let x = Sv(_.dependencies, p), d = x && x.version;
                                if (!d) continue;
                                let S = {
                                    typingLocation: y,
                                    version: new Version(d)
                                };
                                this.packageNameToTypingLocation.set(m, S);
                            }
                        }
                        this.log.isEnabled() && this.log.writeLine(`Finished processing cache location '${e}'`), this.knownCachesSet.add(e);
                    }
                    filterTypings(e) {
                        return wa(e, (t)=>{
                            let n = mangleScopedPackageName(t);
                            if (this.missingTypingsSet.has(n)) {
                                this.log.isEnabled() && this.log.writeLine(`'${t}':: '${n}' is in missingTypingsSet - skipping...`);
                                return;
                            }
                            let a = ts_JsTyping_exports.validatePackageName(t);
                            if (a !== ts_JsTyping_exports.NameValidationResult.Ok) {
                                this.missingTypingsSet.add(n), this.log.isEnabled() && this.log.writeLine(ts_JsTyping_exports.renderPackageNameValidationFailure(a, t));
                                return;
                            }
                            if (!this.typesRegistry.has(n)) {
                                this.log.isEnabled() && this.log.writeLine(`'${t}':: Entry for package '${n}' does not exist in local types registry - skipping...`);
                                return;
                            }
                            if (this.packageNameToTypingLocation.get(n) && ts_JsTyping_exports.isTypingUpToDate(this.packageNameToTypingLocation.get(n), this.typesRegistry.get(n))) {
                                this.log.isEnabled() && this.log.writeLine(`'${t}':: '${n}' already has an up-to-date typing - skipping...`);
                                return;
                            }
                            return n;
                        });
                    }
                    ensurePackageDirectoryExists(e) {
                        let t = Qt(e, "package.json");
                        this.log.isEnabled() && this.log.writeLine(`Npm config file: ${t}`), this.installTypingHost.fileExists(t) || (this.log.isEnabled() && this.log.writeLine(`Npm config file: '${t}' is missing, creating new one...`), this.ensureDirectoryExists(e, this.installTypingHost), this.installTypingHost.writeFile(t, '{ "private": true }'));
                    }
                    installTypings(e, t, n, a) {
                        this.log.isEnabled() && this.log.writeLine(`Installing typings ${JSON.stringify(a)}`);
                        let _ = this.filterTypings(a);
                        if (_.length === 0) {
                            this.log.isEnabled() && this.log.writeLine("All typings are known to be missing or invalid - no need to install more typings"), this.sendResponse(this.createSetTypings(e, n));
                            return;
                        }
                        this.ensurePackageDirectoryExists(t);
                        let p = this.installRunCount;
                        this.installRunCount++, this.sendResponse({
                            kind: EventBeginInstallTypes,
                            eventId: p,
                            typingsInstallerVersion: Xf,
                            projectName: e.projectName
                        });
                        let m = _.map(x7);
                        this.installTypingsAsync(p, m, t, (y)=>{
                            try {
                                if (!y) {
                                    this.log.isEnabled() && this.log.writeLine(`install request failed, marking packages as missing to prevent repeated requests: ${JSON.stringify(_)}`);
                                    for (let x of _)this.missingTypingsSet.add(x);
                                    return;
                                }
                                this.log.isEnabled() && this.log.writeLine(`Installed typings ${JSON.stringify(m)}`);
                                let u = [];
                                for (let x of _){
                                    let d = _v(t, x, this.installTypingHost, this.log);
                                    if (!d) {
                                        this.missingTypingsSet.add(x);
                                        continue;
                                    }
                                    let S = this.typesRegistry.get(x), T = new Version(S[`ts${jd}`] || S[this.latestDistTag]), A = {
                                        typingLocation: d,
                                        version: T
                                    };
                                    this.packageNameToTypingLocation.set(x, A), u.push(d);
                                }
                                this.log.isEnabled() && this.log.writeLine(`Installed typing files ${JSON.stringify(u)}`), this.sendResponse(this.createSetTypings(e, n.concat(u)));
                            } finally{
                                let u = {
                                    kind: EventEndInstallTypes,
                                    eventId: p,
                                    projectName: e.projectName,
                                    packagesToInstall: m,
                                    installSuccess: y,
                                    typingsInstallerVersion: Xf
                                };
                                this.sendResponse(u);
                            }
                        });
                    }
                    ensureDirectoryExists(e, t) {
                        let n = Mi(e);
                        t.directoryExists(n) || this.ensureDirectoryExists(n, t), t.directoryExists(e) || t.createDirectory(e);
                    }
                    watchFiles(e, t) {
                        if (!t.length) {
                            this.closeWatchers(e);
                            return;
                        }
                        let n = this.projectWatchers.get(e), a = new Set(t);
                        !n || C0(a, (_)=>!n.has(_)) || C0(n, (_)=>!a.has(_)) ? (this.projectWatchers.set(e, a), this.sendResponse({
                            kind: ActionWatchTypingLocations,
                            projectName: e,
                            files: t
                        })) : this.sendResponse({
                            kind: ActionWatchTypingLocations,
                            projectName: e,
                            files: void 0
                        });
                    }
                    createSetTypings(e, t) {
                        return {
                            projectName: e.projectName,
                            typeAcquisition: e.typeAcquisition,
                            compilerOptions: e.compilerOptions,
                            typings: t,
                            unresolvedImports: e.unresolvedImports,
                            kind: ActionSet
                        };
                    }
                    installTypingsAsync(e, t, n, a) {
                        this.pendingRunRequests.unshift({
                            requestId: e,
                            packageNames: t,
                            cwd: n,
                            onRequestCompleted: a
                        }), this.executeWithThrottling();
                    }
                    executeWithThrottling() {
                        for(; this.inFlightRequestCount < this.throttleLimit && this.pendingRunRequests.length;){
                            this.inFlightRequestCount++;
                            let e = this.pendingRunRequests.pop();
                            this.installWorker(e.requestId, e.packageNames, e.cwd, (t)=>{
                                this.inFlightRequestCount--, e.onRequestCompleted(t), this.executeWithThrottling();
                            });
                        }
                    }
                };
            }
        }), E7 = {};
        _g(E7, {
            TypingsInstaller: ()=>w7,
            getNpmCommandForInstallation: ()=>S7,
            installNpmPackages: ()=>GF,
            typingsName: ()=>x7
        });
        var $F = It({
            "src/typingsInstallerCore/_namespaces/ts.server.typingsInstaller.ts" () {
                "use strict";
                XF();
            }
        }), C7 = It({
            "src/typingsInstallerCore/_namespaces/ts.server.ts" () {
                "use strict";
                $8(), $F();
            }
        }), QF = ()=>{}, YF = ()=>{}, A7 = {};
        _g(A7, {
            ActionInvalidate: ()=>ActionInvalidate,
            ActionPackageInstalled: ()=>ActionPackageInstalled,
            ActionSet: ()=>ActionSet,
            ActionWatchTypingLocations: ()=>ActionWatchTypingLocations,
            Arguments: ()=>Arguments,
            AutoImportProviderProject: ()=>AutoImportProviderProject,
            AuxiliaryProject: ()=>AuxiliaryProject,
            CharRangeSection: ()=>CharRangeSection,
            CloseFileWatcherEvent: ()=>CloseFileWatcherEvent,
            CommandNames: ()=>CommandNames,
            ConfigFileDiagEvent: ()=>ConfigFileDiagEvent,
            ConfiguredProject: ()=>ConfiguredProject2,
            CreateDirectoryWatcherEvent: ()=>CreateDirectoryWatcherEvent,
            CreateFileWatcherEvent: ()=>CreateFileWatcherEvent,
            Errors: ()=>Errors,
            EventBeginInstallTypes: ()=>EventBeginInstallTypes,
            EventEndInstallTypes: ()=>EventEndInstallTypes,
            EventInitializationFailed: ()=>EventInitializationFailed,
            EventTypesRegistry: ()=>EventTypesRegistry,
            ExternalProject: ()=>ExternalProject2,
            GcTimer: ()=>GcTimer,
            InferredProject: ()=>InferredProject2,
            LargeFileReferencedEvent: ()=>LargeFileReferencedEvent,
            LineIndex: ()=>LineIndex,
            LineLeaf: ()=>LineLeaf,
            LineNode: ()=>LineNode,
            LogLevel: ()=>LogLevel2,
            Msg: ()=>Msg,
            OpenFileInfoTelemetryEvent: ()=>OpenFileInfoTelemetryEvent,
            Project: ()=>Project3,
            ProjectInfoTelemetryEvent: ()=>ProjectInfoTelemetryEvent,
            ProjectKind: ()=>ProjectKind,
            ProjectLanguageServiceStateEvent: ()=>ProjectLanguageServiceStateEvent,
            ProjectLoadingFinishEvent: ()=>ProjectLoadingFinishEvent,
            ProjectLoadingStartEvent: ()=>ProjectLoadingStartEvent,
            ProjectReferenceProjectLoadKind: ()=>ProjectReferenceProjectLoadKind,
            ProjectService: ()=>ProjectService3,
            ProjectsUpdatedInBackgroundEvent: ()=>ProjectsUpdatedInBackgroundEvent,
            ScriptInfo: ()=>ScriptInfo,
            ScriptVersionCache: ()=>ScriptVersionCache,
            Session: ()=>Session3,
            TextStorage: ()=>TextStorage,
            ThrottledOperations: ()=>ThrottledOperations,
            TypingsCache: ()=>TypingsCache,
            allFilesAreJsOrDts: ()=>allFilesAreJsOrDts,
            allRootFilesAreJsOrDts: ()=>allRootFilesAreJsOrDts,
            asNormalizedPath: ()=>asNormalizedPath,
            convertCompilerOptions: ()=>convertCompilerOptions,
            convertFormatOptions: ()=>convertFormatOptions,
            convertScriptKindName: ()=>convertScriptKindName,
            convertTypeAcquisition: ()=>convertTypeAcquisition,
            convertUserPreferences: ()=>convertUserPreferences,
            convertWatchOptions: ()=>convertWatchOptions,
            countEachFileTypes: ()=>countEachFileTypes,
            createInstallTypingsRequest: ()=>createInstallTypingsRequest,
            createModuleSpecifierCache: ()=>createModuleSpecifierCache,
            createNormalizedPathMap: ()=>createNormalizedPathMap,
            createPackageJsonCache: ()=>createPackageJsonCache,
            createSortedArray: ()=>createSortedArray2,
            emptyArray: ()=>emptyArray2,
            findArgument: ()=>findArgument,
            forEachResolvedProjectReferenceProject: ()=>forEachResolvedProjectReferenceProject,
            formatDiagnosticToProtocol: ()=>formatDiagnosticToProtocol,
            formatMessage: ()=>formatMessage2,
            getBaseConfigFileName: ()=>getBaseConfigFileName,
            getLocationInNewDocument: ()=>getLocationInNewDocument,
            hasArgument: ()=>hasArgument,
            hasNoTypeScriptSource: ()=>hasNoTypeScriptSource,
            indent: ()=>indent2,
            isBackgroundProject: ()=>isBackgroundProject,
            isConfigFile: ()=>isConfigFile,
            isConfiguredProject: ()=>isConfiguredProject,
            isDynamicFileName: ()=>isDynamicFileName,
            isExternalProject: ()=>isExternalProject,
            isInferredProject: ()=>isInferredProject,
            isInferredProjectName: ()=>isInferredProjectName,
            makeAutoImportProviderProjectName: ()=>makeAutoImportProviderProjectName,
            makeAuxiliaryProjectName: ()=>makeAuxiliaryProjectName,
            makeInferredProjectName: ()=>makeInferredProjectName,
            maxFileSize: ()=>maxFileSize,
            maxProgramSizeForNonTsFiles: ()=>maxProgramSizeForNonTsFiles,
            normalizedPathToPath: ()=>normalizedPathToPath,
            nowString: ()=>nowString,
            nullCancellationToken: ()=>nullCancellationToken,
            nullTypingsInstaller: ()=>nullTypingsInstaller,
            projectContainsInfoDirectly: ()=>projectContainsInfoDirectly,
            protocol: ()=>ts_server_protocol_exports,
            removeSorted: ()=>removeSorted,
            stringifyIndented: ()=>stringifyIndented,
            toEvent: ()=>toEvent,
            toNormalizedPath: ()=>toNormalizedPath,
            tryConvertScriptKindName: ()=>tryConvertScriptKindName,
            typingsInstaller: ()=>E7,
            updateProjectIfDirty: ()=>updateProjectIfDirty
        });
        var KF = It({
            "src/typescript/_namespaces/ts.server.ts" () {
                "use strict";
                $8(), QF();
            }
        }), k7 = {};
        _g(k7, {
            ANONYMOUS: ()=>ANONYMOUS,
            AccessFlags: ()=>jy,
            AssertionLevel: ()=>_y,
            AssignmentDeclarationKind: ()=>Gy,
            AssignmentKind: ()=>V0,
            Associativity: ()=>G0,
            BreakpointResolver: ()=>ts_BreakpointResolver_exports,
            BuilderFileEmit: ()=>BuilderFileEmit,
            BuilderProgramKind: ()=>BuilderProgramKind,
            BuilderState: ()=>BuilderState,
            BundleFileSectionKind: ()=>f0,
            CallHierarchy: ()=>ts_CallHierarchy_exports,
            CharacterCodes: ()=>o0,
            CheckFlags: ()=>Oy,
            CheckMode: ()=>CheckMode,
            ClassificationType: ()=>ClassificationType,
            ClassificationTypeNames: ()=>ClassificationTypeNames,
            CommentDirectiveType: ()=>hy,
            Comparison: ()=>ry,
            CompletionInfoFlags: ()=>CompletionInfoFlags,
            CompletionTriggerKind: ()=>CompletionTriggerKind,
            Completions: ()=>ts_Completions_exports,
            ContainerFlags: ()=>ContainerFlags,
            ContextFlags: ()=>wy,
            Debug: ()=>I,
            DiagnosticCategory: ()=>pd,
            Diagnostics: ()=>B,
            DocumentHighlights: ()=>DocumentHighlights,
            ElementFlags: ()=>Ry,
            EmitFlags: ()=>hd,
            EmitHint: ()=>l0,
            EmitOnly: ()=>by,
            EndOfLineState: ()=>EndOfLineState,
            EnumKind: ()=>Ny,
            ExitStatus: ()=>Ty,
            ExportKind: ()=>ExportKind,
            Extension: ()=>s0,
            ExternalEmitHelpers: ()=>c0,
            FileIncludeKind: ()=>yy,
            FilePreprocessingDiagnosticsKind: ()=>gy,
            FileSystemEntryKind: ()=>FileSystemEntryKind,
            FileWatcherEventKind: ()=>FileWatcherEventKind,
            FindAllReferences: ()=>ts_FindAllReferences_exports,
            FlattenLevel: ()=>FlattenLevel,
            FlowFlags: ()=>Tl,
            ForegroundColorEscapeSequences: ()=>ForegroundColorEscapeSequences,
            FunctionFlags: ()=>H0,
            GeneratedIdentifierFlags: ()=>dy,
            GetLiteralTextFlags: ()=>W0,
            GoToDefinition: ()=>ts_GoToDefinition_exports,
            HighlightSpanKind: ()=>HighlightSpanKind,
            IdentifierNameMap: ()=>IdentifierNameMap,
            IdentifierNameMultiMap: ()=>IdentifierNameMultiMap,
            ImportKind: ()=>ImportKind,
            ImportsNotUsedAsValues: ()=>t0,
            IndentStyle: ()=>IndentStyle,
            IndexFlags: ()=>Fy,
            IndexKind: ()=>qy,
            InferenceFlags: ()=>Vy,
            InferencePriority: ()=>Wy,
            InlayHintKind: ()=>InlayHintKind,
            InlayHints: ()=>ts_InlayHints_exports,
            InternalEmitFlags: ()=>_0,
            InternalSymbolName: ()=>My,
            InvalidatedProjectKind: ()=>InvalidatedProjectKind,
            JSDocParsingMode: ()=>h0,
            JsDoc: ()=>ts_JsDoc_exports,
            JsTyping: ()=>ts_JsTyping_exports,
            JsxEmit: ()=>e0,
            JsxFlags: ()=>fy,
            JsxReferenceKind: ()=>By,
            LanguageServiceMode: ()=>LanguageServiceMode,
            LanguageVariant: ()=>i0,
            LexicalEnvironmentFlags: ()=>p0,
            ListFormat: ()=>d0,
            LogLevel: ()=>ly,
            MemberOverrideStatus: ()=>Sy,
            ModifierFlags: ()=>ad,
            ModuleDetectionKind: ()=>$y,
            ModuleInstanceState: ()=>ModuleInstanceState,
            ModuleKind: ()=>Zy,
            ModuleResolutionKind: ()=>Xy,
            ModuleSpecifierEnding: ()=>K0,
            NavigateTo: ()=>ts_NavigateTo_exports,
            NavigationBar: ()=>ts_NavigationBar_exports,
            NewLineKind: ()=>n0,
            NodeBuilderFlags: ()=>Ey,
            NodeCheckFlags: ()=>Ly,
            NodeFactoryFlags: ()=>Z0,
            NodeFlags: ()=>id,
            NodeResolutionFeatures: ()=>NodeResolutionFeatures,
            ObjectFlags: ()=>ld,
            OperationCanceledException: ()=>sd,
            OperatorPrecedence: ()=>X0,
            OrganizeImports: ()=>ts_OrganizeImports_exports,
            OrganizeImportsMode: ()=>OrganizeImportsMode,
            OuterExpressionKinds: ()=>u0,
            OutliningElementsCollector: ()=>ts_OutliningElementsCollector_exports,
            OutliningSpanKind: ()=>OutliningSpanKind,
            OutputFileType: ()=>OutputFileType,
            PackageJsonAutoImportPreference: ()=>PackageJsonAutoImportPreference,
            PackageJsonDependencyGroup: ()=>PackageJsonDependencyGroup,
            PatternMatchKind: ()=>PatternMatchKind,
            PollingInterval: ()=>PollingInterval,
            PollingWatchKind: ()=>Ky,
            PragmaKindFlags: ()=>m0,
            PrivateIdentifierKind: ()=>PrivateIdentifierKind,
            ProcessLevel: ()=>ProcessLevel,
            ProgramUpdateLevel: ()=>ProgramUpdateLevel,
            QuotePreference: ()=>QuotePreference,
            RelationComparisonResult: ()=>od,
            Rename: ()=>ts_Rename_exports,
            ScriptElementKind: ()=>ScriptElementKind,
            ScriptElementKindModifier: ()=>ScriptElementKindModifier,
            ScriptKind: ()=>fd,
            ScriptSnapshot: ()=>ScriptSnapshot,
            ScriptTarget: ()=>r0,
            SemanticClassificationFormat: ()=>SemanticClassificationFormat,
            SemanticMeaning: ()=>SemanticMeaning,
            SemicolonPreference: ()=>SemicolonPreference,
            SignatureCheckMode: ()=>SignatureCheckMode,
            SignatureFlags: ()=>ud,
            SignatureHelp: ()=>ts_SignatureHelp_exports,
            SignatureKind: ()=>Uy,
            SmartSelectionRange: ()=>ts_SmartSelectionRange_exports,
            SnippetKind: ()=>md,
            SortKind: ()=>oy,
            StructureIsReused: ()=>vy,
            SymbolAccessibility: ()=>ky,
            SymbolDisplay: ()=>ts_SymbolDisplay_exports,
            SymbolDisplayPartKind: ()=>SymbolDisplayPartKind,
            SymbolFlags: ()=>_d,
            SymbolFormatFlags: ()=>Ay,
            SyntaxKind: ()=>rd,
            SyntheticSymbolKind: ()=>Dy,
            Ternary: ()=>Hy,
            ThrottledCancellationToken: ()=>b7,
            TokenClass: ()=>TokenClass,
            TokenFlags: ()=>my,
            TransformFlags: ()=>dd,
            TypeFacts: ()=>TypeFacts,
            TypeFlags: ()=>cd,
            TypeFormatFlags: ()=>Cy,
            TypeMapKind: ()=>zy,
            TypePredicateKind: ()=>Py,
            TypeReferenceSerializationKind: ()=>Iy,
            UnionReduction: ()=>xy,
            UpToDateStatusType: ()=>UpToDateStatusType,
            VarianceFlags: ()=>Jy,
            Version: ()=>Version,
            VersionRange: ()=>VersionRange,
            WatchDirectoryFlags: ()=>a0,
            WatchDirectoryKind: ()=>Yy,
            WatchFileKind: ()=>Qy,
            WatchLogLevel: ()=>WatchLogLevel,
            WatchType: ()=>WatchType,
            accessPrivateIdentifier: ()=>accessPrivateIdentifier,
            addDisposableResourceHelper: ()=>addDisposableResourceHelper,
            addEmitFlags: ()=>addEmitFlags,
            addEmitHelper: ()=>addEmitHelper,
            addEmitHelpers: ()=>addEmitHelpers,
            addInternalEmitFlags: ()=>addInternalEmitFlags,
            addNodeFactoryPatcher: ()=>VM,
            addObjectAllocatorPatcher: ()=>_O,
            addRange: ()=>zn,
            addRelatedInfo: ()=>ol,
            addSyntheticLeadingComment: ()=>addSyntheticLeadingComment,
            addSyntheticTrailingComment: ()=>addSyntheticTrailingComment,
            addToSeen: ()=>$N,
            advancedAsyncSuperHelper: ()=>advancedAsyncSuperHelper,
            affectsDeclarationPathOptionDeclarations: ()=>affectsDeclarationPathOptionDeclarations,
            affectsEmitOptionDeclarations: ()=>affectsEmitOptionDeclarations,
            allKeysStartWithDot: ()=>allKeysStartWithDot,
            altDirectorySeparator: ()=>Cg,
            and: ()=>SE,
            append: ()=>Et,
            appendIfUnique: ()=>gv,
            arrayFrom: ()=>Ud,
            arrayIsEqualTo: ()=>k9,
            arrayIsHomogeneous: ()=>mM,
            arrayIsSorted: ()=>C9,
            arrayOf: ()=>U9,
            arrayReverseIterator: ()=>N9,
            arrayToMap: ()=>z9,
            arrayToMultiMap: ()=>wv,
            arrayToNumericMap: ()=>W9,
            arraysEqual: ()=>pv,
            assertType: ()=>wE,
            assign: ()=>q9,
            assignHelper: ()=>assignHelper,
            asyncDelegator: ()=>asyncDelegator,
            asyncGeneratorHelper: ()=>asyncGeneratorHelper,
            asyncSuperHelper: ()=>asyncSuperHelper,
            asyncValues: ()=>asyncValues,
            attachFileToDiagnostics: ()=>Ya,
            awaitHelper: ()=>awaitHelper,
            awaiterHelper: ()=>awaiterHelper,
            base64decode: ()=>yN,
            base64encode: ()=>hN,
            binarySearch: ()=>Jl,
            binarySearchKey: ()=>Tv,
            bindSourceFile: ()=>bindSourceFile,
            breakIntoCharacterSpans: ()=>breakIntoCharacterSpans,
            breakIntoWordSpans: ()=>breakIntoWordSpans,
            buildLinkParts: ()=>buildLinkParts,
            buildOpts: ()=>buildOpts,
            buildOverload: ()=>buildOverload,
            bundlerModuleNameResolver: ()=>bundlerModuleNameResolver,
            canBeConvertedToAsync: ()=>canBeConvertedToAsync,
            canHaveDecorators: ()=>j8,
            canHaveExportModifier: ()=>kM,
            canHaveFlowNode: ()=>OP,
            canHaveIllegalDecorators: ()=>lR,
            canHaveIllegalModifiers: ()=>uR,
            canHaveIllegalType: ()=>cR,
            canHaveIllegalTypeParameters: ()=>L8,
            canHaveJSDoc: ()=>ym,
            canHaveLocals: ()=>BA,
            canHaveModifiers: ()=>U_,
            canHaveSymbol: ()=>FA,
            canJsonReportNoInputFiles: ()=>canJsonReportNoInputFiles,
            canProduceDiagnostics: ()=>canProduceDiagnostics,
            canUsePropertyAccess: ()=>DM,
            canWatchAffectingLocation: ()=>canWatchAffectingLocation,
            canWatchAtTypes: ()=>canWatchAtTypes,
            canWatchDirectoryOrFile: ()=>canWatchDirectoryOrFile,
            cartesianProduct: ()=>CE,
            cast: ()=>wi,
            chainBundle: ()=>chainBundle,
            chainDiagnosticMessages: ()=>il,
            changeAnyExtension: ()=>Wv,
            changeCompilerHostLikeToUseCache: ()=>changeCompilerHostLikeToUseCache,
            changeExtension: ()=>KO,
            changesAffectModuleResolution: ()=>ok,
            changesAffectingProgramStructure: ()=>sk,
            childIsDecorated: ()=>d2,
            classElementOrClassElementParameterIsDecorated: ()=>nP,
            classHasClassThisAssignment: ()=>classHasClassThisAssignment,
            classHasDeclaredOrExplicitlyAssignedName: ()=>classHasDeclaredOrExplicitlyAssignedName,
            classHasExplicitlyAssignedName: ()=>classHasExplicitlyAssignedName,
            classOrConstructorParameterIsDecorated: ()=>tP,
            classPrivateFieldGetHelper: ()=>classPrivateFieldGetHelper,
            classPrivateFieldInHelper: ()=>classPrivateFieldInHelper,
            classPrivateFieldSetHelper: ()=>classPrivateFieldSetHelper,
            classicNameResolver: ()=>classicNameResolver,
            classifier: ()=>ts_classifier_exports,
            cleanExtendedConfigCache: ()=>cleanExtendedConfigCache,
            clear: ()=>_9,
            clearMap: ()=>zN,
            clearSharedExtendedConfigFileWatcher: ()=>clearSharedExtendedConfigFileWatcher,
            climbPastPropertyAccess: ()=>climbPastPropertyAccess,
            climbPastPropertyOrElementAccess: ()=>climbPastPropertyOrElementAccess,
            clone: ()=>G9,
            cloneCompilerOptions: ()=>cloneCompilerOptions,
            closeFileWatcher: ()=>JN,
            closeFileWatcherOf: ()=>closeFileWatcherOf,
            codefix: ()=>ts_codefix_exports,
            collapseTextChangeRangesAcrossMultipleVersions: ()=>vC,
            collectExternalModuleInfo: ()=>collectExternalModuleInfo,
            combine: ()=>I9,
            combinePaths: ()=>Qt,
            commentPragmas: ()=>Vd,
            commonOptionsWithBuild: ()=>commonOptionsWithBuild,
            commonPackageFolders: ()=>Q0,
            compact: ()=>D9,
            compareBooleans: ()=>pE,
            compareDataObjects: ()=>vS,
            compareDiagnostics: ()=>H2,
            compareDiagnosticsSkipRelatedInformation: ()=>Cd,
            compareEmitHelpers: ()=>compareEmitHelpers,
            compareNumberOfDirectorySeparators: ()=>YO,
            comparePaths: ()=>Vv,
            comparePathsCaseInsensitive: ()=>$E,
            comparePathsCaseSensitive: ()=>XE,
            comparePatternKeys: ()=>comparePatternKeys,
            compareProperties: ()=>uE,
            compareStringsCaseInsensitive: ()=>zd,
            compareStringsCaseInsensitiveEslintCompatible: ()=>_E,
            compareStringsCaseSensitive: ()=>Ii,
            compareStringsCaseSensitiveUI: ()=>lE,
            compareTextSpans: ()=>oE,
            compareValues: ()=>Mn,
            compileOnSaveCommandLineOption: ()=>compileOnSaveCommandLineOption,
            compilerOptionsAffectDeclarationPath: ()=>NO,
            compilerOptionsAffectEmit: ()=>IO,
            compilerOptionsAffectSemanticDiagnostics: ()=>PO,
            compilerOptionsDidYouMeanDiagnostics: ()=>compilerOptionsDidYouMeanDiagnostics,
            compilerOptionsIndicateEsModules: ()=>compilerOptionsIndicateEsModules,
            compose: ()=>aE,
            computeCommonSourceDirectoryOfFilenames: ()=>computeCommonSourceDirectoryOfFilenames,
            computeLineAndCharacterOfPosition: ()=>kg,
            computeLineOfPosition: ()=>__,
            computeLineStarts: ()=>Xd,
            computePositionOfLineAndCharacter: ()=>Ag,
            computeSignature: ()=>computeSignature,
            computeSignatureWithDiagnostics: ()=>computeSignatureWithDiagnostics,
            computeSuggestionDiagnostics: ()=>computeSuggestionDiagnostics,
            concatenate: ()=>h_,
            concatenateDiagnosticMessageChains: ()=>pO,
            consumesNodeCoreModules: ()=>consumesNodeCoreModules,
            contains: ()=>rs,
            containsIgnoredPath: ()=>QS,
            containsObjectRestOrSpread: ()=>Qb,
            containsParseError: ()=>El,
            containsPath: ()=>Hv,
            convertCompilerOptionsForTelemetry: ()=>convertCompilerOptionsForTelemetry,
            convertCompilerOptionsFromJson: ()=>convertCompilerOptionsFromJson,
            convertJsonOption: ()=>convertJsonOption,
            convertToBase64: ()=>pS,
            convertToJson: ()=>convertToJson,
            convertToObject: ()=>convertToObject,
            convertToOptionsWithAbsolutePaths: ()=>convertToOptionsWithAbsolutePaths,
            convertToRelativePath: ()=>YE,
            convertToTSConfig: ()=>convertToTSConfig,
            convertTypeAcquisitionFromJson: ()=>convertTypeAcquisitionFromJson,
            copyComments: ()=>copyComments,
            copyEntries: ()=>lk,
            copyLeadingComments: ()=>copyLeadingComments,
            copyProperties: ()=>$9,
            copyTrailingAsLeadingComments: ()=>copyTrailingAsLeadingComments,
            copyTrailingComments: ()=>copyTrailingComments,
            couldStartTrivia: ()=>oC,
            countWhere: ()=>o9,
            createAbstractBuilder: ()=>createAbstractBuilder,
            createAccessorPropertyBackingField: ()=>qR,
            createAccessorPropertyGetRedirector: ()=>zR,
            createAccessorPropertySetRedirector: ()=>WR,
            createBaseNodeFactory: ()=>Ix,
            createBinaryExpressionTrampoline: ()=>LR,
            createBindingHelper: ()=>createBindingHelper,
            createBuildInfo: ()=>createBuildInfo,
            createBuilderProgram: ()=>createBuilderProgram,
            createBuilderProgramUsingProgramBuildInfo: ()=>createBuilderProgramUsingProgramBuildInfo,
            createBuilderStatusReporter: ()=>createBuilderStatusReporter,
            createCacheWithRedirects: ()=>createCacheWithRedirects,
            createCacheableExportInfoMap: ()=>createCacheableExportInfoMap,
            createCachedDirectoryStructureHost: ()=>createCachedDirectoryStructureHost,
            createClassNamedEvaluationHelperBlock: ()=>createClassNamedEvaluationHelperBlock,
            createClassThisAssignmentBlock: ()=>createClassThisAssignmentBlock,
            createClassifier: ()=>createClassifier,
            createCommentDirectivesMap: ()=>Ik,
            createCompilerDiagnostic: ()=>hl,
            createCompilerDiagnosticForInvalidCustomType: ()=>createCompilerDiagnosticForInvalidCustomType,
            createCompilerDiagnosticFromMessageChain: ()=>uO,
            createCompilerHost: ()=>createCompilerHost,
            createCompilerHostFromProgramHost: ()=>createCompilerHostFromProgramHost,
            createCompilerHostWorker: ()=>createCompilerHostWorker,
            createDetachedDiagnostic: ()=>Po,
            createDiagnosticCollection: ()=>vI,
            createDiagnosticForFileFromMessageChain: ()=>cD,
            createDiagnosticForNode: ()=>aD,
            createDiagnosticForNodeArray: ()=>oD,
            createDiagnosticForNodeArrayFromMessageChain: ()=>_D,
            createDiagnosticForNodeFromMessageChain: ()=>sD,
            createDiagnosticForNodeInSourceFile: ()=>FT,
            createDiagnosticForRange: ()=>uD,
            createDiagnosticMessageChainFromDiagnostic: ()=>lD,
            createDiagnosticReporter: ()=>createDiagnosticReporter,
            createDocumentPositionMapper: ()=>createDocumentPositionMapper,
            createDocumentRegistry: ()=>createDocumentRegistry,
            createDocumentRegistryInternal: ()=>createDocumentRegistryInternal,
            createEmitAndSemanticDiagnosticsBuilderProgram: ()=>createEmitAndSemanticDiagnosticsBuilderProgram,
            createEmitHelperFactory: ()=>createEmitHelperFactory,
            createEmptyExports: ()=>RJ,
            createExpressionForJsxElement: ()=>FJ,
            createExpressionForJsxFragment: ()=>BJ,
            createExpressionForObjectLiteralElementLike: ()=>GJ,
            createExpressionForPropertyName: ()=>w8,
            createExpressionFromEntityName: ()=>x8,
            createExternalHelpersImportDeclarationIfNeeded: ()=>nR,
            createFileDiagnostic: ()=>V2,
            createFileDiagnosticFromMessageChain: ()=>i2,
            createForOfBindingStatement: ()=>UJ,
            createGetCanonicalFileName: ()=>Wd,
            createGetSourceFile: ()=>createGetSourceFile,
            createGetSymbolAccessibilityDiagnosticForNode: ()=>createGetSymbolAccessibilityDiagnosticForNode,
            createGetSymbolAccessibilityDiagnosticForNodeName: ()=>createGetSymbolAccessibilityDiagnosticForNodeName,
            createGetSymbolWalker: ()=>createGetSymbolWalker,
            createIncrementalCompilerHost: ()=>createIncrementalCompilerHost,
            createIncrementalProgram: ()=>createIncrementalProgram,
            createInputFiles: ()=>ZM,
            createInputFilesWithFilePaths: ()=>Mx,
            createInputFilesWithFileTexts: ()=>Lx,
            createJsxFactoryExpression: ()=>S8,
            createLanguageService: ()=>bF,
            createLanguageServiceSourceFile: ()=>Zb,
            createMemberAccessForPropertyName: ()=>Bm,
            createModeAwareCache: ()=>createModeAwareCache,
            createModeAwareCacheKey: ()=>createModeAwareCacheKey,
            createModuleNotFoundChain: ()=>dk,
            createModuleResolutionCache: ()=>createModuleResolutionCache,
            createModuleResolutionLoader: ()=>createModuleResolutionLoader,
            createModuleResolutionLoaderUsingGlobalCache: ()=>createModuleResolutionLoaderUsingGlobalCache,
            createModuleSpecifierResolutionHost: ()=>createModuleSpecifierResolutionHost,
            createMultiMap: ()=>qd,
            createNodeConverters: ()=>Nx,
            createNodeFactory: ()=>Pd,
            createOptionNameMap: ()=>createOptionNameMap,
            createOverload: ()=>createOverload,
            createPackageJsonImportFilter: ()=>createPackageJsonImportFilter,
            createPackageJsonInfo: ()=>createPackageJsonInfo,
            createParenthesizerRules: ()=>createParenthesizerRules,
            createPatternMatcher: ()=>createPatternMatcher,
            createPrependNodes: ()=>createPrependNodes,
            createPrinter: ()=>createPrinter,
            createPrinterWithDefaults: ()=>createPrinterWithDefaults,
            createPrinterWithRemoveComments: ()=>createPrinterWithRemoveComments,
            createPrinterWithRemoveCommentsNeverAsciiEscape: ()=>createPrinterWithRemoveCommentsNeverAsciiEscape,
            createPrinterWithRemoveCommentsOmitTrailingSemicolon: ()=>createPrinterWithRemoveCommentsOmitTrailingSemicolon,
            createProgram: ()=>createProgram,
            createProgramHost: ()=>createProgramHost,
            createPropertyNameNodeForIdentifierOrLiteral: ()=>EM,
            createQueue: ()=>K9,
            createRange: ()=>Cm,
            createRedirectedBuilderProgram: ()=>createRedirectedBuilderProgram,
            createResolutionCache: ()=>createResolutionCache,
            createRuntimeTypeSerializer: ()=>createRuntimeTypeSerializer,
            createScanner: ()=>ss,
            createSemanticDiagnosticsBuilderProgram: ()=>createSemanticDiagnosticsBuilderProgram,
            createSet: ()=>Z9,
            createSolutionBuilder: ()=>createSolutionBuilder,
            createSolutionBuilderHost: ()=>createSolutionBuilderHost,
            createSolutionBuilderWithWatch: ()=>createSolutionBuilderWithWatch,
            createSolutionBuilderWithWatchHost: ()=>createSolutionBuilderWithWatchHost,
            createSortedArray: ()=>E9,
            createSourceFile: ()=>q8,
            createSourceMapGenerator: ()=>createSourceMapGenerator,
            createSourceMapSource: ()=>eL,
            createSuperAccessVariableStatement: ()=>createSuperAccessVariableStatement,
            createSymbolTable: ()=>ik,
            createSymlinkCache: ()=>RO,
            createSystemWatchFunctions: ()=>createSystemWatchFunctions,
            createTextChange: ()=>createTextChange,
            createTextChangeFromStartLength: ()=>createTextChangeFromStartLength,
            createTextChangeRange: ()=>Yd,
            createTextRangeFromNode: ()=>createTextRangeFromNode,
            createTextRangeFromSpan: ()=>createTextRangeFromSpan,
            createTextSpan: ()=>S_,
            createTextSpanFromBounds: ()=>Xi,
            createTextSpanFromNode: ()=>createTextSpanFromNode,
            createTextSpanFromRange: ()=>createTextSpanFromRange,
            createTextSpanFromStringLiteralLikeContent: ()=>createTextSpanFromStringLiteralLikeContent,
            createTextWriter: ()=>AI,
            createTokenRange: ()=>SN,
            createTypeChecker: ()=>createTypeChecker,
            createTypeReferenceDirectiveResolutionCache: ()=>createTypeReferenceDirectiveResolutionCache,
            createTypeReferenceResolutionLoader: ()=>createTypeReferenceResolutionLoader,
            createUnparsedSourceFile: ()=>QM,
            createWatchCompilerHost: ()=>createWatchCompilerHost2,
            createWatchCompilerHostOfConfigFile: ()=>createWatchCompilerHostOfConfigFile,
            createWatchCompilerHostOfFilesAndCompilerOptions: ()=>createWatchCompilerHostOfFilesAndCompilerOptions,
            createWatchFactory: ()=>createWatchFactory,
            createWatchHost: ()=>createWatchHost,
            createWatchProgram: ()=>createWatchProgram,
            createWatchStatusReporter: ()=>createWatchStatusReporter,
            createWriteFileMeasuringIO: ()=>createWriteFileMeasuringIO,
            declarationNameToString: ()=>jT,
            decodeMappings: ()=>decodeMappings,
            decodedTextSpanIntersectsWith: ()=>Ng,
            decorateHelper: ()=>decorateHelper,
            deduplicate: ()=>hv,
            defaultIncludeSpec: ()=>defaultIncludeSpec,
            defaultInitCompilerOptions: ()=>defaultInitCompilerOptions,
            defaultMaximumTruncationLength: ()=>_x,
            detectSortCaseSensitivity: ()=>A9,
            diagnosticCategoryName: ()=>jE,
            diagnosticToString: ()=>diagnosticToString,
            directoryProbablyExists: ()=>dS,
            directorySeparator: ()=>vr,
            displayPart: ()=>displayPart,
            displayPartsToString: ()=>gF,
            disposeEmitNodes: ()=>disposeEmitNodes,
            disposeResourcesHelper: ()=>disposeResourcesHelper,
            documentSpansEqual: ()=>documentSpansEqual,
            dumpTracingLegend: ()=>dumpTracingLegend,
            elementAt: ()=>Rv,
            elideNodes: ()=>jR,
            emitComments: ()=>Q3,
            emitDetachedComments: ()=>HI,
            emitFiles: ()=>emitFiles,
            emitFilesAndReportErrors: ()=>emitFilesAndReportErrors,
            emitFilesAndReportErrorsAndGetExitStatus: ()=>emitFilesAndReportErrorsAndGetExitStatus,
            emitModuleKindIsNonNodeESM: ()=>hO,
            emitNewLineBeforeLeadingCommentOfPosition: ()=>VI,
            emitNewLineBeforeLeadingComments: ()=>X3,
            emitNewLineBeforeLeadingCommentsOfPosition: ()=>$3,
            emitSkippedWithNoDiagnostics: ()=>emitSkippedWithNoDiagnostics,
            emitUsingBuildInfo: ()=>emitUsingBuildInfo,
            emptyArray: ()=>Je,
            emptyFileSystemEntries: ()=>Px,
            emptyMap: ()=>gg,
            emptyOptions: ()=>emptyOptions,
            emptySet: ()=>Jv,
            endsWith: ()=>is,
            ensurePathIsNonModuleName: ()=>Sg,
            ensureScriptKind: ()=>RS,
            ensureTrailingDirectorySeparator: ()=>to,
            entityNameToString: ()=>Ci,
            enumerateInsertsAndDeletes: ()=>EE,
            equalOwnProperties: ()=>xv,
            equateStringsCaseInsensitive: ()=>s_,
            equateStringsCaseSensitive: ()=>Rl,
            equateValues: ()=>_o,
            esDecorateHelper: ()=>esDecorateHelper,
            escapeJsxAttributeString: ()=>J3,
            escapeLeadingUnderscores: ()=>qr,
            escapeNonAsciiString: ()=>wd,
            escapeSnippetText: ()=>wM,
            escapeString: ()=>xd,
            every: ()=>so,
            expandPreOrPostfixIncrementOrDecrementExpression: ()=>XJ,
            explainFiles: ()=>explainFiles,
            explainIfFileIsRedirectAndImpliedFormat: ()=>explainIfFileIsRedirectAndImpliedFormat,
            exportAssignmentIsAlias: ()=>M0,
            exportStarHelper: ()=>exportStarHelper,
            expressionResultIsUnused: ()=>bM,
            extend: ()=>X9,
            extendsHelper: ()=>extendsHelper,
            extensionFromPath: ()=>al,
            extensionIsTS: ()=>VS,
            extensionsNotSupportingExtensionlessResolution: ()=>Dm,
            externalHelpersModuleNameText: ()=>km,
            factory: ()=>zr,
            fileExtensionIs: ()=>Na,
            fileExtensionIsOneOf: ()=>ii,
            fileIncludeReasonToDiagnostics: ()=>fileIncludeReasonToDiagnostics,
            fileShouldUseJavaScriptRequire: ()=>fileShouldUseJavaScriptRequire,
            filter: ()=>rr,
            filterMutate: ()=>s9,
            filterSemanticDiagnostics: ()=>filterSemanticDiagnostics,
            find: ()=>ir,
            findAncestor: ()=>or,
            findBestPatternMatch: ()=>Ov,
            findChildOfKind: ()=>findChildOfKind,
            findComputedPropertyNameCacheAssignment: ()=>VR,
            findConfigFile: ()=>findConfigFile,
            findContainingList: ()=>findContainingList,
            findDiagnosticForNode: ()=>findDiagnosticForNode,
            findFirstNonJsxWhitespaceToken: ()=>findFirstNonJsxWhitespaceToken,
            findIndex: ()=>ul,
            findLast: ()=>lg,
            findLastIndex: ()=>i9,
            findListItemInfo: ()=>findListItemInfo,
            findMap: ()=>a9,
            findModifier: ()=>findModifier,
            findNextToken: ()=>findNextToken,
            findPackageJson: ()=>findPackageJson,
            findPackageJsons: ()=>findPackageJsons,
            findPrecedingMatchingToken: ()=>findPrecedingMatchingToken,
            findPrecedingToken: ()=>findPrecedingToken,
            findSuperStatementIndexPath: ()=>findSuperStatementIndexPath,
            findTokenOnLeftOfPosition: ()=>findTokenOnLeftOfPosition,
            findUseStrictPrologue: ()=>C8,
            first: ()=>pg,
            firstDefined: ()=>cg,
            firstDefinedIterator: ()=>t9,
            firstIterator: ()=>L9,
            firstOrOnly: ()=>firstOrOnly,
            firstOrUndefined: ()=>y_,
            firstOrUndefinedIterator: ()=>M9,
            fixupCompilerOptions: ()=>fixupCompilerOptions,
            flatMap: ()=>zo,
            flatMapIterator: ()=>u9,
            flatMapToMutable: ()=>dv,
            flatten: ()=>o_,
            flattenCommaList: ()=>GR,
            flattenDestructuringAssignment: ()=>flattenDestructuringAssignment,
            flattenDestructuringBinding: ()=>flattenDestructuringBinding,
            flattenDiagnosticMessageText: ()=>flattenDiagnosticMessageText,
            forEach: ()=>wn,
            forEachAncestor: ()=>_k,
            forEachAncestorDirectory: ()=>Xv,
            forEachChild: ()=>Wt,
            forEachChildRecursively: ()=>ag,
            forEachEmittedFile: ()=>forEachEmittedFile,
            forEachEnclosingBlockScopeContainer: ()=>tD,
            forEachEntry: ()=>ck,
            forEachExternalModuleToImportFrom: ()=>forEachExternalModuleToImportFrom,
            forEachImportClauseDeclaration: ()=>kP,
            forEachKey: ()=>C0,
            forEachLeadingCommentRange: ()=>sC,
            forEachNameInAccessChainWalkingLeft: ()=>eO,
            forEachPropertyAssignment: ()=>p2,
            forEachResolvedProjectReference: ()=>forEachResolvedProjectReference,
            forEachReturnStatement: ()=>wD,
            forEachRight: ()=>e9,
            forEachTrailingCommentRange: ()=>_C,
            forEachTsConfigPropArray: ()=>VT,
            forEachUnique: ()=>forEachUnique,
            forEachYieldExpression: ()=>ED,
            forSomeAncestorDirectory: ()=>HN,
            formatColorAndReset: ()=>formatColorAndReset,
            formatDiagnostic: ()=>formatDiagnostic,
            formatDiagnostics: ()=>formatDiagnostics,
            formatDiagnosticsWithColorAndContext: ()=>formatDiagnosticsWithColorAndContext,
            formatGeneratedName: ()=>Od,
            formatGeneratedNamePart: ()=>ig,
            formatLocation: ()=>formatLocation,
            formatMessage: ()=>lO,
            formatStringFromArgs: ()=>P_,
            formatting: ()=>ts_formatting_exports,
            fullTripleSlashAMDReferencePathRegEx: ()=>ob,
            fullTripleSlashReferencePathRegEx: ()=>ab,
            generateDjb2Hash: ()=>generateDjb2Hash,
            generateTSConfig: ()=>generateTSConfig,
            generatorHelper: ()=>generatorHelper,
            getAdjustedReferenceLocation: ()=>getAdjustedReferenceLocation,
            getAdjustedRenameLocation: ()=>getAdjustedRenameLocation,
            getAliasDeclarationFromName: ()=>b3,
            getAllAccessorDeclarations: ()=>J2,
            getAllDecoratorsOfClass: ()=>getAllDecoratorsOfClass,
            getAllDecoratorsOfClassElement: ()=>getAllDecoratorsOfClassElement,
            getAllJSDocTags: ()=>W4,
            getAllJSDocTagsOfKind: ()=>RC,
            getAllKeys: ()=>F9,
            getAllProjectOutputs: ()=>getAllProjectOutputs,
            getAllSuperTypeNodes: ()=>w3,
            getAllUnscopedEmitHelpers: ()=>getAllUnscopedEmitHelpers,
            getAllowJSCompilerOption: ()=>K2,
            getAllowSyntheticDefaultImports: ()=>SO,
            getAncestor: ()=>ZP,
            getAnyExtensionFromPath: ()=>yd,
            getAreDeclarationMapsEnabled: ()=>TO,
            getAssignedExpandoInitializer: ()=>hP,
            getAssignedName: ()=>k4,
            getAssignedNameOfIdentifier: ()=>getAssignedNameOfIdentifier,
            getAssignmentDeclarationKind: ()=>Oa,
            getAssignmentDeclarationPropertyAccessKind: ()=>a3,
            getAssignmentTargetKind: ()=>jP,
            getAutomaticTypeDirectiveNames: ()=>getAutomaticTypeDirectiveNames,
            getBaseFileName: ()=>os,
            getBinaryOperatorPrecedence: ()=>ml,
            getBuildInfo: ()=>getBuildInfo,
            getBuildInfoFileVersionMap: ()=>getBuildInfoFileVersionMap,
            getBuildInfoText: ()=>getBuildInfoText,
            getBuildOrderFromAnyBuildOrder: ()=>getBuildOrderFromAnyBuildOrder,
            getBuilderCreationParameters: ()=>getBuilderCreationParameters,
            getBuilderFileEmit: ()=>getBuilderFileEmit,
            getCheckFlags: ()=>bS,
            getClassExtendsHeritageElement: ()=>S3,
            getClassLikeDeclarationOfSymbol: ()=>SS,
            getCombinedLocalAndExportSymbolFlags: ()=>FN,
            getCombinedModifierFlags: ()=>Kd,
            getCombinedNodeFlags: ()=>x_,
            getCombinedNodeFlagsAlwaysIncludeJSDoc: ()=>SC,
            getCommentRange: ()=>getCommentRange,
            getCommonSourceDirectory: ()=>getCommonSourceDirectory,
            getCommonSourceDirectoryOfConfig: ()=>getCommonSourceDirectoryOfConfig,
            getCompilerOptionValue: ()=>z0,
            getCompilerOptionsDiffValue: ()=>getCompilerOptionsDiffValue,
            getConditions: ()=>getConditions,
            getConfigFileParsingDiagnostics: ()=>getConfigFileParsingDiagnostics,
            getConstantValue: ()=>getConstantValue,
            getContainerFlags: ()=>getContainerFlags,
            getContainerNode: ()=>getContainerNode,
            getContainingClass: ()=>I0,
            getContainingClassExcludingClassDecorators: ()=>zD,
            getContainingClassStaticBlock: ()=>UD,
            getContainingFunction: ()=>FD,
            getContainingFunctionDeclaration: ()=>BD,
            getContainingFunctionOrClassStaticBlock: ()=>qD,
            getContainingNodeArray: ()=>vM,
            getContainingObjectLiteralElement: ()=>_7,
            getContextualTypeFromParent: ()=>getContextualTypeFromParent,
            getContextualTypeFromParentOrAncestorTypeNode: ()=>getContextualTypeFromParentOrAncestorTypeNode,
            getCurrentTime: ()=>getCurrentTime,
            getDeclarationDiagnostics: ()=>getDeclarationDiagnostics,
            getDeclarationEmitExtensionForPath: ()=>U3,
            getDeclarationEmitOutputFilePath: ()=>II,
            getDeclarationEmitOutputFilePathWorker: ()=>B3,
            getDeclarationFromName: ()=>$P,
            getDeclarationModifierFlagsFromSymbol: ()=>RN,
            getDeclarationOfKind: ()=>nk,
            getDeclarationsOfKind: ()=>rk,
            getDeclaredExpandoInitializer: ()=>dP,
            getDecorators: ()=>EC,
            getDefaultCompilerOptions: ()=>i7,
            getDefaultExportInfoWorker: ()=>getDefaultExportInfoWorker,
            getDefaultFormatCodeSettings: ()=>getDefaultFormatCodeSettings,
            getDefaultLibFileName: ()=>m4,
            getDefaultLibFilePath: ()=>CF,
            getDefaultLikeExportInfo: ()=>getDefaultLikeExportInfo,
            getDiagnosticText: ()=>getDiagnosticText,
            getDiagnosticsWithinSpan: ()=>getDiagnosticsWithinSpan,
            getDirectoryPath: ()=>Mi,
            getDirectoryToWatchFailedLookupLocation: ()=>getDirectoryToWatchFailedLookupLocation,
            getDirectoryToWatchFailedLookupLocationFromTypeRoot: ()=>getDirectoryToWatchFailedLookupLocationFromTypeRoot,
            getDocumentPositionMapper: ()=>getDocumentPositionMapper,
            getESModuleInterop: ()=>X2,
            getEditsForFileRename: ()=>getEditsForFileRename,
            getEffectiveBaseTypeNode: ()=>T3,
            getEffectiveConstraintOfTypeParameter: ()=>UC,
            getEffectiveContainerForJSDocTemplateTag: ()=>LP,
            getEffectiveImplementsTypeNodes: ()=>x3,
            getEffectiveInitializer: ()=>t3,
            getEffectiveJSDocHost: ()=>w2,
            getEffectiveModifierFlags: ()=>wm,
            getEffectiveModifierFlagsAlwaysIncludeJSDoc: ()=>tS,
            getEffectiveModifierFlagsNoCache: ()=>iS,
            getEffectiveReturnTypeNode: ()=>qI,
            getEffectiveSetAccessorTypeAnnotationNode: ()=>WI,
            getEffectiveTypeAnnotationNode: ()=>R2,
            getEffectiveTypeParameterDeclarations: ()=>BC,
            getEffectiveTypeRoots: ()=>getEffectiveTypeRoots,
            getElementOrPropertyAccessArgumentExpressionOrName: ()=>hm,
            getElementOrPropertyAccessName: ()=>ao,
            getElementsOfBindingOrAssignmentPattern: ()=>M8,
            getEmitDeclarations: ()=>Q2,
            getEmitFlags: ()=>ai,
            getEmitHelpers: ()=>getEmitHelpers,
            getEmitModuleDetectionKind: ()=>NS,
            getEmitModuleKind: ()=>_i,
            getEmitModuleResolutionKind: ()=>N_,
            getEmitScriptTarget: ()=>Ql,
            getEmitStandardClassFields: ()=>DO,
            getEnclosingBlockScopeContainer: ()=>A0,
            getEnclosingContainer: ()=>eD,
            getEncodedSemanticClassifications: ()=>getEncodedSemanticClassifications,
            getEncodedSyntacticClassifications: ()=>getEncodedSyntacticClassifications,
            getEndLinePosition: ()=>ET,
            getEntityNameFromTypeNode: ()=>ZD,
            getEntrypointsFromPackageJsonInfo: ()=>getEntrypointsFromPackageJsonInfo,
            getErrorCountForSummary: ()=>getErrorCountForSummary,
            getErrorSpanForNode: ()=>a2,
            getErrorSummaryText: ()=>getErrorSummaryText,
            getEscapedTextOfIdentifierOrLiteral: ()=>D3,
            getEscapedTextOfJsxAttributeName: ()=>MM,
            getEscapedTextOfJsxNamespacedName: ()=>Yl,
            getExpandoInitializer: ()=>E_,
            getExportAssignmentExpression: ()=>v3,
            getExportInfoMap: ()=>getExportInfoMap,
            getExportNeedsImportStarHelper: ()=>getExportNeedsImportStarHelper,
            getExpressionAssociativity: ()=>yI,
            getExpressionPrecedence: ()=>gI,
            getExternalHelpersModuleName: ()=>D8,
            getExternalModuleImportEqualsDeclarationExpression: ()=>iP,
            getExternalModuleName: ()=>T2,
            getExternalModuleNameFromDeclaration: ()=>DI,
            getExternalModuleNameFromPath: ()=>M2,
            getExternalModuleNameLiteral: ()=>iR,
            getExternalModuleRequireArgument: ()=>aP,
            getFallbackOptions: ()=>getFallbackOptions,
            getFileEmitOutput: ()=>getFileEmitOutput,
            getFileMatcherPatterns: ()=>JS,
            getFileNamesFromConfigSpecs: ()=>getFileNamesFromConfigSpecs,
            getFileWatcherEventKind: ()=>getFileWatcherEventKind,
            getFilesInErrorForSummary: ()=>getFilesInErrorForSummary,
            getFirstConstructorWithBody: ()=>W3,
            getFirstIdentifier: ()=>aN,
            getFirstNonSpaceCharacterPosition: ()=>getFirstNonSpaceCharacterPosition,
            getFirstProjectOutput: ()=>getFirstProjectOutput,
            getFixableErrorSpanExpression: ()=>getFixableErrorSpanExpression,
            getFormatCodeSettingsForWriting: ()=>getFormatCodeSettingsForWriting,
            getFullWidth: ()=>cm,
            getFunctionFlags: ()=>aI,
            getHeritageClause: ()=>gm,
            getHostSignatureFromJSDoc: ()=>x2,
            getIdentifierAutoGenerate: ()=>getIdentifierAutoGenerate,
            getIdentifierGeneratedImportReference: ()=>getIdentifierGeneratedImportReference,
            getIdentifierTypeArguments: ()=>getIdentifierTypeArguments,
            getImmediatelyInvokedFunctionExpression: ()=>XD,
            getImpliedNodeFormatForFile: ()=>getImpliedNodeFormatForFile,
            getImpliedNodeFormatForFileWorker: ()=>getImpliedNodeFormatForFileWorker,
            getImportNeedsImportDefaultHelper: ()=>getImportNeedsImportDefaultHelper,
            getImportNeedsImportStarHelper: ()=>getImportNeedsImportStarHelper,
            getIndentSize: ()=>Fo,
            getIndentString: ()=>N2,
            getInferredLibraryNameResolveFrom: ()=>getInferredLibraryNameResolveFrom,
            getInitializedVariables: ()=>MN,
            getInitializerOfBinaryExpression: ()=>o3,
            getInitializerOfBindingOrAssignmentElement: ()=>N8,
            getInterfaceBaseTypeNodes: ()=>E3,
            getInternalEmitFlags: ()=>Jk,
            getInvokedExpression: ()=>eP,
            getIsolatedModules: ()=>G2,
            getJSDocAugmentsTag: ()=>M4,
            getJSDocClassTag: ()=>AC,
            getJSDocCommentRanges: ()=>UT,
            getJSDocCommentsAndTags: ()=>p3,
            getJSDocDeprecatedTag: ()=>NC,
            getJSDocDeprecatedTagNoCache: ()=>U4,
            getJSDocEnumTag: ()=>OC,
            getJSDocHost: ()=>d3,
            getJSDocImplementsTags: ()=>L4,
            getJSDocOverrideTagNoCache: ()=>B4,
            getJSDocParameterTags: ()=>tm,
            getJSDocParameterTagsNoCache: ()=>P4,
            getJSDocPrivateTag: ()=>DC,
            getJSDocPrivateTagNoCache: ()=>R4,
            getJSDocProtectedTag: ()=>PC,
            getJSDocProtectedTagNoCache: ()=>j4,
            getJSDocPublicTag: ()=>kC,
            getJSDocPublicTagNoCache: ()=>J4,
            getJSDocReadonlyTag: ()=>IC,
            getJSDocReadonlyTagNoCache: ()=>F4,
            getJSDocReturnTag: ()=>q4,
            getJSDocReturnType: ()=>z4,
            getJSDocRoot: ()=>E2,
            getJSDocSatisfiesExpressionType: ()=>OM,
            getJSDocSatisfiesTag: ()=>Mg,
            getJSDocTags: ()=>zl,
            getJSDocTagsNoCache: ()=>JC,
            getJSDocTemplateTag: ()=>LC,
            getJSDocThisTag: ()=>MC,
            getJSDocType: ()=>rm,
            getJSDocTypeAliasName: ()=>rg,
            getJSDocTypeAssertionType: ()=>KJ,
            getJSDocTypeParameterDeclarations: ()=>G3,
            getJSDocTypeParameterTags: ()=>N4,
            getJSDocTypeParameterTagsNoCache: ()=>O4,
            getJSDocTypeTag: ()=>nm,
            getJSXImplicitImportBase: ()=>MO,
            getJSXRuntimeImport: ()=>LO,
            getJSXTransformEnabled: ()=>OO,
            getKeyForCompilerOptions: ()=>getKeyForCompilerOptions,
            getLanguageVariant: ()=>q0,
            getLastChild: ()=>xS,
            getLeadingCommentRanges: ()=>Ho,
            getLeadingCommentRangesOfNode: ()=>SD,
            getLeftmostAccessExpression: ()=>W2,
            getLeftmostExpression: ()=>tO,
            getLibraryNameFromLibFileName: ()=>getLibraryNameFromLibFileName,
            getLineAndCharacterOfPosition: ()=>no,
            getLineInfo: ()=>getLineInfo,
            getLineOfLocalPosition: ()=>RI,
            getLineOfLocalPositionFromLineMap: ()=>Ta,
            getLineStartPositionForPosition: ()=>getLineStartPositionForPosition,
            getLineStarts: ()=>Aa,
            getLinesBetweenPositionAndNextNonWhitespaceCharacter: ()=>IN,
            getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter: ()=>PN,
            getLinesBetweenPositions: ()=>T_,
            getLinesBetweenRangeEndAndRangeStart: ()=>AN,
            getLinesBetweenRangeEndPositions: ()=>kN,
            getLiteralText: ()=>Rk,
            getLocalNameForExternalImport: ()=>rR,
            getLocalSymbolForExportDefault: ()=>uN,
            getLocaleSpecificMessage: ()=>I_,
            getLocaleTimeString: ()=>getLocaleTimeString,
            getMappedContextSpan: ()=>getMappedContextSpan,
            getMappedDocumentSpan: ()=>getMappedDocumentSpan,
            getMappedLocation: ()=>getMappedLocation,
            getMatchedFileSpec: ()=>getMatchedFileSpec,
            getMatchedIncludeSpec: ()=>getMatchedIncludeSpec,
            getMeaningFromDeclaration: ()=>getMeaningFromDeclaration,
            getMeaningFromLocation: ()=>getMeaningFromLocation,
            getMembersOfDeclaration: ()=>AD,
            getModeForFileReference: ()=>getModeForFileReference,
            getModeForResolutionAtIndex: ()=>getModeForResolutionAtIndex,
            getModeForUsageLocation: ()=>getModeForUsageLocation,
            getModifiedTime: ()=>getModifiedTime,
            getModifiers: ()=>bd,
            getModuleInstanceState: ()=>getModuleInstanceState,
            getModuleNameStringLiteralAt: ()=>getModuleNameStringLiteralAt,
            getModuleSpecifierEndingPreference: ()=>XO,
            getModuleSpecifierResolverHost: ()=>getModuleSpecifierResolverHost,
            getNameForExportedSymbol: ()=>getNameForExportedSymbol,
            getNameFromIndexInfo: ()=>nD,
            getNameFromPropertyName: ()=>getNameFromPropertyName,
            getNameOfAccessExpression: ()=>YN,
            getNameOfCompilerOptionValue: ()=>getNameOfCompilerOptionValue,
            getNameOfDeclaration: ()=>ql,
            getNameOfExpando: ()=>bP,
            getNameOfJSDocTypedef: ()=>A4,
            getNameOrArgument: ()=>i3,
            getNameTable: ()=>vF,
            getNamesForExportedSymbol: ()=>getNamesForExportedSymbol,
            getNamespaceDeclarationNode: ()=>_3,
            getNewLineCharacter: ()=>mS,
            getNewLineKind: ()=>getNewLineKind,
            getNewLineOrDefaultFromHost: ()=>getNewLineOrDefaultFromHost,
            getNewTargetContainer: ()=>HD,
            getNextJSDocCommentLocation: ()=>f3,
            getNodeForGeneratedName: ()=>FR,
            getNodeId: ()=>getNodeId,
            getNodeKind: ()=>getNodeKind,
            getNodeModifiers: ()=>getNodeModifiers,
            getNodeModulePathParts: ()=>CM,
            getNonAssignedNameOfDeclaration: ()=>em,
            getNonAssignmentOperatorForCompoundAssignment: ()=>getNonAssignmentOperatorForCompoundAssignment,
            getNonAugmentationDeclaration: ()=>LT,
            getNonDecoratorTokenPosOfNode: ()=>Nk,
            getNormalizedAbsolutePath: ()=>Gi,
            getNormalizedAbsolutePathWithoutRoot: ()=>GE,
            getNormalizedPathComponents: ()=>Gd,
            getObjectFlags: ()=>Ff,
            getOperator: ()=>I2,
            getOperatorAssociativity: ()=>N3,
            getOperatorPrecedence: ()=>O3,
            getOptionFromName: ()=>getOptionFromName,
            getOptionsForLibraryResolution: ()=>getOptionsForLibraryResolution,
            getOptionsNameMap: ()=>getOptionsNameMap,
            getOrCreateEmitNode: ()=>getOrCreateEmitNode,
            getOrCreateExternalHelpersModuleNameIfNeeded: ()=>P8,
            getOrUpdate: ()=>m9,
            getOriginalNode: ()=>Bl,
            getOriginalNodeId: ()=>getOriginalNodeId,
            getOriginalSourceFile: ()=>hI,
            getOutputDeclarationFileName: ()=>getOutputDeclarationFileName,
            getOutputExtension: ()=>getOutputExtension,
            getOutputFileNames: ()=>getOutputFileNames,
            getOutputPathsFor: ()=>getOutputPathsFor,
            getOutputPathsForBundle: ()=>getOutputPathsForBundle,
            getOwnEmitOutputFilePath: ()=>PI,
            getOwnKeys: ()=>fg,
            getOwnValues: ()=>B9,
            getPackageJsonInfo: ()=>getPackageJsonInfo,
            getPackageJsonTypesVersionsPaths: ()=>getPackageJsonTypesVersionsPaths,
            getPackageJsonsVisibleToFile: ()=>getPackageJsonsVisibleToFile,
            getPackageNameFromTypesPackageName: ()=>getPackageNameFromTypesPackageName,
            getPackageScopeForPath: ()=>getPackageScopeForPath,
            getParameterSymbolFromJSDoc: ()=>MP,
            getParameterTypeNode: ()=>AM,
            getParentNodeInSpan: ()=>getParentNodeInSpan,
            getParseTreeNode: ()=>Ul,
            getParsedCommandLineOfConfigFile: ()=>getParsedCommandLineOfConfigFile,
            getPathComponents: ()=>Oi,
            getPathComponentsRelativeTo: ()=>wg,
            getPathFromPathComponents: ()=>Wo,
            getPathUpdater: ()=>getPathUpdater,
            getPathsBasePath: ()=>OI,
            getPatternFromSpec: ()=>zO,
            getPendingEmitKind: ()=>getPendingEmitKind,
            getPositionOfLineAndCharacter: ()=>iC,
            getPossibleGenericSignatures: ()=>getPossibleGenericSignatures,
            getPossibleOriginalInputExtensionForExtension: ()=>NI,
            getPossibleTypeArgumentsInfo: ()=>getPossibleTypeArgumentsInfo,
            getPreEmitDiagnostics: ()=>getPreEmitDiagnostics,
            getPrecedingNonSpaceCharacterPosition: ()=>getPrecedingNonSpaceCharacterPosition,
            getPrivateIdentifier: ()=>getPrivateIdentifier,
            getProperties: ()=>getProperties,
            getProperty: ()=>Sv,
            getPropertyArrayElementValue: ()=>RD,
            getPropertyAssignmentAliasLikeExpression: ()=>KP,
            getPropertyNameForPropertyNameNode: ()=>Td,
            getPropertyNameForUniqueESSymbol: ()=>sI,
            getPropertyNameFromType: ()=>FM,
            getPropertyNameOfBindingOrAssignmentElement: ()=>_R,
            getPropertySymbolFromBindingElement: ()=>getPropertySymbolFromBindingElement,
            getPropertySymbolsFromContextualType: ()=>c7,
            getQuoteFromPreference: ()=>getQuoteFromPreference,
            getQuotePreference: ()=>getQuotePreference,
            getRangesWhere: ()=>v9,
            getRefactorContextSpan: ()=>getRefactorContextSpan,
            getReferencedFileLocation: ()=>getReferencedFileLocation,
            getRegexFromPattern: ()=>Uf,
            getRegularExpressionForWildcard: ()=>Bf,
            getRegularExpressionsForWildcards: ()=>Z2,
            getRelativePathFromDirectory: ()=>Gv,
            getRelativePathFromFile: ()=>KE,
            getRelativePathToDirectoryOrUrl: ()=>Eg,
            getRenameLocation: ()=>getRenameLocation,
            getReplacementSpanForContextToken: ()=>getReplacementSpanForContextToken,
            getResolutionDiagnostic: ()=>getResolutionDiagnostic,
            getResolutionModeOverride: ()=>getResolutionModeOverride,
            getResolveJsonModule: ()=>OS,
            getResolvePackageJsonExports: ()=>wO,
            getResolvePackageJsonImports: ()=>EO,
            getResolvedExternalModuleName: ()=>F3,
            getRestIndicatorOfBindingOrAssignmentElement: ()=>sR,
            getRestParameterElementType: ()=>CD,
            getRightMostAssignedExpression: ()=>y2,
            getRootDeclaration: ()=>bm,
            getRootDirectoryOfResolutionCache: ()=>getRootDirectoryOfResolutionCache,
            getRootLength: ()=>Ni,
            getRootPathSplitLength: ()=>getRootPathSplitLength,
            getScriptKind: ()=>getScriptKind,
            getScriptKindFromFileName: ()=>jS,
            getScriptTargetFeatures: ()=>lx,
            getSelectedEffectiveModifierFlags: ()=>Z3,
            getSelectedSyntacticModifierFlags: ()=>eS,
            getSemanticClassifications: ()=>getSemanticClassifications,
            getSemanticJsxChildren: ()=>bI,
            getSetAccessorTypeAnnotationNode: ()=>jI,
            getSetAccessorValueParameter: ()=>L2,
            getSetExternalModuleIndicator: ()=>IS,
            getShebang: ()=>n4,
            getSingleInitializerOfVariableStatementOrPropertyDeclaration: ()=>S2,
            getSingleVariableOfVariableStatement: ()=>Al,
            getSnapshotText: ()=>getSnapshotText,
            getSnippetElement: ()=>getSnippetElement,
            getSourceFileOfModule: ()=>vk,
            getSourceFileOfNode: ()=>oi,
            getSourceFilePathInNewDir: ()=>q3,
            getSourceFilePathInNewDirWorker: ()=>Tm,
            getSourceFileVersionAsHashFromText: ()=>getSourceFileVersionAsHashFromText,
            getSourceFilesToEmit: ()=>MI,
            getSourceMapRange: ()=>getSourceMapRange,
            getSourceMapper: ()=>getSourceMapper,
            getSourceTextOfNodeFromSourceFile: ()=>Qo,
            getSpanOfTokenAtPosition: ()=>Ks,
            getSpellingSuggestion: ()=>Pv,
            getStartPositionOfLine: ()=>xk,
            getStartPositionOfRange: ()=>p_,
            getStartsOnNewLine: ()=>getStartsOnNewLine,
            getStaticPropertiesAndClassStaticBlock: ()=>getStaticPropertiesAndClassStaticBlock,
            getStrictOptionValue: ()=>Y2,
            getStringComparer: ()=>dg,
            getSuperCallFromStatement: ()=>getSuperCallFromStatement,
            getSuperContainer: ()=>GD,
            getSupportedCodeFixes: ()=>a7,
            getSupportedExtensions: ()=>FS,
            getSupportedExtensionsWithJsonIfResolveJsonModule: ()=>BS,
            getSwitchedType: ()=>getSwitchedType,
            getSymbolId: ()=>getSymbolId,
            getSymbolNameForPrivateIdentifier: ()=>_I,
            getSymbolTarget: ()=>getSymbolTarget,
            getSyntacticClassifications: ()=>getSyntacticClassifications,
            getSyntacticModifierFlags: ()=>U2,
            getSyntacticModifierFlagsNoCache: ()=>q2,
            getSynthesizedDeepClone: ()=>getSynthesizedDeepClone,
            getSynthesizedDeepCloneWithReplacements: ()=>getSynthesizedDeepCloneWithReplacements,
            getSynthesizedDeepClones: ()=>getSynthesizedDeepClones,
            getSynthesizedDeepClonesWithReplacements: ()=>getSynthesizedDeepClonesWithReplacements,
            getSyntheticLeadingComments: ()=>getSyntheticLeadingComments,
            getSyntheticTrailingComments: ()=>getSyntheticTrailingComments,
            getTargetLabel: ()=>getTargetLabel,
            getTargetOfBindingOrAssignmentElement: ()=>Ro,
            getTemporaryModuleResolutionState: ()=>getTemporaryModuleResolutionState,
            getTextOfConstantValue: ()=>Fk,
            getTextOfIdentifierOrLiteral: ()=>Sd,
            getTextOfJSDocComment: ()=>jC,
            getTextOfJsxAttributeName: ()=>LM,
            getTextOfJsxNamespacedName: ()=>Kl,
            getTextOfNode: ()=>lm,
            getTextOfNodeFromSourceText: ()=>n_,
            getTextOfPropertyName: ()=>iD,
            getThisContainer: ()=>f2,
            getThisParameter: ()=>V3,
            getTokenAtPosition: ()=>getTokenAtPosition,
            getTokenPosOfNode: ()=>$o,
            getTokenSourceMapRange: ()=>getTokenSourceMapRange,
            getTouchingPropertyName: ()=>getTouchingPropertyName,
            getTouchingToken: ()=>getTouchingToken,
            getTrailingCommentRanges: ()=>t4,
            getTrailingSemicolonDeferringWriter: ()=>kI,
            getTransformFlagsSubtreeExclusions: ()=>Ox,
            getTransformers: ()=>getTransformers,
            getTsBuildInfoEmitOutputFilePath: ()=>getTsBuildInfoEmitOutputFilePath,
            getTsConfigObjectLiteralExpression: ()=>WT,
            getTsConfigPropArrayElementValue: ()=>jD,
            getTypeAnnotationNode: ()=>UI,
            getTypeArgumentOrTypeParameterList: ()=>getTypeArgumentOrTypeParameterList,
            getTypeKeywordOfTypeOnlyImport: ()=>getTypeKeywordOfTypeOnlyImport,
            getTypeNode: ()=>getTypeNode,
            getTypeNodeIfAccessible: ()=>getTypeNodeIfAccessible,
            getTypeParameterFromJsDoc: ()=>JP,
            getTypeParameterOwner: ()=>TC,
            getTypesPackageName: ()=>getTypesPackageName,
            getUILocale: ()=>cE,
            getUniqueName: ()=>getUniqueName,
            getUniqueSymbolId: ()=>getUniqueSymbolId,
            getUseDefineForClassFields: ()=>kO,
            getWatchErrorSummaryDiagnosticMessage: ()=>getWatchErrorSummaryDiagnosticMessage,
            getWatchFactory: ()=>getWatchFactory,
            group: ()=>V9,
            groupBy: ()=>H9,
            guessIndentation: ()=>ZA,
            handleNoEmitOptions: ()=>handleNoEmitOptions,
            hasAbstractModifier: ()=>Y3,
            hasAccessorModifier: ()=>F2,
            hasAmbientModifier: ()=>K3,
            hasChangesInResolutions: ()=>gk,
            hasChildOfKind: ()=>hasChildOfKind,
            hasContextSensitiveParameters: ()=>TM,
            hasDecorators: ()=>kl,
            hasDocComment: ()=>hasDocComment,
            hasDynamicName: ()=>k3,
            hasEffectiveModifier: ()=>j2,
            hasEffectiveModifiers: ()=>$I,
            hasEffectiveReadonlyModifier: ()=>j0,
            hasExtension: ()=>zv,
            hasIndexSignature: ()=>hasIndexSignature,
            hasInitializer: ()=>TT,
            hasInvalidEscape: ()=>M3,
            hasJSDocNodes: ()=>Hi,
            hasJSDocParameterTags: ()=>CC,
            hasJSFileExtension: ()=>eb,
            hasJsonModuleEmitEnabled: ()=>yO,
            hasOnlyExpressionInitializer: ()=>YA,
            hasOverrideModifier: ()=>YI,
            hasPossibleExternalModuleReference: ()=>Zk,
            hasProperty: ()=>Wn,
            hasPropertyAccessExpressionWithName: ()=>hasPropertyAccessExpressionWithName,
            hasQuestionToken: ()=>DP,
            hasRecordedExternalHelpers: ()=>tR,
            hasResolutionModeOverride: ()=>BM,
            hasRestParameter: ()=>ek,
            hasScopeMarker: ()=>AA,
            hasStaticModifier: ()=>xm,
            hasSyntacticModifier: ()=>Cn,
            hasSyntacticModifiers: ()=>QI,
            hasTSFileExtension: ()=>tb,
            hasTabstop: ()=>rx,
            hasTrailingDirectorySeparator: ()=>Hd,
            hasType: ()=>QA,
            hasTypeArguments: ()=>RP,
            hasZeroOrOneAsteriskCharacter: ()=>JO,
            helperString: ()=>helperString,
            hostGetCanonicalFileName: ()=>j3,
            hostUsesCaseSensitiveFileNames: ()=>O2,
            idText: ()=>Lt,
            identifierIsThisKeyword: ()=>H3,
            identifierToKeywordKind: ()=>w4,
            identity: ()=>bt,
            identitySourceMapConsumer: ()=>identitySourceMapConsumer,
            ignoreSourceNewlines: ()=>ignoreSourceNewlines,
            ignoredPaths: ()=>ignoredPaths,
            importDefaultHelper: ()=>importDefaultHelper,
            importFromModuleSpecifier: ()=>AP,
            importNameElisionDisabled: ()=>gO,
            importStarHelper: ()=>importStarHelper,
            indexOfAnyCharCode: ()=>fv,
            indexOfNode: ()=>Lk,
            indicesOf: ()=>ug,
            inferredTypesContainingFile: ()=>inferredTypesContainingFile,
            injectClassNamedEvaluationHelperBlockIfMissing: ()=>injectClassNamedEvaluationHelperBlockIfMissing,
            injectClassThisAssignmentIfMissing: ()=>injectClassThisAssignmentIfMissing,
            insertImports: ()=>insertImports,
            insertLeadingStatement: ()=>qJ,
            insertSorted: ()=>vl,
            insertStatementAfterCustomPrologue: ()=>Dk,
            insertStatementAfterStandardPrologue: ()=>kk,
            insertStatementsAfterCustomPrologue: ()=>Ak,
            insertStatementsAfterStandardPrologue: ()=>Ck,
            intersperse: ()=>r9,
            intrinsicTagNameToString: ()=>RM,
            introducesArgumentsExoticObject: ()=>ID,
            inverseJsxOptionMap: ()=>inverseJsxOptionMap,
            isAbstractConstructorSymbol: ()=>VN,
            isAbstractModifier: ()=>bL,
            isAccessExpression: ()=>Ko,
            isAccessibilityModifier: ()=>isAccessibilityModifier,
            isAccessor: ()=>om,
            isAccessorModifier: ()=>TL,
            isAliasSymbolDeclaration: ()=>YP,
            isAliasableExpression: ()=>A2,
            isAmbientModule: ()=>um,
            isAmbientPropertyDeclaration: ()=>$k,
            isAnonymousFunctionDefinition: ()=>Zs,
            isAnyDirectorySeparator: ()=>vg,
            isAnyImportOrBareOrAccessedRequire: ()=>Yk,
            isAnyImportOrReExport: ()=>fm,
            isAnyImportSyntax: ()=>t2,
            isAnySupportedFileExtension: ()=>tM,
            isApplicableVersionedTypesKey: ()=>isApplicableVersionedTypesKey,
            isArgumentExpressionOfElementAccess: ()=>isArgumentExpressionOfElementAccess,
            isArray: ()=>$t,
            isArrayBindingElement: ()=>dA,
            isArrayBindingOrAssignmentElement: ()=>cT,
            isArrayBindingOrAssignmentPattern: ()=>_T,
            isArrayBindingPattern: ()=>CL,
            isArrayLiteralExpression: ()=>iu,
            isArrayLiteralOrObjectLiteralDestructuringPattern: ()=>isArrayLiteralOrObjectLiteralDestructuringPattern,
            isArrayTypeNode: ()=>Vx,
            isArrowFunction: ()=>Om,
            isAsExpression: ()=>ML,
            isAssertClause: ()=>nJ,
            isAssertEntry: ()=>rJ,
            isAssertionExpression: ()=>EA,
            isAssertsKeyword: ()=>hL,
            isAssignmentDeclaration: ()=>O0,
            isAssignmentExpression: ()=>si,
            isAssignmentOperator: ()=>A_,
            isAssignmentPattern: ()=>aT,
            isAssignmentTarget: ()=>FP,
            isAsteriskToken: ()=>uL,
            isAsyncFunction: ()=>oI,
            isAsyncModifier: ()=>_l,
            isAutoAccessorPropertyDeclaration: ()=>iT,
            isAwaitExpression: ()=>PL,
            isAwaitKeyword: ()=>yL,
            isBigIntLiteral: ()=>db,
            isBinaryExpression: ()=>At,
            isBinaryOperatorToken: ()=>MR,
            isBindableObjectDefinePropertyCall: ()=>b2,
            isBindableStaticAccessExpression: ()=>_s,
            isBindableStaticElementAccessExpression: ()=>v2,
            isBindableStaticNameExpression: ()=>Yo,
            isBindingElement: ()=>ru,
            isBindingElementOfBareOrAccessedRequire: ()=>uP,
            isBindingName: ()=>sA,
            isBindingOrAssignmentElement: ()=>mA,
            isBindingOrAssignmentPattern: ()=>hA,
            isBindingPattern: ()=>sm,
            isBlock: ()=>au,
            isBlockOrCatchScoped: ()=>Uk,
            isBlockScope: ()=>JT,
            isBlockScopedContainerTopLevel: ()=>Hk,
            isBooleanLiteral: ()=>_A,
            isBreakOrContinueStatement: ()=>HC,
            isBreakStatement: ()=>HL,
            isBuildInfoFile: ()=>isBuildInfoFile,
            isBuilderProgram: ()=>isBuilderProgram2,
            isBundle: ()=>yJ,
            isBundleFileTextLike: ()=>KN,
            isCallChain: ()=>T0,
            isCallExpression: ()=>R_,
            isCallExpressionTarget: ()=>isCallExpressionTarget,
            isCallLikeExpression: ()=>lT,
            isCallLikeOrFunctionLikeExpression: ()=>bA,
            isCallOrNewExpression: ()=>vA,
            isCallOrNewExpressionTarget: ()=>isCallOrNewExpressionTarget,
            isCallSignatureDeclaration: ()=>yb,
            isCallToHelper: ()=>isCallToHelper,
            isCaseBlock: ()=>ZL,
            isCaseClause: ()=>dJ,
            isCaseKeyword: ()=>SL,
            isCaseOrDefaultClause: ()=>$A,
            isCatchClause: ()=>mJ,
            isCatchClauseVariableDeclaration: ()=>YS,
            isCatchClauseVariableDeclarationOrBindingElement: ()=>NT,
            isCheckJsEnabledForFile: ()=>nM,
            isChildOfNodeWithKind: ()=>xD,
            isCircularBuildOrder: ()=>isCircularBuildOrder,
            isClassDeclaration: ()=>es,
            isClassElement: ()=>io,
            isClassExpression: ()=>Ol,
            isClassInstanceProperty: ()=>lA,
            isClassLike: ()=>ar,
            isClassMemberModifier: ()=>tT,
            isClassNamedEvaluationHelperBlock: ()=>isClassNamedEvaluationHelperBlock,
            isClassOrTypeElement: ()=>pA,
            isClassStaticBlockDeclaration: ()=>eu,
            isClassThisAssignmentBlock: ()=>isClassThisAssignmentBlock,
            isCollapsedRange: ()=>TN,
            isColonToken: ()=>pL,
            isCommaExpression: ()=>Um,
            isCommaListExpression: ()=>j_,
            isCommaSequence: ()=>YJ,
            isCommaToken: ()=>Rx,
            isComment: ()=>isComment,
            isCommonJsExportPropertyAssignment: ()=>u2,
            isCommonJsExportedExpression: ()=>DD,
            isCompoundAssignment: ()=>isCompoundAssignment,
            isComputedNonLiteralName: ()=>rD,
            isComputedPropertyName: ()=>oo,
            isConciseBody: ()=>IA,
            isConditionalExpression: ()=>IL,
            isConditionalTypeNode: ()=>Yx,
            isConstTypeReference: ()=>G4,
            isConstructSignatureDeclaration: ()=>qx,
            isConstructorDeclaration: ()=>L_,
            isConstructorTypeNode: ()=>bb,
            isContextualKeyword: ()=>k2,
            isContinueStatement: ()=>VL,
            isCustomPrologue: ()=>dm,
            isDebuggerStatement: ()=>KL,
            isDeclaration: ()=>Xo,
            isDeclarationBindingElement: ()=>Hg,
            isDeclarationFileName: ()=>z8,
            isDeclarationName: ()=>y3,
            isDeclarationNameOfEnumOrNamespace: ()=>ON,
            isDeclarationReadonly: ()=>hD,
            isDeclarationStatement: ()=>qA,
            isDeclarationWithTypeParameterChildren: ()=>RT,
            isDeclarationWithTypeParameters: ()=>Qk,
            isDecorator: ()=>M_,
            isDecoratorTarget: ()=>isDecoratorTarget,
            isDefaultClause: ()=>p8,
            isDefaultImport: ()=>c3,
            isDefaultModifier: ()=>mL,
            isDefaultedExpandoInitializer: ()=>gP,
            isDeleteExpression: ()=>kL,
            isDeleteTarget: ()=>GP,
            isDeprecatedDeclaration: ()=>isDeprecatedDeclaration,
            isDestructuringAssignment: ()=>iN,
            isDiagnosticWithLocation: ()=>isDiagnosticWithLocation,
            isDiskPathRoot: ()=>UE,
            isDoStatement: ()=>UL,
            isDocumentRegistryEntry: ()=>isDocumentRegistryEntry,
            isDotDotDotToken: ()=>lL,
            isDottedName: ()=>B0,
            isDynamicName: ()=>P2,
            isESSymbolIdentifier: ()=>uI,
            isEffectiveExternalModule: ()=>e2,
            isEffectiveModuleDeclaration: ()=>OT,
            isEffectiveStrictModeSourceFile: ()=>Xk,
            isElementAccessChain: ()=>H4,
            isElementAccessExpression: ()=>Ki,
            isEmittedFileOfProgram: ()=>isEmittedFileOfProgram,
            isEmptyArrayLiteral: ()=>lN,
            isEmptyBindingElement: ()=>S4,
            isEmptyBindingPattern: ()=>T4,
            isEmptyObjectLiteral: ()=>cN,
            isEmptyStatement: ()=>FL,
            isEmptyStringLiteral: ()=>GT,
            isEntityName: ()=>oA,
            isEntityNameExpression: ()=>co,
            isEnumConst: ()=>mD,
            isEnumDeclaration: ()=>Pb,
            isEnumMember: ()=>d8,
            isEqualityOperatorKind: ()=>isEqualityOperatorKind,
            isEqualsGreaterThanToken: ()=>dL,
            isExclamationToken: ()=>Nd,
            isExcludedFile: ()=>isExcludedFile,
            isExclusivelyTypeOnlyImportOrExport: ()=>isExclusivelyTypeOnlyImportOrExport,
            isExpandoPropertyDeclaration: ()=>ox,
            isExportAssignment: ()=>ps,
            isExportDeclaration: ()=>F_,
            isExportModifier: ()=>jx,
            isExportName: ()=>QJ,
            isExportNamespaceAsDefaultDeclaration: ()=>IT,
            isExportOrDefaultModifier: ()=>JR,
            isExportSpecifier: ()=>u8,
            isExportsIdentifier: ()=>n3,
            isExportsOrModuleExportsOrAlias: ()=>isExportsOrModuleExportsOrAlias,
            isExpression: ()=>_m,
            isExpressionNode: ()=>m2,
            isExpressionOfExternalModuleImportEqualsDeclaration: ()=>isExpressionOfExternalModuleImportEqualsDeclaration,
            isExpressionOfOptionalChainRoot: ()=>zC,
            isExpressionStatement: ()=>ou,
            isExpressionWithTypeArguments: ()=>Cb,
            isExpressionWithTypeArgumentsInClassExtendsClause: ()=>F0,
            isExternalModule: ()=>ns,
            isExternalModuleAugmentation: ()=>Zg,
            isExternalModuleImportEqualsDeclaration: ()=>QT,
            isExternalModuleIndicator: ()=>DA,
            isExternalModuleNameRelative: ()=>uC,
            isExternalModuleReference: ()=>Rm,
            isExternalModuleSymbol: ()=>isExternalModuleSymbol,
            isExternalOrCommonJsModule: ()=>dD,
            isFileLevelReservedGeneratedIdentifier: ()=>iA,
            isFileLevelUniqueName: ()=>CT,
            isFileProbablyExternalModule: ()=>gl,
            isFirstDeclarationOfSymbolParameter: ()=>isFirstDeclarationOfSymbolParameter,
            isFixablePromiseHandler: ()=>isFixablePromiseHandler,
            isForInOrOfStatement: ()=>PA,
            isForInStatement: ()=>zL,
            isForInitializer: ()=>OA,
            isForOfStatement: ()=>WL,
            isForStatement: ()=>o8,
            isFunctionBlock: ()=>zT,
            isFunctionBody: ()=>NA,
            isFunctionDeclaration: ()=>us,
            isFunctionExpression: ()=>Nm,
            isFunctionExpressionOrArrowFunction: ()=>KS,
            isFunctionLike: ()=>$i,
            isFunctionLikeDeclaration: ()=>nT,
            isFunctionLikeKind: ()=>qg,
            isFunctionLikeOrClassStaticBlockDeclaration: ()=>am,
            isFunctionOrConstructorTypeNode: ()=>fA,
            isFunctionOrModuleBlock: ()=>cA,
            isFunctionSymbol: ()=>EP,
            isFunctionTypeNode: ()=>tu,
            isFutureReservedKeyword: ()=>eI,
            isGeneratedIdentifier: ()=>va,
            isGeneratedPrivateIdentifier: ()=>Bg,
            isGetAccessor: ()=>rl,
            isGetAccessorDeclaration: ()=>d_,
            isGetOrSetAccessorDeclaration: ()=>qC,
            isGlobalDeclaration: ()=>isGlobalDeclaration,
            isGlobalScopeAugmentation: ()=>pm,
            isGrammarError: ()=>Ek,
            isHeritageClause: ()=>Ml,
            isHoistedFunction: ()=>D0,
            isHoistedVariableStatement: ()=>P0,
            isIdentifier: ()=>Ae,
            isIdentifierANonContextualKeyword: ()=>rI,
            isIdentifierName: ()=>QP,
            isIdentifierOrThisTypeNode: ()=>fR,
            isIdentifierPart: ()=>Ka,
            isIdentifierStart: ()=>yr,
            isIdentifierText: ()=>Ig,
            isIdentifierTypePredicate: ()=>LD,
            isIdentifierTypeReference: ()=>dM,
            isIfStatement: ()=>BL,
            isIgnoredFileFromWildCardWatching: ()=>isIgnoredFileFromWildCardWatching,
            isImplicitGlob: ()=>MS,
            isImportAttribute: ()=>aJ,
            isImportAttributeName: ()=>rA,
            isImportAttributes: ()=>iJ,
            isImportCall: ()=>s2,
            isImportClause: ()=>eJ,
            isImportDeclaration: ()=>Ob,
            isImportEqualsDeclaration: ()=>Nb,
            isImportKeyword: ()=>Bx,
            isImportMeta: ()=>k0,
            isImportOrExportSpecifier: ()=>eA,
            isImportOrExportSpecifierName: ()=>isImportOrExportSpecifierName,
            isImportSpecifier: ()=>c8,
            isImportTypeAssertionContainer: ()=>tJ,
            isImportTypeNode: ()=>nu,
            isImportableFile: ()=>isImportableFile,
            isInComment: ()=>isInComment,
            isInCompoundLikeAssignment: ()=>UP,
            isInExpressionContext: ()=>XT,
            isInJSDoc: ()=>YT,
            isInJSFile: ()=>Vt,
            isInJSXText: ()=>isInJSXText,
            isInJsonFile: ()=>_P,
            isInNonReferenceComment: ()=>isInNonReferenceComment,
            isInReferenceComment: ()=>isInReferenceComment,
            isInRightSideOfInternalImportEqualsDeclaration: ()=>isInRightSideOfInternalImportEqualsDeclaration,
            isInString: ()=>isInString,
            isInTemplateString: ()=>isInTemplateString,
            isInTopLevelContext: ()=>VD,
            isInTypeQuery: ()=>FI,
            isIncrementalCompilation: ()=>AO,
            isIndexSignatureDeclaration: ()=>gb,
            isIndexedAccessTypeNode: ()=>e8,
            isInferTypeNode: ()=>Kx,
            isInfinityOrNaNString: ()=>SM,
            isInitializedProperty: ()=>isInitializedProperty,
            isInitializedVariable: ()=>gS,
            isInsideJsxElement: ()=>isInsideJsxElement,
            isInsideJsxElementOrAttribute: ()=>isInsideJsxElementOrAttribute,
            isInsideNodeModules: ()=>isInsideNodeModules,
            isInsideTemplateLiteral: ()=>isInsideTemplateLiteral,
            isInstanceOfExpression: ()=>uS,
            isInstantiatedModule: ()=>isInstantiatedModule,
            isInterfaceDeclaration: ()=>su,
            isInternalDeclaration: ()=>isInternalDeclaration,
            isInternalModuleImportEqualsDeclaration: ()=>oP,
            isInternalName: ()=>$J,
            isIntersectionTypeNode: ()=>Qx,
            isIntrinsicJsxName: ()=>R3,
            isIterationStatement: ()=>dT,
            isJSDoc: ()=>ds,
            isJSDocAllType: ()=>SJ,
            isJSDocAugmentsTag: ()=>Fm,
            isJSDocAuthorTag: ()=>kJ,
            isJSDocCallbackTag: ()=>DJ,
            isJSDocClassTag: ()=>y8,
            isJSDocCommentContainingNode: ()=>vT,
            isJSDocConstructSignature: ()=>PP,
            isJSDocDeprecatedTag: ()=>Wb,
            isJSDocEnumTag: ()=>b8,
            isJSDocFunctionType: ()=>jm,
            isJSDocImplementsTag: ()=>T8,
            isJSDocIndexSignature: ()=>lP,
            isJSDocLikeText: ()=>F8,
            isJSDocLink: ()=>bJ,
            isJSDocLinkCode: ()=>vJ,
            isJSDocLinkLike: ()=>dl,
            isJSDocLinkPlain: ()=>TJ,
            isJSDocMemberName: ()=>r_,
            isJSDocNameReference: ()=>Vf,
            isJSDocNamepathType: ()=>AJ,
            isJSDocNamespaceBody: ()=>JA,
            isJSDocNode: ()=>$g,
            isJSDocNonNullableType: ()=>wJ,
            isJSDocNullableType: ()=>h8,
            isJSDocOptionalParameter: ()=>ix,
            isJSDocOptionalType: ()=>EJ,
            isJSDocOverloadTag: ()=>zb,
            isJSDocOverrideTag: ()=>g8,
            isJSDocParameterTag: ()=>m_,
            isJSDocPrivateTag: ()=>Bb,
            isJSDocPropertyLikeTag: ()=>Rg,
            isJSDocPropertyTag: ()=>OJ,
            isJSDocProtectedTag: ()=>Ub,
            isJSDocPublicTag: ()=>Fb,
            isJSDocReadonlyTag: ()=>qb,
            isJSDocReturnTag: ()=>Vb,
            isJSDocSatisfiesExpression: ()=>NM,
            isJSDocSatisfiesTag: ()=>Hb,
            isJSDocSeeTag: ()=>PJ,
            isJSDocSignature: ()=>cu,
            isJSDocTag: ()=>Qg,
            isJSDocTemplateTag: ()=>ts,
            isJSDocThisTag: ()=>v8,
            isJSDocThrowsTag: ()=>MJ,
            isJSDocTypeAlias: ()=>Xl,
            isJSDocTypeAssertion: ()=>k8,
            isJSDocTypeExpression: ()=>m8,
            isJSDocTypeLiteral: ()=>jb,
            isJSDocTypeTag: ()=>lu,
            isJSDocTypedefTag: ()=>IJ,
            isJSDocUnknownTag: ()=>NJ,
            isJSDocUnknownType: ()=>xJ,
            isJSDocVariadicType: ()=>CJ,
            isJSXTagName: ()=>Jf,
            isJsonEqual: ()=>rb,
            isJsonSourceFile: ()=>o2,
            isJsxAttribute: ()=>uJ,
            isJsxAttributeLike: ()=>GA,
            isJsxAttributeName: ()=>JM,
            isJsxAttributes: ()=>Rb,
            isJsxChild: ()=>gT,
            isJsxClosingElement: ()=>Wf,
            isJsxClosingFragment: ()=>lJ,
            isJsxElement: ()=>tg,
            isJsxExpression: ()=>fJ,
            isJsxFragment: ()=>yl,
            isJsxNamespacedName: ()=>B_,
            isJsxOpeningElement: ()=>Jo,
            isJsxOpeningFragment: ()=>Jb,
            isJsxOpeningLikeElement: ()=>bT,
            isJsxOpeningLikeElementTagName: ()=>isJsxOpeningLikeElementTagName,
            isJsxSelfClosingElement: ()=>cJ,
            isJsxSpreadAttribute: ()=>pJ,
            isJsxTagNameExpression: ()=>HA,
            isJsxText: ()=>Id,
            isJumpStatementTarget: ()=>isJumpStatementTarget,
            isKeyword: ()=>ki,
            isKeywordOrPunctuation: ()=>jf,
            isKnownSymbol: ()=>cI,
            isLabelName: ()=>isLabelName,
            isLabelOfLabeledStatement: ()=>isLabelOfLabeledStatement,
            isLabeledStatement: ()=>s8,
            isLateVisibilityPaintedStatement: ()=>Kk,
            isLeftHandSideExpression: ()=>jo,
            isLeftHandSideOfAssignment: ()=>rN,
            isLet: ()=>bD,
            isLineBreak: ()=>On,
            isLiteralComputedPropertyDeclarationName: ()=>g3,
            isLiteralExpression: ()=>Fg,
            isLiteralExpressionOfObject: ()=>YC,
            isLiteralImportTypeNode: ()=>_2,
            isLiteralKind: ()=>jg,
            isLiteralLikeAccess: ()=>Rf,
            isLiteralLikeElementAccess: ()=>Gl,
            isLiteralNameOfPropertyDeclarationOrIndexAccess: ()=>isLiteralNameOfPropertyDeclarationOrIndexAccess,
            isLiteralTypeLikeExpression: ()=>yR,
            isLiteralTypeLiteral: ()=>xA,
            isLiteralTypeNode: ()=>xb,
            isLocalName: ()=>ng,
            isLogicalOperator: ()=>eN,
            isLogicalOrCoalescingAssignmentExpression: ()=>tN,
            isLogicalOrCoalescingAssignmentOperator: ()=>Em,
            isLogicalOrCoalescingBinaryExpression: ()=>nN,
            isLogicalOrCoalescingBinaryOperator: ()=>oS,
            isMappedTypeNode: ()=>t8,
            isMemberName: ()=>ro,
            isMetaProperty: ()=>Ab,
            isMethodDeclaration: ()=>f_,
            isMethodOrAccessor: ()=>zg,
            isMethodSignature: ()=>Ux,
            isMinusToken: ()=>hb,
            isMissingDeclaration: ()=>sJ,
            isModifier: ()=>Ug,
            isModifierKind: ()=>Ei,
            isModifierLike: ()=>Lf,
            isModuleAugmentationExternal: ()=>MT,
            isModuleBlock: ()=>_8,
            isModuleBody: ()=>MA,
            isModuleDeclaration: ()=>Zi,
            isModuleExportsAccessExpression: ()=>g2,
            isModuleIdentifier: ()=>r3,
            isModuleName: ()=>hR,
            isModuleOrEnumDeclaration: ()=>jA,
            isModuleReference: ()=>VA,
            isModuleSpecifierLike: ()=>isModuleSpecifierLike,
            isModuleWithStringLiteralName: ()=>qk,
            isNameOfFunctionDeclaration: ()=>isNameOfFunctionDeclaration,
            isNameOfModuleDeclaration: ()=>isNameOfModuleDeclaration,
            isNamedClassElement: ()=>uA,
            isNamedDeclaration: ()=>Zd,
            isNamedEvaluation: ()=>pI,
            isNamedEvaluationSource: ()=>I3,
            isNamedExportBindings: ()=>GC,
            isNamedExports: ()=>l8,
            isNamedImportBindings: ()=>RA,
            isNamedImports: ()=>oJ,
            isNamedImportsOrExports: ()=>ZN,
            isNamedTupleMember: ()=>vb,
            isNamespaceBody: ()=>LA,
            isNamespaceExport: ()=>Jm,
            isNamespaceExportDeclaration: ()=>Ib,
            isNamespaceImport: ()=>Mb,
            isNamespaceReexportDeclaration: ()=>rP,
            isNewExpression: ()=>n8,
            isNewExpressionTarget: ()=>isNewExpressionTarget,
            isNoSubstitutionTemplateLiteral: ()=>Jx,
            isNode: ()=>$C,
            isNodeArray: ()=>ha,
            isNodeArrayMultiLine: ()=>DN,
            isNodeDescendantOf: ()=>XP,
            isNodeKind: ()=>Wl,
            isNodeLikeSystem: ()=>DE,
            isNodeModulesDirectory: ()=>ZE,
            isNodeWithPossibleHoistedDeclaration: ()=>qP,
            isNonContextualKeyword: ()=>A3,
            isNonExportDefaultModifier: ()=>RR,
            isNonGlobalAmbientModule: ()=>zk,
            isNonGlobalDeclaration: ()=>isNonGlobalDeclaration,
            isNonNullAccess: ()=>IM,
            isNonNullChain: ()=>X4,
            isNonNullExpression: ()=>Uo,
            isNonStaticMethodOrAccessorWithPrivateName: ()=>isNonStaticMethodOrAccessorWithPrivateName,
            isNotEmittedOrPartiallyEmittedNode: ()=>CA,
            isNotEmittedStatement: ()=>Lb,
            isNullishCoalesce: ()=>VC,
            isNumber: ()=>eE,
            isNumericLiteral: ()=>lo,
            isNumericLiteralName: ()=>ZS,
            isObjectBindingElementWithoutPropertyName: ()=>isObjectBindingElementWithoutPropertyName,
            isObjectBindingOrAssignmentElement: ()=>sT,
            isObjectBindingOrAssignmentPattern: ()=>oT,
            isObjectBindingPattern: ()=>EL,
            isObjectLiteralElement: ()=>x0,
            isObjectLiteralElementLike: ()=>Vg,
            isObjectLiteralExpression: ()=>uo,
            isObjectLiteralMethod: ()=>OD,
            isObjectLiteralOrClassExpressionMethodOrAccessor: ()=>MD,
            isObjectTypeDeclaration: ()=>QN,
            isOctalDigit: ()=>Of,
            isOmittedExpression: ()=>Lm,
            isOptionalChain: ()=>Lg,
            isOptionalChainRoot: ()=>Jg,
            isOptionalDeclaration: ()=>PM,
            isOptionalJSDocPropertyLikeTag: ()=>nx,
            isOptionalTypeNode: ()=>Gx,
            isOuterExpression: ()=>qm,
            isOutermostOptionalChain: ()=>WC,
            isOverrideModifier: ()=>vL,
            isPackedArrayLiteral: ()=>gM,
            isParameter: ()=>Pa,
            isParameterDeclaration: ()=>dI,
            isParameterOrCatchClauseVariable: ()=>xM,
            isParameterPropertyDeclaration: ()=>v4,
            isParameterPropertyModifier: ()=>eT,
            isParenthesizedExpression: ()=>cs,
            isParenthesizedTypeNode: ()=>Tb,
            isParseTreeNode: ()=>xl,
            isPartOfTypeNode: ()=>c2,
            isPartOfTypeQuery: ()=>$T,
            isPartiallyEmittedExpression: ()=>a8,
            isPatternMatch: ()=>hg,
            isPinnedComment: ()=>PT,
            isPlainJsFile: ()=>Tk,
            isPlusToken: ()=>mb,
            isPossiblyTypeArgumentPosition: ()=>isPossiblyTypeArgumentPosition,
            isPostfixUnaryExpression: ()=>i8,
            isPrefixUnaryExpression: ()=>Mm,
            isPrivateIdentifier: ()=>Vn,
            isPrivateIdentifierClassElementDeclaration: ()=>Z4,
            isPrivateIdentifierPropertyAccessExpression: ()=>aA,
            isPrivateIdentifierSymbol: ()=>lI,
            isProgramBundleEmitBuildInfo: ()=>isProgramBundleEmitBuildInfo,
            isProgramUptoDate: ()=>isProgramUptoDate,
            isPrologueDirective: ()=>Sa,
            isPropertyAccessChain: ()=>V4,
            isPropertyAccessEntityNameExpression: ()=>cS,
            isPropertyAccessExpression: ()=>Ln,
            isPropertyAccessOrQualifiedName: ()=>gA,
            isPropertyAccessOrQualifiedNameOrImportTypeNode: ()=>yA,
            isPropertyAssignment: ()=>fs,
            isPropertyDeclaration: ()=>Ia,
            isPropertyName: ()=>Vl,
            isPropertyNameLiteral: ()=>L0,
            isPropertySignature: ()=>Zl,
            isProtoSetter: ()=>P3,
            isPrototypeAccess: ()=>k_,
            isPrototypePropertyAssignment: ()=>SP,
            isPunctuation: ()=>C3,
            isPushOrUnshiftIdentifier: ()=>fI,
            isQualifiedName: ()=>O_,
            isQuestionDotToken: ()=>fL,
            isQuestionOrExclamationToken: ()=>pR,
            isQuestionOrPlusOrMinusToken: ()=>mR,
            isQuestionToken: ()=>Nl,
            isRawSourceMap: ()=>isRawSourceMap,
            isReadonlyKeyword: ()=>Fx,
            isReadonlyKeywordOrPlusOrMinusToken: ()=>dR,
            isRecognizedTripleSlashComment: ()=>Pk,
            isReferenceFileLocation: ()=>isReferenceFileLocation,
            isReferencedFile: ()=>isReferencedFile,
            isRegularExpressionLiteral: ()=>oL,
            isRequireCall: ()=>Hl,
            isRequireVariableStatement: ()=>e3,
            isRestParameter: ()=>ST,
            isRestTypeNode: ()=>Xx,
            isReturnStatement: ()=>GL,
            isReturnStatementWithFixablePromiseHandler: ()=>isReturnStatementWithFixablePromiseHandler,
            isRightSideOfAccessExpression: ()=>lS,
            isRightSideOfInstanceofExpression: ()=>_N,
            isRightSideOfPropertyAccess: ()=>isRightSideOfPropertyAccess,
            isRightSideOfQualifiedName: ()=>isRightSideOfQualifiedName,
            isRightSideOfQualifiedNameOrPropertyAccess: ()=>oN,
            isRightSideOfQualifiedNameOrPropertyAccessOrJSDocMemberName: ()=>sN,
            isRootedDiskPath: ()=>b_,
            isSameEntityName: ()=>u_,
            isSatisfiesExpression: ()=>LL,
            isScopeMarker: ()=>mT,
            isSemicolonClassElement: ()=>jL,
            isSetAccessor: ()=>nl,
            isSetAccessorDeclaration: ()=>Zo,
            isShebangTrivia: ()=>Dg,
            isShiftOperatorOrHigher: ()=>$b,
            isShorthandAmbientModuleSymbol: ()=>Wk,
            isShorthandPropertyAssignment: ()=>_u,
            isSignedNumericLiteral: ()=>D2,
            isSimpleCopiableExpression: ()=>isSimpleCopiableExpression,
            isSimpleInlineableExpression: ()=>isSimpleInlineableExpression,
            isSingleOrDoubleQuote: ()=>pP,
            isSourceFile: ()=>ci,
            isSourceFileFromLibrary: ()=>isSourceFileFromLibrary,
            isSourceFileJS: ()=>h2,
            isSourceFileNotJS: ()=>sP,
            isSourceFileNotJson: ()=>cP,
            isSourceMapping: ()=>isSourceMapping,
            isSpecialPropertyDeclaration: ()=>xP,
            isSpreadAssignment: ()=>f8,
            isSpreadElement: ()=>Eb,
            isStatement: ()=>hT,
            isStatementButNotDeclaration: ()=>zA,
            isStatementOrBlock: ()=>yT,
            isStatementWithLocals: ()=>Sk,
            isStatic: ()=>R0,
            isStaticModifier: ()=>gL,
            isString: ()=>g_,
            isStringAKeyword: ()=>nI,
            isStringANonContextualKeyword: ()=>tI,
            isStringAndEmptyAnonymousObjectIntersection: ()=>isStringAndEmptyAnonymousObjectIntersection,
            isStringDoubleQuoted: ()=>fP,
            isStringLiteral: ()=>Tr,
            isStringLiteralLike: ()=>ni,
            isStringLiteralOrJsxExpression: ()=>XA,
            isStringLiteralOrTemplate: ()=>isStringLiteralOrTemplate,
            isStringOrNumericLiteralLike: ()=>Yi,
            isStringOrRegularExpressionOrTemplateLiteral: ()=>isStringOrRegularExpressionOrTemplateLiteral,
            isStringTextContainingNode: ()=>nA,
            isSuperCall: ()=>vD,
            isSuperKeyword: ()=>zf,
            isSuperOrSuperProperty: ()=>$D,
            isSuperProperty: ()=>vd,
            isSupportedSourceFileName: ()=>QO,
            isSwitchStatement: ()=>$L,
            isSyntaxList: ()=>LJ,
            isSyntheticExpression: ()=>JL,
            isSyntheticReference: ()=>_J,
            isTagName: ()=>isTagName,
            isTaggedTemplateExpression: ()=>r8,
            isTaggedTemplateTag: ()=>isTaggedTemplateTag,
            isTemplateExpression: ()=>NL,
            isTemplateHead: ()=>sL,
            isTemplateLiteral: ()=>TA,
            isTemplateLiteralKind: ()=>wl,
            isTemplateLiteralToken: ()=>KC,
            isTemplateLiteralTypeNode: ()=>wL,
            isTemplateLiteralTypeSpan: ()=>xL,
            isTemplateMiddle: ()=>_L,
            isTemplateMiddleOrTemplateTail: ()=>ZC,
            isTemplateSpan: ()=>RL,
            isTemplateTail: ()=>cL,
            isTextWhiteSpaceLike: ()=>isTextWhiteSpaceLike,
            isThis: ()=>isThis,
            isThisContainerOrFunctionBlock: ()=>WD,
            isThisIdentifier: ()=>Sm,
            isThisInTypeQuery: ()=>BI,
            isThisInitializedDeclaration: ()=>YD,
            isThisInitializedObjectBindingExpression: ()=>KD,
            isThisProperty: ()=>QD,
            isThisTypeNode: ()=>Sb,
            isThisTypeParameter: ()=>ex,
            isThisTypePredicate: ()=>JD,
            isThrowStatement: ()=>QL,
            isToken: ()=>QC,
            isTokenKind: ()=>Q4,
            isTraceEnabled: ()=>isTraceEnabled,
            isTransientSymbol: ()=>E0,
            isTrivia: ()=>iI,
            isTryStatement: ()=>YL,
            isTupleTypeNode: ()=>Hx,
            isTypeAlias: ()=>IP,
            isTypeAliasDeclaration: ()=>Db,
            isTypeAssertionExpression: ()=>AL,
            isTypeDeclaration: ()=>tx,
            isTypeElement: ()=>Wg,
            isTypeKeyword: ()=>isTypeKeyword,
            isTypeKeywordToken: ()=>isTypeKeywordToken,
            isTypeKeywordTokenOrIdentifier: ()=>isTypeKeywordTokenOrIdentifier,
            isTypeLiteralNode: ()=>Im,
            isTypeNode: ()=>S0,
            isTypeNodeKind: ()=>wS,
            isTypeOfExpression: ()=>DL,
            isTypeOnlyExportDeclaration: ()=>K4,
            isTypeOnlyImportDeclaration: ()=>Y4,
            isTypeOnlyImportOrExportDeclaration: ()=>tA,
            isTypeOperatorNode: ()=>Zx,
            isTypeParameterDeclaration: ()=>Lo,
            isTypePredicateNode: ()=>zx,
            isTypeQueryNode: ()=>Wx,
            isTypeReferenceNode: ()=>J_,
            isTypeReferenceType: ()=>KA,
            isTypeUsableAsPropertyName: ()=>jM,
            isUMDExportSymbol: ()=>GN,
            isUnaryExpression: ()=>pT,
            isUnaryExpressionWithWrite: ()=>SA,
            isUnicodeIdentifierStart: ()=>Yv,
            isUnionTypeNode: ()=>$x,
            isUnparsedNode: ()=>XC,
            isUnparsedPrepend: ()=>hJ,
            isUnparsedSource: ()=>gJ,
            isUnparsedTextLike: ()=>$4,
            isUrl: ()=>BE,
            isValidBigIntString: ()=>GS,
            isValidESSymbolDeclaration: ()=>PD,
            isValidTypeOnlyAliasUseSite: ()=>lM,
            isValueSignatureDeclaration: ()=>zP,
            isVarAwaitUsing: ()=>yD,
            isVarConst: ()=>BT,
            isVarUsing: ()=>gD,
            isVariableDeclaration: ()=>Li,
            isVariableDeclarationInVariableStatement: ()=>qT,
            isVariableDeclarationInitializedToBareOrAccessedRequire: ()=>mm,
            isVariableDeclarationInitializedToRequire: ()=>KT,
            isVariableDeclarationList: ()=>kb,
            isVariableLike: ()=>l2,
            isVariableLikeOrAccessor: ()=>kD,
            isVariableStatement: ()=>ls,
            isVoidExpression: ()=>wb,
            isWatchSet: ()=>LN,
            isWhileStatement: ()=>qL,
            isWhiteSpaceLike: ()=>ka,
            isWhiteSpaceSingleLine: ()=>Mo,
            isWithStatement: ()=>XL,
            isWriteAccess: ()=>UN,
            isWriteOnlyAccess: ()=>BN,
            isYieldExpression: ()=>OL,
            jsxModeNeedsExplicitImport: ()=>jsxModeNeedsExplicitImport,
            keywordPart: ()=>keywordPart,
            last: ()=>Ea,
            lastOrUndefined: ()=>Pi,
            length: ()=>eo,
            libMap: ()=>libMap,
            libs: ()=>libs,
            lineBreakPart: ()=>lineBreakPart,
            linkNamePart: ()=>linkNamePart,
            linkPart: ()=>linkPart,
            linkTextPart: ()=>linkTextPart,
            listFiles: ()=>listFiles,
            loadModuleFromGlobalCache: ()=>loadModuleFromGlobalCache,
            loadWithModeAwareCache: ()=>loadWithModeAwareCache,
            makeIdentifierFromModuleName: ()=>Bk,
            makeImport: ()=>makeImport,
            makeImportIfNecessary: ()=>makeImportIfNecessary,
            makeStringLiteral: ()=>makeStringLiteral,
            mangleScopedPackageName: ()=>mangleScopedPackageName,
            map: ()=>xa,
            mapAllOrFail: ()=>p9,
            mapDefined: ()=>wa,
            mapDefinedEntries: ()=>d9,
            mapDefinedIterator: ()=>f9,
            mapEntries: ()=>b9,
            mapIterator: ()=>c9,
            mapOneOrMany: ()=>mapOneOrMany,
            mapToDisplayParts: ()=>mapToDisplayParts,
            matchFiles: ()=>WO,
            matchPatternOrExact: ()=>rM,
            matchedText: ()=>vE,
            matchesExclude: ()=>matchesExclude,
            maybeBind: ()=>sn,
            maybeSetLocalizedDiagnosticMessages: ()=>AS,
            memoize: ()=>Yf,
            memoizeCached: ()=>iE,
            memoizeOne: ()=>Fr,
            memoizeWeak: ()=>rE,
            metadataHelper: ()=>metadataHelper,
            min: ()=>sE,
            minAndMax: ()=>aM,
            missingFileModifiedTime: ()=>missingFileModifiedTime,
            modifierToFlag: ()=>z2,
            modifiersToFlags: ()=>hr,
            moduleOptionDeclaration: ()=>moduleOptionDeclaration,
            moduleResolutionIsEqualTo: ()=>fk,
            moduleResolutionNameAndModeGetter: ()=>moduleResolutionNameAndModeGetter,
            moduleResolutionOptionDeclarations: ()=>moduleResolutionOptionDeclarations,
            moduleResolutionSupportsPackageJsonExportsAndImports: ()=>$2,
            moduleResolutionUsesNodeModules: ()=>moduleResolutionUsesNodeModules,
            moduleSpecifiers: ()=>ts_moduleSpecifiers_exports,
            moveEmitHelpers: ()=>moveEmitHelpers,
            moveRangeEnd: ()=>bN,
            moveRangePastDecorators: ()=>hS,
            moveRangePastModifiers: ()=>vN,
            moveRangePos: ()=>Ed,
            moveSyntheticComments: ()=>moveSyntheticComments,
            mutateMap: ()=>WN,
            mutateMapSkippingNewValues: ()=>TS,
            needsParentheses: ()=>needsParentheses,
            needsScopeMarker: ()=>kA,
            newCaseClauseTracker: ()=>newCaseClauseTracker,
            newPrivateEnvironment: ()=>newPrivateEnvironment,
            noEmitNotification: ()=>noEmitNotification,
            noEmitSubstitution: ()=>noEmitSubstitution,
            noTransformers: ()=>noTransformers,
            noTruncationMaximumTruncationLength: ()=>cx,
            nodeCanBeDecorated: ()=>HT,
            nodeHasName: ()=>C4,
            nodeIsDecorated: ()=>l_,
            nodeIsMissing: ()=>Vi,
            nodeIsPresent: ()=>Cl,
            nodeIsSynthesized: ()=>ya,
            nodeModuleNameResolver: ()=>nodeModuleNameResolver,
            nodeModulesPathPart: ()=>nodeModulesPathPart,
            nodeNextJsonConfigResolver: ()=>nodeNextJsonConfigResolver,
            nodeOrChildIsDecorated: ()=>N0,
            nodeOverlapsWithStartEnd: ()=>nodeOverlapsWithStartEnd,
            nodePosToString: ()=>wk,
            nodeSeenTracker: ()=>nodeSeenTracker,
            nodeStartsNewLexicalEnvironment: ()=>mI,
            nodeToDisplayParts: ()=>nodeToDisplayParts,
            noop: ()=>gr,
            noopFileWatcher: ()=>noopFileWatcher,
            normalizePath: ()=>br,
            normalizeSlashes: ()=>Vo,
            not: ()=>xE,
            notImplemented: ()=>nE,
            notImplementedResolver: ()=>notImplementedResolver,
            nullNodeConverters: ()=>nullNodeConverters,
            nullParenthesizerRules: ()=>pb,
            nullTransformationContext: ()=>nullTransformationContext,
            objectAllocator: ()=>Ct,
            operatorPart: ()=>operatorPart,
            optionDeclarations: ()=>optionDeclarations,
            optionMapToObject: ()=>optionMapToObject,
            optionsAffectingProgramStructure: ()=>optionsAffectingProgramStructure,
            optionsForBuild: ()=>optionsForBuild,
            optionsForWatch: ()=>optionsForWatch,
            optionsHaveChanges: ()=>w_,
            optionsHaveModuleResolutionChanges: ()=>xT,
            or: ()=>yg,
            orderedRemoveItem: ()=>yE,
            orderedRemoveItemAt: ()=>Iv,
            outFile: ()=>vm,
            packageIdToPackageName: ()=>wT,
            packageIdToString: ()=>hk,
            paramHelper: ()=>paramHelper,
            parameterIsThisKeyword: ()=>$l,
            parameterNamePart: ()=>parameterNamePart,
            parseBaseNodeFactory: ()=>og,
            parseBigInt: ()=>cM,
            parseBuildCommand: ()=>parseBuildCommand,
            parseCommandLine: ()=>parseCommandLine,
            parseCommandLineWorker: ()=>parseCommandLineWorker,
            parseConfigFileTextToJson: ()=>parseConfigFileTextToJson,
            parseConfigFileWithSystem: ()=>parseConfigFileWithSystem,
            parseConfigHostFromCompilerHostLike: ()=>parseConfigHostFromCompilerHostLike,
            parseCustomTypeOption: ()=>parseCustomTypeOption,
            parseIsolatedEntityName: ()=>tj,
            parseIsolatedJSDocComment: ()=>rj,
            parseJSDocTypeExpressionForTests: ()=>ij,
            parseJsonConfigFileContent: ()=>parseJsonConfigFileContent,
            parseJsonSourceFileConfigFileContent: ()=>parseJsonSourceFileConfigFileContent,
            parseJsonText: ()=>nj,
            parseListTypeOption: ()=>parseListTypeOption,
            parseNodeFactory: ()=>q_,
            parseNodeModuleFromPath: ()=>parseNodeModuleFromPath,
            parsePackageName: ()=>parsePackageName,
            parsePseudoBigInt: ()=>Am,
            parseValidBigInt: ()=>HS,
            patchWriteFileEnsuringDirectory: ()=>patchWriteFileEnsuringDirectory,
            pathContainsNodeModules: ()=>pathContainsNodeModules,
            pathIsAbsolute: ()=>Tg,
            pathIsBareSpecifier: ()=>qE,
            pathIsRelative: ()=>as,
            patternText: ()=>bE,
            perfLogger: ()=>ed,
            performIncrementalCompilation: ()=>performIncrementalCompilation,
            performance: ()=>ts_performance_exports,
            plainJSErrors: ()=>plainJSErrors,
            positionBelongsToNode: ()=>positionBelongsToNode,
            positionIsASICandidate: ()=>positionIsASICandidate,
            positionIsSynthesized: ()=>Da,
            positionsAreOnSameLine: ()=>D_,
            preProcessFile: ()=>preProcessFile,
            probablyUsesSemicolons: ()=>probablyUsesSemicolons,
            processCommentPragmas: ()=>W8,
            processPragmasIntoFields: ()=>V8,
            processTaggedTemplateExpression: ()=>processTaggedTemplateExpression,
            programContainsEsModules: ()=>programContainsEsModules,
            programContainsModules: ()=>programContainsModules,
            projectReferenceIsEqualTo: ()=>pk,
            propKeyHelper: ()=>propKeyHelper,
            propertyNamePart: ()=>propertyNamePart,
            pseudoBigIntToString: ()=>ib,
            punctuationPart: ()=>punctuationPart,
            pushIfUnique: ()=>Ll,
            quote: ()=>quote,
            quotePreferenceFromString: ()=>quotePreferenceFromString,
            rangeContainsPosition: ()=>rangeContainsPosition,
            rangeContainsPositionExclusive: ()=>rangeContainsPositionExclusive,
            rangeContainsRange: ()=>rangeContainsRange,
            rangeContainsRangeExclusive: ()=>rangeContainsRangeExclusive,
            rangeContainsStartEnd: ()=>rangeContainsStartEnd,
            rangeEndIsOnSameLineAsRangeStart: ()=>CN,
            rangeEndPositionsAreOnSameLine: ()=>EN,
            rangeEquals: ()=>O9,
            rangeIsOnSingleLine: ()=>xN,
            rangeOfNode: ()=>oM,
            rangeOfTypeParameters: ()=>sM,
            rangeOverlapsWithStartEnd: ()=>rangeOverlapsWithStartEnd,
            rangeStartIsOnSameLineAsRangeEnd: ()=>yS,
            rangeStartPositionsAreOnSameLine: ()=>wN,
            readBuilderProgram: ()=>readBuilderProgram,
            readConfigFile: ()=>readConfigFile,
            readHelper: ()=>readHelper,
            readJson: ()=>gN,
            readJsonConfigFile: ()=>readJsonConfigFile,
            readJsonOrUndefined: ()=>fS,
            reduceEachLeadingCommentRange: ()=>Kv,
            reduceEachTrailingCommentRange: ()=>Zv,
            reduceLeft: ()=>Bd,
            reduceLeftIterator: ()=>n9,
            reducePathComponents: ()=>Ca,
            refactor: ()=>ts_refactor_exports,
            regExpEscape: ()=>UO,
            relativeComplement: ()=>P9,
            removeAllComments: ()=>removeAllComments,
            removeEmitHelper: ()=>removeEmitHelper,
            removeExtension: ()=>zS,
            removeFileExtension: ()=>Dl,
            removeIgnoredPath: ()=>removeIgnoredPath,
            removeMinAndVersionNumbers: ()=>hE,
            removeOptionality: ()=>removeOptionality,
            removePrefix: ()=>TE,
            removeSuffix: ()=>dE,
            removeTrailingDirectorySeparator: ()=>v_,
            repeatString: ()=>repeatString,
            replaceElement: ()=>j9,
            resolutionExtensionIsTSOrJson: ()=>eM,
            resolveConfigFileProjectName: ()=>resolveConfigFileProjectName,
            resolveJSModule: ()=>resolveJSModule,
            resolveLibrary: ()=>resolveLibrary,
            resolveModuleName: ()=>resolveModuleName,
            resolveModuleNameFromCache: ()=>resolveModuleNameFromCache,
            resolvePackageNameToPackageJson: ()=>resolvePackageNameToPackageJson,
            resolvePath: ()=>g0,
            resolveProjectReferencePath: ()=>resolveProjectReferencePath,
            resolveTripleslashReference: ()=>resolveTripleslashReference,
            resolveTypeReferenceDirective: ()=>resolveTypeReferenceDirective,
            resolvingEmptyArray: ()=>sx,
            restHelper: ()=>restHelper,
            returnFalse: ()=>Qf,
            returnNoopFileWatcher: ()=>returnNoopFileWatcher,
            returnTrue: ()=>Ev,
            returnUndefined: ()=>tE,
            returnsPromise: ()=>returnsPromise,
            runInitializersHelper: ()=>runInitializersHelper,
            sameFlatMap: ()=>mv,
            sameMap: ()=>l9,
            sameMapping: ()=>sameMapping,
            scanShebangTrivia: ()=>Pg,
            scanTokenAtPosition: ()=>pD,
            scanner: ()=>qo,
            screenStartingMessageCodes: ()=>screenStartingMessageCodes,
            semanticDiagnosticsOptionDeclarations: ()=>semanticDiagnosticsOptionDeclarations,
            serializeCompilerOptions: ()=>serializeCompilerOptions,
            server: ()=>A7,
            servicesVersion: ()=>l7,
            setCommentRange: ()=>setCommentRange,
            setConfigFileInOptions: ()=>setConfigFileInOptions,
            setConstantValue: ()=>setConstantValue,
            setEachParent: ()=>a_,
            setEmitFlags: ()=>setEmitFlags,
            setFunctionNameHelper: ()=>setFunctionNameHelper,
            setGetSourceFileAsHashVersioned: ()=>setGetSourceFileAsHashVersioned,
            setIdentifierAutoGenerate: ()=>setIdentifierAutoGenerate,
            setIdentifierGeneratedImportReference: ()=>setIdentifierGeneratedImportReference,
            setIdentifierTypeArguments: ()=>setIdentifierTypeArguments,
            setInternalEmitFlags: ()=>setInternalEmitFlags,
            setLocalizedDiagnosticMessages: ()=>CS,
            setModuleDefaultHelper: ()=>setModuleDefaultHelper,
            setNodeFlags: ()=>hM,
            setObjectAllocator: ()=>ES,
            setOriginalNode: ()=>nr,
            setParent: ()=>Qi,
            setParentRecursive: ()=>$S,
            setPrivateIdentifier: ()=>setPrivateIdentifier,
            setSnippetElement: ()=>setSnippetElement,
            setSourceMapRange: ()=>setSourceMapRange,
            setStackTraceLimit: ()=>setStackTraceLimit,
            setStartsOnNewLine: ()=>setStartsOnNewLine,
            setSyntheticLeadingComments: ()=>setSyntheticLeadingComments,
            setSyntheticTrailingComments: ()=>setSyntheticTrailingComments,
            setSys: ()=>setSys,
            setSysLog: ()=>setSysLog,
            setTextRange: ()=>We,
            setTextRangeEnd: ()=>XS,
            setTextRangePos: ()=>Ad,
            setTextRangePosEnd: ()=>Za,
            setTextRangePosWidth: ()=>kd,
            setTokenSourceMapRange: ()=>setTokenSourceMapRange,
            setTypeNode: ()=>setTypeNode,
            setUILocale: ()=>Dv,
            setValueDeclaration: ()=>wP,
            shouldAllowImportingTsExtension: ()=>shouldAllowImportingTsExtension,
            shouldPreserveConstEnums: ()=>CO,
            shouldResolveJsRequire: ()=>xO,
            shouldUseUriStyleNodeCoreModules: ()=>shouldUseUriStyleNodeCoreModules,
            showModuleSpecifier: ()=>XN,
            signatureHasLiteralTypes: ()=>signatureHasLiteralTypes,
            signatureHasRestParameter: ()=>signatureHasRestParameter,
            signatureToDisplayParts: ()=>signatureToDisplayParts,
            single: ()=>J9,
            singleElementArray: ()=>Kf,
            singleIterator: ()=>y9,
            singleOrMany: ()=>R9,
            singleOrUndefined: ()=>Fd,
            skipAlias: ()=>jN,
            skipAssertions: ()=>eR,
            skipConstraint: ()=>skipConstraint,
            skipOuterExpressions: ()=>ms,
            skipParentheses: ()=>C_,
            skipPartiallyEmittedExpressions: ()=>im,
            skipTrivia: ()=>Mt,
            skipTypeChecking: ()=>_M,
            skipTypeParentheses: ()=>HP,
            skipWhile: ()=>kE,
            sliceAfter: ()=>iM,
            some: ()=>Ze,
            sort: ()=>$f,
            sortAndDeduplicate: ()=>yv,
            sortAndDeduplicateDiagnostics: ()=>pC,
            sourceFileAffectingCompilerOptions: ()=>sourceFileAffectingCompilerOptions,
            sourceFileMayBeEmitted: ()=>J0,
            sourceMapCommentRegExp: ()=>sourceMapCommentRegExp,
            sourceMapCommentRegExpDontCareLineStart: ()=>sourceMapCommentRegExpDontCareLineStart,
            spacePart: ()=>spacePart,
            spanMap: ()=>g9,
            spreadArrayHelper: ()=>spreadArrayHelper,
            stableSort: ()=>vv,
            startEndContainsRange: ()=>startEndContainsRange,
            startEndOverlapsWithStartEnd: ()=>startEndOverlapsWithStartEnd,
            startOnNewLine: ()=>zm,
            startTracing: ()=>startTracing,
            startsWith: ()=>Hn,
            startsWithDirectory: ()=>QE,
            startsWithUnderscore: ()=>startsWithUnderscore,
            startsWithUseStrict: ()=>A8,
            stringContainsAt: ()=>stringContainsAt,
            stringToToken: ()=>Fl,
            stripQuotes: ()=>EI,
            supportedDeclarationExtensions: ()=>ub,
            supportedJSExtensions: ()=>Y0,
            supportedJSExtensionsFlat: ()=>lb,
            supportedLocaleDirectories: ()=>Kg,
            supportedTSExtensions: ()=>Bo,
            supportedTSExtensionsFlat: ()=>cb,
            supportedTSImplementationExtensions: ()=>Dx,
            suppressLeadingAndTrailingTrivia: ()=>suppressLeadingAndTrailingTrivia,
            suppressLeadingTrivia: ()=>suppressLeadingTrivia,
            suppressTrailingTrivia: ()=>suppressTrailingTrivia,
            symbolEscapedNameNoDefault: ()=>symbolEscapedNameNoDefault,
            symbolName: ()=>gd,
            symbolNameNoDefault: ()=>symbolNameNoDefault,
            symbolPart: ()=>symbolPart,
            symbolToDisplayParts: ()=>symbolToDisplayParts,
            syntaxMayBeASICandidate: ()=>syntaxMayBeASICandidate,
            syntaxRequiresTrailingSemicolonOrASI: ()=>syntaxRequiresTrailingSemicolonOrASI,
            sys: ()=>y0,
            sysLog: ()=>sysLog,
            tagNamesAreEquivalent: ()=>Ai,
            takeWhile: ()=>AE,
            targetOptionDeclaration: ()=>targetOptionDeclaration,
            templateObjectHelper: ()=>templateObjectHelper,
            testFormatSettings: ()=>testFormatSettings,
            textChangeRangeIsUnchanged: ()=>b4,
            textChangeRangeNewSpan: ()=>Ys,
            textChanges: ()=>ts_textChanges_exports,
            textOrKeywordPart: ()=>textOrKeywordPart,
            textPart: ()=>textPart,
            textRangeContainsPositionInclusive: ()=>dC,
            textSpanContainsPosition: ()=>fC,
            textSpanContainsTextSpan: ()=>mC,
            textSpanEnd: ()=>tn,
            textSpanIntersection: ()=>g4,
            textSpanIntersectsWith: ()=>gC,
            textSpanIntersectsWithPosition: ()=>bC,
            textSpanIntersectsWithTextSpan: ()=>yC,
            textSpanIsEmpty: ()=>h4,
            textSpanOverlap: ()=>y4,
            textSpanOverlapsWith: ()=>hC,
            textSpansEqual: ()=>textSpansEqual,
            textToKeywordObj: ()=>pl,
            timestamp: ()=>ga,
            toArray: ()=>Nf,
            toBuilderFileEmit: ()=>toBuilderFileEmit,
            toBuilderStateFileInfoForMultiEmit: ()=>toBuilderStateFileInfoForMultiEmit,
            toEditorSettings: ()=>ll,
            toFileNameLowerCase: ()=>Av,
            toLowerCase: ()=>Cv,
            toPath: ()=>Di,
            toProgramEmitPending: ()=>toProgramEmitPending,
            tokenIsIdentifierOrKeyword: ()=>wt,
            tokenIsIdentifierOrKeywordOrGreaterThan: ()=>Qv,
            tokenToString: ()=>en,
            trace: ()=>trace,
            tracing: ()=>ba,
            tracingEnabled: ()=>tracingEnabled,
            transform: ()=>transform,
            transformClassFields: ()=>transformClassFields,
            transformDeclarations: ()=>transformDeclarations,
            transformECMAScriptModule: ()=>transformECMAScriptModule,
            transformES2015: ()=>transformES2015,
            transformES2016: ()=>transformES2016,
            transformES2017: ()=>transformES2017,
            transformES2018: ()=>transformES2018,
            transformES2019: ()=>transformES2019,
            transformES2020: ()=>transformES2020,
            transformES2021: ()=>transformES2021,
            transformES5: ()=>transformES5,
            transformESDecorators: ()=>transformESDecorators,
            transformESNext: ()=>transformESNext,
            transformGenerators: ()=>transformGenerators,
            transformJsx: ()=>transformJsx,
            transformLegacyDecorators: ()=>transformLegacyDecorators,
            transformModule: ()=>transformModule,
            transformNamedEvaluation: ()=>transformNamedEvaluation,
            transformNodeModule: ()=>transformNodeModule,
            transformNodes: ()=>transformNodes,
            transformSystemModule: ()=>transformSystemModule,
            transformTypeScript: ()=>transformTypeScript,
            transpile: ()=>transpile,
            transpileModule: ()=>transpileModule,
            transpileOptionValueCompilerOptions: ()=>transpileOptionValueCompilerOptions,
            tryAddToSet: ()=>h9,
            tryAndIgnoreErrors: ()=>tryAndIgnoreErrors,
            tryCast: ()=>Ur,
            tryDirectoryExists: ()=>tryDirectoryExists,
            tryExtractTSExtension: ()=>fN,
            tryFileExists: ()=>tryFileExists,
            tryGetClassExtendingExpressionWithTypeArguments: ()=>sS,
            tryGetClassImplementingOrExtendingExpressionWithTypeArguments: ()=>_S,
            tryGetDirectories: ()=>tryGetDirectories,
            tryGetExtensionFromPath: ()=>nb,
            tryGetImportFromModuleSpecifier: ()=>s3,
            tryGetJSDocSatisfiesTypeNode: ()=>ax,
            tryGetModuleNameFromFile: ()=>I8,
            tryGetModuleSpecifierFromDeclaration: ()=>CP,
            tryGetNativePerformanceHooks: ()=>OE,
            tryGetPropertyAccessOrIdentifierToString: ()=>U0,
            tryGetPropertyNameOfBindingOrAssignmentElement: ()=>O8,
            tryGetSourceMappingURL: ()=>tryGetSourceMappingURL,
            tryGetTextOfPropertyName: ()=>n2,
            tryIOAndConsumeErrors: ()=>tryIOAndConsumeErrors,
            tryParsePattern: ()=>WS,
            tryParsePatterns: ()=>ZO,
            tryParseRawSourceMap: ()=>tryParseRawSourceMap,
            tryReadDirectory: ()=>tryReadDirectory,
            tryReadFile: ()=>tryReadFile,
            tryRemoveDirectoryPrefix: ()=>BO,
            tryRemoveExtension: ()=>qS,
            tryRemovePrefix: ()=>Mv,
            tryRemoveSuffix: ()=>mE,
            typeAcquisitionDeclarations: ()=>typeAcquisitionDeclarations,
            typeAliasNamePart: ()=>typeAliasNamePart,
            typeDirectiveIsEqualTo: ()=>yk,
            typeKeywords: ()=>typeKeywords,
            typeParameterNamePart: ()=>typeParameterNamePart,
            typeReferenceResolutionNameAndModeGetter: ()=>typeReferenceResolutionNameAndModeGetter,
            typeToDisplayParts: ()=>typeToDisplayParts,
            unchangedPollThresholds: ()=>unchangedPollThresholds,
            unchangedTextChangeRange: ()=>Yg,
            unescapeLeadingUnderscores: ()=>Go,
            unmangleScopedPackageName: ()=>unmangleScopedPackageName,
            unorderedRemoveItem: ()=>Nv,
            unorderedRemoveItemAt: ()=>mg,
            unreachableCodeIsError: ()=>bO,
            unusedLabelIsError: ()=>vO,
            unwrapInnermostStatementOfLabel: ()=>ND,
            updateErrorForNoInputFiles: ()=>updateErrorForNoInputFiles,
            updateLanguageServiceSourceFile: ()=>s7,
            updateMissingFilePathsWatch: ()=>updateMissingFilePathsWatch,
            updatePackageJsonWatch: ()=>updatePackageJsonWatch,
            updateResolutionField: ()=>updateResolutionField,
            updateSharedExtendedConfigFileWatcher: ()=>updateSharedExtendedConfigFileWatcher,
            updateSourceFile: ()=>Yb,
            updateWatchingWildcardDirectories: ()=>updateWatchingWildcardDirectories,
            usesExtensionsOnImports: ()=>US,
            usingSingleLineStringWriter: ()=>uk,
            utf16EncodeAsString: ()=>Mf,
            validateLocaleAndSetLanguage: ()=>wC,
            valuesHelper: ()=>valuesHelper,
            version: ()=>Xf,
            versionMajorMinor: ()=>jd,
            visitArray: ()=>visitArray,
            visitCommaListElements: ()=>visitCommaListElements,
            visitEachChild: ()=>visitEachChild,
            visitFunctionBody: ()=>visitFunctionBody,
            visitIterationBody: ()=>visitIterationBody,
            visitLexicalEnvironment: ()=>visitLexicalEnvironment,
            visitNode: ()=>visitNode,
            visitNodes: ()=>visitNodes2,
            visitParameterList: ()=>visitParameterList,
            walkUpBindingElementsAndPatterns: ()=>x4,
            walkUpLexicalEnvironments: ()=>walkUpLexicalEnvironments,
            walkUpOuterExpressions: ()=>ZJ,
            walkUpParenthesizedExpressions: ()=>h3,
            walkUpParenthesizedTypes: ()=>WP,
            walkUpParenthesizedTypesAndGetParentAndChild: ()=>VP,
            whitespaceOrMapCommentRegExp: ()=>whitespaceOrMapCommentRegExp,
            writeCommentRange: ()=>GI,
            writeFile: ()=>LI,
            writeFileEnsuringDirectories: ()=>JI,
            zipWith: ()=>iy
        });
        var lv = It({
            "src/typescript/_namespaces/ts.ts" () {
                "use strict";
                En(), Kb(), T7(), YF(), KF();
            }
        }), ZF = K5({
            "src/typescript/typescript.ts" (e, t) {
                lv(), lv(), typeof console < "u" && (I.loggingHost = {
                    log (n, a) {
                        switch(n){
                            case 1:
                                return console.error(a);
                            case 2:
                                return console.warn(a);
                            case 3:
                                return console.log(a);
                            case 4:
                                return console.log(a);
                        }
                    }
                }), t.exports = k7;
            }
        });
        D7.exports = ZF();
    });
    var t6 = mt((P7)=>{
        P7.typescriptVersionIsAtLeast = new Proxy({}, {
            get: ()=>!0
        });
    });
    var n6 = mt((li)=>{
        "use strict";
        var eB = li && li.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), tB = li && li.__setModuleDefault || (Object.create ? function(e, t) {
            Object.defineProperty(e, "default", {
                enumerable: !0,
                value: t
            });
        } : function(e, t) {
            e.default = t;
        }), nB = li && li.__importStar || function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && eB(t, e, n);
            return tB(t, e), t;
        };
        Object.defineProperty(li, "__esModule", {
            value: !0
        });
        li.getDecorators = li.getModifiers = void 0;
        var z_ = nB(lt()), rB = t6(), I7 = rB.typescriptVersionIsAtLeast["4.8"];
        function iB(e, t = !1) {
            var n;
            if (e != null) {
                if (I7) {
                    if (t || z_.canHaveModifiers(e)) {
                        let a = z_.getModifiers(e);
                        return a ? Array.from(a) : void 0;
                    }
                    return;
                }
                return (n = e.modifiers) == null ? void 0 : n.filter((a)=>!z_.isDecorator(a));
            }
        }
        li.getModifiers = iB;
        function aB(e, t = !1) {
            var n;
            if (e != null) {
                if (I7) {
                    if (t || z_.canHaveDecorators(e)) {
                        let a = z_.getDecorators(e);
                        return a ? Array.from(a) : void 0;
                    }
                    return;
                }
                return (n = e.decorators) == null ? void 0 : n.filter(z_.isDecorator);
            }
        }
        li.getDecorators = aB;
    });
    var O7 = mt((N7)=>{
        N7.xhtmlEntities = {};
    });
    var r6 = mt((W_)=>{
        "use strict";
        Object.defineProperty(W_, "__esModule", {
            value: !0
        });
        W_.AST_TOKEN_TYPES = W_.AST_NODE_TYPES = void 0;
        var M7;
        (function(e) {
            e.AccessorProperty = "AccessorProperty", e.ArrayExpression = "ArrayExpression", e.ArrayPattern = "ArrayPattern", e.ArrowFunctionExpression = "ArrowFunctionExpression", e.AssignmentExpression = "AssignmentExpression", e.AssignmentPattern = "AssignmentPattern", e.AwaitExpression = "AwaitExpression", e.BinaryExpression = "BinaryExpression", e.BlockStatement = "BlockStatement", e.BreakStatement = "BreakStatement", e.CallExpression = "CallExpression", e.CatchClause = "CatchClause", e.ChainExpression = "ChainExpression", e.ClassBody = "ClassBody", e.ClassDeclaration = "ClassDeclaration", e.ClassExpression = "ClassExpression", e.ConditionalExpression = "ConditionalExpression", e.ContinueStatement = "ContinueStatement", e.DebuggerStatement = "DebuggerStatement", e.Decorator = "Decorator", e.DoWhileStatement = "DoWhileStatement", e.EmptyStatement = "EmptyStatement", e.ExportAllDeclaration = "ExportAllDeclaration", e.ExportDefaultDeclaration = "ExportDefaultDeclaration", e.ExportNamedDeclaration = "ExportNamedDeclaration", e.ExportSpecifier = "ExportSpecifier", e.ExpressionStatement = "ExpressionStatement", e.ForInStatement = "ForInStatement", e.ForOfStatement = "ForOfStatement", e.ForStatement = "ForStatement", e.FunctionDeclaration = "FunctionDeclaration", e.FunctionExpression = "FunctionExpression", e.Identifier = "Identifier", e.IfStatement = "IfStatement", e.ImportAttribute = "ImportAttribute", e.ImportDeclaration = "ImportDeclaration", e.ImportDefaultSpecifier = "ImportDefaultSpecifier", e.ImportExpression = "ImportExpression", e.ImportNamespaceSpecifier = "ImportNamespaceSpecifier", e.ImportSpecifier = "ImportSpecifier", e.JSXAttribute = "JSXAttribute", e.JSXClosingElement = "JSXClosingElement", e.JSXClosingFragment = "JSXClosingFragment", e.JSXElement = "JSXElement", e.JSXEmptyExpression = "JSXEmptyExpression", e.JSXExpressionContainer = "JSXExpressionContainer", e.JSXFragment = "JSXFragment", e.JSXIdentifier = "JSXIdentifier", e.JSXMemberExpression = "JSXMemberExpression", e.JSXNamespacedName = "JSXNamespacedName", e.JSXOpeningElement = "JSXOpeningElement", e.JSXOpeningFragment = "JSXOpeningFragment", e.JSXSpreadAttribute = "JSXSpreadAttribute", e.JSXSpreadChild = "JSXSpreadChild", e.JSXText = "JSXText", e.LabeledStatement = "LabeledStatement", e.Literal = "Literal", e.LogicalExpression = "LogicalExpression", e.MemberExpression = "MemberExpression", e.MetaProperty = "MetaProperty", e.MethodDefinition = "MethodDefinition", e.NewExpression = "NewExpression", e.ObjectExpression = "ObjectExpression", e.ObjectPattern = "ObjectPattern", e.PrivateIdentifier = "PrivateIdentifier", e.Program = "Program", e.Property = "Property", e.PropertyDefinition = "PropertyDefinition", e.RestElement = "RestElement", e.ReturnStatement = "ReturnStatement", e.SequenceExpression = "SequenceExpression", e.SpreadElement = "SpreadElement", e.StaticBlock = "StaticBlock", e.Super = "Super", e.SwitchCase = "SwitchCase", e.SwitchStatement = "SwitchStatement", e.TaggedTemplateExpression = "TaggedTemplateExpression", e.TemplateElement = "TemplateElement", e.TemplateLiteral = "TemplateLiteral", e.ThisExpression = "ThisExpression", e.ThrowStatement = "ThrowStatement", e.TryStatement = "TryStatement", e.UnaryExpression = "UnaryExpression", e.UpdateExpression = "UpdateExpression", e.VariableDeclaration = "VariableDeclaration", e.VariableDeclarator = "VariableDeclarator", e.WhileStatement = "WhileStatement", e.WithStatement = "WithStatement", e.YieldExpression = "YieldExpression", e.TSAbstractAccessorProperty = "TSAbstractAccessorProperty", e.TSAbstractKeyword = "TSAbstractKeyword", e.TSAbstractMethodDefinition = "TSAbstractMethodDefinition", e.TSAbstractPropertyDefinition = "TSAbstractPropertyDefinition", e.TSAnyKeyword = "TSAnyKeyword", e.TSArrayType = "TSArrayType", e.TSAsExpression = "TSAsExpression", e.TSAsyncKeyword = "TSAsyncKeyword", e.TSBigIntKeyword = "TSBigIntKeyword", e.TSBooleanKeyword = "TSBooleanKeyword", e.TSCallSignatureDeclaration = "TSCallSignatureDeclaration", e.TSClassImplements = "TSClassImplements", e.TSConditionalType = "TSConditionalType", e.TSConstructorType = "TSConstructorType", e.TSConstructSignatureDeclaration = "TSConstructSignatureDeclaration", e.TSDeclareFunction = "TSDeclareFunction", e.TSDeclareKeyword = "TSDeclareKeyword", e.TSEmptyBodyFunctionExpression = "TSEmptyBodyFunctionExpression", e.TSEnumDeclaration = "TSEnumDeclaration", e.TSEnumMember = "TSEnumMember", e.TSExportAssignment = "TSExportAssignment", e.TSExportKeyword = "TSExportKeyword", e.TSExternalModuleReference = "TSExternalModuleReference", e.TSFunctionType = "TSFunctionType", e.TSInstantiationExpression = "TSInstantiationExpression", e.TSImportEqualsDeclaration = "TSImportEqualsDeclaration", e.TSImportType = "TSImportType", e.TSIndexedAccessType = "TSIndexedAccessType", e.TSIndexSignature = "TSIndexSignature", e.TSInferType = "TSInferType", e.TSInterfaceBody = "TSInterfaceBody", e.TSInterfaceDeclaration = "TSInterfaceDeclaration", e.TSInterfaceHeritage = "TSInterfaceHeritage", e.TSIntersectionType = "TSIntersectionType", e.TSIntrinsicKeyword = "TSIntrinsicKeyword", e.TSLiteralType = "TSLiteralType", e.TSMappedType = "TSMappedType", e.TSMethodSignature = "TSMethodSignature", e.TSModuleBlock = "TSModuleBlock", e.TSModuleDeclaration = "TSModuleDeclaration", e.TSNamedTupleMember = "TSNamedTupleMember", e.TSNamespaceExportDeclaration = "TSNamespaceExportDeclaration", e.TSNeverKeyword = "TSNeverKeyword", e.TSNonNullExpression = "TSNonNullExpression", e.TSNullKeyword = "TSNullKeyword", e.TSNumberKeyword = "TSNumberKeyword", e.TSObjectKeyword = "TSObjectKeyword", e.TSOptionalType = "TSOptionalType", e.TSParameterProperty = "TSParameterProperty", e.TSPrivateKeyword = "TSPrivateKeyword", e.TSPropertySignature = "TSPropertySignature", e.TSProtectedKeyword = "TSProtectedKeyword", e.TSPublicKeyword = "TSPublicKeyword", e.TSQualifiedName = "TSQualifiedName", e.TSReadonlyKeyword = "TSReadonlyKeyword", e.TSRestType = "TSRestType", e.TSSatisfiesExpression = "TSSatisfiesExpression", e.TSStaticKeyword = "TSStaticKeyword", e.TSStringKeyword = "TSStringKeyword", e.TSSymbolKeyword = "TSSymbolKeyword", e.TSTemplateLiteralType = "TSTemplateLiteralType", e.TSThisType = "TSThisType", e.TSTupleType = "TSTupleType", e.TSTypeAliasDeclaration = "TSTypeAliasDeclaration", e.TSTypeAnnotation = "TSTypeAnnotation", e.TSTypeAssertion = "TSTypeAssertion", e.TSTypeLiteral = "TSTypeLiteral", e.TSTypeOperator = "TSTypeOperator", e.TSTypeParameter = "TSTypeParameter", e.TSTypeParameterDeclaration = "TSTypeParameterDeclaration", e.TSTypeParameterInstantiation = "TSTypeParameterInstantiation", e.TSTypePredicate = "TSTypePredicate", e.TSTypeQuery = "TSTypeQuery", e.TSTypeReference = "TSTypeReference", e.TSUndefinedKeyword = "TSUndefinedKeyword", e.TSUnionType = "TSUnionType", e.TSUnknownKeyword = "TSUnknownKeyword", e.TSVoidKeyword = "TSVoidKeyword";
        })(M7 || (W_.AST_NODE_TYPES = M7 = {}));
        var L7;
        (function(e) {
            e.Boolean = "Boolean", e.Identifier = "Identifier", e.JSXIdentifier = "JSXIdentifier", e.JSXText = "JSXText", e.Keyword = "Keyword", e.Null = "Null", e.Numeric = "Numeric", e.Punctuator = "Punctuator", e.RegularExpression = "RegularExpression", e.String = "String", e.Template = "Template", e.Block = "Block", e.Line = "Line";
        })(L7 || (W_.AST_TOKEN_TYPES = L7 = {}));
    });
    var R7 = mt((J7)=>{
        "use strict";
        Object.defineProperty(J7, "__esModule", {
            value: !0
        });
    });
    var F7 = mt((j7)=>{
        "use strict";
        Object.defineProperty(j7, "__esModule", {
            value: !0
        });
    });
    var B7 = mt((ea)=>{
        "use strict";
        var oB = ea && ea.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), sB = ea && ea.__setModuleDefault || (Object.create ? function(e, t) {
            Object.defineProperty(e, "default", {
                enumerable: !0,
                value: t
            });
        } : function(e, t) {
            e.default = t;
        }), _B = ea && ea.__importStar || function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && oB(t, e, n);
            return sB(t, e), t;
        };
        Object.defineProperty(ea, "__esModule", {
            value: !0
        });
        ea.TSESTree = void 0;
        ea.TSESTree = _B(r6());
    });
    var q7 = mt((Vr)=>{
        "use strict";
        var cB = Vr && Vr.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), i6 = Vr && Vr.__exportStar || function(e, t) {
            for(var n in e)n !== "default" && !Object.prototype.hasOwnProperty.call(t, n) && cB(t, e, n);
        };
        Object.defineProperty(Vr, "__esModule", {
            value: !0
        });
        Vr.AST_TOKEN_TYPES = Vr.AST_NODE_TYPES = void 0;
        var U7 = r6();
        Object.defineProperty(Vr, "AST_NODE_TYPES", {
            enumerable: !0,
            get: function() {
                return U7.AST_NODE_TYPES;
            }
        });
        Object.defineProperty(Vr, "AST_TOKEN_TYPES", {
            enumerable: !0,
            get: function() {
                return U7.AST_TOKEN_TYPES;
            }
        });
        i6(R7(), Vr);
        i6(F7(), Vr);
        i6(B7(), Vr);
    });
    var W7 = mt((z7)=>{
        "use strict";
        Object.defineProperty(z7, "__esModule", {
            value: !0
        });
    });
    var H7 = mt((V7)=>{
        "use strict";
        Object.defineProperty(V7, "__esModule", {
            value: !0
        });
    });
    var Wm = mt((Sr)=>{
        "use strict";
        var lB = Sr && Sr.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), G7 = Sr && Sr.__exportStar || function(e, t) {
            for(var n in e)n !== "default" && !Object.prototype.hasOwnProperty.call(t, n) && lB(t, e, n);
        };
        Object.defineProperty(Sr, "__esModule", {
            value: !0
        });
        Sr.TSESTree = Sr.AST_TOKEN_TYPES = Sr.AST_NODE_TYPES = void 0;
        var a6 = q7();
        Object.defineProperty(Sr, "AST_NODE_TYPES", {
            enumerable: !0,
            get: function() {
                return a6.AST_NODE_TYPES;
            }
        });
        Object.defineProperty(Sr, "AST_TOKEN_TYPES", {
            enumerable: !0,
            get: function() {
                return a6.AST_TOKEN_TYPES;
            }
        });
        Object.defineProperty(Sr, "TSESTree", {
            enumerable: !0,
            get: function() {
                return a6.TSESTree;
            }
        });
        G7(W7(), Sr);
        G7(H7(), Sr);
    });
    var Gm = mt((he)=>{
        "use strict";
        var uB = he && he.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), pB = he && he.__setModuleDefault || (Object.create ? function(e, t) {
            Object.defineProperty(e, "default", {
                enumerable: !0,
                value: t
            });
        } : function(e, t) {
            e.default = t;
        }), fB = he && he.__importStar || function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && uB(t, e, n);
            return pB(t, e), t;
        };
        Object.defineProperty(he, "__esModule", {
            value: !0
        });
        he.getNamespaceModifiers = he.isValidAssignmentTarget = he.nodeCanBeDecorated = he.getContainingFunction = he.nodeIsPresent = he.isThisInTypeQuery = he.isThisIdentifier = he.identifierIsThisKeyword = he.firstDefined = he.nodeHasTokens = he.nodeHasIllegalDecorators = he.createError = he.TSError = he.convertTokens = he.convertToken = he.getTokenType = he.isChildUnwrappableOptionalChain = he.isChainExpression = he.isOptional = he.isComputedProperty = he.unescapeStringLiteralText = he.hasJSXAncestor = he.findFirstMatchingAncestor = he.findNextToken = he.getTSNodeAccessibility = he.getDeclarationKind = he.isJSXToken = he.getRange = he.canContainDirective = he.getLocFor = he.getLineAndCharacterFor = he.getBinaryExpressionType = he.isComment = he.isComma = he.getLastModifier = he.hasModifier = he.isESTreeClassMember = he.getTextForTokenKind = he.isESTreeBinaryOperator = he.isLogicalOperator = void 0;
        var Ve = fB(lt()), uu = n6(), dB = O7(), _n = Wm(), mB = t6(), X7 = mB.typescriptVersionIsAtLeast["5.0"], de = Ve.SyntaxKind, hB = new Set([
            de.BarBarToken,
            de.AmpersandAmpersandToken,
            de.QuestionQuestionToken
        ]), yB = new Set([
            Ve.SyntaxKind.EqualsToken,
            Ve.SyntaxKind.PlusEqualsToken,
            Ve.SyntaxKind.MinusEqualsToken,
            Ve.SyntaxKind.AsteriskEqualsToken,
            Ve.SyntaxKind.AsteriskAsteriskEqualsToken,
            Ve.SyntaxKind.SlashEqualsToken,
            Ve.SyntaxKind.PercentEqualsToken,
            Ve.SyntaxKind.LessThanLessThanEqualsToken,
            Ve.SyntaxKind.GreaterThanGreaterThanEqualsToken,
            Ve.SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken,
            Ve.SyntaxKind.AmpersandEqualsToken,
            Ve.SyntaxKind.BarEqualsToken,
            Ve.SyntaxKind.BarBarEqualsToken,
            Ve.SyntaxKind.AmpersandAmpersandEqualsToken,
            Ve.SyntaxKind.QuestionQuestionEqualsToken,
            Ve.SyntaxKind.CaretEqualsToken
        ]), gB = new Set([
            de.InstanceOfKeyword,
            de.InKeyword,
            de.AsteriskAsteriskToken,
            de.AsteriskToken,
            de.SlashToken,
            de.PercentToken,
            de.PlusToken,
            de.MinusToken,
            de.AmpersandToken,
            de.BarToken,
            de.CaretToken,
            de.LessThanLessThanToken,
            de.GreaterThanGreaterThanToken,
            de.GreaterThanGreaterThanGreaterThanToken,
            de.AmpersandAmpersandToken,
            de.BarBarToken,
            de.LessThanToken,
            de.LessThanEqualsToken,
            de.GreaterThanToken,
            de.GreaterThanEqualsToken,
            de.EqualsEqualsToken,
            de.EqualsEqualsEqualsToken,
            de.ExclamationEqualsEqualsToken,
            de.ExclamationEqualsToken
        ]);
        function bB(e) {
            return yB.has(e.kind);
        }
        function $7(e) {
            return hB.has(e.kind);
        }
        he.isLogicalOperator = $7;
        function Q7(e) {
            return gB.has(e.kind);
        }
        he.isESTreeBinaryOperator = Q7;
        function Vm(e) {
            return Ve.tokenToString(e);
        }
        he.getTextForTokenKind = Vm;
        function vB(e) {
            return e.kind !== de.SemicolonClassElement;
        }
        he.isESTreeClassMember = vB;
        function Y7(e, t) {
            let n = (0, uu.getModifiers)(t);
            return (n == null ? void 0 : n.some((a)=>a.kind === e)) === !0;
        }
        he.hasModifier = Y7;
        function TB(e) {
            let t = (0, uu.getModifiers)(e);
            return t == null ? null : t[t.length - 1] ?? null;
        }
        he.getLastModifier = TB;
        function SB(e) {
            return e.kind === de.CommaToken;
        }
        he.isComma = SB;
        function K7(e) {
            return e.kind === de.SingleLineCommentTrivia || e.kind === de.MultiLineCommentTrivia;
        }
        he.isComment = K7;
        function xB(e) {
            return e.kind === de.JSDocComment;
        }
        function wB(e) {
            if (bB(e)) return {
                type: _n.AST_NODE_TYPES.AssignmentExpression,
                operator: Vm(e.kind)
            };
            if ($7(e)) return {
                type: _n.AST_NODE_TYPES.LogicalExpression,
                operator: Vm(e.kind)
            };
            if (Q7(e)) return {
                type: _n.AST_NODE_TYPES.BinaryExpression,
                operator: Vm(e.kind)
            };
            throw new Error(`Unexpected binary operator ${Ve.tokenToString(e.kind)}`);
        }
        he.getBinaryExpressionType = wB;
        function Z7(e, t) {
            let n = t.getLineAndCharacterOfPosition(e);
            return {
                line: n.line + 1,
                column: n.character
            };
        }
        he.getLineAndCharacterFor = Z7;
        function ew(e, t) {
            let [n, a] = e.map((_)=>Z7(_, t));
            return {
                start: n,
                end: a
            };
        }
        he.getLocFor = ew;
        function EB(e) {
            if (e.kind === Ve.SyntaxKind.Block) switch(e.parent.kind){
                case Ve.SyntaxKind.Constructor:
                case Ve.SyntaxKind.GetAccessor:
                case Ve.SyntaxKind.SetAccessor:
                case Ve.SyntaxKind.ArrowFunction:
                case Ve.SyntaxKind.FunctionExpression:
                case Ve.SyntaxKind.FunctionDeclaration:
                case Ve.SyntaxKind.MethodDeclaration:
                    return !0;
                default:
                    return !1;
            }
            return !0;
        }
        he.canContainDirective = EB;
        function CB(e, t) {
            return [
                e.getStart(t),
                e.getEnd()
            ];
        }
        he.getRange = CB;
        function AB(e) {
            return e.kind >= de.FirstToken && e.kind <= de.LastToken;
        }
        function o6(e) {
            return e.kind >= de.JsxElement && e.kind <= de.JsxAttribute;
        }
        he.isJSXToken = o6;
        function kB(e) {
            return e.flags & Ve.NodeFlags.Let ? "let" : (e.flags & Ve.NodeFlags.AwaitUsing) === Ve.NodeFlags.AwaitUsing ? "await using" : e.flags & Ve.NodeFlags.Const ? "const" : e.flags & Ve.NodeFlags.Using ? "using" : "var";
        }
        he.getDeclarationKind = kB;
        function DB(e) {
            let t = (0, uu.getModifiers)(e);
            if (t != null) for (let n of t)switch(n.kind){
                case de.PublicKeyword:
                    return "public";
                case de.ProtectedKeyword:
                    return "protected";
                case de.PrivateKeyword:
                    return "private";
                default:
                    break;
            }
        }
        he.getTSNodeAccessibility = DB;
        function PB(e, t, n) {
            return a(t);
            function a(_) {
                return Ve.isToken(_) && _.pos === e.end ? _ : sw(_.getChildren(n), (p)=>(p.pos <= e.pos && p.end > e.end || p.pos === e.end) && ow(p, n) ? a(p) : void 0);
            }
        }
        he.findNextToken = PB;
        function tw(e, t) {
            let n = e;
            for(; n;){
                if (t(n)) return n;
                n = n.parent;
            }
        }
        he.findFirstMatchingAncestor = tw;
        function nw(e) {
            return !!tw(e, o6);
        }
        he.hasJSXAncestor = nw;
        function IB(e) {
            return e.replace(/&(?:#\d+|#x[\da-fA-F]+|[0-9a-zA-Z]+);/g, (t)=>{
                let n = t.slice(1, -1);
                if (n[0] === "#") {
                    let a = n[1] === "x" ? parseInt(n.slice(2), 16) : parseInt(n.slice(1), 10);
                    return a > 1114111 ? t : String.fromCodePoint(a);
                }
                return dB.xhtmlEntities[n] || t;
            });
        }
        he.unescapeStringLiteralText = IB;
        function NB(e) {
            return e.kind === de.ComputedPropertyName;
        }
        he.isComputedProperty = NB;
        function OB(e) {
            return !!e.questionToken;
        }
        he.isOptional = OB;
        function rw(e) {
            return e.type === _n.AST_NODE_TYPES.ChainExpression;
        }
        he.isChainExpression = rw;
        function MB(e, t) {
            return rw(t) && e.expression.kind !== Ve.SyntaxKind.ParenthesizedExpression;
        }
        he.isChildUnwrappableOptionalChain = MB;
        function iw(e) {
            let t;
            if (X7 && e.kind === de.Identifier ? t = Ve.identifierToKeywordKind(e) : "originalKeywordKind" in e && (t = e.originalKeywordKind), t) return t === de.NullKeyword ? _n.AST_TOKEN_TYPES.Null : t >= de.FirstFutureReservedWord && t <= de.LastKeyword ? _n.AST_TOKEN_TYPES.Identifier : _n.AST_TOKEN_TYPES.Keyword;
            if (e.kind >= de.FirstKeyword && e.kind <= de.LastFutureReservedWord) return e.kind === de.FalseKeyword || e.kind === de.TrueKeyword ? _n.AST_TOKEN_TYPES.Boolean : _n.AST_TOKEN_TYPES.Keyword;
            if (e.kind >= de.FirstPunctuation && e.kind <= de.LastPunctuation) return _n.AST_TOKEN_TYPES.Punctuator;
            if (e.kind >= de.NoSubstitutionTemplateLiteral && e.kind <= de.TemplateTail) return _n.AST_TOKEN_TYPES.Template;
            switch(e.kind){
                case de.NumericLiteral:
                    return _n.AST_TOKEN_TYPES.Numeric;
                case de.JsxText:
                    return _n.AST_TOKEN_TYPES.JSXText;
                case de.StringLiteral:
                    return e.parent.kind === de.JsxAttribute || e.parent.kind === de.JsxElement ? _n.AST_TOKEN_TYPES.JSXText : _n.AST_TOKEN_TYPES.String;
                case de.RegularExpressionLiteral:
                    return _n.AST_TOKEN_TYPES.RegularExpression;
                case de.Identifier:
                case de.ConstructorKeyword:
                case de.GetKeyword:
                case de.SetKeyword:
                default:
            }
            return e.kind === de.Identifier && (o6(e.parent) || e.parent.kind === de.PropertyAccessExpression && nw(e)) ? _n.AST_TOKEN_TYPES.JSXIdentifier : _n.AST_TOKEN_TYPES.Identifier;
        }
        he.getTokenType = iw;
        function aw(e, t) {
            let n = e.kind === de.JsxText ? e.getFullStart() : e.getStart(t), a = e.getEnd(), _ = t.text.slice(n, a), p = iw(e), m = [
                n,
                a
            ], y = ew(m, t);
            return p === _n.AST_TOKEN_TYPES.RegularExpression ? {
                type: p,
                value: _,
                range: m,
                loc: y,
                regex: {
                    pattern: _.slice(1, _.lastIndexOf("/")),
                    flags: _.slice(_.lastIndexOf("/") + 1)
                }
            } : {
                type: p,
                value: _,
                range: m,
                loc: y
            };
        }
        he.convertToken = aw;
        function LB(e) {
            let t = [];
            function n(a) {
                K7(a) || xB(a) || (AB(a) && a.kind !== de.EndOfFileToken ? t.push(aw(a, e)) : a.getChildren(e).forEach(n));
            }
            return n(e), t;
        }
        he.convertTokens = LB;
        var Hm = class extends Error {
            constructor(t, n, a){
                super(t), this.fileName = n, this.location = a, Object.defineProperty(this, "name", {
                    value: new.target.name,
                    enumerable: !1,
                    configurable: !0
                });
            }
            get index() {
                return this.location.start.offset;
            }
            get lineNumber() {
                return this.location.start.line;
            }
            get column() {
                return this.location.start.column;
            }
        };
        he.TSError = Hm;
        function JB(e, t, n, a = n) {
            let [_, p] = [
                n,
                a
            ].map((m)=>{
                let { line: y, character: u } = t.getLineAndCharacterOfPosition(m);
                return {
                    line: y + 1,
                    column: u,
                    offset: m
                };
            });
            return new Hm(e, t.fileName, {
                start: _,
                end: p
            });
        }
        he.createError = JB;
        function RB(e) {
            var t;
            return !!("illegalDecorators" in e && (t = e.illegalDecorators) != null && t.length);
        }
        he.nodeHasIllegalDecorators = RB;
        function ow(e, t) {
            return e.kind === de.EndOfFileToken ? !!e.jsDoc : e.getWidth(t) !== 0;
        }
        he.nodeHasTokens = ow;
        function sw(e, t) {
            if (e !== void 0) for(let n = 0; n < e.length; n++){
                let a = t(e[n], n);
                if (a !== void 0) return a;
            }
        }
        he.firstDefined = sw;
        function _w(e) {
            return (X7 ? Ve.identifierToKeywordKind(e) : e.originalKeywordKind) === de.ThisKeyword;
        }
        he.identifierIsThisKeyword = _w;
        function s6(e) {
            return !!e && e.kind === de.Identifier && _w(e);
        }
        he.isThisIdentifier = s6;
        function jB(e) {
            if (!s6(e)) return !1;
            for(; Ve.isQualifiedName(e.parent) && e.parent.left === e;)e = e.parent;
            return e.parent.kind === de.TypeQuery;
        }
        he.isThisInTypeQuery = jB;
        function FB(e) {
            return e === void 0 ? !0 : e.pos === e.end && e.pos >= 0 && e.kind !== de.EndOfFileToken;
        }
        function BB(e) {
            return !FB(e);
        }
        he.nodeIsPresent = BB;
        function UB(e) {
            return Ve.findAncestor(e.parent, Ve.isFunctionLike);
        }
        he.getContainingFunction = UB;
        function qB(e) {
            return Y7(de.AbstractKeyword, e);
        }
        function zB(e) {
            if (e.parameters.length && !Ve.isJSDocSignature(e)) {
                let t = e.parameters[0];
                if (WB(t)) return t;
            }
            return null;
        }
        function WB(e) {
            return s6(e.name);
        }
        function VB(e) {
            switch(e.kind){
                case de.ClassDeclaration:
                    return !0;
                case de.ClassExpression:
                    return !0;
                case de.PropertyDeclaration:
                    {
                        let { parent: t } = e;
                        return !!(Ve.isClassDeclaration(t) || Ve.isClassLike(t) && !qB(e));
                    }
                case de.GetAccessor:
                case de.SetAccessor:
                case de.MethodDeclaration:
                    {
                        let { parent: t } = e;
                        return !!e.body && (Ve.isClassDeclaration(t) || Ve.isClassLike(t));
                    }
                case de.Parameter:
                    {
                        let { parent: t } = e, n = t.parent;
                        return !!t && "body" in t && !!t.body && (t.kind === de.Constructor || t.kind === de.MethodDeclaration || t.kind === de.SetAccessor) && zB(t) !== e && !!n && n.kind === de.ClassDeclaration;
                    }
            }
            return !1;
        }
        he.nodeCanBeDecorated = VB;
        function cw(e) {
            switch(e.kind){
                case de.Identifier:
                    return !0;
                case de.PropertyAccessExpression:
                case de.ElementAccessExpression:
                    return !(e.flags & Ve.NodeFlags.OptionalChain);
                case de.ParenthesizedExpression:
                case de.TypeAssertionExpression:
                case de.AsExpression:
                case de.SatisfiesExpression:
                case de.NonNullExpression:
                    return cw(e.expression);
                default:
                    return !1;
            }
        }
        he.isValidAssignmentTarget = cw;
        function HB(e) {
            let t = (0, uu.getModifiers)(e), n = e;
            for(; (!t || t.length === 0) && Ve.isModuleDeclaration(n.parent);){
                let a = (0, uu.getModifiers)(n.parent);
                a != null && a.length && (t = a), n = n.parent;
            }
            return t;
        }
        he.getNamespaceModifiers = HB;
    });
    var c6 = mt((xr)=>{
        "use strict";
        var GB = xr && xr.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), XB = xr && xr.__setModuleDefault || (Object.create ? function(e, t) {
            Object.defineProperty(e, "default", {
                enumerable: !0,
                value: t
            });
        } : function(e, t) {
            e.default = t;
        }), $B = xr && xr.__importStar || function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && GB(t, e, n);
            return XB(t, e), t;
        }, Ce = xr && xr.__classPrivateFieldGet || function(e, t, n, a) {
            if (n === "a" && !a) throw new TypeError("Private accessor was defined without a getter");
            if (typeof t == "function" ? e !== t || !a : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
            return n === "m" ? a : n === "a" ? a.call(e) : a ? a.value : t.get(e);
        }, we, lw, dn, Gn, rt, uw;
        Object.defineProperty(xr, "__esModule", {
            value: !0
        });
        xr.Converter = xr.convertError = void 0;
        var it = $B(lt()), ta = n6(), le = Gm(), L = Wm(), C = it.SyntaxKind;
        function QB(e) {
            return (0, le.createError)("message" in e && e.message || e.messageText, e.file, e.start);
        }
        xr.convertError = QB;
        var _6 = class {
            constructor(t, n){
                we.add(this), this.esTreeNodeToTSNodeMap = new WeakMap, this.tsNodeToESTreeNodeMap = new WeakMap, this.allowPattern = !1, this.ast = t, this.options = {
                    ...n
                };
            }
            getASTMaps() {
                return {
                    esTreeNodeToTSNodeMap: this.esTreeNodeToTSNodeMap,
                    tsNodeToESTreeNodeMap: this.tsNodeToESTreeNodeMap
                };
            }
            convertProgram() {
                return this.converter(this.ast);
            }
            converter(t, n, a) {
                if (!t) return null;
                Ce(this, we, "m", lw).call(this, t);
                let _ = this.allowPattern;
                a !== void 0 && (this.allowPattern = a);
                let p = this.convertNode(t, n ?? t.parent);
                return this.registerTSNodeInNodeMap(t, p), this.allowPattern = _, p;
            }
            fixExports(t, n) {
                let _ = it.isModuleDeclaration(t) && !!(t.flags & it.NodeFlags.Namespace) ? (0, le.getNamespaceModifiers)(t) : (0, ta.getModifiers)(t);
                if ((_ == null ? void 0 : _[0].kind) === C.ExportKeyword) {
                    this.registerTSNodeInNodeMap(t, n);
                    let p = _[0], m = _[1], y = (m == null ? void 0 : m.kind) === C.DefaultKeyword, u = y ? (0, le.findNextToken)(m, this.ast, this.ast) : (0, le.findNextToken)(p, this.ast, this.ast);
                    if (n.range[0] = u.getStart(this.ast), n.loc = (0, le.getLocFor)(n.range, this.ast), y) return this.createNode(t, {
                        type: L.AST_NODE_TYPES.ExportDefaultDeclaration,
                        declaration: n,
                        range: [
                            p.getStart(this.ast),
                            n.range[1]
                        ],
                        exportKind: "value"
                    });
                    let x = n.type === L.AST_NODE_TYPES.TSInterfaceDeclaration || n.type === L.AST_NODE_TYPES.TSTypeAliasDeclaration, d = "declare" in n && n.declare;
                    return this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                        type: L.AST_NODE_TYPES.ExportNamedDeclaration,
                        declaration: n,
                        specifiers: [],
                        source: null,
                        exportKind: x || d ? "type" : "value",
                        range: [
                            p.getStart(this.ast),
                            n.range[1]
                        ],
                        attributes: []
                    }, "assertions", "attributes", !0));
                }
                return n;
            }
            registerTSNodeInNodeMap(t, n) {
                n && this.options.shouldPreserveNodeMaps && (this.tsNodeToESTreeNodeMap.has(t) || this.tsNodeToESTreeNodeMap.set(t, n));
            }
            convertPattern(t, n) {
                return this.converter(t, n, !0);
            }
            convertChild(t, n) {
                return this.converter(t, n, !1);
            }
            createNode(t, n) {
                let a = n;
                return a.range ?? (a.range = (0, le.getRange)(t, this.ast)), a.loc ?? (a.loc = (0, le.getLocFor)(a.range, this.ast)), a && this.options.shouldPreserveNodeMaps && this.esTreeNodeToTSNodeMap.set(a, t), a;
            }
            convertBindingNameWithTypeAnnotation(t, n, a) {
                let _ = this.convertPattern(t);
                return n && (_.typeAnnotation = this.convertTypeAnnotation(n, a), this.fixParentLocation(_, _.typeAnnotation.range)), _;
            }
            convertTypeAnnotation(t, n) {
                let a = (n == null ? void 0 : n.kind) === C.FunctionType || (n == null ? void 0 : n.kind) === C.ConstructorType ? 2 : 1, p = [
                    t.getFullStart() - a,
                    t.end
                ], m = (0, le.getLocFor)(p, this.ast);
                return {
                    type: L.AST_NODE_TYPES.TSTypeAnnotation,
                    loc: m,
                    range: p,
                    typeAnnotation: this.convertChild(t)
                };
            }
            convertBodyExpressions(t, n) {
                let a = (0, le.canContainDirective)(n);
                return t.map((_)=>{
                    let p = this.convertChild(_);
                    if (a) {
                        if (p != null && p.expression && it.isExpressionStatement(_) && it.isStringLiteral(_.expression)) {
                            let m = p.expression.raw;
                            return p.directive = m.slice(1, -1), p;
                        }
                        a = !1;
                    }
                    return p;
                }).filter((_)=>_);
            }
            convertTypeArgumentsToTypeParameterInstantiation(t, n) {
                let a = (0, le.findNextToken)(t, this.ast, this.ast);
                return this.createNode(n, {
                    type: L.AST_NODE_TYPES.TSTypeParameterInstantiation,
                    range: [
                        t.pos - 1,
                        a.end
                    ],
                    params: t.map((_)=>this.convertChild(_))
                });
            }
            convertTSTypeParametersToTypeParametersDeclaration(t) {
                let n = (0, le.findNextToken)(t, this.ast, this.ast), a = [
                    t.pos - 1,
                    n.end
                ];
                return {
                    type: L.AST_NODE_TYPES.TSTypeParameterDeclaration,
                    range: a,
                    loc: (0, le.getLocFor)(a, this.ast),
                    params: t.map((_)=>this.convertChild(_))
                };
            }
            convertParameters(t) {
                return t != null && t.length ? t.map((n)=>{
                    var _;
                    let a = this.convertChild(n);
                    return a.decorators = ((_ = (0, ta.getDecorators)(n)) == null ? void 0 : _.map((p)=>this.convertChild(p))) ?? [], a;
                }) : [];
            }
            convertChainExpression(t, n) {
                let { child: a, isOptional: _ } = t.type === L.AST_NODE_TYPES.MemberExpression ? {
                    child: t.object,
                    isOptional: t.optional
                } : t.type === L.AST_NODE_TYPES.CallExpression ? {
                    child: t.callee,
                    isOptional: t.optional
                } : {
                    child: t.expression,
                    isOptional: !1
                }, p = (0, le.isChildUnwrappableOptionalChain)(n, a);
                if (!p && !_) return t;
                if (p && (0, le.isChainExpression)(a)) {
                    let m = a.expression;
                    t.type === L.AST_NODE_TYPES.MemberExpression ? t.object = m : t.type === L.AST_NODE_TYPES.CallExpression ? t.callee = m : t.expression = m;
                }
                return this.createNode(n, {
                    type: L.AST_NODE_TYPES.ChainExpression,
                    expression: t
                });
            }
            deeplyCopy(t) {
                t.kind === it.SyntaxKind.JSDocFunctionType && Ce(this, we, "m", rt).call(this, t, "JSDoc types can only be used inside documentation comments.");
                let n = `TS${C[t.kind]}`;
                if (this.options.errorOnUnknownASTType && !L.AST_NODE_TYPES[n]) throw new Error(`Unknown AST_NODE_TYPE: "${n}"`);
                let a = this.createNode(t, {
                    type: n
                });
                "type" in t && (a.typeAnnotation = t.type && "kind" in t.type && it.isTypeNode(t.type) ? this.convertTypeAnnotation(t.type, t) : null), "typeArguments" in t && (a.typeArguments = t.typeArguments && "pos" in t.typeArguments ? this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t) : null, Ce(this, we, "m", Gn).call(this, a, "typeParameters", "typeArguments")), "typeParameters" in t && (a.typeParameters = t.typeParameters && "pos" in t.typeParameters ? this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters) : null);
                let _ = (0, ta.getDecorators)(t);
                _ != null && _.length && (a.decorators = _.map((m)=>this.convertChild(m)));
                let p = new Set([
                    "_children",
                    "decorators",
                    "end",
                    "flags",
                    "illegalDecorators",
                    "heritageClauses",
                    "locals",
                    "localSymbol",
                    "jsDoc",
                    "kind",
                    "modifierFlagsCache",
                    "modifiers",
                    "nextContainer",
                    "parent",
                    "pos",
                    "symbol",
                    "transformFlags",
                    "type",
                    "typeArguments",
                    "typeParameters"
                ]);
                return Object.entries(t).filter(([m])=>!p.has(m)).forEach(([m, y])=>{
                    Array.isArray(y) ? a[m] = y.map((u)=>this.convertChild(u)) : y && typeof y == "object" && y.kind ? a[m] = this.convertChild(y) : a[m] = y;
                }), a;
            }
            convertJSXIdentifier(t) {
                let n = this.createNode(t, {
                    type: L.AST_NODE_TYPES.JSXIdentifier,
                    name: t.getText()
                });
                return this.registerTSNodeInNodeMap(t, n), n;
            }
            convertJSXNamespaceOrIdentifier(t) {
                if (t.kind === it.SyntaxKind.JsxNamespacedName) {
                    let _ = this.createNode(t, {
                        type: L.AST_NODE_TYPES.JSXNamespacedName,
                        namespace: this.createNode(t.namespace, {
                            type: L.AST_NODE_TYPES.JSXIdentifier,
                            name: t.namespace.text
                        }),
                        name: this.createNode(t.name, {
                            type: L.AST_NODE_TYPES.JSXIdentifier,
                            name: t.name.text
                        })
                    });
                    return this.registerTSNodeInNodeMap(t, _), _;
                }
                let n = t.getText(), a = n.indexOf(":");
                if (a > 0) {
                    let _ = (0, le.getRange)(t, this.ast), p = this.createNode(t, {
                        type: L.AST_NODE_TYPES.JSXNamespacedName,
                        namespace: this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXIdentifier,
                            name: n.slice(0, a),
                            range: [
                                _[0],
                                _[0] + a
                            ]
                        }),
                        name: this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXIdentifier,
                            name: n.slice(a + 1),
                            range: [
                                _[0] + a + 1,
                                _[1]
                            ]
                        }),
                        range: _
                    });
                    return this.registerTSNodeInNodeMap(t, p), p;
                }
                return this.convertJSXIdentifier(t);
            }
            convertJSXTagName(t, n) {
                let a;
                switch(t.kind){
                    case C.PropertyAccessExpression:
                        t.name.kind === C.PrivateIdentifier && Ce(this, we, "m", rt).call(this, t.name, "Non-private identifier expected."), a = this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXMemberExpression,
                            object: this.convertJSXTagName(t.expression, n),
                            property: this.convertJSXIdentifier(t.name)
                        });
                        break;
                    case C.ThisKeyword:
                    case C.Identifier:
                    default:
                        return this.convertJSXNamespaceOrIdentifier(t);
                }
                return this.registerTSNodeInNodeMap(t, a), a;
            }
            convertMethodSignature(t) {
                return this.createNode(t, {
                    type: L.AST_NODE_TYPES.TSMethodSignature,
                    accessibility: (0, le.getTSNodeAccessibility)(t),
                    computed: (0, le.isComputedProperty)(t.name),
                    key: this.convertChild(t.name),
                    kind: (()=>{
                        switch(t.kind){
                            case C.GetAccessor:
                                return "get";
                            case C.SetAccessor:
                                return "set";
                            case C.MethodSignature:
                                return "method";
                        }
                    })(),
                    optional: (0, le.isOptional)(t),
                    params: this.convertParameters(t.parameters),
                    returnType: t.type && this.convertTypeAnnotation(t.type, t),
                    readonly: (0, le.hasModifier)(C.ReadonlyKeyword, t),
                    static: (0, le.hasModifier)(C.StaticKeyword, t),
                    typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                });
            }
            convertImportAttributes(t) {
                return t === void 0 ? [] : t.elements.map((n)=>this.convertChild(n));
            }
            fixParentLocation(t, n) {
                n[0] < t.range[0] && (t.range[0] = n[0], t.loc.start = (0, le.getLineAndCharacterFor)(t.range[0], this.ast)), n[1] > t.range[1] && (t.range[1] = n[1], t.loc.end = (0, le.getLineAndCharacterFor)(t.range[1], this.ast));
            }
            assertModuleSpecifier(t, n) {
                var a;
                !n && t.moduleSpecifier == null && Ce(this, we, "m", dn).call(this, t, "Module specifier must be a string literal."), t.moduleSpecifier && ((a = t.moduleSpecifier) == null ? void 0 : a.kind) !== C.StringLiteral && Ce(this, we, "m", dn).call(this, t.moduleSpecifier, "Module specifier must be a string literal.");
            }
            convertNode(t, n) {
                var a, _, p, m, y, u, x;
                switch(t.kind){
                    case C.SourceFile:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.Program,
                            body: this.convertBodyExpressions(t.statements, t),
                            comments: void 0,
                            range: [
                                t.getStart(this.ast),
                                t.endOfFileToken.end
                            ],
                            sourceType: t.externalModuleIndicator ? "module" : "script",
                            tokens: void 0
                        });
                    case C.Block:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.BlockStatement,
                            body: this.convertBodyExpressions(t.statements, t)
                        });
                    case C.Identifier:
                        return (0, le.isThisInTypeQuery)(t) ? this.createNode(t, {
                            type: L.AST_NODE_TYPES.ThisExpression
                        }) : this.createNode(t, {
                            type: L.AST_NODE_TYPES.Identifier,
                            decorators: [],
                            name: t.text,
                            optional: !1,
                            typeAnnotation: void 0
                        });
                    case C.PrivateIdentifier:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.PrivateIdentifier,
                            name: t.text.slice(1)
                        });
                    case C.WithStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.WithStatement,
                            object: this.convertChild(t.expression),
                            body: this.convertChild(t.statement)
                        });
                    case C.ReturnStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ReturnStatement,
                            argument: this.convertChild(t.expression)
                        });
                    case C.LabeledStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.LabeledStatement,
                            label: this.convertChild(t.label),
                            body: this.convertChild(t.statement)
                        });
                    case C.ContinueStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ContinueStatement,
                            label: this.convertChild(t.label)
                        });
                    case C.BreakStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.BreakStatement,
                            label: this.convertChild(t.label)
                        });
                    case C.IfStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.IfStatement,
                            test: this.convertChild(t.expression),
                            consequent: this.convertChild(t.thenStatement),
                            alternate: this.convertChild(t.elseStatement)
                        });
                    case C.SwitchStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.SwitchStatement,
                            discriminant: this.convertChild(t.expression),
                            cases: t.caseBlock.clauses.map((d)=>this.convertChild(d))
                        });
                    case C.CaseClause:
                    case C.DefaultClause:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.SwitchCase,
                            test: t.kind === C.CaseClause ? this.convertChild(t.expression) : null,
                            consequent: t.statements.map((d)=>this.convertChild(d))
                        });
                    case C.ThrowStatement:
                        return t.expression.end === t.expression.pos && Ce(this, we, "m", dn).call(this, t, "A throw statement must throw an expression."), this.createNode(t, {
                            type: L.AST_NODE_TYPES.ThrowStatement,
                            argument: this.convertChild(t.expression)
                        });
                    case C.TryStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TryStatement,
                            block: this.convertChild(t.tryBlock),
                            handler: this.convertChild(t.catchClause),
                            finalizer: this.convertChild(t.finallyBlock)
                        });
                    case C.CatchClause:
                        return (a = t.variableDeclaration) != null && a.initializer && Ce(this, we, "m", rt).call(this, t.variableDeclaration.initializer, "Catch clause variable cannot have an initializer."), this.createNode(t, {
                            type: L.AST_NODE_TYPES.CatchClause,
                            param: t.variableDeclaration ? this.convertBindingNameWithTypeAnnotation(t.variableDeclaration.name, t.variableDeclaration.type) : null,
                            body: this.convertChild(t.block)
                        });
                    case C.WhileStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.WhileStatement,
                            test: this.convertChild(t.expression),
                            body: this.convertChild(t.statement)
                        });
                    case C.DoStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.DoWhileStatement,
                            test: this.convertChild(t.expression),
                            body: this.convertChild(t.statement)
                        });
                    case C.ForStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ForStatement,
                            init: this.convertChild(t.initializer),
                            test: this.convertChild(t.condition),
                            update: this.convertChild(t.incrementor),
                            body: this.convertChild(t.statement)
                        });
                    case C.ForInStatement:
                        return Ce(this, we, "m", uw).call(this, t.initializer), this.createNode(t, {
                            type: L.AST_NODE_TYPES.ForInStatement,
                            left: this.convertPattern(t.initializer),
                            right: this.convertChild(t.expression),
                            body: this.convertChild(t.statement)
                        });
                    case C.ForOfStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ForOfStatement,
                            left: this.convertPattern(t.initializer),
                            right: this.convertChild(t.expression),
                            body: this.convertChild(t.statement),
                            await: !!(t.awaitModifier && t.awaitModifier.kind === C.AwaitKeyword)
                        });
                    case C.FunctionDeclaration:
                        {
                            let d = (0, le.hasModifier)(C.DeclareKeyword, t), S = this.createNode(t, {
                                type: d || !t.body ? L.AST_NODE_TYPES.TSDeclareFunction : L.AST_NODE_TYPES.FunctionDeclaration,
                                async: (0, le.hasModifier)(C.AsyncKeyword, t),
                                body: this.convertChild(t.body) || void 0,
                                declare: d,
                                expression: !1,
                                generator: !!t.asteriskToken,
                                id: this.convertChild(t.name),
                                params: this.convertParameters(t.parameters),
                                returnType: t.type && this.convertTypeAnnotation(t.type, t),
                                typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                            });
                            return this.fixExports(t, S);
                        }
                    case C.VariableDeclaration:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.VariableDeclarator,
                            definite: !!t.exclamationToken,
                            id: this.convertBindingNameWithTypeAnnotation(t.name, t.type, t),
                            init: this.convertChild(t.initializer)
                        });
                    case C.VariableStatement:
                        {
                            let d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.VariableDeclaration,
                                declarations: t.declarationList.declarations.map((S)=>this.convertChild(S)),
                                declare: (0, le.hasModifier)(C.DeclareKeyword, t),
                                kind: (0, le.getDeclarationKind)(t.declarationList)
                            });
                            return d.declarations.length || Ce(this, we, "m", dn).call(this, t, "A variable declaration list must have at least one variable declarator."), (d.kind === "using" || d.kind === "await using") && t.declarationList.declarations.forEach((S, T)=>{
                                d.declarations[T].init == null && Ce(this, we, "m", rt).call(this, S, `'${d.kind}' declarations must be initialized.`), d.declarations[T].id.type !== L.AST_NODE_TYPES.Identifier && Ce(this, we, "m", rt).call(this, S.name, `'${d.kind}' declarations may not have binding patterns.`);
                            }), this.fixExports(t, d);
                        }
                    case C.VariableDeclarationList:
                        {
                            let d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.VariableDeclaration,
                                declarations: t.declarations.map((S)=>this.convertChild(S)),
                                declare: !1,
                                kind: (0, le.getDeclarationKind)(t)
                            });
                            return (d.kind === "using" || d.kind === "await using") && t.declarations.forEach((S, T)=>{
                                d.declarations[T].init != null && Ce(this, we, "m", rt).call(this, S, `'${d.kind}' declarations may not be initialized in for statement.`), d.declarations[T].id.type !== L.AST_NODE_TYPES.Identifier && Ce(this, we, "m", rt).call(this, S.name, `'${d.kind}' declarations may not have binding patterns.`);
                            }), d;
                        }
                    case C.ExpressionStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ExpressionStatement,
                            directive: void 0,
                            expression: this.convertChild(t.expression)
                        });
                    case C.ThisKeyword:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ThisExpression
                        });
                    case C.ArrayLiteralExpression:
                        return this.allowPattern ? this.createNode(t, {
                            type: L.AST_NODE_TYPES.ArrayPattern,
                            decorators: [],
                            elements: t.elements.map((d)=>this.convertPattern(d)),
                            optional: !1,
                            typeAnnotation: void 0
                        }) : this.createNode(t, {
                            type: L.AST_NODE_TYPES.ArrayExpression,
                            elements: t.elements.map((d)=>this.convertChild(d))
                        });
                    case C.ObjectLiteralExpression:
                        {
                            if (this.allowPattern) return this.createNode(t, {
                                type: L.AST_NODE_TYPES.ObjectPattern,
                                decorators: [],
                                optional: !1,
                                properties: t.properties.map((S)=>this.convertPattern(S)),
                                typeAnnotation: void 0
                            });
                            let d = [];
                            for (let S of t.properties)(S.kind === C.GetAccessor || S.kind === C.SetAccessor || S.kind === C.MethodDeclaration) && !S.body && Ce(this, we, "m", dn).call(this, S.end - 1, "'{' expected."), d.push(this.convertChild(S));
                            return this.createNode(t, {
                                type: L.AST_NODE_TYPES.ObjectExpression,
                                properties: d
                            });
                        }
                    case C.PropertyAssignment:
                        {
                            let { questionToken: d, exclamationToken: S } = t;
                            return d && Ce(this, we, "m", rt).call(this, d, "A property assignment cannot have a question token."), S && Ce(this, we, "m", rt).call(this, S, "A property assignment cannot have an exclamation token."), this.createNode(t, {
                                type: L.AST_NODE_TYPES.Property,
                                key: this.convertChild(t.name),
                                value: this.converter(t.initializer, t, this.allowPattern),
                                computed: (0, le.isComputedProperty)(t.name),
                                method: !1,
                                optional: !1,
                                shorthand: !1,
                                kind: "init"
                            });
                        }
                    case C.ShorthandPropertyAssignment:
                        {
                            let { modifiers: d, questionToken: S, exclamationToken: T } = t;
                            return d && Ce(this, we, "m", rt).call(this, d[0], "A shorthand property assignment cannot have modifiers."), S && Ce(this, we, "m", rt).call(this, S, "A shorthand property assignment cannot have a question token."), T && Ce(this, we, "m", rt).call(this, T, "A shorthand property assignment cannot have an exclamation token."), t.objectAssignmentInitializer ? this.createNode(t, {
                                type: L.AST_NODE_TYPES.Property,
                                key: this.convertChild(t.name),
                                value: this.createNode(t, {
                                    type: L.AST_NODE_TYPES.AssignmentPattern,
                                    decorators: [],
                                    left: this.convertPattern(t.name),
                                    optional: !1,
                                    right: this.convertChild(t.objectAssignmentInitializer),
                                    typeAnnotation: void 0
                                }),
                                computed: !1,
                                method: !1,
                                optional: !1,
                                shorthand: !0,
                                kind: "init"
                            }) : this.createNode(t, {
                                type: L.AST_NODE_TYPES.Property,
                                computed: !1,
                                key: this.convertChild(t.name),
                                kind: "init",
                                method: !1,
                                optional: !1,
                                shorthand: !0,
                                value: this.convertChild(t.name)
                            });
                        }
                    case C.ComputedPropertyName:
                        return this.convertChild(t.expression);
                    case C.PropertyDeclaration:
                        {
                            let d = (0, le.hasModifier)(C.AbstractKeyword, t);
                            d && t.initializer && Ce(this, we, "m", rt).call(this, t.initializer, "Abstract property cannot have an initializer.");
                            let S = (0, le.hasModifier)(C.AccessorKeyword, t), T = S ? d ? L.AST_NODE_TYPES.TSAbstractAccessorProperty : L.AST_NODE_TYPES.AccessorProperty : d ? L.AST_NODE_TYPES.TSAbstractPropertyDefinition : L.AST_NODE_TYPES.PropertyDefinition, A = this.convertChild(t.name);
                            return this.createNode(t, {
                                type: T,
                                key: A,
                                accessibility: (0, le.getTSNodeAccessibility)(t),
                                value: d ? null : this.convertChild(t.initializer),
                                computed: (0, le.isComputedProperty)(t.name),
                                static: (0, le.hasModifier)(C.StaticKeyword, t),
                                readonly: (0, le.hasModifier)(C.ReadonlyKeyword, t),
                                decorators: ((_ = (0, ta.getDecorators)(t)) == null ? void 0 : _.map((N)=>this.convertChild(N))) ?? [],
                                declare: (0, le.hasModifier)(C.DeclareKeyword, t),
                                override: (0, le.hasModifier)(C.OverrideKeyword, t),
                                typeAnnotation: t.type && this.convertTypeAnnotation(t.type, t),
                                optional: (A.type === L.AST_NODE_TYPES.Literal || t.name.kind === C.Identifier || t.name.kind === C.ComputedPropertyName || t.name.kind === C.PrivateIdentifier) && !!t.questionToken,
                                definite: !!t.exclamationToken
                            });
                        }
                    case C.GetAccessor:
                    case C.SetAccessor:
                        if (t.parent.kind === C.InterfaceDeclaration || t.parent.kind === C.TypeLiteral) return this.convertMethodSignature(t);
                    case C.MethodDeclaration:
                        {
                            let d = this.createNode(t, {
                                type: t.body ? L.AST_NODE_TYPES.FunctionExpression : L.AST_NODE_TYPES.TSEmptyBodyFunctionExpression,
                                id: null,
                                generator: !!t.asteriskToken,
                                expression: !1,
                                async: (0, le.hasModifier)(C.AsyncKeyword, t),
                                body: this.convertChild(t.body),
                                declare: !1,
                                range: [
                                    t.parameters.pos - 1,
                                    t.end
                                ],
                                params: [],
                                returnType: t.type && this.convertTypeAnnotation(t.type, t),
                                typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                            });
                            d.typeParameters && this.fixParentLocation(d, d.typeParameters.range);
                            let S;
                            if (n.kind === C.ObjectLiteralExpression) d.params = t.parameters.map((T)=>this.convertChild(T)), S = this.createNode(t, {
                                type: L.AST_NODE_TYPES.Property,
                                key: this.convertChild(t.name),
                                value: d,
                                computed: (0, le.isComputedProperty)(t.name),
                                optional: !!t.questionToken,
                                method: t.kind === C.MethodDeclaration,
                                shorthand: !1,
                                kind: "init"
                            });
                            else {
                                d.params = this.convertParameters(t.parameters);
                                let T = (0, le.hasModifier)(C.AbstractKeyword, t) ? L.AST_NODE_TYPES.TSAbstractMethodDefinition : L.AST_NODE_TYPES.MethodDefinition;
                                S = this.createNode(t, {
                                    type: T,
                                    accessibility: (0, le.getTSNodeAccessibility)(t),
                                    computed: (0, le.isComputedProperty)(t.name),
                                    decorators: ((p = (0, ta.getDecorators)(t)) == null ? void 0 : p.map((A)=>this.convertChild(A))) ?? [],
                                    key: this.convertChild(t.name),
                                    kind: "method",
                                    optional: !!t.questionToken,
                                    override: (0, le.hasModifier)(C.OverrideKeyword, t),
                                    static: (0, le.hasModifier)(C.StaticKeyword, t),
                                    value: d
                                });
                            }
                            return t.kind === C.GetAccessor ? S.kind = "get" : t.kind === C.SetAccessor ? S.kind = "set" : !S.static && t.name.kind === C.StringLiteral && t.name.text === "constructor" && S.type !== L.AST_NODE_TYPES.Property && (S.kind = "constructor"), S;
                        }
                    case C.Constructor:
                        {
                            let d = (0, le.getLastModifier)(t), S = (d && (0, le.findNextToken)(d, t, this.ast)) ?? t.getFirstToken(), T = this.createNode(t, {
                                type: t.body ? L.AST_NODE_TYPES.FunctionExpression : L.AST_NODE_TYPES.TSEmptyBodyFunctionExpression,
                                async: !1,
                                body: this.convertChild(t.body),
                                declare: !1,
                                expression: !1,
                                generator: !1,
                                id: null,
                                params: this.convertParameters(t.parameters),
                                range: [
                                    t.parameters.pos - 1,
                                    t.end
                                ],
                                returnType: t.type && this.convertTypeAnnotation(t.type, t),
                                typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                            });
                            T.typeParameters && this.fixParentLocation(T, T.typeParameters.range);
                            let A = this.createNode(t, {
                                type: L.AST_NODE_TYPES.Identifier,
                                decorators: [],
                                name: "constructor",
                                optional: !1,
                                range: [
                                    S.getStart(this.ast),
                                    S.end
                                ],
                                typeAnnotation: void 0
                            }), N = (0, le.hasModifier)(C.StaticKeyword, t);
                            return this.createNode(t, {
                                type: (0, le.hasModifier)(C.AbstractKeyword, t) ? L.AST_NODE_TYPES.TSAbstractMethodDefinition : L.AST_NODE_TYPES.MethodDefinition,
                                accessibility: (0, le.getTSNodeAccessibility)(t),
                                computed: !1,
                                decorators: [],
                                optional: !1,
                                key: A,
                                kind: N ? "method" : "constructor",
                                override: !1,
                                static: N,
                                value: T
                            });
                        }
                    case C.FunctionExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.FunctionExpression,
                            async: (0, le.hasModifier)(C.AsyncKeyword, t),
                            body: this.convertChild(t.body),
                            declare: !1,
                            expression: !1,
                            generator: !!t.asteriskToken,
                            id: this.convertChild(t.name),
                            params: this.convertParameters(t.parameters),
                            returnType: t.type && this.convertTypeAnnotation(t.type, t),
                            typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                        });
                    case C.SuperKeyword:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.Super
                        });
                    case C.ArrayBindingPattern:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ArrayPattern,
                            decorators: [],
                            elements: t.elements.map((d)=>this.convertPattern(d)),
                            optional: !1,
                            typeAnnotation: void 0
                        });
                    case C.OmittedExpression:
                        return null;
                    case C.ObjectBindingPattern:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ObjectPattern,
                            decorators: [],
                            optional: !1,
                            properties: t.elements.map((d)=>this.convertPattern(d)),
                            typeAnnotation: void 0
                        });
                    case C.BindingElement:
                        {
                            if (n.kind === C.ArrayBindingPattern) {
                                let S = this.convertChild(t.name, n);
                                return t.initializer ? this.createNode(t, {
                                    type: L.AST_NODE_TYPES.AssignmentPattern,
                                    decorators: [],
                                    left: S,
                                    optional: !1,
                                    right: this.convertChild(t.initializer),
                                    typeAnnotation: void 0
                                }) : t.dotDotDotToken ? this.createNode(t, {
                                    type: L.AST_NODE_TYPES.RestElement,
                                    argument: S,
                                    decorators: [],
                                    optional: !1,
                                    typeAnnotation: void 0,
                                    value: void 0
                                }) : S;
                            }
                            let d;
                            return t.dotDotDotToken ? d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.RestElement,
                                argument: this.convertChild(t.propertyName ?? t.name),
                                decorators: [],
                                optional: !1,
                                typeAnnotation: void 0,
                                value: void 0
                            }) : d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.Property,
                                key: this.convertChild(t.propertyName ?? t.name),
                                value: this.convertChild(t.name),
                                computed: !!(t.propertyName && t.propertyName.kind === C.ComputedPropertyName),
                                method: !1,
                                optional: !1,
                                shorthand: !t.propertyName,
                                kind: "init"
                            }), t.initializer && (d.value = this.createNode(t, {
                                type: L.AST_NODE_TYPES.AssignmentPattern,
                                decorators: [],
                                left: this.convertChild(t.name),
                                optional: !1,
                                range: [
                                    t.name.getStart(this.ast),
                                    t.initializer.end
                                ],
                                right: this.convertChild(t.initializer),
                                typeAnnotation: void 0
                            })), d;
                        }
                    case C.ArrowFunction:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ArrowFunctionExpression,
                            generator: !1,
                            id: null,
                            params: this.convertParameters(t.parameters),
                            body: this.convertChild(t.body),
                            async: (0, le.hasModifier)(C.AsyncKeyword, t),
                            expression: t.body.kind !== C.Block,
                            returnType: t.type && this.convertTypeAnnotation(t.type, t),
                            typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                        });
                    case C.YieldExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.YieldExpression,
                            delegate: !!t.asteriskToken,
                            argument: this.convertChild(t.expression)
                        });
                    case C.AwaitExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.AwaitExpression,
                            argument: this.convertChild(t.expression)
                        });
                    case C.NoSubstitutionTemplateLiteral:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TemplateLiteral,
                            quasis: [
                                this.createNode(t, {
                                    type: L.AST_NODE_TYPES.TemplateElement,
                                    value: {
                                        raw: this.ast.text.slice(t.getStart(this.ast) + 1, t.end - 1),
                                        cooked: t.text
                                    },
                                    tail: !0
                                })
                            ],
                            expressions: []
                        });
                    case C.TemplateExpression:
                        {
                            let d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.TemplateLiteral,
                                quasis: [
                                    this.convertChild(t.head)
                                ],
                                expressions: []
                            });
                            return t.templateSpans.forEach((S)=>{
                                d.expressions.push(this.convertChild(S.expression)), d.quasis.push(this.convertChild(S.literal));
                            }), d;
                        }
                    case C.TaggedTemplateExpression:
                        return this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                            type: L.AST_NODE_TYPES.TaggedTemplateExpression,
                            typeArguments: t.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t),
                            tag: this.convertChild(t.tag),
                            quasi: this.convertChild(t.template)
                        }, "typeParameters", "typeArguments"));
                    case C.TemplateHead:
                    case C.TemplateMiddle:
                    case C.TemplateTail:
                        {
                            let d = t.kind === C.TemplateTail;
                            return this.createNode(t, {
                                type: L.AST_NODE_TYPES.TemplateElement,
                                value: {
                                    raw: this.ast.text.slice(t.getStart(this.ast) + 1, t.end - (d ? 1 : 2)),
                                    cooked: t.text
                                },
                                tail: d
                            });
                        }
                    case C.SpreadAssignment:
                    case C.SpreadElement:
                        return this.allowPattern ? this.createNode(t, {
                            type: L.AST_NODE_TYPES.RestElement,
                            argument: this.convertPattern(t.expression),
                            decorators: [],
                            optional: !1,
                            typeAnnotation: void 0,
                            value: void 0
                        }) : this.createNode(t, {
                            type: L.AST_NODE_TYPES.SpreadElement,
                            argument: this.convertChild(t.expression)
                        });
                    case C.Parameter:
                        {
                            let d, S;
                            return t.dotDotDotToken ? d = S = this.createNode(t, {
                                type: L.AST_NODE_TYPES.RestElement,
                                argument: this.convertChild(t.name),
                                decorators: [],
                                optional: !1,
                                typeAnnotation: void 0,
                                value: void 0
                            }) : t.initializer ? (d = this.convertChild(t.name), S = this.createNode(t, {
                                type: L.AST_NODE_TYPES.AssignmentPattern,
                                decorators: [],
                                left: d,
                                optional: !1,
                                right: this.convertChild(t.initializer),
                                typeAnnotation: void 0
                            }), (0, ta.getModifiers)(t) && (S.range[0] = d.range[0], S.loc = (0, le.getLocFor)(S.range, this.ast))) : d = S = this.convertChild(t.name, n), t.type && (d.typeAnnotation = this.convertTypeAnnotation(t.type, t), this.fixParentLocation(d, d.typeAnnotation.range)), t.questionToken && (t.questionToken.end > d.range[1] && (d.range[1] = t.questionToken.end, d.loc.end = (0, le.getLineAndCharacterFor)(d.range[1], this.ast)), d.optional = !0), (0, ta.getModifiers)(t) ? this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSParameterProperty,
                                accessibility: (0, le.getTSNodeAccessibility)(t),
                                decorators: [],
                                override: (0, le.hasModifier)(C.OverrideKeyword, t),
                                parameter: S,
                                readonly: (0, le.hasModifier)(C.ReadonlyKeyword, t),
                                static: (0, le.hasModifier)(C.StaticKeyword, t)
                            }) : S;
                        }
                    case C.ClassDeclaration:
                        !t.name && (!(0, le.hasModifier)(it.SyntaxKind.ExportKeyword, t) || !(0, le.hasModifier)(it.SyntaxKind.DefaultKeyword, t)) && Ce(this, we, "m", dn).call(this, t, "A class declaration without the 'default' modifier must have a name.");
                    case C.ClassExpression:
                        {
                            let d = t.heritageClauses ?? [], S = t.kind === C.ClassDeclaration ? L.AST_NODE_TYPES.ClassDeclaration : L.AST_NODE_TYPES.ClassExpression, T, A;
                            for (let q of d){
                                let { token: Q, types: se } = q;
                                se.length === 0 && Ce(this, we, "m", dn).call(this, q, `'${it.tokenToString(Q)}' list cannot be empty.`), Q === C.ExtendsKeyword ? (T && Ce(this, we, "m", dn).call(this, q, "'extends' clause already seen."), A && Ce(this, we, "m", dn).call(this, q, "'extends' clause must precede 'implements' clause."), se.length > 1 && Ce(this, we, "m", dn).call(this, se[1], "Classes can only extend a single class."), T ?? (T = q)) : Q === C.ImplementsKeyword && (A && Ce(this, we, "m", dn).call(this, q, "'implements' clause already seen."), A ?? (A = q));
                            }
                            let N = this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                                type: S,
                                abstract: (0, le.hasModifier)(C.AbstractKeyword, t),
                                body: this.createNode(t, {
                                    type: L.AST_NODE_TYPES.ClassBody,
                                    body: t.members.filter(le.isESTreeClassMember).map((q)=>this.convertChild(q)),
                                    range: [
                                        t.members.pos - 1,
                                        t.end
                                    ]
                                }),
                                declare: (0, le.hasModifier)(C.DeclareKeyword, t),
                                decorators: ((m = (0, ta.getDecorators)(t)) == null ? void 0 : m.map((q)=>this.convertChild(q))) ?? [],
                                id: this.convertChild(t.name),
                                implements: (A == null ? void 0 : A.types.map((q)=>this.convertChild(q))) ?? [],
                                superClass: T != null && T.types[0] ? this.convertChild(T.types[0].expression) : null,
                                superTypeArguments: void 0,
                                typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                            }, "superTypeParameters", "superTypeArguments"));
                            return (y = T == null ? void 0 : T.types[0]) != null && y.typeArguments && (N.superTypeArguments = this.convertTypeArgumentsToTypeParameterInstantiation(T.types[0].typeArguments, T.types[0])), this.fixExports(t, N);
                        }
                    case C.ModuleBlock:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSModuleBlock,
                            body: this.convertBodyExpressions(t.statements, t)
                        });
                    case C.ImportDeclaration:
                        {
                            this.assertModuleSpecifier(t, !1);
                            let d = this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                                type: L.AST_NODE_TYPES.ImportDeclaration,
                                source: this.convertChild(t.moduleSpecifier),
                                specifiers: [],
                                importKind: "value",
                                attributes: this.convertImportAttributes(t.attributes ?? t.assertClause)
                            }, "assertions", "attributes", !0));
                            if (t.importClause && (t.importClause.isTypeOnly && (d.importKind = "type"), t.importClause.name && d.specifiers.push(this.convertChild(t.importClause)), t.importClause.namedBindings)) switch(t.importClause.namedBindings.kind){
                                case C.NamespaceImport:
                                    d.specifiers.push(this.convertChild(t.importClause.namedBindings));
                                    break;
                                case C.NamedImports:
                                    d.specifiers = d.specifiers.concat(t.importClause.namedBindings.elements.map((S)=>this.convertChild(S)));
                                    break;
                            }
                            return d;
                        }
                    case C.NamespaceImport:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ImportNamespaceSpecifier,
                            local: this.convertChild(t.name)
                        });
                    case C.ImportSpecifier:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ImportSpecifier,
                            local: this.convertChild(t.name),
                            imported: this.convertChild(t.propertyName ?? t.name),
                            importKind: t.isTypeOnly ? "type" : "value"
                        });
                    case C.ImportClause:
                        {
                            let d = this.convertChild(t.name);
                            return this.createNode(t, {
                                type: L.AST_NODE_TYPES.ImportDefaultSpecifier,
                                local: d,
                                range: d.range
                            });
                        }
                    case C.ExportDeclaration:
                        return ((u = t.exportClause) == null ? void 0 : u.kind) === C.NamedExports ? (this.assertModuleSpecifier(t, !0), this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                            type: L.AST_NODE_TYPES.ExportNamedDeclaration,
                            source: this.convertChild(t.moduleSpecifier),
                            specifiers: t.exportClause.elements.map((d)=>this.convertChild(d)),
                            exportKind: t.isTypeOnly ? "type" : "value",
                            declaration: null,
                            attributes: this.convertImportAttributes(t.attributes ?? t.assertClause)
                        }, "assertions", "attributes", !0))) : (this.assertModuleSpecifier(t, !1), this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                            type: L.AST_NODE_TYPES.ExportAllDeclaration,
                            source: this.convertChild(t.moduleSpecifier),
                            exportKind: t.isTypeOnly ? "type" : "value",
                            exported: ((x = t.exportClause) == null ? void 0 : x.kind) === C.NamespaceExport ? this.convertChild(t.exportClause.name) : null,
                            attributes: this.convertImportAttributes(t.attributes ?? t.assertClause)
                        }, "assertions", "attributes", !0)));
                    case C.ExportSpecifier:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ExportSpecifier,
                            local: this.convertChild(t.propertyName ?? t.name),
                            exported: this.convertChild(t.name),
                            exportKind: t.isTypeOnly ? "type" : "value"
                        });
                    case C.ExportAssignment:
                        return t.isExportEquals ? this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSExportAssignment,
                            expression: this.convertChild(t.expression)
                        }) : this.createNode(t, {
                            type: L.AST_NODE_TYPES.ExportDefaultDeclaration,
                            declaration: this.convertChild(t.expression),
                            exportKind: "value"
                        });
                    case C.PrefixUnaryExpression:
                    case C.PostfixUnaryExpression:
                        {
                            let d = (0, le.getTextForTokenKind)(t.operator);
                            return d === "++" || d === "--" ? ((0, le.isValidAssignmentTarget)(t.operand) || Ce(this, we, "m", dn).call(this, t.operand, "Invalid left-hand side expression in unary operation"), this.createNode(t, {
                                type: L.AST_NODE_TYPES.UpdateExpression,
                                operator: d,
                                prefix: t.kind === C.PrefixUnaryExpression,
                                argument: this.convertChild(t.operand)
                            })) : this.createNode(t, {
                                type: L.AST_NODE_TYPES.UnaryExpression,
                                operator: d,
                                prefix: t.kind === C.PrefixUnaryExpression,
                                argument: this.convertChild(t.operand)
                            });
                        }
                    case C.DeleteExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.UnaryExpression,
                            operator: "delete",
                            prefix: !0,
                            argument: this.convertChild(t.expression)
                        });
                    case C.VoidExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.UnaryExpression,
                            operator: "void",
                            prefix: !0,
                            argument: this.convertChild(t.expression)
                        });
                    case C.TypeOfExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.UnaryExpression,
                            operator: "typeof",
                            prefix: !0,
                            argument: this.convertChild(t.expression)
                        });
                    case C.TypeOperator:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSTypeOperator,
                            operator: (0, le.getTextForTokenKind)(t.operator),
                            typeAnnotation: this.convertChild(t.type)
                        });
                    case C.BinaryExpression:
                        {
                            if ((0, le.isComma)(t.operatorToken)) {
                                let S = this.createNode(t, {
                                    type: L.AST_NODE_TYPES.SequenceExpression,
                                    expressions: []
                                }), T = this.convertChild(t.left);
                                return T.type === L.AST_NODE_TYPES.SequenceExpression && t.left.kind !== C.ParenthesizedExpression ? S.expressions = S.expressions.concat(T.expressions) : S.expressions.push(T), S.expressions.push(this.convertChild(t.right)), S;
                            }
                            let d = (0, le.getBinaryExpressionType)(t.operatorToken);
                            return this.allowPattern && d.type === L.AST_NODE_TYPES.AssignmentExpression ? this.createNode(t, {
                                type: L.AST_NODE_TYPES.AssignmentPattern,
                                decorators: [],
                                left: this.convertPattern(t.left, t),
                                optional: !1,
                                right: this.convertChild(t.right),
                                typeAnnotation: void 0
                            }) : this.createNode(t, {
                                ...d,
                                left: this.converter(t.left, t, d.type === L.AST_NODE_TYPES.AssignmentExpression),
                                right: this.convertChild(t.right)
                            });
                        }
                    case C.PropertyAccessExpression:
                        {
                            let d = this.convertChild(t.expression), S = this.convertChild(t.name), A = this.createNode(t, {
                                type: L.AST_NODE_TYPES.MemberExpression,
                                object: d,
                                property: S,
                                computed: !1,
                                optional: t.questionDotToken !== void 0
                            });
                            return this.convertChainExpression(A, t);
                        }
                    case C.ElementAccessExpression:
                        {
                            let d = this.convertChild(t.expression), S = this.convertChild(t.argumentExpression), A = this.createNode(t, {
                                type: L.AST_NODE_TYPES.MemberExpression,
                                object: d,
                                property: S,
                                computed: !0,
                                optional: t.questionDotToken !== void 0
                            });
                            return this.convertChainExpression(A, t);
                        }
                    case C.CallExpression:
                        {
                            if (t.expression.kind === C.ImportKeyword) return t.arguments.length !== 1 && t.arguments.length !== 2 && Ce(this, we, "m", dn).call(this, t.arguments[2] ?? t, "Dynamic import requires exactly one or two arguments."), this.createNode(t, {
                                type: L.AST_NODE_TYPES.ImportExpression,
                                source: this.convertChild(t.arguments[0]),
                                attributes: t.arguments[1] ? this.convertChild(t.arguments[1]) : null
                            });
                            let d = this.convertChild(t.expression), S = t.arguments.map((N)=>this.convertChild(N)), T = t.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t), A = this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                                type: L.AST_NODE_TYPES.CallExpression,
                                callee: d,
                                arguments: S,
                                optional: t.questionDotToken !== void 0,
                                typeArguments: T
                            }, "typeParameters", "typeArguments"));
                            return this.convertChainExpression(A, t);
                        }
                    case C.NewExpression:
                        {
                            let d = t.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t);
                            return this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                                type: L.AST_NODE_TYPES.NewExpression,
                                arguments: t.arguments ? t.arguments.map((S)=>this.convertChild(S)) : [],
                                callee: this.convertChild(t.expression),
                                typeArguments: d
                            }, "typeParameters", "typeArguments"));
                        }
                    case C.ConditionalExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ConditionalExpression,
                            test: this.convertChild(t.condition),
                            consequent: this.convertChild(t.whenTrue),
                            alternate: this.convertChild(t.whenFalse)
                        });
                    case C.MetaProperty:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.MetaProperty,
                            meta: this.createNode(t.getFirstToken(), {
                                type: L.AST_NODE_TYPES.Identifier,
                                decorators: [],
                                name: (0, le.getTextForTokenKind)(t.keywordToken),
                                optional: !1,
                                typeAnnotation: void 0
                            }),
                            property: this.convertChild(t.name)
                        });
                    case C.Decorator:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.Decorator,
                            expression: this.convertChild(t.expression)
                        });
                    case C.StringLiteral:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.Literal,
                            value: n.kind === C.JsxAttribute ? (0, le.unescapeStringLiteralText)(t.text) : t.text,
                            raw: t.getText()
                        });
                    case C.NumericLiteral:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.Literal,
                            value: Number(t.text),
                            raw: t.getText()
                        });
                    case C.BigIntLiteral:
                        {
                            let d = (0, le.getRange)(t, this.ast), S = this.ast.text.slice(d[0], d[1]), T = S.slice(0, -1).replace(/_/g, ""), A = typeof BigInt < "u" ? BigInt(T) : null;
                            return this.createNode(t, {
                                type: L.AST_NODE_TYPES.Literal,
                                raw: S,
                                value: A,
                                bigint: A == null ? T : String(A),
                                range: d
                            });
                        }
                    case C.RegularExpressionLiteral:
                        {
                            let d = t.text.slice(1, t.text.lastIndexOf("/")), S = t.text.slice(t.text.lastIndexOf("/") + 1), T = null;
                            try {
                                T = new RegExp(d, S);
                            } catch  {}
                            return this.createNode(t, {
                                type: L.AST_NODE_TYPES.Literal,
                                value: T,
                                raw: t.text,
                                regex: {
                                    pattern: d,
                                    flags: S
                                }
                            });
                        }
                    case C.TrueKeyword:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.Literal,
                            value: !0,
                            raw: "true"
                        });
                    case C.FalseKeyword:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.Literal,
                            value: !1,
                            raw: "false"
                        });
                    case C.NullKeyword:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.Literal,
                            value: null,
                            raw: "null"
                        });
                    case C.EmptyStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.EmptyStatement
                        });
                    case C.DebuggerStatement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.DebuggerStatement
                        });
                    case C.JsxElement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXElement,
                            openingElement: this.convertChild(t.openingElement),
                            closingElement: this.convertChild(t.closingElement),
                            children: t.children.map((d)=>this.convertChild(d))
                        });
                    case C.JsxFragment:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXFragment,
                            openingFragment: this.convertChild(t.openingFragment),
                            closingFragment: this.convertChild(t.closingFragment),
                            children: t.children.map((d)=>this.convertChild(d))
                        });
                    case C.JsxSelfClosingElement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXElement,
                            openingElement: this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                                type: L.AST_NODE_TYPES.JSXOpeningElement,
                                typeArguments: t.typeArguments ? this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t) : void 0,
                                selfClosing: !0,
                                name: this.convertJSXTagName(t.tagName, t),
                                attributes: t.attributes.properties.map((d)=>this.convertChild(d)),
                                range: (0, le.getRange)(t, this.ast)
                            }, "typeParameters", "typeArguments")),
                            closingElement: null,
                            children: []
                        });
                    case C.JsxOpeningElement:
                        return this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                            type: L.AST_NODE_TYPES.JSXOpeningElement,
                            typeArguments: t.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t),
                            selfClosing: !1,
                            name: this.convertJSXTagName(t.tagName, t),
                            attributes: t.attributes.properties.map((d)=>this.convertChild(d))
                        }, "typeParameters", "typeArguments"));
                    case C.JsxClosingElement:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXClosingElement,
                            name: this.convertJSXTagName(t.tagName, t)
                        });
                    case C.JsxOpeningFragment:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXOpeningFragment
                        });
                    case C.JsxClosingFragment:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXClosingFragment
                        });
                    case C.JsxExpression:
                        {
                            let d = t.expression ? this.convertChild(t.expression) : this.createNode(t, {
                                type: L.AST_NODE_TYPES.JSXEmptyExpression,
                                range: [
                                    t.getStart(this.ast) + 1,
                                    t.getEnd() - 1
                                ]
                            });
                            return t.dotDotDotToken ? this.createNode(t, {
                                type: L.AST_NODE_TYPES.JSXSpreadChild,
                                expression: d
                            }) : this.createNode(t, {
                                type: L.AST_NODE_TYPES.JSXExpressionContainer,
                                expression: d
                            });
                        }
                    case C.JsxAttribute:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXAttribute,
                            name: this.convertJSXNamespaceOrIdentifier(t.name),
                            value: this.convertChild(t.initializer)
                        });
                    case C.JsxText:
                        {
                            let d = t.getFullStart(), S = t.getEnd(), T = this.ast.text.slice(d, S);
                            return this.createNode(t, {
                                type: L.AST_NODE_TYPES.JSXText,
                                value: (0, le.unescapeStringLiteralText)(T),
                                raw: T,
                                range: [
                                    d,
                                    S
                                ]
                            });
                        }
                    case C.JsxSpreadAttribute:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.JSXSpreadAttribute,
                            argument: this.convertChild(t.expression)
                        });
                    case C.QualifiedName:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSQualifiedName,
                            left: this.convertChild(t.left),
                            right: this.convertChild(t.right)
                        });
                    case C.TypeReference:
                        return this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                            type: L.AST_NODE_TYPES.TSTypeReference,
                            typeName: this.convertChild(t.typeName),
                            typeArguments: t.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t)
                        }, "typeParameters", "typeArguments"));
                    case C.TypeParameter:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSTypeParameter,
                            name: this.convertChild(t.name),
                            constraint: t.constraint && this.convertChild(t.constraint),
                            default: t.default ? this.convertChild(t.default) : void 0,
                            in: (0, le.hasModifier)(C.InKeyword, t),
                            out: (0, le.hasModifier)(C.OutKeyword, t),
                            const: (0, le.hasModifier)(C.ConstKeyword, t)
                        });
                    case C.ThisType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSThisType
                        });
                    case C.AnyKeyword:
                    case C.BigIntKeyword:
                    case C.BooleanKeyword:
                    case C.NeverKeyword:
                    case C.NumberKeyword:
                    case C.ObjectKeyword:
                    case C.StringKeyword:
                    case C.SymbolKeyword:
                    case C.UnknownKeyword:
                    case C.VoidKeyword:
                    case C.UndefinedKeyword:
                    case C.IntrinsicKeyword:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES[`TS${C[t.kind]}`]
                        });
                    case C.NonNullExpression:
                        {
                            let d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSNonNullExpression,
                                expression: this.convertChild(t.expression)
                            });
                            return this.convertChainExpression(d, t);
                        }
                    case C.TypeLiteral:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSTypeLiteral,
                            members: t.members.map((d)=>this.convertChild(d))
                        });
                    case C.ArrayType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSArrayType,
                            elementType: this.convertChild(t.elementType)
                        });
                    case C.IndexedAccessType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSIndexedAccessType,
                            objectType: this.convertChild(t.objectType),
                            indexType: this.convertChild(t.indexType)
                        });
                    case C.ConditionalType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSConditionalType,
                            checkType: this.convertChild(t.checkType),
                            extendsType: this.convertChild(t.extendsType),
                            trueType: this.convertChild(t.trueType),
                            falseType: this.convertChild(t.falseType)
                        });
                    case C.TypeQuery:
                        return this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                            type: L.AST_NODE_TYPES.TSTypeQuery,
                            exprName: this.convertChild(t.exprName),
                            typeArguments: t.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t)
                        }, "typeParameters", "typeArguments"));
                    case C.MappedType:
                        return t.members && t.members.length > 0 && Ce(this, we, "m", dn).call(this, t.members[0], "A mapped type may not declare properties or methods."), this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSMappedType,
                            nameType: this.convertChild(t.nameType) ?? null,
                            optional: t.questionToken && (t.questionToken.kind === C.QuestionToken || (0, le.getTextForTokenKind)(t.questionToken.kind)),
                            readonly: t.readonlyToken && (t.readonlyToken.kind === C.ReadonlyKeyword || (0, le.getTextForTokenKind)(t.readonlyToken.kind)),
                            typeAnnotation: t.type && this.convertChild(t.type),
                            typeParameter: this.convertChild(t.typeParameter)
                        });
                    case C.ParenthesizedExpression:
                        return this.convertChild(t.expression, n);
                    case C.TypeAliasDeclaration:
                        {
                            let d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSTypeAliasDeclaration,
                                declare: (0, le.hasModifier)(C.DeclareKeyword, t),
                                id: this.convertChild(t.name),
                                typeAnnotation: this.convertChild(t.type),
                                typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                            });
                            return this.fixExports(t, d);
                        }
                    case C.MethodSignature:
                        return this.convertMethodSignature(t);
                    case C.PropertySignature:
                        {
                            let { initializer: d } = t;
                            return d && Ce(this, we, "m", rt).call(this, d, "A property signature cannot have an initializer."), this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSPropertySignature,
                                accessibility: (0, le.getTSNodeAccessibility)(t),
                                computed: (0, le.isComputedProperty)(t.name),
                                key: this.convertChild(t.name),
                                optional: (0, le.isOptional)(t),
                                readonly: (0, le.hasModifier)(C.ReadonlyKeyword, t),
                                static: (0, le.hasModifier)(C.StaticKeyword, t),
                                typeAnnotation: t.type && this.convertTypeAnnotation(t.type, t)
                            });
                        }
                    case C.IndexSignature:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSIndexSignature,
                            accessibility: (0, le.getTSNodeAccessibility)(t),
                            parameters: t.parameters.map((d)=>this.convertChild(d)),
                            readonly: (0, le.hasModifier)(C.ReadonlyKeyword, t),
                            static: (0, le.hasModifier)(C.StaticKeyword, t),
                            typeAnnotation: t.type && this.convertTypeAnnotation(t.type, t)
                        });
                    case C.ConstructorType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSConstructorType,
                            abstract: (0, le.hasModifier)(C.AbstractKeyword, t),
                            params: this.convertParameters(t.parameters),
                            returnType: t.type && this.convertTypeAnnotation(t.type, t),
                            typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                        });
                    case C.FunctionType:
                        {
                            let { modifiers: d } = t;
                            d && Ce(this, we, "m", rt).call(this, d[0], "A function type cannot have modifiers.");
                        }
                    case C.ConstructSignature:
                    case C.CallSignature:
                        {
                            let d = t.kind === C.ConstructSignature ? L.AST_NODE_TYPES.TSConstructSignatureDeclaration : t.kind === C.CallSignature ? L.AST_NODE_TYPES.TSCallSignatureDeclaration : L.AST_NODE_TYPES.TSFunctionType;
                            return this.createNode(t, {
                                type: d,
                                params: this.convertParameters(t.parameters),
                                returnType: t.type && this.convertTypeAnnotation(t.type, t),
                                typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                            });
                        }
                    case C.ExpressionWithTypeArguments:
                        {
                            let d = n.kind, S = d === C.InterfaceDeclaration ? L.AST_NODE_TYPES.TSInterfaceHeritage : d === C.HeritageClause ? L.AST_NODE_TYPES.TSClassImplements : L.AST_NODE_TYPES.TSInstantiationExpression;
                            return this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                                type: S,
                                expression: this.convertChild(t.expression),
                                typeArguments: t.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t)
                            }, "typeParameters", "typeArguments"));
                        }
                    case C.InterfaceDeclaration:
                        {
                            let d = t.heritageClauses ?? [], S = [];
                            for (let A of d){
                                A.token !== C.ExtendsKeyword && Ce(this, we, "m", rt).call(this, A, A.token === C.ImplementsKeyword ? "Interface declaration cannot have 'implements' clause." : "Unexpected token.");
                                for (let N of A.types)S.push(this.convertChild(N, t));
                            }
                            let T = this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSInterfaceDeclaration,
                                body: this.createNode(t, {
                                    type: L.AST_NODE_TYPES.TSInterfaceBody,
                                    body: t.members.map((A)=>this.convertChild(A)),
                                    range: [
                                        t.members.pos - 1,
                                        t.end
                                    ]
                                }),
                                declare: (0, le.hasModifier)(C.DeclareKeyword, t),
                                extends: S,
                                id: this.convertChild(t.name),
                                typeParameters: t.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t.typeParameters)
                            });
                            return this.fixExports(t, T);
                        }
                    case C.TypePredicate:
                        {
                            let d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSTypePredicate,
                                asserts: t.assertsModifier !== void 0,
                                parameterName: this.convertChild(t.parameterName),
                                typeAnnotation: null
                            });
                            return t.type && (d.typeAnnotation = this.convertTypeAnnotation(t.type, t), d.typeAnnotation.loc = d.typeAnnotation.typeAnnotation.loc, d.typeAnnotation.range = d.typeAnnotation.typeAnnotation.range), d;
                        }
                    case C.ImportType:
                        {
                            let d = (0, le.getRange)(t, this.ast);
                            if (t.isTypeOf) {
                                let T = (0, le.findNextToken)(t.getFirstToken(), t, this.ast);
                                d[0] = T.getStart(this.ast);
                            }
                            let S = this.createNode(t, Ce(this, we, "m", Gn).call(this, {
                                type: L.AST_NODE_TYPES.TSImportType,
                                argument: this.convertChild(t.argument),
                                qualifier: this.convertChild(t.qualifier),
                                typeArguments: t.typeArguments ? this.convertTypeArgumentsToTypeParameterInstantiation(t.typeArguments, t) : null,
                                range: d
                            }, "typeParameters", "typeArguments"));
                            return t.isTypeOf ? this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSTypeQuery,
                                exprName: S,
                                typeArguments: void 0,
                                typeParameters: void 0
                            }) : S;
                        }
                    case C.EnumDeclaration:
                        {
                            let d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSEnumDeclaration,
                                const: (0, le.hasModifier)(C.ConstKeyword, t),
                                declare: (0, le.hasModifier)(C.DeclareKeyword, t),
                                id: this.convertChild(t.name),
                                members: t.members.map((S)=>this.convertChild(S))
                            });
                            return this.fixExports(t, d);
                        }
                    case C.EnumMember:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSEnumMember,
                            computed: t.name.kind === it.SyntaxKind.ComputedPropertyName,
                            id: this.convertChild(t.name),
                            initializer: t.initializer && this.convertChild(t.initializer)
                        });
                    case C.ModuleDeclaration:
                        {
                            let d = (0, le.hasModifier)(C.DeclareKeyword, t), S = this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSModuleDeclaration,
                                ...(()=>{
                                    if (t.flags & it.NodeFlags.GlobalAugmentation) {
                                        let A = this.convertChild(t.name), N = this.convertChild(t.body);
                                        return (N == null || N.type === L.AST_NODE_TYPES.TSModuleDeclaration) && Ce(this, we, "m", dn).call(this, t.body ?? t, "Expected a valid module body"), A.type !== L.AST_NODE_TYPES.Identifier && Ce(this, we, "m", dn).call(this, t.name, "global module augmentation must have an Identifier id"), {
                                            kind: "global",
                                            body: N,
                                            declare: !1,
                                            global: !1,
                                            id: A
                                        };
                                    }
                                    if (!(t.flags & it.NodeFlags.Namespace)) {
                                        let A = this.convertChild(t.body);
                                        return {
                                            kind: "module",
                                            ...A != null ? {
                                                body: A
                                            } : {},
                                            declare: !1,
                                            global: !1,
                                            id: this.convertChild(t.name)
                                        };
                                    }
                                    t.body == null && Ce(this, we, "m", dn).call(this, t, "Expected a module body"), t.name.kind !== it.SyntaxKind.Identifier && Ce(this, we, "m", dn).call(this, t.name, "`namespace`s must have an Identifier id");
                                    let T = this.createNode(t.name, {
                                        decorators: [],
                                        name: t.name.text,
                                        optional: !1,
                                        range: [
                                            t.name.getStart(this.ast),
                                            t.name.getEnd()
                                        ],
                                        type: L.AST_NODE_TYPES.Identifier,
                                        typeAnnotation: void 0
                                    });
                                    for(; t.body && it.isModuleDeclaration(t.body) && t.body.name;){
                                        t = t.body, d || (d = (0, le.hasModifier)(C.DeclareKeyword, t));
                                        let A = t.name, N = this.createNode(A, {
                                            decorators: [],
                                            name: A.text,
                                            optional: !1,
                                            range: [
                                                A.getStart(this.ast),
                                                A.getEnd()
                                            ],
                                            type: L.AST_NODE_TYPES.Identifier,
                                            typeAnnotation: void 0
                                        });
                                        T = this.createNode(A, {
                                            left: T,
                                            right: N,
                                            range: [
                                                T.range[0],
                                                N.range[1]
                                            ],
                                            type: L.AST_NODE_TYPES.TSQualifiedName
                                        });
                                    }
                                    return {
                                        kind: "namespace",
                                        body: this.convertChild(t.body),
                                        declare: !1,
                                        global: !1,
                                        id: T
                                    };
                                })()
                            });
                            return S.declare = d, t.flags & it.NodeFlags.GlobalAugmentation && (S.global = !0), this.fixExports(t, S);
                        }
                    case C.ParenthesizedType:
                        return this.convertChild(t.type);
                    case C.UnionType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSUnionType,
                            types: t.types.map((d)=>this.convertChild(d))
                        });
                    case C.IntersectionType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSIntersectionType,
                            types: t.types.map((d)=>this.convertChild(d))
                        });
                    case C.AsExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSAsExpression,
                            expression: this.convertChild(t.expression),
                            typeAnnotation: this.convertChild(t.type)
                        });
                    case C.InferType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSInferType,
                            typeParameter: this.convertChild(t.typeParameter)
                        });
                    case C.LiteralType:
                        return t.literal.kind === C.NullKeyword ? this.createNode(t.literal, {
                            type: L.AST_NODE_TYPES.TSNullKeyword
                        }) : this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSLiteralType,
                            literal: this.convertChild(t.literal)
                        });
                    case C.TypeAssertionExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSTypeAssertion,
                            typeAnnotation: this.convertChild(t.type),
                            expression: this.convertChild(t.expression)
                        });
                    case C.ImportEqualsDeclaration:
                        return this.fixExports(t, this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSImportEqualsDeclaration,
                            id: this.convertChild(t.name),
                            importKind: t.isTypeOnly ? "type" : "value",
                            moduleReference: this.convertChild(t.moduleReference)
                        }));
                    case C.ExternalModuleReference:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSExternalModuleReference,
                            expression: this.convertChild(t.expression)
                        });
                    case C.NamespaceExportDeclaration:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSNamespaceExportDeclaration,
                            id: this.convertChild(t.name)
                        });
                    case C.AbstractKeyword:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSAbstractKeyword
                        });
                    case C.TupleType:
                        {
                            let d = "elementTypes" in t ? t.elementTypes.map((S)=>this.convertChild(S)) : t.elements.map((S)=>this.convertChild(S));
                            return this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSTupleType,
                                elementTypes: d
                            });
                        }
                    case C.NamedTupleMember:
                        {
                            let d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSNamedTupleMember,
                                elementType: this.convertChild(t.type, t),
                                label: this.convertChild(t.name, t),
                                optional: t.questionToken != null
                            });
                            return t.dotDotDotToken ? (d.range[0] = d.label.range[0], d.loc.start = d.label.loc.start, this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSRestType,
                                typeAnnotation: d
                            })) : d;
                        }
                    case C.OptionalType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSOptionalType,
                            typeAnnotation: this.convertChild(t.type)
                        });
                    case C.RestType:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSRestType,
                            typeAnnotation: this.convertChild(t.type)
                        });
                    case C.TemplateLiteralType:
                        {
                            let d = this.createNode(t, {
                                type: L.AST_NODE_TYPES.TSTemplateLiteralType,
                                quasis: [
                                    this.convertChild(t.head)
                                ],
                                types: []
                            });
                            return t.templateSpans.forEach((S)=>{
                                d.types.push(this.convertChild(S.type)), d.quasis.push(this.convertChild(S.literal));
                            }), d;
                        }
                    case C.ClassStaticBlockDeclaration:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.StaticBlock,
                            body: this.convertBodyExpressions(t.body.statements, t)
                        });
                    case C.AssertEntry:
                    case C.ImportAttribute:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.ImportAttribute,
                            key: this.convertChild(t.name),
                            value: this.convertChild(t.value)
                        });
                    case C.SatisfiesExpression:
                        return this.createNode(t, {
                            type: L.AST_NODE_TYPES.TSSatisfiesExpression,
                            expression: this.convertChild(t.expression),
                            typeAnnotation: this.convertChild(t.type)
                        });
                    default:
                        return this.deeplyCopy(t);
                }
            }
        };
        xr.Converter = _6;
        we = new WeakSet, lw = function(t) {
            if (!this.options.allowInvalidAST) {
                (0, le.nodeHasIllegalDecorators)(t) && Ce(this, we, "m", rt).call(this, t.illegalDecorators[0], "Decorators are not valid here.");
                for (let n of (0, ta.getDecorators)(t, !0) ?? [])(0, le.nodeCanBeDecorated)(t) || (it.isMethodDeclaration(t) && !(0, le.nodeIsPresent)(t.body) ? Ce(this, we, "m", rt).call(this, n, "A decorator can only decorate a method implementation, not an overload.") : Ce(this, we, "m", rt).call(this, n, "Decorators are not valid here."));
                for (let n of (0, ta.getModifiers)(t, !0) ?? []){
                    if (n.kind !== C.ReadonlyKeyword && ((t.kind === C.PropertySignature || t.kind === C.MethodSignature) && Ce(this, we, "m", rt).call(this, n, `'${it.tokenToString(n.kind)}' modifier cannot appear on a type member`), t.kind === C.IndexSignature && (n.kind !== C.StaticKeyword || !it.isClassLike(t.parent)) && Ce(this, we, "m", rt).call(this, n, `'${it.tokenToString(n.kind)}' modifier cannot appear on an index signature`)), n.kind !== C.InKeyword && n.kind !== C.OutKeyword && n.kind !== C.ConstKeyword && t.kind === C.TypeParameter && Ce(this, we, "m", rt).call(this, n, `'${it.tokenToString(n.kind)}' modifier cannot appear on a type parameter`), (n.kind === C.InKeyword || n.kind === C.OutKeyword) && (t.kind !== C.TypeParameter || !(it.isInterfaceDeclaration(t.parent) || it.isClassLike(t.parent) || it.isTypeAliasDeclaration(t.parent))) && Ce(this, we, "m", rt).call(this, n, `'${it.tokenToString(n.kind)}' modifier can only appear on a type parameter of a class, interface or type alias`), n.kind === C.ReadonlyKeyword && t.kind !== C.PropertyDeclaration && t.kind !== C.PropertySignature && t.kind !== C.IndexSignature && t.kind !== C.Parameter && Ce(this, we, "m", rt).call(this, n, "'readonly' modifier can only appear on a property declaration or index signature."), n.kind === C.DeclareKeyword && it.isClassLike(t.parent) && !it.isPropertyDeclaration(t) && Ce(this, we, "m", rt).call(this, n, `'${it.tokenToString(n.kind)}' modifier cannot appear on class elements of this kind.`), n.kind === C.DeclareKeyword && it.isVariableStatement(t)) {
                        let a = (0, le.getDeclarationKind)(t.declarationList);
                        (a === "using" || a === "await using") && Ce(this, we, "m", rt).call(this, n, `'declare' modifier cannot appear on a '${a}' declaration.`);
                    }
                    if (n.kind === C.AbstractKeyword && t.kind !== C.ClassDeclaration && t.kind !== C.ConstructorType && t.kind !== C.MethodDeclaration && t.kind !== C.PropertyDeclaration && t.kind !== C.GetAccessor && t.kind !== C.SetAccessor && Ce(this, we, "m", rt).call(this, n, `'${it.tokenToString(n.kind)}' modifier can only appear on a class, method, or property declaration.`), (n.kind === C.StaticKeyword || n.kind === C.PublicKeyword || n.kind === C.ProtectedKeyword || n.kind === C.PrivateKeyword) && (t.parent.kind === C.ModuleBlock || t.parent.kind === C.SourceFile) && Ce(this, we, "m", rt).call(this, n, `'${it.tokenToString(n.kind)}' modifier cannot appear on a module or namespace element.`), n.kind === C.AccessorKeyword && t.kind !== C.PropertyDeclaration && Ce(this, we, "m", rt).call(this, n, "'accessor' modifier can only appear on a property declaration."), n.kind === C.AsyncKeyword && t.kind !== C.MethodDeclaration && t.kind !== C.FunctionDeclaration && t.kind !== C.FunctionExpression && t.kind !== C.ArrowFunction && Ce(this, we, "m", rt).call(this, n, "'async' modifier cannot be used here."), t.kind === C.Parameter && (n.kind === C.StaticKeyword || n.kind === C.ExportKeyword || n.kind === C.DeclareKeyword || n.kind === C.AsyncKeyword) && Ce(this, we, "m", rt).call(this, n, `'${it.tokenToString(n.kind)}' modifier cannot appear on a parameter.`), t.kind === C.Parameter && (n.kind === C.PublicKeyword || n.kind === C.PrivateKeyword || n.kind === C.ProtectedKeyword || n.kind === C.ReadonlyKeyword || n.kind === C.OverrideKeyword)) {
                        let a = (0, le.getContainingFunction)(t);
                        a.kind === C.Constructor && (0, le.nodeIsPresent)(a.body) || Ce(this, we, "m", rt).call(this, n, "A parameter property is only allowed in a constructor implementation.");
                    }
                }
            }
        }, dn = function(t, n) {
            this.options.allowInvalidAST || Ce(this, we, "m", rt).call(this, t, n);
        }, Gn = function(t, n, a, _ = !1) {
            let p = _;
            return Object.defineProperty(t, n, {
                configurable: !0,
                get: this.options.suppressDeprecatedPropertyWarnings ? ()=>t[a] : ()=>(p || ((void 0)(`The '${n}' property is deprecated on ${t.type} nodes. Use '${a}' instead. See https://typescript-eslint.io/linting/troubleshooting#the-key-property-is-deprecated-on-type-nodes-use-key-instead-warnings.`, "DeprecationWarning"), p = !0), t[a]),
                set (m) {
                    Object.defineProperty(t, n, {
                        enumerable: !0,
                        writable: !0,
                        value: m
                    });
                }
            }), t;
        }, rt = function(t, n) {
            let a, _;
            throw typeof t == "number" ? a = _ = t : (a = t.getStart(this.ast), _ = t.getEnd()), (0, le.createError)(n, this.ast, a, _);
        }, uw = function(t) {
            it.isVariableDeclarationList(t) && t.flags & it.NodeFlags.Using && Ce(this, we, "m", rt).call(this, t, "The left-hand side of a 'for...in' statement cannot be a 'using' declaration.");
        };
    });
    function YB(e, t, n = e.getSourceFile()) {
        let a = [];
        for(;;){
            if (u6.default.isTokenKind(e.kind)) t(e);
            else if (e.kind !== u6.default.SyntaxKind.JSDocComment) {
                let _ = e.getChildren(n);
                if (_.length === 1) {
                    e = _[0];
                    continue;
                }
                for(let p = _.length - 1; p >= 0; --p)a.push(_[p]);
            }
            if (a.length === 0) break;
            e = a.pop();
        }
    }
    function KB(e) {
        switch(e.kind){
            case Xn.default.SyntaxKind.CloseBraceToken:
                return e.parent.kind !== Xn.default.SyntaxKind.JsxExpression || !l6(e.parent.parent);
            case Xn.default.SyntaxKind.GreaterThanToken:
                switch(e.parent.kind){
                    case Xn.default.SyntaxKind.JsxOpeningElement:
                        return e.end !== e.parent.end;
                    case Xn.default.SyntaxKind.JsxOpeningFragment:
                        return !1;
                    case Xn.default.SyntaxKind.JsxSelfClosingElement:
                        return e.end !== e.parent.end || !l6(e.parent.parent);
                    case Xn.default.SyntaxKind.JsxClosingElement:
                    case Xn.default.SyntaxKind.JsxClosingFragment:
                        return !l6(e.parent.parent.parent);
                }
        }
        return !0;
    }
    function l6(e) {
        return e.kind === Xn.default.SyntaxKind.JsxElement || e.kind === Xn.default.SyntaxKind.JsxFragment;
    }
    function mw(e, t, n = e.getSourceFile()) {
        let a = n.text, _ = n.languageVariant !== Xn.default.LanguageVariant.JSX;
        return YB(e, (m)=>{
            if (m.pos !== m.end && (m.kind !== Xn.default.SyntaxKind.JsxText && Xn.default.forEachLeadingCommentRange(a, m.pos === 0 ? (Xn.default.getShebang(a) ?? "").length : m.pos, p), _ || KB(m))) return Xn.default.forEachTrailingCommentRange(a, m.end, p);
        }, n);
        function p(m, y, u) {
            t(a, {
                pos: m,
                end: y,
                kind: u
            });
        }
    }
    function $m(e, ...t) {
        if (e === void 0) return !1;
        for (let n of e)if (t.includes(n.kind)) return !0;
        return !1;
    }
    function pU(e) {
        return "identifierToKeywordKind" in bs.default ? bs.default.identifierToKeywordKind(e) : e.originalKeywordKind;
    }
    function fU(e) {
        return "canHaveDecorators" in bs.default ? bs.default.canHaveDecorators(e) : "decorators" in e;
    }
    function dU(e) {
        return "getDecorators" in bs.default ? bs.default.getDecorators(e) : e.decorators;
    }
    function mU(e) {
        switch(e.parent.kind){
            case mn.default.SyntaxKind.TypeParameter:
            case mn.default.SyntaxKind.InterfaceDeclaration:
            case mn.default.SyntaxKind.TypeAliasDeclaration:
                return 2;
            case mn.default.SyntaxKind.ClassDeclaration:
            case mn.default.SyntaxKind.ClassExpression:
                return 6;
            case mn.default.SyntaxKind.EnumDeclaration:
                return 7;
            case mn.default.SyntaxKind.NamespaceImport:
            case mn.default.SyntaxKind.ImportClause:
                return 15;
            case mn.default.SyntaxKind.ImportEqualsDeclaration:
            case mn.default.SyntaxKind.ImportSpecifier:
                return e.parent.name === e ? 15 : void 0;
            case mn.default.SyntaxKind.ModuleDeclaration:
                return 1;
            case mn.default.SyntaxKind.Parameter:
                if (e.parent.parent.kind === mn.default.SyntaxKind.IndexSignature || pU(e) === mn.default.SyntaxKind.ThisKeyword) return;
            case mn.default.SyntaxKind.BindingElement:
            case mn.default.SyntaxKind.VariableDeclaration:
                return e.parent.name === e ? 4 : void 0;
            case mn.default.SyntaxKind.FunctionDeclaration:
            case mn.default.SyntaxKind.FunctionExpression:
                return 4;
        }
    }
    function pw(e) {
        return {
            declaration: e,
            exported: !0,
            domain: mU(e)
        };
    }
    function jU(e) {
        return e.parent.kind === An.default.SyntaxKind.ModuleDeclaration || $m(e.modifiers, An.default.SyntaxKind.ExportKeyword);
    }
    function fw(e) {
        return e.body === void 0 || e.body.kind !== An.default.SyntaxKind.ModuleBlock ? !1 : FU(e.body);
    }
    function FU(e) {
        for (let t of e.statements)if (t.kind === An.default.SyntaxKind.ExportDeclaration || t.kind === An.default.SyntaxKind.ExportAssignment) return !0;
        return !1;
    }
    function BU(e) {
        return (e.flags & An.default.NodeFlags.BlockScoped) !== 0;
    }
    function Sw(e, t) {
        for (let n of e.elements){
            if (n.kind !== An.default.SyntaxKind.BindingElement) continue;
            let a;
            if (n.name.kind === An.default.SyntaxKind.Identifier ? a = t(n) : a = Sw(n.name, t), a) return a;
        }
    }
    var Xn, u6, ZB, eU, tU, nU, rU, hw, iU, aU, oU, sr, sU, _U, cU, lU, uU, An, mn, bs, hU, yU, gU, p6, et, po, _r, dw, sW, _W, cW, hs, bU, gs, vU, TU, SU, xU, na, ys, Ma, V_, wU, yw, H_, pu, EU, CU, AU, Xm, kU, DU, wr, PU, IU, NU, OU, MU, LU, gw, bw, vw, Tw, JU, RU, xw = E6(()=>{
        Xn = Ot(lt(), 1), u6 = Ot(lt(), 1), ZB = Ot(lt(), 1), eU = Ot(lt(), 1), tU = Ot(lt(), 1), nU = Ot(lt(), 1), rU = Ot(lt(), 1), hw = Ot(lt(), 1), iU = Ot(lt(), 1), aU = Ot(lt(), 1), oU = Ot(lt(), 1), sr = Ot(lt(), 1), sU = Ot(lt(), 1), _U = Ot(lt(), 1), cU = Ot(lt(), 1), lU = Ot(lt(), 1), uU = Ot(lt(), 1), An = Ot(lt(), 1), mn = Ot(lt(), 1), bs = Ot(lt(), 1), hU = Ot(lt(), 1), yU = Ot(lt(), 1), gU = Ot(lt(), 1), p6 = (e, t, n)=>{
            if (!t.has(e)) throw TypeError("Cannot " + n);
        }, et = (e, t, n)=>(p6(e, t, "read from private field"), n ? n.call(e) : t.get(e)), po = (e, t, n)=>{
            if (t.has(e)) throw TypeError("Cannot add the same private member more than once");
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
        }, _r = (e, t, n, a)=>(p6(e, t, "write to private field"), a ? a.call(e, n) : t.set(e, n), n), dw = (e, t, n)=>(p6(e, t, "access private method"), n);
        [sW, _W] = hw.default.versionMajorMinor.split(".").map((e)=>Number.parseInt(e, 10)), cW = sr.default.TypeFlags.Intrinsic ?? sr.default.TypeFlags.Any | sr.default.TypeFlags.Unknown | sr.default.TypeFlags.String | sr.default.TypeFlags.Number | sr.default.TypeFlags.BigInt | sr.default.TypeFlags.Boolean | sr.default.TypeFlags.BooleanLiteral | sr.default.TypeFlags.ESSymbol | sr.default.TypeFlags.Void | sr.default.TypeFlags.Undefined | sr.default.TypeFlags.Null | sr.default.TypeFlags.Never | sr.default.TypeFlags.NonPrimitive;
        bU = class {
            constructor(e){
                this.global = e, this.variables = new Map, this.uses = [], this.namespaceScopes = void 0, po(this, hs, void 0);
            }
            addVariable(e, t, n, a, _) {
                let p = this.getDestinationScope(n).getVariables(), m = {
                    domain: _,
                    exported: a,
                    declaration: t
                }, y = p.get(e);
                y === void 0 ? p.set(e, {
                    domain: _,
                    declarations: [
                        m
                    ],
                    uses: []
                }) : (y.domain |= _, y.declarations.push(m));
            }
            addUse(e) {
                this.uses.push(e);
            }
            getVariables() {
                return this.variables;
            }
            getFunctionScope() {
                return this;
            }
            end(e) {
                this.namespaceScopes !== void 0 && this.namespaceScopes.forEach((t)=>t.finish(e)), this.namespaceScopes = _r(this, hs, void 0), this.applyUses(), this.variables.forEach((t)=>{
                    for (let n of t.declarations){
                        let a = {
                            declarations: [],
                            domain: n.domain,
                            exported: n.exported,
                            inGlobalScope: this.global,
                            uses: []
                        };
                        for (let _ of t.declarations)_.domain & n.domain && a.declarations.push(_.declaration);
                        for (let _ of t.uses)_.domain & n.domain && a.uses.push(_);
                        e(a, n.declaration, this);
                    }
                });
            }
            markExported(e) {}
            createOrReuseNamespaceScope(e, t, n, a) {
                let _;
                return this.namespaceScopes === void 0 ? this.namespaceScopes = new Map : _ = this.namespaceScopes.get(e), _ === void 0 ? (_ = new wU(n, a, this), this.namespaceScopes.set(e, _)) : _.refresh(n, a), _;
            }
            createOrReuseEnumScope(e, t) {
                let n;
                return et(this, hs) === void 0 ? _r(this, hs, new Map) : n = et(this, hs).get(e), n === void 0 && (n = new vU(this), et(this, hs).set(e, n)), n;
            }
            applyUses() {
                for (let e of this.uses)this.applyUse(e) || this.addUseToParent(e);
                this.uses = [];
            }
            applyUse(e, t = this.variables) {
                let n = t.get(e.location.text);
                return n === void 0 || !(n.domain & e.domain) ? !1 : (n.uses.push(e), !0);
            }
            addUseToParent(e) {}
        };
        hs = new WeakMap;
        gs = class extends bU {
            constructor(e, t){
                super(!1), this.parent = e, this.boundary = t;
            }
            getDestinationScope(e) {
                return this.boundary & e ? this : this.parent.getDestinationScope(e);
            }
            addUseToParent(e) {
                return this.parent.addUse(e, this);
            }
        }, vU = class extends gs {
            constructor(e){
                super(e, 1);
            }
            end() {
                this.applyUses();
            }
        };
        TU = new WeakMap;
        SU = new WeakMap;
        xU = new WeakMap;
        wU = class extends gs {
            constructor(e, t, n){
                super(n, 1), po(this, na, new gs(this, 1)), po(this, ys, void 0), po(this, Ma, void 0), po(this, V_, void 0), _r(this, Ma, e), _r(this, V_, t);
            }
            finish(e) {
                return super.end(e);
            }
            end(e) {
                et(this, na).end((t, n, a)=>{
                    if (a !== et(this, na) || !t.exported && (!et(this, Ma) || et(this, ys) !== void 0 && !et(this, ys).has(n.text))) return e(t, n, a);
                    let _ = this.variables.get(n.text);
                    if (_ === void 0) this.variables.set(n.text, {
                        declarations: t.declarations.map(pw),
                        domain: t.domain,
                        uses: [
                            ...t.uses
                        ]
                    });
                    else {
                        e: for (let p of t.declarations){
                            for (let m of _.declarations)if (m.declaration === p) continue e;
                            _.declarations.push(pw(p));
                        }
                        _.domain |= t.domain;
                        for (let p of t.uses)_.uses.includes(p) || _.uses.push(p);
                    }
                }), this.applyUses(), _r(this, na, new gs(this, 1));
            }
            createOrReuseNamespaceScope(e, t, n, a) {
                return !t && (!et(this, Ma) || et(this, V_)) ? et(this, na).createOrReuseNamespaceScope(e, t, n || et(this, Ma), a) : super.createOrReuseNamespaceScope(e, t, n || et(this, Ma), a);
            }
            createOrReuseEnumScope(e, t) {
                return !t && (!et(this, Ma) || et(this, V_)) ? et(this, na).createOrReuseEnumScope(e, t) : super.createOrReuseEnumScope(e, t);
            }
            addUse(e, t) {
                if (t !== et(this, na)) return et(this, na).addUse(e);
                this.uses.push(e);
            }
            refresh(e, t) {
                _r(this, Ma, e), _r(this, V_, t);
            }
            markExported(e) {
                et(this, ys) === void 0 && _r(this, ys, new Set), et(this, ys).add(e.text);
            }
            getDestinationScope() {
                return et(this, na);
            }
        };
        na = new WeakMap;
        ys = new WeakMap;
        Ma = new WeakMap;
        V_ = new WeakMap;
        yw = class extends gs {
            constructor(e){
                super(e, 1);
            }
            beginBody() {
                this.applyUses();
            }
        }, EU = class extends gs {
            constructor(e, t, n){
                super(n, 1), po(this, H_, void 0), po(this, pu, void 0), _r(this, H_, e), _r(this, pu, t);
            }
            end(e) {
                return this.innerScope.end(e), e({
                    declarations: [
                        et(this, H_)
                    ],
                    domain: et(this, pu),
                    exported: !1,
                    uses: this.uses,
                    inGlobalScope: !1
                }, et(this, H_), this);
            }
            addUse(e, t) {
                if (t !== this.innerScope) return this.innerScope.addUse(e);
                if (e.domain & et(this, pu) && e.location.text === et(this, H_).text) this.uses.push(e);
                else return this.parent.addUse(e, this);
            }
            getFunctionScope() {
                return this.innerScope;
            }
            getDestinationScope() {
                return this.innerScope;
            }
        };
        H_ = new WeakMap;
        pu = new WeakMap;
        CU = class extends EU {
            constructor(e, t){
                super(e, 4, t), this.innerScope = new yw(this);
            }
            beginBody() {
                return this.innerScope.beginBody();
            }
        };
        AU = new WeakMap;
        kU = class extends gs {
            constructor(e){
                super(e, 8), po(this, Xm, 0);
            }
            updateState(e) {
                _r(this, Xm, e);
            }
            addUse(e) {
                return et(this, Xm) === 2 ? void this.uses.push(e) : this.parent.addUse(e, this);
            }
        };
        Xm = new WeakMap;
        DU = new WeakMap;
        wr = new WeakMap;
        PU = new WeakSet;
        IU = function(e, t, n) {
            let a = et(this, wr), _ = _r(this, wr, new kU(a));
            t(e.checkType), _.updateState(1), t(e.extendsType), _.updateState(2), t(e.trueType), _.updateState(3), t(e.falseType), _.end(n), _r(this, wr, a);
        };
        NU = new WeakSet;
        OU = function(e, t, n) {
            var p;
            fU(e) && ((p = dU(e)) == null || p.forEach(t));
            let a = et(this, wr);
            e.kind === An.default.SyntaxKind.FunctionDeclaration && dw(this, gw, bw).call(this, e, !1, 4);
            let _ = _r(this, wr, e.kind === An.default.SyntaxKind.FunctionExpression && e.name !== void 0 ? new CU(e.name, a) : new yw(a));
            e.name !== void 0 && t(e.name), e.typeParameters !== void 0 && e.typeParameters.forEach(t), e.parameters.forEach(t), e.type !== void 0 && t(e.type), e.body !== void 0 && (_.beginBody(), t(e.body)), _.end(n), _r(this, wr, a);
        };
        MU = new WeakSet;
        LU = function(e, t) {
            if (e.flags & An.default.NodeFlags.GlobalAugmentation) return t(e, et(this, wr).createOrReuseNamespaceScope("-global", !1, !0, !1));
            if (e.name.kind === An.default.SyntaxKind.Identifier) {
                let n = jU(e);
                et(this, wr).addVariable(e.name.text, e.name, 1, n, 5);
                let a = $m(e.modifiers, An.default.SyntaxKind.DeclareKeyword);
                return t(e, et(this, wr).createOrReuseNamespaceScope(e.name.text, n, a, a && fw(e)));
            }
            return t(e, et(this, wr).createOrReuseNamespaceScope(`"${e.name.text}"`, !1, !0, fw(e)));
        };
        gw = new WeakSet;
        bw = function(e, t, n) {
            e.name !== void 0 && et(this, wr).addVariable(e.name.text, e.name, t ? 3 : 1, $m(e.modifiers, An.default.SyntaxKind.ExportKeyword), n);
        };
        vw = new WeakSet;
        Tw = function(e, t, n) {
            if (e.kind === An.default.SyntaxKind.Identifier) return et(this, wr).addVariable(e.text, e, t ? 3 : 1, n, 4);
            Sw(e, (a)=>{
                et(this, wr).addVariable(a.name.text, a.name, t ? 3 : 1, n, 4);
            });
        };
        JU = new WeakSet;
        RU = function(e) {
            let t = BU(e), n = e.parent.kind === An.default.SyntaxKind.VariableStatement && $m(e.parent.modifiers, An.default.SyntaxKind.ExportKeyword);
            for (let a of e.declarations)dw(this, vw, Tw).call(this, a.name, t, n);
        };
    });
    var Cw = mt((ra)=>{
        "use strict";
        xw();
        var qU = ra && ra.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), zU = ra && ra.__setModuleDefault || (Object.create ? function(e, t) {
            Object.defineProperty(e, "default", {
                enumerable: !0,
                value: t
            });
        } : function(e, t) {
            e.default = t;
        }), WU = ra && ra.__importStar || function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && qU(t, e, n);
            return zU(t, e), t;
        };
        Object.defineProperty(ra, "__esModule", {
            value: !0
        });
        ra.convertComments = void 0;
        var ww = WU(lt()), VU = Gm(), Ew = Wm();
        function HU(e, t) {
            let n = [];
            return mw(e, (a, _)=>{
                let p = _.kind === ww.SyntaxKind.SingleLineCommentTrivia ? Ew.AST_TOKEN_TYPES.Line : Ew.AST_TOKEN_TYPES.Block, m = [
                    _.pos,
                    _.end
                ], y = (0, VU.getLocFor)(m, e), u = m[0] + 2, x = _.kind === ww.SyntaxKind.SingleLineCommentTrivia ? m[1] - u : m[1] - u - 2;
                n.push({
                    type: p,
                    value: t.slice(u, u + x),
                    range: m,
                    loc: y
                });
            }, e), n;
        }
        ra.convertComments = HU;
    });
    var kw = mt((Qm)=>{
        "use strict";
        Object.defineProperty(Qm, "__esModule", {
            value: !0
        });
        Qm.astConverter = void 0;
        var Aw = c6(), GU = Cw(), XU = Gm(), $U = {};
        function QU(e, t, n) {
            let { parseDiagnostics: a } = e;
            if (a.length) throw (0, Aw.convertError)(a[0]);
            let _ = new Aw.Converter(e, {
                allowInvalidAST: t.allowInvalidAST,
                errorOnUnknownASTType: t.errorOnUnknownASTType,
                shouldPreserveNodeMaps: n,
                suppressDeprecatedPropertyWarnings: t.suppressDeprecatedPropertyWarnings
            }), p = _.convertProgram();
            (!t.range || !t.loc) && (0, $U.simpleTraverse)(p, {
                enter: (y)=>{
                    t.range || delete y.range, t.loc || delete y.loc;
                }
            }), t.tokens && (p.tokens = (0, XU.convertTokens)(e)), t.comment && (p.comments = (0, GU.convertComments)(e, t.codeFullText));
            let m = _.getASTMaps();
            return {
                estree: p,
                astMaps: m
            };
        }
        Qm.astConverter = QU;
    });
    var f6 = mt((ui)=>{
        "use strict";
        var YU = ui && ui.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), KU = ui && ui.__setModuleDefault || (Object.create ? function(e, t) {
            Object.defineProperty(e, "default", {
                enumerable: !0,
                value: t
            });
        } : function(e, t) {
            e.default = t;
        }), ZU = ui && ui.__importStar || function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && YU(t, e, n);
            return KU(t, e), t;
        };
        Object.defineProperty(ui, "__esModule", {
            value: !0
        });
        ui.getCodeText = ui.isSourceFile = void 0;
        var eq = ZU(lt());
        function Dw(e) {
            if (typeof e != "object" || e == null) return !1;
            let t = e;
            return t.kind === eq.SyntaxKind.SourceFile && typeof t.getFullText == "function";
        }
        ui.isSourceFile = Dw;
        function tq(e) {
            return Dw(e) ? e.getFullText(e) : e;
        }
        ui.getCodeText = tq;
    });
    var Pw = mt((Er)=>{
        "use strict";
        var nq = Er && Er.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), rq = Er && Er.__setModuleDefault || (Object.create ? function(e, t) {
            Object.defineProperty(e, "default", {
                enumerable: !0,
                value: t
            });
        } : function(e, t) {
            e.default = t;
        }), iq = Er && Er.__importStar || function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && nq(t, e, n);
            return rq(t, e), t;
        }, aq = Er && Er.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        };
        Object.defineProperty(Er, "__esModule", {
            value: !0
        });
        Er.getLanguageVariant = Er.getScriptKind = void 0;
        var oq = aq({
            extname: (e)=>"." + e.split(".").pop()
        }), Yt = iq(lt());
        function sq(e, t) {
            switch(oq.default.extname(e).toLowerCase()){
                case Yt.Extension.Js:
                case Yt.Extension.Cjs:
                case Yt.Extension.Mjs:
                    return Yt.ScriptKind.JS;
                case Yt.Extension.Jsx:
                    return Yt.ScriptKind.JSX;
                case Yt.Extension.Ts:
                case Yt.Extension.Cts:
                case Yt.Extension.Mts:
                    return Yt.ScriptKind.TS;
                case Yt.Extension.Tsx:
                    return Yt.ScriptKind.TSX;
                case Yt.Extension.Json:
                    return Yt.ScriptKind.JSON;
                default:
                    return t ? Yt.ScriptKind.TSX : Yt.ScriptKind.TS;
            }
        }
        Er.getScriptKind = sq;
        function _q(e) {
            switch(e){
                case Yt.ScriptKind.TSX:
                case Yt.ScriptKind.JSX:
                case Yt.ScriptKind.JS:
                case Yt.ScriptKind.JSON:
                    return Yt.LanguageVariant.JSX;
                default:
                    return Yt.LanguageVariant.Standard;
            }
        }
        Er.getLanguageVariant = _q;
    });
    var Ow = mt((Cr)=>{
        "use strict";
        var cq = Cr && Cr.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), lq = Cr && Cr.__setModuleDefault || (Object.create ? function(e, t) {
            Object.defineProperty(e, "default", {
                enumerable: !0,
                value: t
            });
        } : function(e, t) {
            e.default = t;
        }), uq = Cr && Cr.__importStar || function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && cq(t, e, n);
            return lq(t, e), t;
        }, pq = Cr && Cr.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        };
        Object.defineProperty(Cr, "__esModule", {
            value: !0
        });
        Cr.createNoProgram = Cr.createSourceFile = void 0;
        var fq = pq((Af(), Ef(Cf))), Iw = uq(lt()), dq = f6(), mq = Pw(), hq = (0, fq.default)("typescript-eslint:typescript-estree:createSourceFile");
        function Nw(e) {
            return hq("Getting AST without type information in %s mode for: %s", e.jsx ? "TSX" : "TS", e.filePath), (0, dq.isSourceFile)(e.code) ? e.code : Iw.createSourceFile(e.filePath, e.codeFullText, {
                languageVersion: Iw.ScriptTarget.Latest,
                jsDocParsingMode: e.jsDocParsingMode
            }, !0, (0, mq.getScriptKind)(e.filePath, e.jsx));
        }
        Cr.createSourceFile = Nw;
        function yq(e) {
            return {
                ast: Nw(e),
                program: null
            };
        }
        Cr.createNoProgram = yq;
    });
    var Mw = mt(()=>{});
    var Lw = mt((Ym)=>{
        "use strict";
        Object.defineProperty(Ym, "__esModule", {
            value: !0
        });
        Ym.createParserServices = void 0;
        function gq(e, t) {
            if (!t) return {
                program: t,
                ...e
            };
            let n = t.getTypeChecker();
            return {
                program: t,
                ...e,
                getSymbolAtLocation: (a)=>n.getSymbolAtLocation(e.esTreeNodeToTSNodeMap.get(a)),
                getTypeAtLocation: (a)=>n.getTypeAtLocation(e.esTreeNodeToTSNodeMap.get(a))
            };
        }
        Ym.createParserServices = gq;
    });
    var Jw = mt(()=>{});
    var jw = mt((Rw)=>{
        Rw.ExpiringCache = class {
        };
    });
    var Bw = mt((Fw)=>{
        Fw.resolveProjectList = ()=>[];
    });
    var qw = mt((Uw)=>{
        Uw.inferSingleRun = ()=>!1;
    });
    var Ww = mt((zw)=>{
        zw.warnAboutTSVersion = ()=>{};
    });
    var Yw = mt(($n)=>{
        "use strict";
        var bq = $n && $n.__createBinding || (Object.create ? function(e, t, n, a) {
            a === void 0 && (a = n);
            var _ = Object.getOwnPropertyDescriptor(t, n);
            (!_ || ("get" in _ ? !t.__esModule : _.writable || _.configurable)) && (_ = {
                enumerable: !0,
                get: function() {
                    return t[n];
                }
            }), Object.defineProperty(e, a, _);
        } : function(e, t, n, a) {
            a === void 0 && (a = n), e[a] = t[n];
        }), vq = $n && $n.__setModuleDefault || (Object.create ? function(e, t) {
            Object.defineProperty(e, "default", {
                enumerable: !0,
                value: t
            });
        } : function(e, t) {
            e.default = t;
        }), Tq = $n && $n.__importStar || function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (e != null) for(var n in e)n !== "default" && Object.prototype.hasOwnProperty.call(e, n) && bq(t, e, n);
            return vq(t, e), t;
        }, Sq = $n && $n.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        };
        Object.defineProperty($n, "__esModule", {
            value: !0
        });
        $n.clearTSServerProjectService = $n.clearTSConfigMatchCache = $n.createParseSettings = void 0;
        var d6 = Sq((Af(), Ef(Cf))), Km = Tq(lt()), xq = Jw(), wq = {
            ensureAbsolutePath: (e)=>e
        }, Eq = f6(), Vw = jw(), OW = Bw(), Cq = qw(), Aq = Ww(), kq = (0, d6.default)("typescript-eslint:typescript-estree:parser:parseSettings:createParseSettings"), Zm, Qw = null, Hw, Gw, Xw, $w, fu = {
            ParseAll: (Hw = Km.JSDocParsingMode) == null ? void 0 : Hw.ParseAll,
            ParseNone: (Gw = Km.JSDocParsingMode) == null ? void 0 : Gw.ParseNone,
            ParseForTypeErrors: (Xw = Km.JSDocParsingMode) == null ? void 0 : Xw.ParseForTypeErrors,
            ParseForTypeInfo: ($w = Km.JSDocParsingMode) == null ? void 0 : $w.ParseForTypeInfo
        };
        function Dq(e, t = {}) {
            var u;
            let n = Nq(e), a = (0, Cq.inferSingleRun)(t), _ = typeof t.tsconfigRootDir == "string" ? t.tsconfigRootDir : "/prettier-security-dirname-placeholder", p = typeof t.loggerFn == "function", m = (()=>{
                switch(t.jsDocParsingMode){
                    case "all":
                        return fu.ParseAll;
                    case "none":
                        return fu.ParseNone;
                    case "type-info":
                        return fu.ParseForTypeInfo;
                    default:
                        return fu.ParseAll;
                }
            })(), y = {
                allowInvalidAST: t.allowInvalidAST === !0,
                code: e,
                codeFullText: n,
                comment: t.comment === !0,
                comments: [],
                DEPRECATED__createDefaultProgram: t.DEPRECATED__createDefaultProgram === !0,
                debugLevel: t.debugLevel === !0 ? new Set([
                    "typescript-eslint"
                ]) : Array.isArray(t.debugLevel) ? new Set(t.debugLevel) : new Set,
                errorOnTypeScriptSyntacticAndSemanticIssues: !1,
                errorOnUnknownASTType: t.errorOnUnknownASTType === !0,
                EXPERIMENTAL_projectService: t.EXPERIMENTAL_useProjectService || t.project && t.EXPERIMENTAL_useProjectService !== !1 && !1 ? Qw ?? (Qw = (0, xq.createProjectService)(t.EXPERIMENTAL_useProjectService, m)) : void 0,
                EXPERIMENTAL_useSourceOfProjectReferenceRedirect: t.EXPERIMENTAL_useSourceOfProjectReferenceRedirect === !0,
                extraFileExtensions: Array.isArray(t.extraFileExtensions) && t.extraFileExtensions.every((x)=>typeof x == "string") ? t.extraFileExtensions : [],
                filePath: (0, wq.ensureAbsolutePath)(typeof t.filePath == "string" && t.filePath !== "<input>" ? t.filePath : Oq(t.jsx), _),
                jsDocParsingMode: m,
                jsx: t.jsx === !0,
                loc: t.loc === !0,
                log: typeof t.loggerFn == "function" ? t.loggerFn : t.loggerFn === !1 ? ()=>{} : console.log,
                preserveNodeMaps: t.preserveNodeMaps !== !1,
                programs: Array.isArray(t.programs) ? t.programs : null,
                projects: [],
                range: t.range === !0,
                singleRun: a,
                suppressDeprecatedPropertyWarnings: t.suppressDeprecatedPropertyWarnings ?? !0,
                tokens: t.tokens === !0 ? [] : null,
                tsconfigMatchCache: Zm ?? (Zm = new Vw.ExpiringCache(a ? "Infinity" : ((u = t.cacheLifetime) == null ? void 0 : u.glob) ?? Vw.DEFAULT_TSCONFIG_CACHE_DURATION_SECONDS)),
                tsconfigRootDir: _
            };
            if (y.debugLevel.size > 0) {
                let x = [];
                y.debugLevel.has("typescript-eslint") && x.push("typescript-eslint:*"), (y.debugLevel.has("eslint") || d6.default.enabled("eslint:*,-eslint:code-path")) && x.push("eslint:*,-eslint:code-path"), d6.default.enable(x.join(","));
            }
            if (Array.isArray(t.programs)) {
                if (!t.programs.length) throw new Error("You have set parserOptions.programs to an empty array. This will cause all files to not be found in existing programs. Either provide one or more existing TypeScript Program instances in the array, or remove the parserOptions.programs setting.");
                kq("parserOptions.programs was provided, so parserOptions.project will be ignored.");
            }
            return !y.programs && !y.EXPERIMENTAL_projectService && (y.projects = []), t.jsDocParsingMode == null && y.projects.length === 0 && y.programs == null && y.EXPERIMENTAL_projectService == null && (y.jsDocParsingMode = fu.ParseNone), (0, Aq.warnAboutTSVersion)(y, p), y;
        }
        $n.createParseSettings = Dq;
        function Pq() {
            Zm == null || Zm.clear();
        }
        $n.clearTSConfigMatchCache = Pq;
        function Iq() {
            Qw = null;
        }
        $n.clearTSServerProjectService = Iq;
        function Nq(e) {
            return (0, Eq.isSourceFile)(e) ? e.getFullText(e) : typeof e == "string" ? e : String(e);
        }
        function Oq(e) {
            return e ? "estree.tsx" : "estree.ts";
        }
    });
    var t5 = mt((e1)=>{
        "use strict";
        Object.defineProperty(e1, "__esModule", {
            value: !0
        });
        e1.getFirstSemanticOrSyntacticError = void 0;
        var Kw = lt();
        function Mq(e, t) {
            try {
                let n = Zw(e.getSyntacticDiagnostics(t));
                if (n.length > 0) return e5(n[0]);
                let a = Zw(e.getSemanticDiagnostics(t));
                return a.length > 0 ? e5(a[0]) : void 0;
            } catch (n) {
                console.warn(`Warning From TSC: "${n.message}`);
                return;
            }
        }
        e1.getFirstSemanticOrSyntacticError = Mq;
        function Zw(e) {
            return e.filter((t)=>{
                switch(t.code){
                    case 1013:
                    case 1014:
                    case 1044:
                    case 1045:
                    case 1048:
                    case 1049:
                    case 1070:
                    case 1071:
                    case 1085:
                    case 1090:
                    case 1096:
                    case 1097:
                    case 1098:
                    case 1099:
                    case 1117:
                    case 1121:
                    case 1123:
                    case 1141:
                    case 1162:
                    case 1164:
                    case 1172:
                    case 1173:
                    case 1175:
                    case 1176:
                    case 1190:
                    case 1196:
                    case 1200:
                    case 1206:
                    case 1211:
                    case 1242:
                    case 1246:
                    case 1255:
                    case 1308:
                    case 2364:
                    case 2369:
                    case 2452:
                    case 2462:
                    case 8017:
                    case 17012:
                    case 17013:
                        return !0;
                }
                return !1;
            });
        }
        function e5(e) {
            return {
                ...e,
                message: (0, Kw.flattenDiagnosticMessageText)(e.messageText, Kw.sys.newLine)
            };
        }
    });
    var n5 = mt(()=>{});
    var _5 = mt((pi)=>{
        "use strict";
        var Lq = pi && pi.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        };
        Object.defineProperty(pi, "__esModule", {
            value: !0
        });
        pi.clearParseAndGenerateServicesCalls = pi.clearProgramCache = pi.parseAndGenerateServices = pi.parse = void 0;
        var Jq = Lq((Af(), Ef(Cf))), r5 = kw(), Rq = c6(), jq = {}, i5 = {}, Fq = {}, a5 = Ow(), Bq = Mw(), o5 = {}, Uq = Lw(), s5 = Yw(), qq = t5(), zq = n5(), Wq = (0, Jq.default)("typescript-eslint:typescript-estree:parser"), m6 = new Map;
        function Vq() {
            m6.clear();
        }
        pi.clearProgramCache = Vq;
        function Hq(e, t) {
            if (e.EXPERIMENTAL_projectService) {
                let a = (0, zq.useProgramFromProjectService)(e.EXPERIMENTAL_projectService, e, t);
                if (a) return a;
            }
            if (e.programs) {
                let a = (0, o5.useProvidedPrograms)(e.programs, e);
                if (a) return a;
            }
            if (!t) return (0, a5.createNoProgram)(e);
            let n = (0, Fq.createProjectProgram)(e, (0, Bq.getWatchProgramsForProjects)(e));
            if (n) return n;
            if (e.DEPRECATED__createDefaultProgram) {
                let a = (0, jq.createDefaultProgram)(e);
                if (a) return a;
            }
            return (0, i5.createIsolatedProgram)(e);
        }
        function Gq(e, t) {
            let { ast: n } = Xq(e, t, !1);
            return n;
        }
        pi.parse = Gq;
        function Xq(e, t, n) {
            let a = (0, s5.createParseSettings)(e, t);
            if (t != null && t.errorOnTypeScriptSyntacticAndSemanticIssues) throw new Error('"errorOnTypeScriptSyntacticAndSemanticIssues" is only supported for parseAndGenerateServices()');
            let _ = (0, a5.createSourceFile)(a), { estree: p, astMaps: m } = (0, r5.astConverter)(_, a, n);
            return {
                ast: p,
                esTreeNodeToTSNodeMap: m.esTreeNodeToTSNodeMap,
                tsNodeToESTreeNodeMap: m.tsNodeToESTreeNodeMap
            };
        }
        var t1 = {};
        function $q() {
            t1 = {};
        }
        pi.clearParseAndGenerateServicesCalls = $q;
        function Qq(e, t) {
            let n = (0, s5.createParseSettings)(e, t);
            n.singleRun && !n.programs && n.projects.length > 0 && (n.programs = {
                *[Symbol.iterator] () {
                    for (let x of n.projects){
                        let d = m6.get(x);
                        if (d) yield d;
                        else {
                            Wq("Detected single-run/CLI usage, creating Program once ahead of time for project: %s", x);
                            let S = (0, o5.createProgramFromConfigFile)(x);
                            m6.set(x, S), yield S;
                        }
                    }
                }
            });
            let a = n.programs != null || n.projects.length > 0;
            if (typeof t.errorOnTypeScriptSyntacticAndSemanticIssues == "boolean" && t.errorOnTypeScriptSyntacticAndSemanticIssues && (n.errorOnTypeScriptSyntacticAndSemanticIssues = !0), n.errorOnTypeScriptSyntacticAndSemanticIssues && !a) throw new Error("Cannot calculate TypeScript semantic issues without a valid project.");
            n.singleRun && t.filePath && (t1[t.filePath] = (t1[t.filePath] || 0) + 1);
            let { ast: _, program: p } = n.singleRun && t.filePath && t1[t.filePath] > 1 ? (0, i5.createIsolatedProgram)(n) : Hq(n, a), m = typeof n.preserveNodeMaps == "boolean" ? n.preserveNodeMaps : !0, { estree: y, astMaps: u } = (0, r5.astConverter)(_, n, m);
            if (p && n.errorOnTypeScriptSyntacticAndSemanticIssues) {
                let x = (0, qq.getFirstSemanticOrSyntacticError)(p, _);
                if (x) throw (0, Rq.convertError)(x);
            }
            return {
                ast: y,
                services: (0, Uq.createParserServices)(u, p)
            };
        }
        pi.parseAndGenerateServices = Qq;
    });
    var E5 = mt((vs)=>{
        "use strict";
        Object.defineProperty(vs, "__esModule", {
            value: !0
        });
        vs.extract = dz;
        vs.parse = hz;
        vs.parseWithComments = w5;
        vs.print = yz;
        vs.strip = mz;
        var cz = /\*\/$/, lz = /^\/\*\*?/, S5 = /^\s*(\/\*\*?(.|\r?\n)*?\*\/)/, uz = /(^|\s+)\/\/([^\r\n]*)/g, b5 = /^(\r?\n)+/, pz = /(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g, v5 = /(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g, fz = /(\r?\n|^) *\* ?/g, x5 = [];
        function dz(e) {
            let t = e.match(S5);
            return t ? t[0].trimLeft() : "";
        }
        function mz(e) {
            let t = e.match(S5);
            return t && t[0] ? e.substring(t[0].length) : e;
        }
        function hz(e) {
            return w5(e).pragmas;
        }
        function w5(e) {
            let t = `
`;
            e = e.replace(lz, "").replace(cz, "").replace(fz, "$1");
            let n = "";
            for(; n !== e;)n = e, e = e.replace(pz, `${t}$1 $2${t}`);
            e = e.replace(b5, "").trimRight();
            let a = Object.create(null), _ = e.replace(v5, "").replace(b5, "").trimRight(), p;
            for(; p = v5.exec(e);){
                let m = p[2].replace(uz, "");
                typeof a[p[1]] == "string" || Array.isArray(a[p[1]]) ? a[p[1]] = x5.concat(a[p[1]], m) : a[p[1]] = m;
            }
            return {
                comments: _,
                pragmas: a
            };
        }
        function yz({ comments: e = "", pragmas: t = {} }) {
            let n = `
`, a = "/**", _ = " *", p = " */", m = Object.keys(t), y = m.flatMap((x)=>T5(x, t[x])).map((x)=>`${_} ${x}${n}`).join("");
            if (!e) {
                if (m.length === 0) return "";
                if (m.length === 1 && !Array.isArray(t[m[0]])) {
                    let x = t[m[0]];
                    return `${a} ${T5(m[0], x)[0]}${p}`;
                }
            }
            let u = e.split(n).map((x)=>`${_} ${x}`).join(n) + n;
            return a + n + (e ? u : "") + (e && m.length ? _ + n : "") + y + p;
        }
        function T5(e, t) {
            return x5.concat(t).map((n)=>`@${e} ${n}`.trim());
        }
    });
    var kz = {};
    $h(kz, {
        parsers: ()=>S6
    });
    var S6 = {};
    $h(S6, {
        typescript: ()=>Az
    });
    var P5 = Ot(_5(), 1);
    function Yq(e, t) {
        let n = new SyntaxError(e + " (" + t.loc.start.line + ":" + t.loc.start.column + ")");
        return Object.assign(n, t);
    }
    var c5 = Yq;
    function Kq(e) {
        let t = [];
        for (let n of e)try {
            return n();
        } catch (a) {
            t.push(a);
        }
        throw Object.assign(new Error("All combinations failed"), {
            errors: t
        });
    }
    var l5 = Kq;
    var Zq = (e, t, n)=>{
        if (!(e && t == null)) return Array.isArray(t) || typeof t == "string" ? t[n < 0 ? t.length + n : n] : t.at(n);
    }, h6 = Zq;
    function ez(e) {
        return Array.isArray(e) && e.length > 0;
    }
    var u5 = ez;
    function Hr(e) {
        var a, _, p;
        let t = ((a = e.range) == null ? void 0 : a[0]) ?? e.start, n = (p = ((_ = e.declaration) == null ? void 0 : _.decorators) ?? e.decorators) == null ? void 0 : p[0];
        return n ? Math.min(Hr(n), t) : t;
    }
    function ia(e) {
        var t;
        return ((t = e.range) == null ? void 0 : t[1]) ?? e.end;
    }
    function tz(e) {
        let t = new Set(e);
        return (n)=>t.has(n == null ? void 0 : n.type);
    }
    var p5 = tz;
    var nz = p5([
        "Block",
        "CommentBlock",
        "MultiLine"
    ]), du = nz;
    function rz(e) {
        let t = `*${e.value}*`.split(`
`);
        return t.length > 1 && t.every((n)=>n.trimStart()[0] === "*");
    }
    var y6 = rz;
    function iz(e) {
        return du(e) && e.value[0] === "*" && /@(?:type|satisfies)\b/.test(e.value);
    }
    var f5 = iz;
    var mu = null;
    function hu(e) {
        if (mu !== null && typeof mu.property) {
            let t = mu;
            return mu = hu.prototype = null, t;
        }
        return mu = hu.prototype = e ?? Object.create(null), new hu;
    }
    var az = 10;
    for(let e = 0; e <= az; e++)hu();
    function g6(e) {
        return hu(e);
    }
    function oz(e, t = "type") {
        g6(e);
        function n(a) {
            let _ = a[t], p = e[_];
            if (!Array.isArray(p)) throw Object.assign(new Error(`Missing visitor keys for '${_}'.`), {
                node: a
            });
            return p;
        }
        return n;
    }
    var d5 = oz;
    var m5 = {
        ArrayExpression: [
            "elements"
        ],
        AssignmentExpression: [
            "left",
            "right"
        ],
        BinaryExpression: [
            "left",
            "right"
        ],
        InterpreterDirective: [],
        Directive: [
            "value"
        ],
        DirectiveLiteral: [],
        BlockStatement: [
            "directives",
            "body"
        ],
        BreakStatement: [
            "label"
        ],
        CallExpression: [
            "callee",
            "arguments",
            "typeParameters",
            "typeArguments"
        ],
        CatchClause: [
            "param",
            "body"
        ],
        ConditionalExpression: [
            "test",
            "consequent",
            "alternate"
        ],
        ContinueStatement: [
            "label"
        ],
        DebuggerStatement: [],
        DoWhileStatement: [
            "test",
            "body"
        ],
        EmptyStatement: [],
        ExpressionStatement: [
            "expression"
        ],
        File: [
            "program"
        ],
        ForInStatement: [
            "left",
            "right",
            "body"
        ],
        ForStatement: [
            "init",
            "test",
            "update",
            "body"
        ],
        FunctionDeclaration: [
            "id",
            "params",
            "body",
            "returnType",
            "typeParameters",
            "predicate"
        ],
        FunctionExpression: [
            "id",
            "params",
            "body",
            "returnType",
            "typeParameters"
        ],
        Identifier: [
            "typeAnnotation",
            "decorators"
        ],
        IfStatement: [
            "test",
            "consequent",
            "alternate"
        ],
        LabeledStatement: [
            "label",
            "body"
        ],
        StringLiteral: [],
        NumericLiteral: [],
        NullLiteral: [],
        BooleanLiteral: [],
        RegExpLiteral: [],
        LogicalExpression: [
            "left",
            "right"
        ],
        MemberExpression: [
            "object",
            "property"
        ],
        NewExpression: [
            "callee",
            "arguments",
            "typeParameters",
            "typeArguments"
        ],
        Program: [
            "directives",
            "body"
        ],
        ObjectExpression: [
            "properties"
        ],
        ObjectMethod: [
            "key",
            "params",
            "body",
            "decorators",
            "returnType",
            "typeParameters"
        ],
        ObjectProperty: [
            "key",
            "value",
            "decorators"
        ],
        RestElement: [
            "argument",
            "typeAnnotation",
            "decorators"
        ],
        ReturnStatement: [
            "argument"
        ],
        SequenceExpression: [
            "expressions"
        ],
        ParenthesizedExpression: [
            "expression"
        ],
        SwitchCase: [
            "test",
            "consequent"
        ],
        SwitchStatement: [
            "discriminant",
            "cases"
        ],
        ThisExpression: [],
        ThrowStatement: [
            "argument"
        ],
        TryStatement: [
            "block",
            "handler",
            "finalizer"
        ],
        UnaryExpression: [
            "argument"
        ],
        UpdateExpression: [
            "argument"
        ],
        VariableDeclaration: [
            "declarations"
        ],
        VariableDeclarator: [
            "id",
            "init"
        ],
        WhileStatement: [
            "test",
            "body"
        ],
        WithStatement: [
            "object",
            "body"
        ],
        AssignmentPattern: [
            "left",
            "right",
            "decorators",
            "typeAnnotation"
        ],
        ArrayPattern: [
            "elements",
            "typeAnnotation",
            "decorators"
        ],
        ArrowFunctionExpression: [
            "params",
            "body",
            "returnType",
            "typeParameters",
            "predicate"
        ],
        ClassBody: [
            "body"
        ],
        ClassExpression: [
            "id",
            "body",
            "superClass",
            "mixins",
            "typeParameters",
            "superTypeParameters",
            "implements",
            "decorators",
            "superTypeArguments"
        ],
        ClassDeclaration: [
            "id",
            "body",
            "superClass",
            "mixins",
            "typeParameters",
            "superTypeParameters",
            "implements",
            "decorators",
            "superTypeArguments"
        ],
        ExportAllDeclaration: [
            "source",
            "attributes",
            "exported"
        ],
        ExportDefaultDeclaration: [
            "declaration"
        ],
        ExportNamedDeclaration: [
            "declaration",
            "specifiers",
            "source",
            "attributes"
        ],
        ExportSpecifier: [
            "local",
            "exported"
        ],
        ForOfStatement: [
            "left",
            "right",
            "body"
        ],
        ImportDeclaration: [
            "specifiers",
            "source",
            "attributes"
        ],
        ImportDefaultSpecifier: [
            "local"
        ],
        ImportNamespaceSpecifier: [
            "local"
        ],
        ImportSpecifier: [
            "local",
            "imported"
        ],
        ImportExpression: [
            "source",
            "options",
            "attributes"
        ],
        MetaProperty: [
            "meta",
            "property"
        ],
        ClassMethod: [
            "key",
            "params",
            "body",
            "decorators",
            "returnType",
            "typeParameters"
        ],
        ObjectPattern: [
            "properties",
            "typeAnnotation",
            "decorators"
        ],
        SpreadElement: [
            "argument"
        ],
        Super: [],
        TaggedTemplateExpression: [
            "tag",
            "quasi",
            "typeParameters",
            "typeArguments"
        ],
        TemplateElement: [],
        TemplateLiteral: [
            "quasis",
            "expressions"
        ],
        YieldExpression: [
            "argument"
        ],
        AwaitExpression: [
            "argument"
        ],
        Import: [],
        BigIntLiteral: [],
        ExportNamespaceSpecifier: [
            "exported"
        ],
        OptionalMemberExpression: [
            "object",
            "property"
        ],
        OptionalCallExpression: [
            "callee",
            "arguments",
            "typeParameters",
            "typeArguments"
        ],
        ClassProperty: [
            "key",
            "value",
            "typeAnnotation",
            "decorators",
            "variance"
        ],
        ClassAccessorProperty: [
            "key",
            "value",
            "typeAnnotation",
            "decorators"
        ],
        ClassPrivateProperty: [
            "key",
            "value",
            "decorators",
            "typeAnnotation",
            "variance"
        ],
        ClassPrivateMethod: [
            "key",
            "params",
            "body",
            "decorators",
            "returnType",
            "typeParameters"
        ],
        PrivateName: [
            "id"
        ],
        StaticBlock: [
            "body"
        ],
        AnyTypeAnnotation: [],
        ArrayTypeAnnotation: [
            "elementType"
        ],
        BooleanTypeAnnotation: [],
        BooleanLiteralTypeAnnotation: [],
        NullLiteralTypeAnnotation: [],
        ClassImplements: [
            "id",
            "typeParameters"
        ],
        DeclareClass: [
            "id",
            "typeParameters",
            "extends",
            "mixins",
            "implements",
            "body"
        ],
        DeclareFunction: [
            "id",
            "predicate"
        ],
        DeclareInterface: [
            "id",
            "typeParameters",
            "extends",
            "body"
        ],
        DeclareModule: [
            "id",
            "body"
        ],
        DeclareModuleExports: [
            "typeAnnotation"
        ],
        DeclareTypeAlias: [
            "id",
            "typeParameters",
            "right"
        ],
        DeclareOpaqueType: [
            "id",
            "typeParameters",
            "supertype"
        ],
        DeclareVariable: [
            "id"
        ],
        DeclareExportDeclaration: [
            "declaration",
            "specifiers",
            "source"
        ],
        DeclareExportAllDeclaration: [
            "source"
        ],
        DeclaredPredicate: [
            "value"
        ],
        ExistsTypeAnnotation: [],
        FunctionTypeAnnotation: [
            "typeParameters",
            "params",
            "rest",
            "returnType",
            "this"
        ],
        FunctionTypeParam: [
            "name",
            "typeAnnotation"
        ],
        GenericTypeAnnotation: [
            "id",
            "typeParameters"
        ],
        InferredPredicate: [],
        InterfaceExtends: [
            "id",
            "typeParameters"
        ],
        InterfaceDeclaration: [
            "id",
            "typeParameters",
            "extends",
            "body"
        ],
        InterfaceTypeAnnotation: [
            "extends",
            "body"
        ],
        IntersectionTypeAnnotation: [
            "types"
        ],
        MixedTypeAnnotation: [],
        EmptyTypeAnnotation: [],
        NullableTypeAnnotation: [
            "typeAnnotation"
        ],
        NumberLiteralTypeAnnotation: [],
        NumberTypeAnnotation: [],
        ObjectTypeAnnotation: [
            "properties",
            "indexers",
            "callProperties",
            "internalSlots"
        ],
        ObjectTypeInternalSlot: [
            "id",
            "value",
            "optional",
            "static",
            "method"
        ],
        ObjectTypeCallProperty: [
            "value"
        ],
        ObjectTypeIndexer: [
            "id",
            "key",
            "value",
            "variance"
        ],
        ObjectTypeProperty: [
            "key",
            "value",
            "variance"
        ],
        ObjectTypeSpreadProperty: [
            "argument"
        ],
        OpaqueType: [
            "id",
            "typeParameters",
            "supertype",
            "impltype"
        ],
        QualifiedTypeIdentifier: [
            "id",
            "qualification"
        ],
        StringLiteralTypeAnnotation: [],
        StringTypeAnnotation: [],
        SymbolTypeAnnotation: [],
        ThisTypeAnnotation: [],
        TupleTypeAnnotation: [
            "types",
            "elementTypes"
        ],
        TypeofTypeAnnotation: [
            "argument",
            "typeArguments"
        ],
        TypeAlias: [
            "id",
            "typeParameters",
            "right"
        ],
        TypeAnnotation: [
            "typeAnnotation"
        ],
        TypeCastExpression: [
            "expression",
            "typeAnnotation"
        ],
        TypeParameter: [
            "bound",
            "default",
            "variance"
        ],
        TypeParameterDeclaration: [
            "params"
        ],
        TypeParameterInstantiation: [
            "params"
        ],
        UnionTypeAnnotation: [
            "types"
        ],
        Variance: [],
        VoidTypeAnnotation: [],
        EnumDeclaration: [
            "id",
            "body"
        ],
        EnumBooleanBody: [
            "members"
        ],
        EnumNumberBody: [
            "members"
        ],
        EnumStringBody: [
            "members"
        ],
        EnumSymbolBody: [
            "members"
        ],
        EnumBooleanMember: [
            "id",
            "init"
        ],
        EnumNumberMember: [
            "id",
            "init"
        ],
        EnumStringMember: [
            "id",
            "init"
        ],
        EnumDefaultedMember: [
            "id"
        ],
        IndexedAccessType: [
            "objectType",
            "indexType"
        ],
        OptionalIndexedAccessType: [
            "objectType",
            "indexType"
        ],
        JSXAttribute: [
            "name",
            "value"
        ],
        JSXClosingElement: [
            "name"
        ],
        JSXElement: [
            "openingElement",
            "children",
            "closingElement"
        ],
        JSXEmptyExpression: [],
        JSXExpressionContainer: [
            "expression"
        ],
        JSXSpreadChild: [
            "expression"
        ],
        JSXIdentifier: [],
        JSXMemberExpression: [
            "object",
            "property"
        ],
        JSXNamespacedName: [
            "namespace",
            "name"
        ],
        JSXOpeningElement: [
            "name",
            "attributes",
            "typeArguments",
            "typeParameters"
        ],
        JSXSpreadAttribute: [
            "argument"
        ],
        JSXText: [],
        JSXFragment: [
            "openingFragment",
            "children",
            "closingFragment"
        ],
        JSXOpeningFragment: [],
        JSXClosingFragment: [],
        Noop: [],
        Placeholder: [],
        V8IntrinsicIdentifier: [],
        ArgumentPlaceholder: [],
        BindExpression: [
            "object",
            "callee"
        ],
        ImportAttribute: [
            "key",
            "value"
        ],
        Decorator: [
            "expression"
        ],
        DoExpression: [
            "body"
        ],
        ExportDefaultSpecifier: [
            "exported"
        ],
        RecordExpression: [
            "properties"
        ],
        TupleExpression: [
            "elements"
        ],
        DecimalLiteral: [],
        ModuleExpression: [
            "body"
        ],
        TopicReference: [],
        PipelineTopicExpression: [
            "expression"
        ],
        PipelineBareFunction: [
            "callee"
        ],
        PipelinePrimaryTopicReference: [],
        TSParameterProperty: [
            "parameter",
            "decorators"
        ],
        TSDeclareFunction: [
            "id",
            "typeParameters",
            "params",
            "returnType",
            "body"
        ],
        TSDeclareMethod: [
            "decorators",
            "key",
            "typeParameters",
            "params",
            "returnType"
        ],
        TSQualifiedName: [
            "left",
            "right"
        ],
        TSCallSignatureDeclaration: [
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSConstructSignatureDeclaration: [
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSPropertySignature: [
            "key",
            "typeAnnotation"
        ],
        TSMethodSignature: [
            "key",
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSIndexSignature: [
            "parameters",
            "typeAnnotation"
        ],
        TSAnyKeyword: [],
        TSBooleanKeyword: [],
        TSBigIntKeyword: [],
        TSIntrinsicKeyword: [],
        TSNeverKeyword: [],
        TSNullKeyword: [],
        TSNumberKeyword: [],
        TSObjectKeyword: [],
        TSStringKeyword: [],
        TSSymbolKeyword: [],
        TSUndefinedKeyword: [],
        TSUnknownKeyword: [],
        TSVoidKeyword: [],
        TSThisType: [],
        TSFunctionType: [
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSConstructorType: [
            "typeParameters",
            "parameters",
            "typeAnnotation",
            "params",
            "returnType"
        ],
        TSTypeReference: [
            "typeName",
            "typeParameters",
            "typeArguments"
        ],
        TSTypePredicate: [
            "parameterName",
            "typeAnnotation"
        ],
        TSTypeQuery: [
            "exprName",
            "typeParameters",
            "typeArguments"
        ],
        TSTypeLiteral: [
            "members"
        ],
        TSArrayType: [
            "elementType"
        ],
        TSTupleType: [
            "elementTypes"
        ],
        TSOptionalType: [
            "typeAnnotation"
        ],
        TSRestType: [
            "typeAnnotation"
        ],
        TSNamedTupleMember: [
            "label",
            "elementType"
        ],
        TSUnionType: [
            "types"
        ],
        TSIntersectionType: [
            "types"
        ],
        TSConditionalType: [
            "checkType",
            "extendsType",
            "trueType",
            "falseType"
        ],
        TSInferType: [
            "typeParameter"
        ],
        TSParenthesizedType: [
            "typeAnnotation"
        ],
        TSTypeOperator: [
            "typeAnnotation"
        ],
        TSIndexedAccessType: [
            "objectType",
            "indexType"
        ],
        TSMappedType: [
            "typeParameter",
            "typeAnnotation",
            "nameType"
        ],
        TSLiteralType: [
            "literal"
        ],
        TSExpressionWithTypeArguments: [
            "expression",
            "typeParameters"
        ],
        TSInterfaceDeclaration: [
            "id",
            "typeParameters",
            "extends",
            "body"
        ],
        TSInterfaceBody: [
            "body"
        ],
        TSTypeAliasDeclaration: [
            "id",
            "typeParameters",
            "typeAnnotation"
        ],
        TSInstantiationExpression: [
            "expression",
            "typeParameters",
            "typeArguments"
        ],
        TSAsExpression: [
            "expression",
            "typeAnnotation"
        ],
        TSSatisfiesExpression: [
            "expression",
            "typeAnnotation"
        ],
        TSTypeAssertion: [
            "typeAnnotation",
            "expression"
        ],
        TSEnumDeclaration: [
            "id",
            "members"
        ],
        TSEnumMember: [
            "id",
            "initializer"
        ],
        TSModuleDeclaration: [
            "id",
            "body"
        ],
        TSModuleBlock: [
            "body"
        ],
        TSImportType: [
            "argument",
            "qualifier",
            "typeParameters",
            "typeArguments"
        ],
        TSImportEqualsDeclaration: [
            "id",
            "moduleReference"
        ],
        TSExternalModuleReference: [
            "expression"
        ],
        TSNonNullExpression: [
            "expression"
        ],
        TSExportAssignment: [
            "expression"
        ],
        TSNamespaceExportDeclaration: [
            "id"
        ],
        TSTypeAnnotation: [
            "typeAnnotation"
        ],
        TSTypeParameterInstantiation: [
            "params"
        ],
        TSTypeParameterDeclaration: [
            "params"
        ],
        TSTypeParameter: [
            "constraint",
            "default",
            "name"
        ],
        ChainExpression: [
            "expression"
        ],
        ExperimentalRestProperty: [
            "argument"
        ],
        ExperimentalSpreadProperty: [
            "argument"
        ],
        Literal: [],
        MethodDefinition: [
            "decorators",
            "key",
            "value"
        ],
        PrivateIdentifier: [],
        Property: [
            "key",
            "value"
        ],
        PropertyDefinition: [
            "decorators",
            "key",
            "typeAnnotation",
            "value",
            "variance"
        ],
        AccessorProperty: [
            "decorators",
            "key",
            "typeAnnotation",
            "value"
        ],
        TSAbstractAccessorProperty: [
            "decorators",
            "key",
            "typeAnnotation"
        ],
        TSAbstractKeyword: [],
        TSAbstractMethodDefinition: [
            "key",
            "value"
        ],
        TSAbstractPropertyDefinition: [
            "decorators",
            "key",
            "typeAnnotation"
        ],
        TSAsyncKeyword: [],
        TSClassImplements: [
            "expression",
            "typeArguments",
            "typeParameters"
        ],
        TSDeclareKeyword: [],
        TSEmptyBodyFunctionExpression: [
            "id",
            "typeParameters",
            "params",
            "returnType"
        ],
        TSExportKeyword: [],
        TSInterfaceHeritage: [
            "expression",
            "typeArguments",
            "typeParameters"
        ],
        TSPrivateKeyword: [],
        TSProtectedKeyword: [],
        TSPublicKeyword: [],
        TSReadonlyKeyword: [],
        TSStaticKeyword: [],
        TSTemplateLiteralType: [
            "quasis",
            "types"
        ],
        AsExpression: [
            "expression",
            "typeAnnotation"
        ],
        BigIntLiteralTypeAnnotation: [],
        BigIntTypeAnnotation: [],
        ConditionalTypeAnnotation: [
            "checkType",
            "extendsType",
            "trueType",
            "falseType"
        ],
        DeclareEnum: [
            "id",
            "body"
        ],
        InferTypeAnnotation: [
            "typeParameter"
        ],
        KeyofTypeAnnotation: [
            "argument"
        ],
        ObjectTypeMappedTypeProperty: [
            "keyTparam",
            "propType",
            "sourceType",
            "variance"
        ],
        QualifiedTypeofIdentifier: [
            "qualification",
            "id"
        ],
        TupleTypeLabeledElement: [
            "label",
            "elementType",
            "variance"
        ],
        TupleTypeSpreadElement: [
            "label",
            "typeAnnotation"
        ],
        TypeOperator: [
            "typeAnnotation"
        ],
        TypePredicate: [
            "parameterName",
            "typeAnnotation",
            "asserts"
        ],
        NGRoot: [
            "node"
        ],
        NGPipeExpression: [
            "left",
            "right",
            "arguments"
        ],
        NGChainedExpression: [
            "expressions"
        ],
        NGEmptyExpression: [],
        NGMicrosyntax: [
            "body"
        ],
        NGMicrosyntaxKey: [],
        NGMicrosyntaxExpression: [
            "expression",
            "alias"
        ],
        NGMicrosyntaxKeyedExpression: [
            "key",
            "expression"
        ],
        NGMicrosyntaxLet: [
            "key",
            "value"
        ],
        NGMicrosyntaxAs: [
            "key",
            "alias"
        ],
        JsExpressionRoot: [
            "node"
        ],
        JsonRoot: [
            "node"
        ],
        TSJSDocAllType: [],
        TSJSDocUnknownType: [],
        TSJSDocNullableType: [
            "typeAnnotation"
        ],
        TSJSDocNonNullableType: [
            "typeAnnotation"
        ],
        NeverTypeAnnotation: [],
        UndefinedTypeAnnotation: [],
        UnknownTypeAnnotation: [],
        AsConstExpression: [
            "expression"
        ],
        SatisfiesExpression: [
            "expression",
            "typeAnnotation"
        ]
    };
    var sz = d5(m5), h5 = sz;
    function b6(e, t) {
        if (!(e !== null && typeof e == "object")) return e;
        if (Array.isArray(e)) {
            for(let a = 0; a < e.length; a++)e[a] = b6(e[a], t);
            return e;
        }
        let n = h5(e);
        for(let a = 0; a < n.length; a++)e[n[a]] = b6(e[n[a]], t);
        return t(e) || e;
    }
    var n1 = b6;
    function _z(e, t) {
        let { parser: n, text: a } = t;
        if (e.type === "File" && e.program.interpreter) {
            let { program: { interpreter: _ }, comments: p } = e;
            delete e.program.interpreter, p.unshift(_);
        }
        if (n === "babel") {
            let _ = new Set;
            e = n1(e, (p)=>{
                var m;
                (m = p.leadingComments) != null && m.some(f5) && _.add(Hr(p));
            }), e = n1(e, (p)=>{
                if (p.type === "ParenthesizedExpression") {
                    let { expression: m } = p;
                    if (m.type === "TypeCastExpression") return m.range = [
                        ...p.range
                    ], m;
                    let y = Hr(p);
                    if (!_.has(y)) return m.extra = {
                        ...m.extra,
                        parenthesized: !0
                    }, m;
                }
            });
        }
        if (e = n1(e, (_)=>{
            var p;
            switch(_.type){
                case "LogicalExpression":
                    if (y5(_)) return v6(_);
                    break;
                case "VariableDeclaration":
                    {
                        let m = h6(!1, _.declarations, -1);
                        m != null && m.init && a[ia(m)] !== ";" && (_.range = [
                            Hr(_),
                            ia(m)
                        ]);
                        break;
                    }
                case "TSParenthesizedType":
                    return _.typeAnnotation;
                case "TSTypeParameter":
                    if (typeof _.name == "string") {
                        let m = Hr(_);
                        _.name = {
                            type: "Identifier",
                            name: _.name,
                            range: [
                                m,
                                m + _.name.length
                            ]
                        };
                    }
                    break;
                case "TopicReference":
                    e.extra = {
                        ...e.extra,
                        __isUsingHackPipeline: !0
                    };
                    break;
                case "ExportAllDeclaration":
                    if (n === "meriyah" && ((p = _.exported) == null ? void 0 : p.type) === "Identifier") {
                        let { exported: m } = _, y = a.slice(Hr(m), ia(m));
                        (y.startsWith('"') || y.startsWith("'")) && (_.exported = {
                            ..._.exported,
                            type: "Literal",
                            value: _.exported.name,
                            raw: y
                        });
                    }
                    break;
                case "TSUnionType":
                case "TSIntersectionType":
                    if (_.types.length === 1) return _.types[0];
                    break;
            }
        }), u5(e.comments)) {
            let _ = h6(!1, e.comments, -1);
            for(let p = e.comments.length - 2; p >= 0; p--){
                let m = e.comments[p];
                ia(m) === Hr(_) && du(m) && du(_) && y6(m) && y6(_) && (e.comments.splice(p + 1, 1), m.value += "*//*" + _.value, m.range = [
                    Hr(m),
                    ia(_)
                ]), _ = m;
            }
        }
        return e.type === "Program" && (e.range = [
            0,
            a.length
        ]), e;
    }
    function y5(e) {
        return e.type === "LogicalExpression" && e.right.type === "LogicalExpression" && e.operator === e.right.operator;
    }
    function v6(e) {
        return y5(e) ? v6({
            type: "LogicalExpression",
            operator: e.operator,
            left: v6({
                type: "LogicalExpression",
                operator: e.operator,
                left: e.left,
                right: e.right.left,
                range: [
                    Hr(e.left),
                    ia(e.right.left)
                ]
            }),
            right: e.right.right,
            range: [
                Hr(e),
                ia(e)
            ]
        }) : e;
    }
    var g5 = _z;
    var G_ = Ot(E5(), 1);
    function gz(e) {
        if (!e.startsWith("#!")) return "";
        let t = e.indexOf(`
`);
        return t === -1 ? e : e.slice(0, t);
    }
    var C5 = gz;
    function bz(e) {
        let t = C5(e);
        t && (e = e.slice(t.length + 1));
        let n = (0, G_.extract)(e), { pragmas: a, comments: _ } = (0, G_.parseWithComments)(n);
        return {
            shebang: t,
            text: e,
            pragmas: a,
            comments: _
        };
    }
    function A5(e) {
        let { pragmas: t } = bz(e);
        return Object.prototype.hasOwnProperty.call(t, "prettier") || Object.prototype.hasOwnProperty.call(t, "format");
    }
    function vz(e) {
        return e = typeof e == "function" ? {
            parse: e
        } : e, {
            astFormat: "estree",
            hasPragma: A5,
            locStart: Hr,
            locEnd: ia,
            ...e
        };
    }
    var k5 = vz;
    function Tz(e) {
        return e.charAt(0) === "#" && e.charAt(1) === "!" ? "//" + e.slice(2) : e;
    }
    var D5 = Tz;
    var T6 = {
        loc: !0,
        range: !0,
        comment: !0,
        tokens: !0,
        loggerFn: !1,
        project: [],
        jsDocParsingMode: "none",
        suppressDeprecatedPropertyWarnings: !0
    };
    function Sz(e) {
        let { message: t, location: n } = e;
        if (!n) return e;
        let { start: a, end: _ } = n;
        return c5(t, {
            loc: {
                start: {
                    line: a.line,
                    column: a.column + 1
                },
                end: {
                    line: _.line,
                    column: _.column + 1
                }
            },
            cause: e
        });
    }
    var xz = (e)=>/\.(?:js|mjs|cjs|jsx|ts|mts|cts|tsx)$/i.test(e);
    function wz(e, t) {
        let n = t == null ? void 0 : t.filepath;
        if (n && xz(n)) return [
            {
                ...T6,
                filePath: n
            }
        ];
        let a = Cz(e);
        return [
            {
                ...T6,
                jsx: a
            },
            {
                ...T6,
                jsx: !a
            }
        ];
    }
    function Ez(e, t) {
        let n = D5(e), a = wz(e, t), _;
        try {
            _ = l5(a.map((p)=>()=>(0, P5.parse)(n, p)));
        } catch ({ errors: [p] }) {
            throw Sz(p);
        }
        return g5(_, {
            text: e
        });
    }
    function Cz(e) {
        return new RegExp([
            "(?:^[^\"'`]*</)",
            "|",
            "(?:^[^/]{2}.*/>)"
        ].join(""), "m").test(e);
    }
    var Az = k5(Ez);
    return Ef(kz);
});

},{}],"5hlfz":[function(require,module,exports) {
module.exports = function() {
    /*
   * Generated by PEG.js 0.8.0.
   *
   * http://pegjs.majda.cz/
   */ function peg$subclass(child, parent) {
        function ctor() {
            this.constructor = child;
        }
        ctor.prototype = parent.prototype;
        child.prototype = new ctor();
    }
    function SyntaxError(message, expected, found, offset, line, column) {
        this.message = message;
        this.expected = expected;
        this.found = found;
        this.offset = offset;
        this.line = line;
        this.column = column;
        this.name = "SyntaxError";
    }
    peg$subclass(SyntaxError, Error);
    function parse(input) {
        var options = arguments.length > 1 ? arguments[1] : {}, peg$FAILED = {}, peg$startRuleFunctions = {
            start: peg$parsestart
        }, peg$startRuleFunction = peg$parsestart, peg$c0 = [], peg$c1 = function() {
            return nodes;
        }, peg$c2 = peg$FAILED, peg$c3 = "#", peg$c4 = {
            type: "literal",
            value: "#",
            description: '"#"'
        }, peg$c5 = void 0, peg$c6 = {
            type: "any",
            description: "any character"
        }, peg$c7 = "[", peg$c8 = {
            type: "literal",
            value: "[",
            description: '"["'
        }, peg$c9 = "]", peg$c10 = {
            type: "literal",
            value: "]",
            description: '"]"'
        }, peg$c11 = function(name) {
            addNode(node("ObjectPath", name, line, column));
        }, peg$c12 = function(name) {
            addNode(node("ArrayPath", name, line, column));
        }, peg$c13 = function(parts, name) {
            return parts.concat(name);
        }, peg$c14 = function(name) {
            return [
                name
            ];
        }, peg$c15 = function(name) {
            return name;
        }, peg$c16 = ".", peg$c17 = {
            type: "literal",
            value: ".",
            description: '"."'
        }, peg$c18 = "=", peg$c19 = {
            type: "literal",
            value: "=",
            description: '"="'
        }, peg$c20 = function(key, value) {
            addNode(node("Assign", value, line, column, key));
        }, peg$c21 = function(chars) {
            return chars.join("");
        }, peg$c22 = function(node) {
            return node.value;
        }, peg$c23 = '"""', peg$c24 = {
            type: "literal",
            value: '"""',
            description: '"\\"\\"\\""'
        }, peg$c25 = null, peg$c26 = function(chars) {
            return node("String", chars.join(""), line, column);
        }, peg$c27 = '"', peg$c28 = {
            type: "literal",
            value: '"',
            description: '"\\""'
        }, peg$c29 = "'''", peg$c30 = {
            type: "literal",
            value: "'''",
            description: "\"'''\""
        }, peg$c31 = "'", peg$c32 = {
            type: "literal",
            value: "'",
            description: '"\'"'
        }, peg$c33 = function(char) {
            return char;
        }, peg$c34 = function(char) {
            return char;
        }, peg$c35 = "\\", peg$c36 = {
            type: "literal",
            value: "\\",
            description: '"\\\\"'
        }, peg$c37 = function() {
            return "";
        }, peg$c38 = "e", peg$c39 = {
            type: "literal",
            value: "e",
            description: '"e"'
        }, peg$c40 = "E", peg$c41 = {
            type: "literal",
            value: "E",
            description: '"E"'
        }, peg$c42 = function(left, right) {
            return node("Float", parseFloat(left + "e" + right), line, column);
        }, peg$c43 = function(text) {
            return node("Float", parseFloat(text), line, column);
        }, peg$c44 = "+", peg$c45 = {
            type: "literal",
            value: "+",
            description: '"+"'
        }, peg$c46 = function(digits) {
            return digits.join("");
        }, peg$c47 = "-", peg$c48 = {
            type: "literal",
            value: "-",
            description: '"-"'
        }, peg$c49 = function(digits) {
            return "-" + digits.join("");
        }, peg$c50 = function(text) {
            return node("Integer", parseInt(text, 10), line, column);
        }, peg$c51 = "true", peg$c52 = {
            type: "literal",
            value: "true",
            description: '"true"'
        }, peg$c53 = function() {
            return node("Boolean", true, line, column);
        }, peg$c54 = "false", peg$c55 = {
            type: "literal",
            value: "false",
            description: '"false"'
        }, peg$c56 = function() {
            return node("Boolean", false, line, column);
        }, peg$c57 = function() {
            return node("Array", [], line, column);
        }, peg$c58 = function(value) {
            return node("Array", value ? [
                value
            ] : [], line, column);
        }, peg$c59 = function(values) {
            return node("Array", values, line, column);
        }, peg$c60 = function(values, value) {
            return node("Array", values.concat(value), line, column);
        }, peg$c61 = function(value) {
            return value;
        }, peg$c62 = ",", peg$c63 = {
            type: "literal",
            value: ",",
            description: '","'
        }, peg$c64 = "{", peg$c65 = {
            type: "literal",
            value: "{",
            description: '"{"'
        }, peg$c66 = "}", peg$c67 = {
            type: "literal",
            value: "}",
            description: '"}"'
        }, peg$c68 = function(values) {
            return node("InlineTable", values, line, column);
        }, peg$c69 = function(key, value) {
            return node("InlineTableValue", value, line, column, key);
        }, peg$c70 = function(digits) {
            return "." + digits;
        }, peg$c71 = function(date) {
            return date.join("");
        }, peg$c72 = ":", peg$c73 = {
            type: "literal",
            value: ":",
            description: '":"'
        }, peg$c74 = function(time) {
            return time.join("");
        }, peg$c75 = "T", peg$c76 = {
            type: "literal",
            value: "T",
            description: '"T"'
        }, peg$c77 = "Z", peg$c78 = {
            type: "literal",
            value: "Z",
            description: '"Z"'
        }, peg$c79 = function(date, time) {
            return node("Date", new Date(date + "T" + time + "Z"), line, column);
        }, peg$c80 = function(date, time) {
            return node("Date", new Date(date + "T" + time), line, column);
        }, peg$c81 = /^[ \t]/, peg$c82 = {
            type: "class",
            value: "[ \\t]",
            description: "[ \\t]"
        }, peg$c83 = "\n", peg$c84 = {
            type: "literal",
            value: "\n",
            description: '"\\n"'
        }, peg$c85 = "\r", peg$c86 = {
            type: "literal",
            value: "\r",
            description: '"\\r"'
        }, peg$c87 = /^[0-9a-f]/i, peg$c88 = {
            type: "class",
            value: "[0-9a-f]i",
            description: "[0-9a-f]i"
        }, peg$c89 = /^[0-9]/, peg$c90 = {
            type: "class",
            value: "[0-9]",
            description: "[0-9]"
        }, peg$c91 = "_", peg$c92 = {
            type: "literal",
            value: "_",
            description: '"_"'
        }, peg$c93 = function() {
            return "";
        }, peg$c94 = /^[A-Za-z0-9_\-]/, peg$c95 = {
            type: "class",
            value: "[A-Za-z0-9_\\-]",
            description: "[A-Za-z0-9_\\-]"
        }, peg$c96 = function(d) {
            return d.join("");
        }, peg$c97 = '\\"', peg$c98 = {
            type: "literal",
            value: '\\"',
            description: '"\\\\\\""'
        }, peg$c99 = function() {
            return '"';
        }, peg$c100 = "\\\\", peg$c101 = {
            type: "literal",
            value: "\\\\",
            description: '"\\\\\\\\"'
        }, peg$c102 = function() {
            return "\\";
        }, peg$c103 = "\\b", peg$c104 = {
            type: "literal",
            value: "\\b",
            description: '"\\\\b"'
        }, peg$c105 = function() {
            return "\b";
        }, peg$c106 = "\\t", peg$c107 = {
            type: "literal",
            value: "\\t",
            description: '"\\\\t"'
        }, peg$c108 = function() {
            return "	";
        }, peg$c109 = "\\n", peg$c110 = {
            type: "literal",
            value: "\\n",
            description: '"\\\\n"'
        }, peg$c111 = function() {
            return "\n";
        }, peg$c112 = "\\f", peg$c113 = {
            type: "literal",
            value: "\\f",
            description: '"\\\\f"'
        }, peg$c114 = function() {
            return "\f";
        }, peg$c115 = "\\r", peg$c116 = {
            type: "literal",
            value: "\\r",
            description: '"\\\\r"'
        }, peg$c117 = function() {
            return "\r";
        }, peg$c118 = "\\U", peg$c119 = {
            type: "literal",
            value: "\\U",
            description: '"\\\\U"'
        }, peg$c120 = function(digits) {
            return convertCodePoint(digits.join(""));
        }, peg$c121 = "\\u", peg$c122 = {
            type: "literal",
            value: "\\u",
            description: '"\\\\u"'
        }, peg$currPos = 0, peg$reportedPos = 0, peg$cachedPos = 0, peg$cachedPosDetails = {
            line: 1,
            column: 1,
            seenCR: false
        }, peg$maxFailPos = 0, peg$maxFailExpected = [], peg$silentFails = 0, peg$cache = {}, peg$result;
        if ("startRule" in options) {
            if (!(options.startRule in peg$startRuleFunctions)) throw new Error("Can't start parsing from rule \"" + options.startRule + '".');
            peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
        }
        function text() {
            return input.substring(peg$reportedPos, peg$currPos);
        }
        function offset() {
            return peg$reportedPos;
        }
        function line() {
            return peg$computePosDetails(peg$reportedPos).line;
        }
        function column() {
            return peg$computePosDetails(peg$reportedPos).column;
        }
        function expected(description) {
            throw peg$buildException(null, [
                {
                    type: "other",
                    description: description
                }
            ], peg$reportedPos);
        }
        function error(message) {
            throw peg$buildException(message, null, peg$reportedPos);
        }
        function peg$computePosDetails(pos) {
            function advance(details, startPos, endPos) {
                var p, ch;
                for(p = startPos; p < endPos; p++){
                    ch = input.charAt(p);
                    if (ch === "\n") {
                        if (!details.seenCR) details.line++;
                        details.column = 1;
                        details.seenCR = false;
                    } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
                        details.line++;
                        details.column = 1;
                        details.seenCR = true;
                    } else {
                        details.column++;
                        details.seenCR = false;
                    }
                }
            }
            if (peg$cachedPos !== pos) {
                if (peg$cachedPos > pos) {
                    peg$cachedPos = 0;
                    peg$cachedPosDetails = {
                        line: 1,
                        column: 1,
                        seenCR: false
                    };
                }
                advance(peg$cachedPosDetails, peg$cachedPos, pos);
                peg$cachedPos = pos;
            }
            return peg$cachedPosDetails;
        }
        function peg$fail(expected) {
            if (peg$currPos < peg$maxFailPos) return;
            if (peg$currPos > peg$maxFailPos) {
                peg$maxFailPos = peg$currPos;
                peg$maxFailExpected = [];
            }
            peg$maxFailExpected.push(expected);
        }
        function peg$buildException(message, expected, pos) {
            function cleanupExpected(expected) {
                var i = 1;
                expected.sort(function(a, b) {
                    if (a.description < b.description) return -1;
                    else if (a.description > b.description) return 1;
                    else return 0;
                });
                while(i < expected.length)if (expected[i - 1] === expected[i]) expected.splice(i, 1);
                else i++;
            }
            function buildMessage(expected, found) {
                function stringEscape(s) {
                    function hex(ch) {
                        return ch.charCodeAt(0).toString(16).toUpperCase();
                    }
                    return s.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) {
                        return "\\x0" + hex(ch);
                    }).replace(/[\x10-\x1F\x80-\xFF]/g, function(ch) {
                        return "\\x" + hex(ch);
                    }).replace(/[\u0180-\u0FFF]/g, function(ch) {
                        return "\\u0" + hex(ch);
                    }).replace(/[\u1080-\uFFFF]/g, function(ch) {
                        return "\\u" + hex(ch);
                    });
                }
                var expectedDescs = new Array(expected.length), expectedDesc, foundDesc, i;
                for(i = 0; i < expected.length; i++)expectedDescs[i] = expected[i].description;
                expectedDesc = expected.length > 1 ? expectedDescs.slice(0, -1).join(", ") + " or " + expectedDescs[expected.length - 1] : expectedDescs[0];
                foundDesc = found ? '"' + stringEscape(found) + '"' : "end of input";
                return "Expected " + expectedDesc + " but " + foundDesc + " found.";
            }
            var posDetails = peg$computePosDetails(pos), found = pos < input.length ? input.charAt(pos) : null;
            if (expected !== null) cleanupExpected(expected);
            return new SyntaxError(message !== null ? message : buildMessage(expected, found), expected, found, pos, posDetails.line, posDetails.column);
        }
        function peg$parsestart() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 0, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parseline();
            while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parseline();
            }
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c1();
            }
            s0 = s1;
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseline() {
            var s0, s1, s2, s3, s4, s5, s6;
            var key = peg$currPos * 49 + 1, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parseS();
            while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parseS();
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parseexpression();
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parseS();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parseS();
                    }
                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parsecomment();
                        while(s5 !== peg$FAILED){
                            s4.push(s5);
                            s5 = peg$parsecomment();
                        }
                        if (s4 !== peg$FAILED) {
                            s5 = [];
                            s6 = peg$parseNL();
                            if (s6 !== peg$FAILED) while(s6 !== peg$FAILED){
                                s5.push(s6);
                                s6 = peg$parseNL();
                            }
                            else s5 = peg$c2;
                            if (s5 === peg$FAILED) s5 = peg$parseEOF();
                            if (s5 !== peg$FAILED) {
                                s1 = [
                                    s1,
                                    s2,
                                    s3,
                                    s4,
                                    s5
                                ];
                                s0 = s1;
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = [];
                s2 = peg$parseS();
                if (s2 !== peg$FAILED) while(s2 !== peg$FAILED){
                    s1.push(s2);
                    s2 = peg$parseS();
                }
                else s1 = peg$c2;
                if (s1 !== peg$FAILED) {
                    s2 = [];
                    s3 = peg$parseNL();
                    if (s3 !== peg$FAILED) while(s3 !== peg$FAILED){
                        s2.push(s3);
                        s3 = peg$parseNL();
                    }
                    else s2 = peg$c2;
                    if (s2 === peg$FAILED) s2 = peg$parseEOF();
                    if (s2 !== peg$FAILED) {
                        s1 = [
                            s1,
                            s2
                        ];
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
                if (s0 === peg$FAILED) s0 = peg$parseNL();
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseexpression() {
            var s0;
            var key = peg$currPos * 49 + 2, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$parsecomment();
            if (s0 === peg$FAILED) {
                s0 = peg$parsepath();
                if (s0 === peg$FAILED) {
                    s0 = peg$parsetablearray();
                    if (s0 === peg$FAILED) s0 = peg$parseassignment();
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsecomment() {
            var s0, s1, s2, s3, s4, s5;
            var key = peg$currPos * 49 + 3, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 35) {
                s1 = peg$c3;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c4);
            }
            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$currPos;
                s4 = peg$currPos;
                peg$silentFails++;
                s5 = peg$parseNL();
                if (s5 === peg$FAILED) s5 = peg$parseEOF();
                peg$silentFails--;
                if (s5 === peg$FAILED) s4 = peg$c5;
                else {
                    peg$currPos = s4;
                    s4 = peg$c2;
                }
                if (s4 !== peg$FAILED) {
                    if (input.length > peg$currPos) {
                        s5 = input.charAt(peg$currPos);
                        peg$currPos++;
                    } else {
                        s5 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c6);
                    }
                    if (s5 !== peg$FAILED) {
                        s4 = [
                            s4,
                            s5
                        ];
                        s3 = s4;
                    } else {
                        peg$currPos = s3;
                        s3 = peg$c2;
                    }
                } else {
                    peg$currPos = s3;
                    s3 = peg$c2;
                }
                while(s3 !== peg$FAILED){
                    s2.push(s3);
                    s3 = peg$currPos;
                    s4 = peg$currPos;
                    peg$silentFails++;
                    s5 = peg$parseNL();
                    if (s5 === peg$FAILED) s5 = peg$parseEOF();
                    peg$silentFails--;
                    if (s5 === peg$FAILED) s4 = peg$c5;
                    else {
                        peg$currPos = s4;
                        s4 = peg$c2;
                    }
                    if (s4 !== peg$FAILED) {
                        if (input.length > peg$currPos) {
                            s5 = input.charAt(peg$currPos);
                            peg$currPos++;
                        } else {
                            s5 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c6);
                        }
                        if (s5 !== peg$FAILED) {
                            s4 = [
                                s4,
                                s5
                            ];
                            s3 = s4;
                        } else {
                            peg$currPos = s3;
                            s3 = peg$c2;
                        }
                    } else {
                        peg$currPos = s3;
                        s3 = peg$c2;
                    }
                }
                if (s2 !== peg$FAILED) {
                    s1 = [
                        s1,
                        s2
                    ];
                    s0 = s1;
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsepath() {
            var s0, s1, s2, s3, s4, s5;
            var key = peg$currPos * 49 + 4, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 91) {
                s1 = peg$c7;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c8);
            }
            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parseS();
                while(s3 !== peg$FAILED){
                    s2.push(s3);
                    s3 = peg$parseS();
                }
                if (s2 !== peg$FAILED) {
                    s3 = peg$parsetable_key();
                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parseS();
                        while(s5 !== peg$FAILED){
                            s4.push(s5);
                            s5 = peg$parseS();
                        }
                        if (s4 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 93) {
                                s5 = peg$c9;
                                peg$currPos++;
                            } else {
                                s5 = peg$FAILED;
                                if (peg$silentFails === 0) peg$fail(peg$c10);
                            }
                            if (s5 !== peg$FAILED) {
                                peg$reportedPos = s0;
                                s1 = peg$c11(s3);
                                s0 = s1;
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsetablearray() {
            var s0, s1, s2, s3, s4, s5, s6, s7;
            var key = peg$currPos * 49 + 5, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 91) {
                s1 = peg$c7;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c8);
            }
            if (s1 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 91) {
                    s2 = peg$c7;
                    peg$currPos++;
                } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c8);
                }
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parseS();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parseS();
                    }
                    if (s3 !== peg$FAILED) {
                        s4 = peg$parsetable_key();
                        if (s4 !== peg$FAILED) {
                            s5 = [];
                            s6 = peg$parseS();
                            while(s6 !== peg$FAILED){
                                s5.push(s6);
                                s6 = peg$parseS();
                            }
                            if (s5 !== peg$FAILED) {
                                if (input.charCodeAt(peg$currPos) === 93) {
                                    s6 = peg$c9;
                                    peg$currPos++;
                                } else {
                                    s6 = peg$FAILED;
                                    if (peg$silentFails === 0) peg$fail(peg$c10);
                                }
                                if (s6 !== peg$FAILED) {
                                    if (input.charCodeAt(peg$currPos) === 93) {
                                        s7 = peg$c9;
                                        peg$currPos++;
                                    } else {
                                        s7 = peg$FAILED;
                                        if (peg$silentFails === 0) peg$fail(peg$c10);
                                    }
                                    if (s7 !== peg$FAILED) {
                                        peg$reportedPos = s0;
                                        s1 = peg$c12(s4);
                                        s0 = s1;
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$c2;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$c2;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsetable_key() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 6, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parsedot_ended_table_key_part();
            if (s2 !== peg$FAILED) while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parsedot_ended_table_key_part();
            }
            else s1 = peg$c2;
            if (s1 !== peg$FAILED) {
                s2 = peg$parsetable_key_part();
                if (s2 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c13(s1, s2);
                    s0 = s1;
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parsetable_key_part();
                if (s1 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c14(s1);
                }
                s0 = s1;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsetable_key_part() {
            var s0, s1, s2, s3, s4;
            var key = peg$currPos * 49 + 7, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parseS();
            while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parseS();
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parsekey();
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parseS();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parseS();
                    }
                    if (s3 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c15(s2);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = [];
                s2 = peg$parseS();
                while(s2 !== peg$FAILED){
                    s1.push(s2);
                    s2 = peg$parseS();
                }
                if (s1 !== peg$FAILED) {
                    s2 = peg$parsequoted_key();
                    if (s2 !== peg$FAILED) {
                        s3 = [];
                        s4 = peg$parseS();
                        while(s4 !== peg$FAILED){
                            s3.push(s4);
                            s4 = peg$parseS();
                        }
                        if (s3 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c15(s2);
                            s0 = s1;
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsedot_ended_table_key_part() {
            var s0, s1, s2, s3, s4, s5, s6;
            var key = peg$currPos * 49 + 8, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parseS();
            while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parseS();
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parsekey();
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parseS();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parseS();
                    }
                    if (s3 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 46) {
                            s4 = peg$c16;
                            peg$currPos++;
                        } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c17);
                        }
                        if (s4 !== peg$FAILED) {
                            s5 = [];
                            s6 = peg$parseS();
                            while(s6 !== peg$FAILED){
                                s5.push(s6);
                                s6 = peg$parseS();
                            }
                            if (s5 !== peg$FAILED) {
                                peg$reportedPos = s0;
                                s1 = peg$c15(s2);
                                s0 = s1;
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = [];
                s2 = peg$parseS();
                while(s2 !== peg$FAILED){
                    s1.push(s2);
                    s2 = peg$parseS();
                }
                if (s1 !== peg$FAILED) {
                    s2 = peg$parsequoted_key();
                    if (s2 !== peg$FAILED) {
                        s3 = [];
                        s4 = peg$parseS();
                        while(s4 !== peg$FAILED){
                            s3.push(s4);
                            s4 = peg$parseS();
                        }
                        if (s3 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 46) {
                                s4 = peg$c16;
                                peg$currPos++;
                            } else {
                                s4 = peg$FAILED;
                                if (peg$silentFails === 0) peg$fail(peg$c17);
                            }
                            if (s4 !== peg$FAILED) {
                                s5 = [];
                                s6 = peg$parseS();
                                while(s6 !== peg$FAILED){
                                    s5.push(s6);
                                    s6 = peg$parseS();
                                }
                                if (s5 !== peg$FAILED) {
                                    peg$reportedPos = s0;
                                    s1 = peg$c15(s2);
                                    s0 = s1;
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$c2;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseassignment() {
            var s0, s1, s2, s3, s4, s5;
            var key = peg$currPos * 49 + 9, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$parsekey();
            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parseS();
                while(s3 !== peg$FAILED){
                    s2.push(s3);
                    s3 = peg$parseS();
                }
                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 61) {
                        s3 = peg$c18;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c19);
                    }
                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parseS();
                        while(s5 !== peg$FAILED){
                            s4.push(s5);
                            s5 = peg$parseS();
                        }
                        if (s4 !== peg$FAILED) {
                            s5 = peg$parsevalue();
                            if (s5 !== peg$FAILED) {
                                peg$reportedPos = s0;
                                s1 = peg$c20(s1, s5);
                                s0 = s1;
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parsequoted_key();
                if (s1 !== peg$FAILED) {
                    s2 = [];
                    s3 = peg$parseS();
                    while(s3 !== peg$FAILED){
                        s2.push(s3);
                        s3 = peg$parseS();
                    }
                    if (s2 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 61) {
                            s3 = peg$c18;
                            peg$currPos++;
                        } else {
                            s3 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c19);
                        }
                        if (s3 !== peg$FAILED) {
                            s4 = [];
                            s5 = peg$parseS();
                            while(s5 !== peg$FAILED){
                                s4.push(s5);
                                s5 = peg$parseS();
                            }
                            if (s4 !== peg$FAILED) {
                                s5 = peg$parsevalue();
                                if (s5 !== peg$FAILED) {
                                    peg$reportedPos = s0;
                                    s1 = peg$c20(s1, s5);
                                    s0 = s1;
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$c2;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsekey() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 10, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parseASCII_BASIC();
            if (s2 !== peg$FAILED) while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parseASCII_BASIC();
            }
            else s1 = peg$c2;
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c21(s1);
            }
            s0 = s1;
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsequoted_key() {
            var s0, s1;
            var key = peg$currPos * 49 + 11, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$parsedouble_quoted_single_line_string();
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c22(s1);
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parsesingle_quoted_single_line_string();
                if (s1 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c22(s1);
                }
                s0 = s1;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsevalue() {
            var s0;
            var key = peg$currPos * 49 + 12, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$parsestring();
            if (s0 === peg$FAILED) {
                s0 = peg$parsedatetime();
                if (s0 === peg$FAILED) {
                    s0 = peg$parsefloat();
                    if (s0 === peg$FAILED) {
                        s0 = peg$parseinteger();
                        if (s0 === peg$FAILED) {
                            s0 = peg$parseboolean();
                            if (s0 === peg$FAILED) {
                                s0 = peg$parsearray();
                                if (s0 === peg$FAILED) s0 = peg$parseinline_table();
                            }
                        }
                    }
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsestring() {
            var s0;
            var key = peg$currPos * 49 + 13, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$parsedouble_quoted_multiline_string();
            if (s0 === peg$FAILED) {
                s0 = peg$parsedouble_quoted_single_line_string();
                if (s0 === peg$FAILED) {
                    s0 = peg$parsesingle_quoted_multiline_string();
                    if (s0 === peg$FAILED) s0 = peg$parsesingle_quoted_single_line_string();
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsedouble_quoted_multiline_string() {
            var s0, s1, s2, s3, s4;
            var key = peg$currPos * 49 + 14, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 3) === peg$c23) {
                s1 = peg$c23;
                peg$currPos += 3;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c24);
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parseNL();
                if (s2 === peg$FAILED) s2 = peg$c25;
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parsemultiline_string_char();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parsemultiline_string_char();
                    }
                    if (s3 !== peg$FAILED) {
                        if (input.substr(peg$currPos, 3) === peg$c23) {
                            s4 = peg$c23;
                            peg$currPos += 3;
                        } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c24);
                        }
                        if (s4 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c26(s3);
                            s0 = s1;
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsedouble_quoted_single_line_string() {
            var s0, s1, s2, s3;
            var key = peg$currPos * 49 + 15, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 34) {
                s1 = peg$c27;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c28);
            }
            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parsestring_char();
                while(s3 !== peg$FAILED){
                    s2.push(s3);
                    s3 = peg$parsestring_char();
                }
                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 34) {
                        s3 = peg$c27;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c28);
                    }
                    if (s3 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c26(s2);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsesingle_quoted_multiline_string() {
            var s0, s1, s2, s3, s4;
            var key = peg$currPos * 49 + 16, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 3) === peg$c29) {
                s1 = peg$c29;
                peg$currPos += 3;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c30);
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parseNL();
                if (s2 === peg$FAILED) s2 = peg$c25;
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parsemultiline_literal_char();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parsemultiline_literal_char();
                    }
                    if (s3 !== peg$FAILED) {
                        if (input.substr(peg$currPos, 3) === peg$c29) {
                            s4 = peg$c29;
                            peg$currPos += 3;
                        } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c30);
                        }
                        if (s4 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c26(s3);
                            s0 = s1;
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsesingle_quoted_single_line_string() {
            var s0, s1, s2, s3;
            var key = peg$currPos * 49 + 17, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 39) {
                s1 = peg$c31;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c32);
            }
            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parseliteral_char();
                while(s3 !== peg$FAILED){
                    s2.push(s3);
                    s3 = peg$parseliteral_char();
                }
                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 39) {
                        s3 = peg$c31;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c32);
                    }
                    if (s3 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c26(s2);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsestring_char() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 18, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$parseESCAPED();
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$currPos;
                peg$silentFails++;
                if (input.charCodeAt(peg$currPos) === 34) {
                    s2 = peg$c27;
                    peg$currPos++;
                } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c28);
                }
                peg$silentFails--;
                if (s2 === peg$FAILED) s1 = peg$c5;
                else {
                    peg$currPos = s1;
                    s1 = peg$c2;
                }
                if (s1 !== peg$FAILED) {
                    if (input.length > peg$currPos) {
                        s2 = input.charAt(peg$currPos);
                        peg$currPos++;
                    } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c6);
                    }
                    if (s2 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c33(s2);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseliteral_char() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 19, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$currPos;
            peg$silentFails++;
            if (input.charCodeAt(peg$currPos) === 39) {
                s2 = peg$c31;
                peg$currPos++;
            } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c32);
            }
            peg$silentFails--;
            if (s2 === peg$FAILED) s1 = peg$c5;
            else {
                peg$currPos = s1;
                s1 = peg$c2;
            }
            if (s1 !== peg$FAILED) {
                if (input.length > peg$currPos) {
                    s2 = input.charAt(peg$currPos);
                    peg$currPos++;
                } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c6);
                }
                if (s2 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c33(s2);
                    s0 = s1;
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsemultiline_string_char() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 20, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$parseESCAPED();
            if (s0 === peg$FAILED) {
                s0 = peg$parsemultiline_string_delim();
                if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    s1 = peg$currPos;
                    peg$silentFails++;
                    if (input.substr(peg$currPos, 3) === peg$c23) {
                        s2 = peg$c23;
                        peg$currPos += 3;
                    } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c24);
                    }
                    peg$silentFails--;
                    if (s2 === peg$FAILED) s1 = peg$c5;
                    else {
                        peg$currPos = s1;
                        s1 = peg$c2;
                    }
                    if (s1 !== peg$FAILED) {
                        if (input.length > peg$currPos) {
                            s2 = input.charAt(peg$currPos);
                            peg$currPos++;
                        } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c6);
                        }
                        if (s2 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c34(s2);
                            s0 = s1;
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsemultiline_string_delim() {
            var s0, s1, s2, s3, s4;
            var key = peg$currPos * 49 + 21, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 92) {
                s1 = peg$c35;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c36);
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parseNL();
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parseNLS();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parseNLS();
                    }
                    if (s3 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c37();
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsemultiline_literal_char() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 22, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$currPos;
            peg$silentFails++;
            if (input.substr(peg$currPos, 3) === peg$c29) {
                s2 = peg$c29;
                peg$currPos += 3;
            } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c30);
            }
            peg$silentFails--;
            if (s2 === peg$FAILED) s1 = peg$c5;
            else {
                peg$currPos = s1;
                s1 = peg$c2;
            }
            if (s1 !== peg$FAILED) {
                if (input.length > peg$currPos) {
                    s2 = input.charAt(peg$currPos);
                    peg$currPos++;
                } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c6);
                }
                if (s2 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c33(s2);
                    s0 = s1;
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsefloat() {
            var s0, s1, s2, s3;
            var key = peg$currPos * 49 + 23, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$parsefloat_text();
            if (s1 === peg$FAILED) s1 = peg$parseinteger_text();
            if (s1 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 101) {
                    s2 = peg$c38;
                    peg$currPos++;
                } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c39);
                }
                if (s2 === peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 69) {
                        s2 = peg$c40;
                        peg$currPos++;
                    } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c41);
                    }
                }
                if (s2 !== peg$FAILED) {
                    s3 = peg$parseinteger_text();
                    if (s3 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c42(s1, s3);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parsefloat_text();
                if (s1 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c43(s1);
                }
                s0 = s1;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsefloat_text() {
            var s0, s1, s2, s3, s4, s5;
            var key = peg$currPos * 49 + 24, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 43) {
                s1 = peg$c44;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c45);
            }
            if (s1 === peg$FAILED) s1 = peg$c25;
            if (s1 !== peg$FAILED) {
                s2 = peg$currPos;
                s3 = peg$parseDIGITS();
                if (s3 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 46) {
                        s4 = peg$c16;
                        peg$currPos++;
                    } else {
                        s4 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c17);
                    }
                    if (s4 !== peg$FAILED) {
                        s5 = peg$parseDIGITS();
                        if (s5 !== peg$FAILED) {
                            s3 = [
                                s3,
                                s4,
                                s5
                            ];
                            s2 = s3;
                        } else {
                            peg$currPos = s2;
                            s2 = peg$c2;
                        }
                    } else {
                        peg$currPos = s2;
                        s2 = peg$c2;
                    }
                } else {
                    peg$currPos = s2;
                    s2 = peg$c2;
                }
                if (s2 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c46(s2);
                    s0 = s1;
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 45) {
                    s1 = peg$c47;
                    peg$currPos++;
                } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c48);
                }
                if (s1 !== peg$FAILED) {
                    s2 = peg$currPos;
                    s3 = peg$parseDIGITS();
                    if (s3 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 46) {
                            s4 = peg$c16;
                            peg$currPos++;
                        } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c17);
                        }
                        if (s4 !== peg$FAILED) {
                            s5 = peg$parseDIGITS();
                            if (s5 !== peg$FAILED) {
                                s3 = [
                                    s3,
                                    s4,
                                    s5
                                ];
                                s2 = s3;
                            } else {
                                peg$currPos = s2;
                                s2 = peg$c2;
                            }
                        } else {
                            peg$currPos = s2;
                            s2 = peg$c2;
                        }
                    } else {
                        peg$currPos = s2;
                        s2 = peg$c2;
                    }
                    if (s2 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c49(s2);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseinteger() {
            var s0, s1;
            var key = peg$currPos * 49 + 25, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$parseinteger_text();
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c50(s1);
            }
            s0 = s1;
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseinteger_text() {
            var s0, s1, s2, s3, s4;
            var key = peg$currPos * 49 + 26, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 43) {
                s1 = peg$c44;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c45);
            }
            if (s1 === peg$FAILED) s1 = peg$c25;
            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parseDIGIT_OR_UNDER();
                if (s3 !== peg$FAILED) while(s3 !== peg$FAILED){
                    s2.push(s3);
                    s3 = peg$parseDIGIT_OR_UNDER();
                }
                else s2 = peg$c2;
                if (s2 !== peg$FAILED) {
                    s3 = peg$currPos;
                    peg$silentFails++;
                    if (input.charCodeAt(peg$currPos) === 46) {
                        s4 = peg$c16;
                        peg$currPos++;
                    } else {
                        s4 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c17);
                    }
                    peg$silentFails--;
                    if (s4 === peg$FAILED) s3 = peg$c5;
                    else {
                        peg$currPos = s3;
                        s3 = peg$c2;
                    }
                    if (s3 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c46(s2);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 45) {
                    s1 = peg$c47;
                    peg$currPos++;
                } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c48);
                }
                if (s1 !== peg$FAILED) {
                    s2 = [];
                    s3 = peg$parseDIGIT_OR_UNDER();
                    if (s3 !== peg$FAILED) while(s3 !== peg$FAILED){
                        s2.push(s3);
                        s3 = peg$parseDIGIT_OR_UNDER();
                    }
                    else s2 = peg$c2;
                    if (s2 !== peg$FAILED) {
                        s3 = peg$currPos;
                        peg$silentFails++;
                        if (input.charCodeAt(peg$currPos) === 46) {
                            s4 = peg$c16;
                            peg$currPos++;
                        } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c17);
                        }
                        peg$silentFails--;
                        if (s4 === peg$FAILED) s3 = peg$c5;
                        else {
                            peg$currPos = s3;
                            s3 = peg$c2;
                        }
                        if (s3 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c49(s2);
                            s0 = s1;
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseboolean() {
            var s0, s1;
            var key = peg$currPos * 49 + 27, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 4) === peg$c51) {
                s1 = peg$c51;
                peg$currPos += 4;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c52);
            }
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c53();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 5) === peg$c54) {
                    s1 = peg$c54;
                    peg$currPos += 5;
                } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c55);
                }
                if (s1 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c56();
                }
                s0 = s1;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsearray() {
            var s0, s1, s2, s3, s4;
            var key = peg$currPos * 49 + 28, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 91) {
                s1 = peg$c7;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c8);
            }
            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parsearray_sep();
                while(s3 !== peg$FAILED){
                    s2.push(s3);
                    s3 = peg$parsearray_sep();
                }
                if (s2 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 93) {
                        s3 = peg$c9;
                        peg$currPos++;
                    } else {
                        s3 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c10);
                    }
                    if (s3 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c57();
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 91) {
                    s1 = peg$c7;
                    peg$currPos++;
                } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c8);
                }
                if (s1 !== peg$FAILED) {
                    s2 = peg$parsearray_value();
                    if (s2 === peg$FAILED) s2 = peg$c25;
                    if (s2 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 93) {
                            s3 = peg$c9;
                            peg$currPos++;
                        } else {
                            s3 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c10);
                        }
                        if (s3 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c58(s2);
                            s0 = s1;
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
                if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    if (input.charCodeAt(peg$currPos) === 91) {
                        s1 = peg$c7;
                        peg$currPos++;
                    } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c8);
                    }
                    if (s1 !== peg$FAILED) {
                        s2 = [];
                        s3 = peg$parsearray_value_list();
                        if (s3 !== peg$FAILED) while(s3 !== peg$FAILED){
                            s2.push(s3);
                            s3 = peg$parsearray_value_list();
                        }
                        else s2 = peg$c2;
                        if (s2 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 93) {
                                s3 = peg$c9;
                                peg$currPos++;
                            } else {
                                s3 = peg$FAILED;
                                if (peg$silentFails === 0) peg$fail(peg$c10);
                            }
                            if (s3 !== peg$FAILED) {
                                peg$reportedPos = s0;
                                s1 = peg$c59(s2);
                                s0 = s1;
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                    if (s0 === peg$FAILED) {
                        s0 = peg$currPos;
                        if (input.charCodeAt(peg$currPos) === 91) {
                            s1 = peg$c7;
                            peg$currPos++;
                        } else {
                            s1 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c8);
                        }
                        if (s1 !== peg$FAILED) {
                            s2 = [];
                            s3 = peg$parsearray_value_list();
                            if (s3 !== peg$FAILED) while(s3 !== peg$FAILED){
                                s2.push(s3);
                                s3 = peg$parsearray_value_list();
                            }
                            else s2 = peg$c2;
                            if (s2 !== peg$FAILED) {
                                s3 = peg$parsearray_value();
                                if (s3 !== peg$FAILED) {
                                    if (input.charCodeAt(peg$currPos) === 93) {
                                        s4 = peg$c9;
                                        peg$currPos++;
                                    } else {
                                        s4 = peg$FAILED;
                                        if (peg$silentFails === 0) peg$fail(peg$c10);
                                    }
                                    if (s4 !== peg$FAILED) {
                                        peg$reportedPos = s0;
                                        s1 = peg$c60(s2, s3);
                                        s0 = s1;
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$c2;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$c2;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    }
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsearray_value() {
            var s0, s1, s2, s3, s4;
            var key = peg$currPos * 49 + 29, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parsearray_sep();
            while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parsearray_sep();
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parsevalue();
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parsearray_sep();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parsearray_sep();
                    }
                    if (s3 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c61(s2);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsearray_value_list() {
            var s0, s1, s2, s3, s4, s5, s6;
            var key = peg$currPos * 49 + 30, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parsearray_sep();
            while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parsearray_sep();
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parsevalue();
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parsearray_sep();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parsearray_sep();
                    }
                    if (s3 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 44) {
                            s4 = peg$c62;
                            peg$currPos++;
                        } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c63);
                        }
                        if (s4 !== peg$FAILED) {
                            s5 = [];
                            s6 = peg$parsearray_sep();
                            while(s6 !== peg$FAILED){
                                s5.push(s6);
                                s6 = peg$parsearray_sep();
                            }
                            if (s5 !== peg$FAILED) {
                                peg$reportedPos = s0;
                                s1 = peg$c61(s2);
                                s0 = s1;
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsearray_sep() {
            var s0;
            var key = peg$currPos * 49 + 31, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$parseS();
            if (s0 === peg$FAILED) {
                s0 = peg$parseNL();
                if (s0 === peg$FAILED) s0 = peg$parsecomment();
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseinline_table() {
            var s0, s1, s2, s3, s4, s5;
            var key = peg$currPos * 49 + 32, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 123) {
                s1 = peg$c64;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c65);
            }
            if (s1 !== peg$FAILED) {
                s2 = [];
                s3 = peg$parseS();
                while(s3 !== peg$FAILED){
                    s2.push(s3);
                    s3 = peg$parseS();
                }
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parseinline_table_assignment();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parseinline_table_assignment();
                    }
                    if (s3 !== peg$FAILED) {
                        s4 = [];
                        s5 = peg$parseS();
                        while(s5 !== peg$FAILED){
                            s4.push(s5);
                            s5 = peg$parseS();
                        }
                        if (s4 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 125) {
                                s5 = peg$c66;
                                peg$currPos++;
                            } else {
                                s5 = peg$FAILED;
                                if (peg$silentFails === 0) peg$fail(peg$c67);
                            }
                            if (s5 !== peg$FAILED) {
                                peg$reportedPos = s0;
                                s1 = peg$c68(s3);
                                s0 = s1;
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseinline_table_assignment() {
            var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
            var key = peg$currPos * 49 + 33, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parseS();
            while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parseS();
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parsekey();
                if (s2 !== peg$FAILED) {
                    s3 = [];
                    s4 = peg$parseS();
                    while(s4 !== peg$FAILED){
                        s3.push(s4);
                        s4 = peg$parseS();
                    }
                    if (s3 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 61) {
                            s4 = peg$c18;
                            peg$currPos++;
                        } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c19);
                        }
                        if (s4 !== peg$FAILED) {
                            s5 = [];
                            s6 = peg$parseS();
                            while(s6 !== peg$FAILED){
                                s5.push(s6);
                                s6 = peg$parseS();
                            }
                            if (s5 !== peg$FAILED) {
                                s6 = peg$parsevalue();
                                if (s6 !== peg$FAILED) {
                                    s7 = [];
                                    s8 = peg$parseS();
                                    while(s8 !== peg$FAILED){
                                        s7.push(s8);
                                        s8 = peg$parseS();
                                    }
                                    if (s7 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 44) {
                                            s8 = peg$c62;
                                            peg$currPos++;
                                        } else {
                                            s8 = peg$FAILED;
                                            if (peg$silentFails === 0) peg$fail(peg$c63);
                                        }
                                        if (s8 !== peg$FAILED) {
                                            s9 = [];
                                            s10 = peg$parseS();
                                            while(s10 !== peg$FAILED){
                                                s9.push(s10);
                                                s10 = peg$parseS();
                                            }
                                            if (s9 !== peg$FAILED) {
                                                peg$reportedPos = s0;
                                                s1 = peg$c69(s2, s6);
                                                s0 = s1;
                                            } else {
                                                peg$currPos = s0;
                                                s0 = peg$c2;
                                            }
                                        } else {
                                            peg$currPos = s0;
                                            s0 = peg$c2;
                                        }
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$c2;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$c2;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = [];
                s2 = peg$parseS();
                while(s2 !== peg$FAILED){
                    s1.push(s2);
                    s2 = peg$parseS();
                }
                if (s1 !== peg$FAILED) {
                    s2 = peg$parsekey();
                    if (s2 !== peg$FAILED) {
                        s3 = [];
                        s4 = peg$parseS();
                        while(s4 !== peg$FAILED){
                            s3.push(s4);
                            s4 = peg$parseS();
                        }
                        if (s3 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 61) {
                                s4 = peg$c18;
                                peg$currPos++;
                            } else {
                                s4 = peg$FAILED;
                                if (peg$silentFails === 0) peg$fail(peg$c19);
                            }
                            if (s4 !== peg$FAILED) {
                                s5 = [];
                                s6 = peg$parseS();
                                while(s6 !== peg$FAILED){
                                    s5.push(s6);
                                    s6 = peg$parseS();
                                }
                                if (s5 !== peg$FAILED) {
                                    s6 = peg$parsevalue();
                                    if (s6 !== peg$FAILED) {
                                        peg$reportedPos = s0;
                                        s1 = peg$c69(s2, s6);
                                        s0 = s1;
                                    } else {
                                        peg$currPos = s0;
                                        s0 = peg$c2;
                                    }
                                } else {
                                    peg$currPos = s0;
                                    s0 = peg$c2;
                                }
                            } else {
                                peg$currPos = s0;
                                s0 = peg$c2;
                            }
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsesecfragment() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 34, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 46) {
                s1 = peg$c16;
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c17);
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$parseDIGITS();
                if (s2 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c70(s2);
                    s0 = s1;
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsedate() {
            var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;
            var key = peg$currPos * 49 + 35, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$currPos;
            s2 = peg$parseDIGIT_OR_UNDER();
            if (s2 !== peg$FAILED) {
                s3 = peg$parseDIGIT_OR_UNDER();
                if (s3 !== peg$FAILED) {
                    s4 = peg$parseDIGIT_OR_UNDER();
                    if (s4 !== peg$FAILED) {
                        s5 = peg$parseDIGIT_OR_UNDER();
                        if (s5 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 45) {
                                s6 = peg$c47;
                                peg$currPos++;
                            } else {
                                s6 = peg$FAILED;
                                if (peg$silentFails === 0) peg$fail(peg$c48);
                            }
                            if (s6 !== peg$FAILED) {
                                s7 = peg$parseDIGIT_OR_UNDER();
                                if (s7 !== peg$FAILED) {
                                    s8 = peg$parseDIGIT_OR_UNDER();
                                    if (s8 !== peg$FAILED) {
                                        if (input.charCodeAt(peg$currPos) === 45) {
                                            s9 = peg$c47;
                                            peg$currPos++;
                                        } else {
                                            s9 = peg$FAILED;
                                            if (peg$silentFails === 0) peg$fail(peg$c48);
                                        }
                                        if (s9 !== peg$FAILED) {
                                            s10 = peg$parseDIGIT_OR_UNDER();
                                            if (s10 !== peg$FAILED) {
                                                s11 = peg$parseDIGIT_OR_UNDER();
                                                if (s11 !== peg$FAILED) {
                                                    s2 = [
                                                        s2,
                                                        s3,
                                                        s4,
                                                        s5,
                                                        s6,
                                                        s7,
                                                        s8,
                                                        s9,
                                                        s10,
                                                        s11
                                                    ];
                                                    s1 = s2;
                                                } else {
                                                    peg$currPos = s1;
                                                    s1 = peg$c2;
                                                }
                                            } else {
                                                peg$currPos = s1;
                                                s1 = peg$c2;
                                            }
                                        } else {
                                            peg$currPos = s1;
                                            s1 = peg$c2;
                                        }
                                    } else {
                                        peg$currPos = s1;
                                        s1 = peg$c2;
                                    }
                                } else {
                                    peg$currPos = s1;
                                    s1 = peg$c2;
                                }
                            } else {
                                peg$currPos = s1;
                                s1 = peg$c2;
                            }
                        } else {
                            peg$currPos = s1;
                            s1 = peg$c2;
                        }
                    } else {
                        peg$currPos = s1;
                        s1 = peg$c2;
                    }
                } else {
                    peg$currPos = s1;
                    s1 = peg$c2;
                }
            } else {
                peg$currPos = s1;
                s1 = peg$c2;
            }
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c71(s1);
            }
            s0 = s1;
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsetime() {
            var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
            var key = peg$currPos * 49 + 36, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$currPos;
            s2 = peg$parseDIGIT_OR_UNDER();
            if (s2 !== peg$FAILED) {
                s3 = peg$parseDIGIT_OR_UNDER();
                if (s3 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 58) {
                        s4 = peg$c72;
                        peg$currPos++;
                    } else {
                        s4 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c73);
                    }
                    if (s4 !== peg$FAILED) {
                        s5 = peg$parseDIGIT_OR_UNDER();
                        if (s5 !== peg$FAILED) {
                            s6 = peg$parseDIGIT_OR_UNDER();
                            if (s6 !== peg$FAILED) {
                                if (input.charCodeAt(peg$currPos) === 58) {
                                    s7 = peg$c72;
                                    peg$currPos++;
                                } else {
                                    s7 = peg$FAILED;
                                    if (peg$silentFails === 0) peg$fail(peg$c73);
                                }
                                if (s7 !== peg$FAILED) {
                                    s8 = peg$parseDIGIT_OR_UNDER();
                                    if (s8 !== peg$FAILED) {
                                        s9 = peg$parseDIGIT_OR_UNDER();
                                        if (s9 !== peg$FAILED) {
                                            s10 = peg$parsesecfragment();
                                            if (s10 === peg$FAILED) s10 = peg$c25;
                                            if (s10 !== peg$FAILED) {
                                                s2 = [
                                                    s2,
                                                    s3,
                                                    s4,
                                                    s5,
                                                    s6,
                                                    s7,
                                                    s8,
                                                    s9,
                                                    s10
                                                ];
                                                s1 = s2;
                                            } else {
                                                peg$currPos = s1;
                                                s1 = peg$c2;
                                            }
                                        } else {
                                            peg$currPos = s1;
                                            s1 = peg$c2;
                                        }
                                    } else {
                                        peg$currPos = s1;
                                        s1 = peg$c2;
                                    }
                                } else {
                                    peg$currPos = s1;
                                    s1 = peg$c2;
                                }
                            } else {
                                peg$currPos = s1;
                                s1 = peg$c2;
                            }
                        } else {
                            peg$currPos = s1;
                            s1 = peg$c2;
                        }
                    } else {
                        peg$currPos = s1;
                        s1 = peg$c2;
                    }
                } else {
                    peg$currPos = s1;
                    s1 = peg$c2;
                }
            } else {
                peg$currPos = s1;
                s1 = peg$c2;
            }
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c74(s1);
            }
            s0 = s1;
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsetime_with_offset() {
            var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16;
            var key = peg$currPos * 49 + 37, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$currPos;
            s2 = peg$parseDIGIT_OR_UNDER();
            if (s2 !== peg$FAILED) {
                s3 = peg$parseDIGIT_OR_UNDER();
                if (s3 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 58) {
                        s4 = peg$c72;
                        peg$currPos++;
                    } else {
                        s4 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c73);
                    }
                    if (s4 !== peg$FAILED) {
                        s5 = peg$parseDIGIT_OR_UNDER();
                        if (s5 !== peg$FAILED) {
                            s6 = peg$parseDIGIT_OR_UNDER();
                            if (s6 !== peg$FAILED) {
                                if (input.charCodeAt(peg$currPos) === 58) {
                                    s7 = peg$c72;
                                    peg$currPos++;
                                } else {
                                    s7 = peg$FAILED;
                                    if (peg$silentFails === 0) peg$fail(peg$c73);
                                }
                                if (s7 !== peg$FAILED) {
                                    s8 = peg$parseDIGIT_OR_UNDER();
                                    if (s8 !== peg$FAILED) {
                                        s9 = peg$parseDIGIT_OR_UNDER();
                                        if (s9 !== peg$FAILED) {
                                            s10 = peg$parsesecfragment();
                                            if (s10 === peg$FAILED) s10 = peg$c25;
                                            if (s10 !== peg$FAILED) {
                                                if (input.charCodeAt(peg$currPos) === 45) {
                                                    s11 = peg$c47;
                                                    peg$currPos++;
                                                } else {
                                                    s11 = peg$FAILED;
                                                    if (peg$silentFails === 0) peg$fail(peg$c48);
                                                }
                                                if (s11 === peg$FAILED) {
                                                    if (input.charCodeAt(peg$currPos) === 43) {
                                                        s11 = peg$c44;
                                                        peg$currPos++;
                                                    } else {
                                                        s11 = peg$FAILED;
                                                        if (peg$silentFails === 0) peg$fail(peg$c45);
                                                    }
                                                }
                                                if (s11 !== peg$FAILED) {
                                                    s12 = peg$parseDIGIT_OR_UNDER();
                                                    if (s12 !== peg$FAILED) {
                                                        s13 = peg$parseDIGIT_OR_UNDER();
                                                        if (s13 !== peg$FAILED) {
                                                            if (input.charCodeAt(peg$currPos) === 58) {
                                                                s14 = peg$c72;
                                                                peg$currPos++;
                                                            } else {
                                                                s14 = peg$FAILED;
                                                                if (peg$silentFails === 0) peg$fail(peg$c73);
                                                            }
                                                            if (s14 !== peg$FAILED) {
                                                                s15 = peg$parseDIGIT_OR_UNDER();
                                                                if (s15 !== peg$FAILED) {
                                                                    s16 = peg$parseDIGIT_OR_UNDER();
                                                                    if (s16 !== peg$FAILED) {
                                                                        s2 = [
                                                                            s2,
                                                                            s3,
                                                                            s4,
                                                                            s5,
                                                                            s6,
                                                                            s7,
                                                                            s8,
                                                                            s9,
                                                                            s10,
                                                                            s11,
                                                                            s12,
                                                                            s13,
                                                                            s14,
                                                                            s15,
                                                                            s16
                                                                        ];
                                                                        s1 = s2;
                                                                    } else {
                                                                        peg$currPos = s1;
                                                                        s1 = peg$c2;
                                                                    }
                                                                } else {
                                                                    peg$currPos = s1;
                                                                    s1 = peg$c2;
                                                                }
                                                            } else {
                                                                peg$currPos = s1;
                                                                s1 = peg$c2;
                                                            }
                                                        } else {
                                                            peg$currPos = s1;
                                                            s1 = peg$c2;
                                                        }
                                                    } else {
                                                        peg$currPos = s1;
                                                        s1 = peg$c2;
                                                    }
                                                } else {
                                                    peg$currPos = s1;
                                                    s1 = peg$c2;
                                                }
                                            } else {
                                                peg$currPos = s1;
                                                s1 = peg$c2;
                                            }
                                        } else {
                                            peg$currPos = s1;
                                            s1 = peg$c2;
                                        }
                                    } else {
                                        peg$currPos = s1;
                                        s1 = peg$c2;
                                    }
                                } else {
                                    peg$currPos = s1;
                                    s1 = peg$c2;
                                }
                            } else {
                                peg$currPos = s1;
                                s1 = peg$c2;
                            }
                        } else {
                            peg$currPos = s1;
                            s1 = peg$c2;
                        }
                    } else {
                        peg$currPos = s1;
                        s1 = peg$c2;
                    }
                } else {
                    peg$currPos = s1;
                    s1 = peg$c2;
                }
            } else {
                peg$currPos = s1;
                s1 = peg$c2;
            }
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c74(s1);
            }
            s0 = s1;
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parsedatetime() {
            var s0, s1, s2, s3, s4;
            var key = peg$currPos * 49 + 38, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = peg$parsedate();
            if (s1 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 84) {
                    s2 = peg$c75;
                    peg$currPos++;
                } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c76);
                }
                if (s2 !== peg$FAILED) {
                    s3 = peg$parsetime();
                    if (s3 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 90) {
                            s4 = peg$c77;
                            peg$currPos++;
                        } else {
                            s4 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c78);
                        }
                        if (s4 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c79(s1, s3);
                            s0 = s1;
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parsedate();
                if (s1 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 84) {
                        s2 = peg$c75;
                        peg$currPos++;
                    } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c76);
                    }
                    if (s2 !== peg$FAILED) {
                        s3 = peg$parsetime_with_offset();
                        if (s3 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c80(s1, s3);
                            s0 = s1;
                        } else {
                            peg$currPos = s0;
                            s0 = peg$c2;
                        }
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseS() {
            var s0;
            var key = peg$currPos * 49 + 39, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            if (peg$c81.test(input.charAt(peg$currPos))) {
                s0 = input.charAt(peg$currPos);
                peg$currPos++;
            } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c82);
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseNL() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 40, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            if (input.charCodeAt(peg$currPos) === 10) {
                s0 = peg$c83;
                peg$currPos++;
            } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c84);
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 13) {
                    s1 = peg$c85;
                    peg$currPos++;
                } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c86);
                }
                if (s1 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 10) {
                        s2 = peg$c83;
                        peg$currPos++;
                    } else {
                        s2 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c84);
                    }
                    if (s2 !== peg$FAILED) {
                        s1 = [
                            s1,
                            s2
                        ];
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseNLS() {
            var s0;
            var key = peg$currPos * 49 + 41, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$parseNL();
            if (s0 === peg$FAILED) s0 = peg$parseS();
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseEOF() {
            var s0, s1;
            var key = peg$currPos * 49 + 42, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            peg$silentFails++;
            if (input.length > peg$currPos) {
                s1 = input.charAt(peg$currPos);
                peg$currPos++;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c6);
            }
            peg$silentFails--;
            if (s1 === peg$FAILED) s0 = peg$c5;
            else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseHEX() {
            var s0;
            var key = peg$currPos * 49 + 43, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            if (peg$c87.test(input.charAt(peg$currPos))) {
                s0 = input.charAt(peg$currPos);
                peg$currPos++;
            } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c88);
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseDIGIT_OR_UNDER() {
            var s0, s1;
            var key = peg$currPos * 49 + 44, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            if (peg$c89.test(input.charAt(peg$currPos))) {
                s0 = input.charAt(peg$currPos);
                peg$currPos++;
            } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c90);
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 95) {
                    s1 = peg$c91;
                    peg$currPos++;
                } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c92);
                }
                if (s1 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c93();
                }
                s0 = s1;
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseASCII_BASIC() {
            var s0;
            var key = peg$currPos * 49 + 45, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            if (peg$c94.test(input.charAt(peg$currPos))) {
                s0 = input.charAt(peg$currPos);
                peg$currPos++;
            } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c95);
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseDIGITS() {
            var s0, s1, s2;
            var key = peg$currPos * 49 + 46, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            s1 = [];
            s2 = peg$parseDIGIT_OR_UNDER();
            if (s2 !== peg$FAILED) while(s2 !== peg$FAILED){
                s1.push(s2);
                s2 = peg$parseDIGIT_OR_UNDER();
            }
            else s1 = peg$c2;
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c96(s1);
            }
            s0 = s1;
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseESCAPED() {
            var s0, s1;
            var key = peg$currPos * 49 + 47, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 2) === peg$c97) {
                s1 = peg$c97;
                peg$currPos += 2;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c98);
            }
            if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c99();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 2) === peg$c100) {
                    s1 = peg$c100;
                    peg$currPos += 2;
                } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c101);
                }
                if (s1 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c102();
                }
                s0 = s1;
                if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    if (input.substr(peg$currPos, 2) === peg$c103) {
                        s1 = peg$c103;
                        peg$currPos += 2;
                    } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) peg$fail(peg$c104);
                    }
                    if (s1 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c105();
                    }
                    s0 = s1;
                    if (s0 === peg$FAILED) {
                        s0 = peg$currPos;
                        if (input.substr(peg$currPos, 2) === peg$c106) {
                            s1 = peg$c106;
                            peg$currPos += 2;
                        } else {
                            s1 = peg$FAILED;
                            if (peg$silentFails === 0) peg$fail(peg$c107);
                        }
                        if (s1 !== peg$FAILED) {
                            peg$reportedPos = s0;
                            s1 = peg$c108();
                        }
                        s0 = s1;
                        if (s0 === peg$FAILED) {
                            s0 = peg$currPos;
                            if (input.substr(peg$currPos, 2) === peg$c109) {
                                s1 = peg$c109;
                                peg$currPos += 2;
                            } else {
                                s1 = peg$FAILED;
                                if (peg$silentFails === 0) peg$fail(peg$c110);
                            }
                            if (s1 !== peg$FAILED) {
                                peg$reportedPos = s0;
                                s1 = peg$c111();
                            }
                            s0 = s1;
                            if (s0 === peg$FAILED) {
                                s0 = peg$currPos;
                                if (input.substr(peg$currPos, 2) === peg$c112) {
                                    s1 = peg$c112;
                                    peg$currPos += 2;
                                } else {
                                    s1 = peg$FAILED;
                                    if (peg$silentFails === 0) peg$fail(peg$c113);
                                }
                                if (s1 !== peg$FAILED) {
                                    peg$reportedPos = s0;
                                    s1 = peg$c114();
                                }
                                s0 = s1;
                                if (s0 === peg$FAILED) {
                                    s0 = peg$currPos;
                                    if (input.substr(peg$currPos, 2) === peg$c115) {
                                        s1 = peg$c115;
                                        peg$currPos += 2;
                                    } else {
                                        s1 = peg$FAILED;
                                        if (peg$silentFails === 0) peg$fail(peg$c116);
                                    }
                                    if (s1 !== peg$FAILED) {
                                        peg$reportedPos = s0;
                                        s1 = peg$c117();
                                    }
                                    s0 = s1;
                                    if (s0 === peg$FAILED) s0 = peg$parseESCAPED_UNICODE();
                                }
                            }
                        }
                    }
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        function peg$parseESCAPED_UNICODE() {
            var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;
            var key = peg$currPos * 49 + 48, cached = peg$cache[key];
            if (cached) {
                peg$currPos = cached.nextPos;
                return cached.result;
            }
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 2) === peg$c118) {
                s1 = peg$c118;
                peg$currPos += 2;
            } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) peg$fail(peg$c119);
            }
            if (s1 !== peg$FAILED) {
                s2 = peg$currPos;
                s3 = peg$parseHEX();
                if (s3 !== peg$FAILED) {
                    s4 = peg$parseHEX();
                    if (s4 !== peg$FAILED) {
                        s5 = peg$parseHEX();
                        if (s5 !== peg$FAILED) {
                            s6 = peg$parseHEX();
                            if (s6 !== peg$FAILED) {
                                s7 = peg$parseHEX();
                                if (s7 !== peg$FAILED) {
                                    s8 = peg$parseHEX();
                                    if (s8 !== peg$FAILED) {
                                        s9 = peg$parseHEX();
                                        if (s9 !== peg$FAILED) {
                                            s10 = peg$parseHEX();
                                            if (s10 !== peg$FAILED) {
                                                s3 = [
                                                    s3,
                                                    s4,
                                                    s5,
                                                    s6,
                                                    s7,
                                                    s8,
                                                    s9,
                                                    s10
                                                ];
                                                s2 = s3;
                                            } else {
                                                peg$currPos = s2;
                                                s2 = peg$c2;
                                            }
                                        } else {
                                            peg$currPos = s2;
                                            s2 = peg$c2;
                                        }
                                    } else {
                                        peg$currPos = s2;
                                        s2 = peg$c2;
                                    }
                                } else {
                                    peg$currPos = s2;
                                    s2 = peg$c2;
                                }
                            } else {
                                peg$currPos = s2;
                                s2 = peg$c2;
                            }
                        } else {
                            peg$currPos = s2;
                            s2 = peg$c2;
                        }
                    } else {
                        peg$currPos = s2;
                        s2 = peg$c2;
                    }
                } else {
                    peg$currPos = s2;
                    s2 = peg$c2;
                }
                if (s2 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c120(s2);
                    s0 = s1;
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            } else {
                peg$currPos = s0;
                s0 = peg$c2;
            }
            if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 2) === peg$c121) {
                    s1 = peg$c121;
                    peg$currPos += 2;
                } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) peg$fail(peg$c122);
                }
                if (s1 !== peg$FAILED) {
                    s2 = peg$currPos;
                    s3 = peg$parseHEX();
                    if (s3 !== peg$FAILED) {
                        s4 = peg$parseHEX();
                        if (s4 !== peg$FAILED) {
                            s5 = peg$parseHEX();
                            if (s5 !== peg$FAILED) {
                                s6 = peg$parseHEX();
                                if (s6 !== peg$FAILED) {
                                    s3 = [
                                        s3,
                                        s4,
                                        s5,
                                        s6
                                    ];
                                    s2 = s3;
                                } else {
                                    peg$currPos = s2;
                                    s2 = peg$c2;
                                }
                            } else {
                                peg$currPos = s2;
                                s2 = peg$c2;
                            }
                        } else {
                            peg$currPos = s2;
                            s2 = peg$c2;
                        }
                    } else {
                        peg$currPos = s2;
                        s2 = peg$c2;
                    }
                    if (s2 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c120(s2);
                        s0 = s1;
                    } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                    }
                } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                }
            }
            peg$cache[key] = {
                nextPos: peg$currPos,
                result: s0
            };
            return s0;
        }
        var nodes = [];
        function genError(err, line, col) {
            var ex = new Error(err);
            ex.line = line;
            ex.column = col;
            throw ex;
        }
        function addNode(node) {
            nodes.push(node);
        }
        function node(type, value, line, column, key) {
            var obj = {
                type: type,
                value: value,
                line: line(),
                column: column()
            };
            if (key) obj.key = key;
            return obj;
        }
        function convertCodePoint(str, line, col) {
            var num = parseInt("0x" + str);
            if (!isFinite(num) || Math.floor(num) != num || num < 0 || num > 0x10FFFF || num > 0xD7FF && num < 0xE000) genError("Invalid Unicode escape code: " + str, line, col);
            else return fromCodePoint(num);
        }
        function fromCodePoint() {
            var MAX_SIZE = 0x4000;
            var codeUnits = [];
            var highSurrogate;
            var lowSurrogate;
            var index = -1;
            var length = arguments.length;
            if (!length) return "";
            var result = "";
            while(++index < length){
                var codePoint = Number(arguments[index]);
                if (codePoint <= 0xFFFF) codeUnits.push(codePoint);
                else {
                    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
                    codePoint -= 0x10000;
                    highSurrogate = (codePoint >> 10) + 0xD800;
                    lowSurrogate = codePoint % 0x400 + 0xDC00;
                    codeUnits.push(highSurrogate, lowSurrogate);
                }
                if (index + 1 == length || codeUnits.length > MAX_SIZE) {
                    result += String.fromCharCode.apply(null, codeUnits);
                    codeUnits.length = 0;
                }
            }
            return result;
        }
        peg$result = peg$startRuleFunction();
        if (peg$result !== peg$FAILED && peg$currPos === input.length) return peg$result;
        else {
            if (peg$result !== peg$FAILED && peg$currPos < input.length) peg$fail({
                type: "end",
                description: "end of input"
            });
            throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
        }
    }
    return {
        SyntaxError: SyntaxError,
        parse: parse
    };
}();

},{}],"gkKU3":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}]},["farZc","8lqZg"], "8lqZg", "parcelRequire330f")

//# sourceMappingURL=index.js.map
